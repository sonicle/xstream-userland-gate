commit f245f3049d8bb09c5177b4e1c19ab8f5552549b4
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Tue Jul 28 13:23:26 2009 +0100

    [release] 1.0.0

 configure.ac |    9 ++++-----
 1 file changed, 4 insertions(+), 5 deletions(-)

commit 93ecd6d0c43bbdf5bba61134394c76da192d97f5
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Tue Jul 28 12:20:07 2009 +0100

    Update the NEWS

 NEWS |   26 ++++++++++++++++++++++++++
 1 file changed, 26 insertions(+)

commit 77fdd7494e9ccaced094ce825022518dd50d1eaa
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Tue Jul 28 13:57:07 2009 +0100

    Fix compiler warnings when COGL debug level=minimum

 clutter/cogl/common/cogl-debug.c  |    2 +-
 clutter/pango/cogl-pango-render.c |    4 +++-
 2 files changed, 4 insertions(+), 2 deletions(-)

commit 85b69237a9e0d2eb42634d9f837bc6544379f258
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Tue Jul 28 12:19:44 2009 +0100

    [docs] Point the TODO to Bugzilla

 TODO |    6 +++---
 1 file changed, 3 insertions(+), 3 deletions(-)

commit c6830791673d31b74dfb87d6bda472de040dc3f8
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Tue Jul 28 12:19:26 2009 +0100

    [docs] Update requirements and release notes

 README |   80 +++++++++++++++++++++++++++++++++++++++++++++++++---------------
 1 file changed, 62 insertions(+), 18 deletions(-)

commit a5d6b233086faa03512975763b286c7ea44b7fec
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Tue Jul 28 13:43:52 2009 +0100

    [units] Add binding-friendly initializers
    
    We should follow the convention for boxed types initializers of:
    
      <type_name>_from_<another_type> (boxed, value)
    
    For ClutterUnits as well; so:
    
      clutter_units_pixels -> clutter_units_from_pixels
      clutter_units_em     -> clutter_units_from_em
      ...
    
    We should still keep the short-hand version as a macro, though.

 clutter/clutter-units.c                    |   36 +++++++++---------
 clutter/clutter-units.h                    |   55 ++++++++++++++++------------
 doc/reference/clutter/clutter-sections.txt |   15 +++++---
 tests/conform/test-clutter-units.c         |    8 ++--
 4 files changed, 63 insertions(+), 51 deletions(-)

commit 57baa2f0bcd37269f029351736681396739263bd
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Tue Jul 28 13:20:32 2009 +0100

    [animation] Fix variable use
    
    Instead of using the proper typed variables we were overwriting
    the gpointer for the Interval's final value.

 clutter/clutter-animation.c |    4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

commit f4ad3761c48f0cd04c04e4de334c5492eae010cc
Author: Neil Roberts <neil@linux.intel.com>
Date:   Tue Jul 28 12:03:55 2009 +0100

    [win32] Remove the call to clutter_redraw in clutter_stage_win32_show
    
    Since commit 7b811f8b this is done in clutter_stage_show so there is
    no need for it in the backends.

 clutter/win32/clutter-stage-win32.c |   10 +---------
 1 file changed, 1 insertion(+), 9 deletions(-)

commit df586eb507adeed9b83e53c667e706cd1807601a
Author: Neil Roberts <neil@linux.intel.com>
Date:   Tue Jul 28 12:00:49 2009 +0100

    [win32] Move the show/hide to be implementations of the interface
    
    This makes clutter_stage_win32_show/hide be implementations of
    ClutterStageWindowIface rather than overriding the methods in
    ClutterActor. This reflects the changes in e4ff24bc for the X11
    backend.

 clutter/win32/clutter-stage-win32.c |    4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

commit c0cf6146343e852d3ebbca79e701d53bcddaa2d5
Author: Neil Roberts <neil@linux.intel.com>
Date:   Tue Jul 28 11:58:34 2009 +0100

    [build/mingw] Update Cairo version to 1.8.6 in mingw-cross-compile.sh
    
    The Pango 1.22 binaries require Cairo 1.8.0 to get
    cairo_show_text_glyphs.

 build/mingw/mingw-cross-compile.sh |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit a1cef026c5eff04f1233d2e9b096987716987cb9
Author: Ole André Vadla Ravnås <ole.andre.ravnas@tandberg.com>
Date:   Tue Jul 7 20:02:25 2009 +0200

    Avoid near/far identifier names.
    
    Leads to conflict with system headers on Windows, where macros named
    "near" and "far" are defined.

 clutter/cogl/common/cogl-matrix.c |    8 ++++----
 1 file changed, 4 insertions(+), 4 deletions(-)

commit 05883af1f6362b3ad5a762e70412f20aaf608bf9
Author: Ole André Vadla Ravnås <oleavr@gmail.com>
Date:   Wed Jul 1 16:29:12 2009 +0200

    Remove unused variable to fix compiler warning.

 clutter/json/json-object.c |    2 --
 1 file changed, 2 deletions(-)

commit 01578512706fb4bd46d99574a8282cd4d25f7bad
Author: Ole André Vadla Ravnås <oleavr@gmail.com>
Date:   Wed Jul 1 16:27:11 2009 +0200

    Call glClientActiveTexture() through COGL context.
    
    Fixes build issues on systems with OpenGL header older than 1.3.

 clutter/cogl/common/cogl.c        |    4 ++++
 clutter/cogl/gl/cogl-primitives.c |    2 ++
 2 files changed, 6 insertions(+)

commit f61f66c6fe18ad4e8c07379c19cdd3e1bff216b6
Author: Ole André Vadla Ravnås <ole.andre.ravnas@tandberg.com>
Date:   Tue Jun 16 22:29:21 2009 +0200

    Avoid C99 to fix compilation with compilers like MSVC.

 clutter/cogl/common/cogl-blend-string.c |   20 ++++++++++----------
 clutter/cogl/common/cogl-primitives.c   |    8 ++++++--
 clutter/cogl/common/cogl.c              |    4 +++-
 3 files changed, 19 insertions(+), 13 deletions(-)

commit ab5a10768c225230aad25299d129269c88df1e54
Author: Ole André Vadla Ravnås <oleavr@gmail.com>
Date:   Mon May 18 17:30:36 2009 +0200

    Initialize pixel data before glReadPixels().

 clutter/clutter-main.c |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit 9cf8410b0fba4d7cb508968830ee095d92cf5d74
Author: Haakon Sporsheim <haakon.sporsheim@gmail.com>
Date:   Tue Mar 31 14:45:45 2009 +0200

    Reposition variable declarations to avoid C99.

 tests/interactive/test-cogl-vertex-buffer.c |    3 ++-
 1 file changed, 2 insertions(+), 1 deletion(-)

commit 94a571ea76ee20b93a8db04e980d08bf283ed34b
Author: Haakon Sporsheim <haakon.sporsheim@gmail.com>
Date:   Tue Mar 31 14:44:46 2009 +0200

    Add MSVC preprocessor guards in test-clutter-cairo-flowers.c

 tests/interactive/test-clutter-cairo-flowers.c |    7 ++++++-
 1 file changed, 6 insertions(+), 1 deletion(-)

commit fa4a37072ed3113862802b1a97be6dfb74abcdd2
Author: Haakon Sporsheim <haakon.sporsheim@gmail.com>
Date:   Tue Mar 31 14:43:12 2009 +0200

    Add white_color a variable on the stack.

 tests/interactive/test-scale.c |    3 ++-
 1 file changed, 2 insertions(+), 1 deletion(-)

commit fe416fb745fe4293e889d5179707051c959af921
Author: Haakon Sporsheim <haakon.sporsheim@gmail.com>
Date:   Tue Mar 31 14:41:44 2009 +0200

    Add int dummy; to empty struct TestConformSimpleFixture definition.

 tests/conform/test-conform-common.h |    1 +
 1 file changed, 1 insertion(+)

commit f852ade82379c6241683df741448be6146bb76ce
Author: Haakon Sporsheim <haakon.sporsheim@gmail.com>
Date:   Tue Mar 31 14:39:46 2009 +0200

    Remove config.h inclusion.

 tests/interactive/test-fbo.c    |    1 -
 tests/interactive/test-shader.c |    1 -
 2 files changed, 2 deletions(-)

commit e4eed92177e6720b9713227ca4b1ecd0f5ce8c0b
Author: Haakon Sporsheim <haakon.sporsheim@gmail.com>
Date:   Tue Mar 31 14:37:07 2009 +0200

    Reposition variable declarations to avoid C99.

 clutter/cogl/common/cogl-material.c |    3 ++-
 clutter/cogl/common/cogl-matrix.c   |    6 ++++--
 2 files changed, 6 insertions(+), 3 deletions(-)

commit dbc9c16259e55e3715dcd2c0286c13597a45d71d
Author: Neil Roberts <neil@linux.intel.com>
Date:   Tue Jul 28 10:39:18 2009 +0100

    Remove the MSVC build files
    
    These are hopelessly out of date so they just cause more trouble than
    they're worth.
    
    Anyone interested in building with MSVC would be better off starting
    from the build files available as part of the OAH project which is
    located here:
    
    https://launchpad.net/oah

 build/msvc_2k5/README                  |   62 ---
 build/msvc_2k5/clutter-version.h       |   27 --
 build/msvc_2k5/clutter.sln             |  131 ------
 build/msvc_2k5/clutter.vcproj          |  772 --------------------------------
 build/msvc_2k5/test-actors.vcproj      |  201 ---------
 build/msvc_2k5/test-behave.vcproj      |  201 ---------
 build/msvc_2k5/test-boxes.vcproj       |  177 --------
 build/msvc_2k5/test-depth.vcproj       |  201 ---------
 build/msvc_2k5/test-entry.vcproj       |  177 --------
 build/msvc_2k5/test-events.vcproj      |  177 --------
 build/msvc_2k5/test-offscreen.vcproj   |  177 --------
 build/msvc_2k5/test-perspective.vcproj |  177 --------
 build/msvc_2k5/test-project.vcproj     |  177 --------
 build/msvc_2k5/test-rotate.vcproj      |  201 ---------
 build/msvc_2k5/test-scale.vcproj       |  177 --------
 build/msvc_2k5/test-score.vcproj       |  177 --------
 build/msvc_2k5/test-script.vcproj      |  201 ---------
 build/msvc_2k5/test-text.vcproj        |  183 --------
 build/msvc_2k5/test-textures.vcproj    |  177 --------
 build/msvc_2k5/test-threads.vcproj     |  177 --------
 build/msvc_2k5/test-timeline.vcproj    |  177 --------
 build/msvc_2k5/version.rc              |   48 --
 22 files changed, 4175 deletions(-)

commit fa3728126fe39e7a885184a2b69a93ac2ea34aa8
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Tue Jul 28 11:25:11 2009 +0100

    [animation] Force the final state inside ::completed
    
    In case we are skipping too many frames, we should force the animation
    instance to apply the final state of the animated interval inside the
    ::completed signal handler.

 clutter/clutter-animation.c |   18 +++++++++++++++++-
 1 file changed, 17 insertions(+), 1 deletion(-)

commit a8eb5bd461369979d75d40a1a6d17aa43141643e
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Mon Jul 27 17:24:35 2009 +0100

    [build] Generate ChangeLog from the Git import

 Makefile.am |    5 +++--
 1 file changed, 3 insertions(+), 2 deletions(-)

commit 76140c5f521a8912786c292a2699b48a7b873d16
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Mon Jul 27 16:51:14 2009 +0100

    [build] Use API_VERSION, not MAJORMINOR
    
    The correct macro for Clutter's API version is CLUTTER_API_VERSION,
    not CLUTTER_MAJORMINOR anymore.

 doc/reference/clutter/Makefile.am |    2 +-
 doc/reference/cogl/Makefile.am    |    2 +-
 tests/conform/Makefile.am         |    2 +-
 tests/interactive/Makefile.am     |    2 +-
 tests/micro-bench/Makefile.am     |    3 ++-
 5 files changed, 6 insertions(+), 5 deletions(-)

commit 42ea471e330bbff217e7d5c199885e3991a47e06
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Mon Jul 27 16:10:07 2009 +0100

    Remove explicit size of the Vertex arrays
    
    The Vertex arrays passed to some ClutterActor methods should not
    have the size. Albeit being technically correct, it's not a good
    practice.

 clutter/clutter-actor.c |    6 +++---
 clutter/clutter-actor.h |    4 ++--
 2 files changed, 5 insertions(+), 5 deletions(-)

commit fe0e7f9f74358d8333135e51d9c3937ce7e59967
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Mon Jul 27 15:42:31 2009 +0100

    [stage] Add a warning for :offscreen usage
    
    The Stage:offscreen property hasn't been tested for ages, and it
    should really just use a FBO, not indirect rendering on a X Pixmap
    only on X11. There are better ways anyway to get the current
    contents of ClutterStage as a buffer anyway.
    
    We might remove it at any later date, or actually make it work
    properly.

 clutter/clutter-stage.c |    4 ++++
 1 file changed, 4 insertions(+)

commit 6e6d0a5ea611a99438ae455c1f485e882f621863
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Mon Jul 27 15:08:03 2009 +0100

    [glx] Explicitly set the depth size for GLX visuals
    
    When requesting a GLX visual from the X server we should explicitly
    set the GL_DEPTH_SIZE and the GL_ALPHA_SIZE bits, otherwise some
    functionality might just not work, or work unreliably.
    
    Fixes bug:
    
      http://bugzilla.openedhand.com/show_bug.cgi?id=1723

 clutter/glx/clutter-backend-glx.c |    2 ++
 1 file changed, 2 insertions(+)

commit 88e77b25dfeeead3b4d54d2b24ab9056459c6ee9
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Mon Jul 27 15:01:52 2009 +0100

    Convert gint to GLints in the Shader types wrapper
    
    The GValue wrappers for ClutterShader types should always store
    values using GL types (GLfloat, GLint) internally, but give and
    take generic C types (float, int) to the Clutter side.
    
    Fixes bug:
    
      http://bugzilla.openedhand.com/show_bug.cgi?id=1359

 clutter/clutter-shader-types.c |   14 +++++++-------
 1 file changed, 7 insertions(+), 7 deletions(-)

commit ad7dcc989648791e8fec1bb45711c9f71671dfe0
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Mon Jul 27 12:04:40 2009 +0100

    [color] Fix HLS to RGB colorspace conversion
    
    The HLS to RGB conversion in case the S value is zero is:
    
      R = G = B = luminance
    
    ClutterColor uses a byte (0 to 255) for the R, G and B channels
    encoding, while luminance is expressed using a floating point value
    in the closed interval [0, 1]; thus the case above becomes:
    
      R = G = B = (luminance * 255)
    
    The clutter_color_from_hls() code is missing the final step of
    de-normalizing the luminance value, and so it breaks the roundtrip
    colorspace conversion between RGB and HLS.
    
    Fixes bug:
    
      http://bugzilla.openedhand.com/show_bug.cgi?id=1695

 clutter/clutter-color.c |   14 +++++---------
 1 file changed, 5 insertions(+), 9 deletions(-)

commit db2fda9c430beed64309c1881a44917933863bd0
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Mon Jul 27 11:46:26 2009 +0100

    [tests] Add RGB<->HLS roundtrip test unit
    
    The ClutterColor conformance test should have a unit for verifying
    the RGB<->HLS conversion code, especially the ability to roundtrip
    between the two colorspaces.

 tests/conform/test-color.c        |   69 +++++++++++++++++++++++++++++++++++++
 tests/conform/test-conform-main.c |    1 +
 2 files changed, 70 insertions(+)

commit 894fe4ba93f37f46c4a999022714ccb224a35703
Author: Owen W. Taylor <otaylor@fishsoup.net>
Date:   Wed Jul 22 15:38:44 2009 -0400

    Always create the Damage object for ClutterX11TexturePixmap auto updates
    
    If clutter_x11_texture_set_window() was called after
    clutter_x11_texture_pixmap_set_automatic(), then the Damage object would
    not be properly created so updates to the window were ignored.
    
    Refactor creation of the damage object to a separate function, and
    call it from clutter_x11_texture_set_window() and clutter_x11_texture_set_pixmap()
    as appropriate. Addition and removal of the filter function is made
    conditional on priv->damage to make free_damage_resources() cleanly
    idempotent.
    
    See: http://bugzilla.gnome.org/show_bug.cgi?id=587189 for the original
    bug report.
    
    http://bugzilla.openedhand.com/show_bug.cgi?id=1710
    
    Signed-off-by: Emmanuele Bassi <ebassi@linux.intel.com>

 clutter/x11/clutter-x11-texture-pixmap.c |   74 ++++++++++++++++++++++--------
 1 file changed, 54 insertions(+), 20 deletions(-)

commit 2c2f31b1be57380d4368f6da1d0a4529a5a7f8c1
Author: Michael Mortensen <michael@f3k.org>
Date:   Sun Jul 26 20:13:36 2009 +0100

    [osx] Update events to floating point coordinates
    
    The event translation code should be using the float type for
    coordinates.
    
    Fixes bug:
    
      http://bugzilla.openedhand.com/show_bug.cgi?id=1725
    
    Signed-off-by: Emmanuele Bassi <ebassi@linux.intel.com>

 clutter/osx/clutter-event-osx.c |   10 +++++-----
 1 file changed, 5 insertions(+), 5 deletions(-)

commit 13f32cb3b91d5087297a3e17ee97ce46154f9243
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Sun Jul 26 20:10:42 2009 +0100

    [osx] Implement StageWindow::show/::hide
    
    Instead of using the Actor class ::show and ::hide virtual function,
    use the StageWindow interface API.
    
    Fixes bug:
    
      http://bugzilla.openedhand.com/show_bug.cgi?id=1724

 clutter/osx/clutter-stage-osx.c |   29 +++++++++++++----------------
 1 file changed, 13 insertions(+), 16 deletions(-)

commit e860d939f9d9611dcf5b8c6e70272b6318a4ba94
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu Jul 23 19:04:27 2009 +0100

    [text] Allow key navigation by word
    
    When pressing Ctrl with the left and right arrow keys we should
    skip to (or select until) the previous and next word, respectively.
    
    Fixes bug:
    
      http://bugzilla.openedhand.com/show_bug.cgi?id=1713

 clutter/clutter-text.c |   92 +++++++++++++++++++++++++++++++++++-------------
 1 file changed, 67 insertions(+), 25 deletions(-)

commit 6a1506bd5f920430de6a6e2f035fef9da2557714
Author: Geoff Gustafson <geoff@linux.intel.com>
Date:   Thu Jul 23 18:21:10 2009 +0100

    [text] Queue a redraw when the selection is cleared
    
    If you select all the text in a ClutterText, there is an invisible
    cursor position either at the beginning or end. If it's at the beginning,
    the bug is that left arrow won't clear the selection. If it's at the end,
    the bug is that the right arrow won't.
    
    Here are the ways to reproduce it:
    
    a. Ctrl-A selects all and moves the hidden cursor position to the left.
    b. For single line: End, Shift-Home does the same.
    c. Or manually moving to the end and doing Shift-Left Arrow to the
       beginning.
    
    These all put it in the state where right arrow will properly clear
    selection and move to cursor position 1, but left arrow fails to clear
    the selection.
    
    For b and c above, the opposite will give you the end case where right
    arrow doesn't work.
    
    Anyway, it turns out clear_selection is getting called, it just doesn't
    show up because it's not doing a queue_redraw. So the attached patch
    seems to fix things.
    
    Signed-off-by: Emmanuele Bassi <ebassi@linux.intel.com>

 clutter/clutter-text.c |    6 +++++-
 1 file changed, 5 insertions(+), 1 deletion(-)

commit 29d8d60487878f5bc87caee08cadc15789875e4d
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Tue Jul 21 16:35:50 2009 +0100

    [docs] Fix wrong XML elements

 doc/reference/clutter/clutter-animation-tutorial.xml |    2 +-
 doc/reference/clutter/creating-behaviours.xml        |    2 +-
 2 files changed, 2 insertions(+), 2 deletions(-)

commit 2e38730eb1c16040503ab39625648f35e8ecffb5
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Tue Jul 21 14:13:31 2009 +0100

    [docs] Update the Actor subclassing documentation
    
    Mention map/unmap and fix the examples code.
    
    Update the Container virtual functions.

 doc/reference/clutter/subclassing-ClutterActor.xml |   56 ++++++++++++--------
 1 file changed, 34 insertions(+), 22 deletions(-)

commit ea436a20b31eef70af60beb5366e1ccad1261c4a
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Tue Jul 21 14:11:28 2009 +0100

    [build] Use per-target flags and libraries
    
    AM_LDFLAGS is ignored by the LDFLAGS target, and it's also not the right
    place to put the libraries used by the linker.
    
    Thanks to Vincent Untz for spotting this.

 tests/interactive/Makefile.am |   10 ++++------
 1 file changed, 4 insertions(+), 6 deletions(-)

commit ed005685c9351b23795d40bb91cb862b92641f2b
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Tue Jul 21 11:51:20 2009 +0100

    [docs] Update the "creating new behaviours" chapter
    
    The signature of the ::alpha_notify virtual function has been
    changed with the switch to float ClutterAlpha.

 doc/reference/clutter/creating-behaviours.xml |   47 +++++++++----------------
 1 file changed, 17 insertions(+), 30 deletions(-)

commit c87fea6cf1f3e3015bf2c505f0d140682b714e99
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Tue Jul 21 11:50:08 2009 +0100

    [docs] Update the building instructions
    
    New configure script command line switches have been added since
    the last time we updated the documentation.

 doc/reference/clutter/building-clutter.xml |   70 +++++++++++++++++++++++++---
 1 file changed, 63 insertions(+), 7 deletions(-)

commit 78773ab6fe96923a70e09b903db188ac5ad90f9a
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Tue Jul 21 11:29:52 2009 +0100

    [docs] Update the animations tutorial
    
    Bring the Animation framework introduction/tutorial up to the 1.0
    API for timelines and animations.

 .../clutter/clutter-animation-tutorial.xml         |  742 +++++++++-----------
 1 file changed, 321 insertions(+), 421 deletions(-)

commit fdfd208c044609a9215f09a91026fe6f02773a3a
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Tue Jul 21 09:22:34 2009 +0100

    Fix copy-and-paste errors in the deprecation macros
    
    Fixes bug:
    
      http://bugzilla.openedhand.com/show_bug.cgi?id=1704

 clutter/clutter-deprecated.h |    6 +++---
 1 file changed, 3 insertions(+), 3 deletions(-)

commit 605927db5b9d9ddb8677458b94ad2ca6d058f355
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Tue Jul 21 09:20:09 2009 +0100

    [docs] Fix typo in the effects migration guide
    
    Fixes bug:
    
      http://bugzilla.openedhand.com/show_bug.cgi?id=1706

 doc/reference/clutter/migrating-ClutterEffect.xml |    4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

commit eff857bc7f21dcfd2b8cae5f4ede1f673c24ffd1
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Mon Jul 20 20:59:18 2009 +0100

    [docs] Improve the Units to and from string conversion
    
    Make sure to document the conversion to and from strings for ClutterUnits,
    with negative examples and with the behaviour for fractionary bits.

 clutter/clutter-units.c |   22 ++++++++++++++++++----
 1 file changed, 18 insertions(+), 4 deletions(-)

commit b1d98c25f4d70bc355e2b4d66c2496ab58b9b60c
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Mon Jul 20 12:49:35 2009 +0100

    [doc] Miscellaneous documentation fixes
    
    Remove private symbols, and add missing public ones.

 clutter/cogl/cogl-material.h               |   79 +++++++++++++++-------------
 clutter/cogl/cogl-types.h                  |   16 ++++++
 clutter/cogl/cogl.h.in                     |   31 +++++------
 doc/reference/clutter/clutter-sections.txt |    1 -
 doc/reference/cogl/Makefile.am             |    7 +++
 doc/reference/cogl/cogl-sections.txt       |   22 +-------
 6 files changed, 83 insertions(+), 73 deletions(-)

commit cdb239756b8c369566ae2c45b3562d2a838674cc
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Mon Jul 20 12:47:53 2009 +0100

    [cogl] Make the blend string error domain public
    
    The error domain and codes must present in a publicly installed header
    otherwise they won't be usable to match a GError.

 clutter/cogl/cogl-types.h               |   11 +++++++++++
 clutter/cogl/common/cogl-blend-string.c |    2 +-
 clutter/cogl/common/cogl-blend-string.h |   13 -------------
 3 files changed, 12 insertions(+), 14 deletions(-)

commit e1e8c76ad7d7391fcf2ee79d730ee96fa8528c10
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Mon Jul 20 11:45:47 2009 +0100

    [gitignore] Add test-materials

 .gitignore |    1 +
 1 file changed, 1 insertion(+)

commit 56ef6727b5807c245e3eaf434653007efce70fda
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Tue Jul 14 13:47:35 2009 +0100

    Allow disabling motion event throttling
    
    It might be desirable for some applications and/or platforms to get
    every motion event that was delivered to Clutter from the windowing
    backend. By adding a per-stage flag we can bypass the throttling
    done when processing the events.
    
      http://bugzilla.openedhand.com/show_bug.cgi?id=1665

 clutter/clutter-stage.c                    |   76 +++++++++++++++++++++++-----
 clutter/clutter-stage.h                    |    8 +--
 doc/reference/clutter/clutter-sections.txt |    2 +
 3 files changed, 71 insertions(+), 15 deletions(-)

commit f7850b516c1481f7a63c68a2e0c2b9959bdd67a6
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Sat Jul 18 19:40:29 2009 +0100

    [docs] Move the releasing process to a separate file
    
    The documentation on how to release Clutter should be in a separate
    file from the documentation on how to hack on Clutter.

 HACKING   |   38 --------------------------------------
 RELEASING |   56 ++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 2 files changed, 56 insertions(+), 38 deletions(-)

commit da37e1e27db84135a6349460f68159f16cd02e0c
Author: Robert Bragg <robert@linux.intel.com>
Date:   Sun Jul 19 10:08:32 2009 +0100

    [doc] Remove references to cogl_vertex_buffer_delete_indices
    
    These referencese were left over from before indices got CoglHandles to
    uniquely identify them.  cogl_handle_unref can be used to delete indices
    now.

 clutter/cogl/cogl-vertex-buffer.h    |   14 --------------
 doc/reference/cogl/cogl-sections.txt |    1 -
 2 files changed, 15 deletions(-)

commit dc0b1cddf5bc0195c78b0ab15a8dc54c7aa49913
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Sat Jul 18 16:59:54 2009 +0100

    [cogl/gles] Fix missing symbols in CoglContext
    
    Keep the CoglContext in sync between GL and GLES backends. We ought
    to find a way to have a generic context, though, and have backend
    specific sections.
    
    Fixes bug:
    
      http://bugzilla.openedhand.com/show_bug.cgi?id=1698

 clutter/cogl/gles/cogl-context.h |   11 +++++++----
 1 file changed, 7 insertions(+), 4 deletions(-)

commit a11b912dea3f3ad9d51d4600c6aac1b69dc004a9
Author: Owen W. Taylor <otaylor@fishsoup.net>
Date:   Fri Jul 17 15:15:03 2009 -0400

    Fix parallel build of introspection
    
    We need to explicitly force order so that ClutterJson.gir and Cogl.gir
    are present in the parent directory before we try to build Clutter.typelib.
    
    http://bugzilla.openedhand.com/show_bug.cgi?id=1700
    
    Signed-off-by: Emmanuele Bassi <ebassi@linux.intel.com>

 clutter/Makefile.am |    4 ++++
 1 file changed, 4 insertions(+)

commit 7654ef10abfc5f207603ecd9012c810adb62a52a
Author: Owen W. Taylor <otaylor@fishsoup.net>
Date:   Fri Jul 17 15:10:06 2009 -0400

    Fix building introspection when dolt is not in use
    
    On some platforms (anything but Linux, and on obscure Linux
    architectures) dolt isn't used, so $(top_builddir)/doltlibtool
    won't exist. $(top_builddir)/libtool will always be generated
    even if dolt is used, so just use that unconditionally. We don't
    need the extra speed when linking the single program for
    introspection.
    
    http://bugzilla.openedhand.com/show_bug.cgi?id=1699
    
    Signed-off-by: Emmanuele Bassi <ebassi@linux.intel.com>

 clutter/Makefile.am      |    2 +-
 clutter/cogl/Makefile.am |    2 +-
 clutter/json/Makefile.am |    2 +-
 3 files changed, 3 insertions(+), 3 deletions(-)

commit 8ca87ea60f5f522f98a58da86b8dc69e8a0b79de
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Fri Jul 17 17:51:26 2009 +0100

    Post-release bump to 0.9.9

 configure.ac |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit 3dc3d46967aea8714b23ed31cb51e2085a8b78e7
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Fri Jul 17 17:32:45 2009 +0100

    [release] 0.9.8

 configure.ac |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit 6b30b76b6845cc100e16fd5ada7ed12f784b40c3
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Fri Jul 17 17:32:20 2009 +0100

    Update NEWS file

 NEWS |   38 ++++++++++++++++++++++++++++++++++++++
 1 file changed, 38 insertions(+)

commit f0ec828188519e69944509584c4e925f572720ec
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Mon Jul 13 17:27:01 2009 +0100

    Fix comments inside configure.ac

 configure.ac |    8 +++++---
 1 file changed, 5 insertions(+), 3 deletions(-)

commit 7b811f8be4be0529b50a24397cee86e8ecf02f3a
Author: Neil Roberts <neil@linux.intel.com>
Date:   Fri Jul 17 12:43:52 2009 +0100

    [stage] Force an allocation before showing the stage
    
    A lot of applications change the size of the stage from the default
    before the stage is initially shown. The size change won't take affect
    until the first allocation run. However we want the window to be at
    the correct size when we first map it so we should force an allocation
    run before showing the stage.
    
    There was an explicit call to XResizeWindow in
    clutter_stage_x11_show. This is not needed anymore because
    XResizeWindow will already have been called by the allocate method.

 clutter/clutter-stage.c         |    4 ++++
 clutter/x11/clutter-stage-x11.c |   15 ---------------
 2 files changed, 4 insertions(+), 15 deletions(-)

commit 8f9f6aaf4178266b38709bb7f7d6f118cc2d6de2
Author: Marcos <marcos.e.carranza@intel.com>
Date:   Mon Jul 13 17:04:05 2009 +0100

    [win32] Compilation fixes
    
    Remove the usage of the old CLUTTER_UNITS_* macros and put back a
    missing ';'.
    
    Signed-off-by: Emmanuele Bassi <ebassi@linux.intel.com>

 clutter/win32/clutter-stage-win32.c |   14 +++++++-------
 1 file changed, 7 insertions(+), 7 deletions(-)

commit 7a8895944b373a99023bc21998a48079debcc544
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Mon Jul 13 16:56:47 2009 +0100

    [osx] Enable motion event dispatch
    
    By default NSWindow does not listen to mousemoved events and hence the
    default behaviour for Actors using the "motion-event" signal  differs
    from backend to backend.
    
    Using setAcceptsMouseMovedEvents seems to fix it; unfortunately, I
    cannot verify it, but since nobody is currently working on the Quartz
    backend I guess it cannot get more broken than how currently is.
    
    Thanks to: Michael <michael@f3k.org>
    
    Fixes bug:
    
      http://bugzilla.openedhand.com/show_bug.cgi?id=1687

 clutter/osx/clutter-stage-osx.c |    1 +
 1 file changed, 1 insertion(+)

commit d59b9333a19842e559f9f161d26d0c1d623eafa2
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Mon Jul 13 16:53:06 2009 +0100

    [osx] Remove old units macros
    
    Remove the usage of CLUTTER_UNITS_* macros and at least get the
    chance to make the OSX backend compile.
    
    Hopefully, since I can't currently test it.

 clutter/osx/clutter-stage-osx.c |   24 ++++++++++++------------
 1 file changed, 12 insertions(+), 12 deletions(-)

commit af5e432ba9bf56ccd376d52e73e0e23d5bc9b37c
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Mon Jul 13 16:18:27 2009 +0100

    [actor] Allow querying whether we are painted by a Clone
    
    It would be useful inside a custom actor's paint function to be able to
    tell if this is a primary paint call, or if we are in fact painting on
    behalf of a clone.
    
    In Mutter we have an optimization not to paint occluded windows; this is
    desirable for the windows per se, to conserve bandwith to the card, but
    if something like an application switcher is using clones of these windows,
    they will not get painted either; currently we have no way of
    differentiating between the two.
    
    Fixes bug:
    
      http://bugzilla.openedhand.com/show_bug.cgi?id=1685

 clutter/clutter-actor.c                    |   32 ++++++++++++++++++++++++++++
 clutter/clutter-actor.h                    |    2 ++
 doc/reference/clutter/clutter-sections.txt |    1 +
 3 files changed, 35 insertions(+)

commit 43d394ebae027e5af963d5f3f459ed57bbc9617f
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Mon Jul 13 16:16:38 2009 +0100

    Remove unused TEXTURE_IN_CLONE_PAINT private flag
    
    The CLUTTER_TEXTURE_IN_CLONE_PAINT was used with the old CloneTexture
    actor; now that we have ClutterClone nothing sets the private flag
    anymore, and the flag itself is not needed.

 clutter/clutter-private.h |    9 ++++-----
 clutter/clutter-texture.c |    7 -------
 2 files changed, 4 insertions(+), 12 deletions(-)

commit 13f31d83190be1a0e47c1aedf0570f8e6ad8f0b8
Author: Xu Li <xu.li@intel.com>
Date:   Mon Jul 13 16:06:13 2009 +0800

    [x11] update_wm_hints after unsetting WITHDRAWN
    
    Updating the WM hints on the stage window shortcircuits if the stage
    is in WITHDRAWN state, so we need to move the update_wm_hints() call
    after the flag has been unset.
    
    Signed-off-by: Emmanuele Bassi <ebassi@linux.intel.com>

 clutter/x11/clutter-stage-x11.c |    4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

commit 07453a5861073fabdf64fe394c1caa71fc39d45c
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Mon Jul 13 15:31:38 2009 +0100

    [glx] Make the wait_for_vblank function private
    
    Nobody should be using the function to wait for the vblank outside
    of the GLX backend.

 clutter/glx/clutter-backend-glx.c |  120 ++++++++++++++++++-------------------
 clutter/glx/clutter-backend-glx.h |   10 +---
 2 files changed, 63 insertions(+), 67 deletions(-)

commit 5425a6e311e12da044687ac17ce387b939b71547
Author: Owen W. Taylor <otaylor@fishsoup.net>
Date:   Sat Jun 6 15:47:57 2009 -0400

    Call glFinish() before manually waiting for VBLANK
    
    If we manually wait for the VBLANK with:
    
      - SGI_video_sync
      - Direct usage of the DRM ioctl
    
    Then we should call glFinish() first, or otherwise the swap-buffers
    may be delayed by pending drawing and cause a tear.
    
    http://bugzilla.openedhand.com/show_bug.cgi?id=1636
    
    Signed-off-by: Emmanuele Bassi <ebassi@linux.intel.com>

 clutter/glx/clutter-backend-glx.c |   31 +++++++++++++++++++++++++++----
 1 file changed, 27 insertions(+), 4 deletions(-)

commit b08bbcccad7fffc4b7c829f963c3130a34ed8ae9
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Sun Jul 12 01:43:41 2009 +0100

    [tests] Remove test-perspective
    
    The perspective test was used essentially to determine whether the
    perspective set up in COGL worked correctly. The perspective code
    has been changed a lot since Clutter 0.3: we rely on client-side
    matrices and we use floating point; so, all the conditions the test
    was supposed to verify do not exist anymore.

 tests/interactive/Makefile.am        |    1 -
 tests/interactive/test-perspective.c |   51 ----------------------------------
 2 files changed, 52 deletions(-)

commit ea56a5e7a802a46f9ad6fe12480e16dc587c09b2
Author: Evan Martin <martine@danga.com>
Date:   Sun Jul 12 01:38:40 2009 +0100

    [docs] Fix typos and remove mentions of SVN
    
    Signed-off-by: Emmanuele Bassi <ebassi@linux.intel.com>

 HACKING                  |    3 ++-
 clutter/cogl/cogl-path.h |    2 +-
 tests/README             |    2 +-
 3 files changed, 4 insertions(+), 3 deletions(-)

commit efc16a4d90c48d41376769bca93cd2091d40665c
Author: Jakub Higersberger <ramarren@gmail.com>
Date:   Fri Jul 3 14:51:17 2009 +0200

    Use correct signal detail
    
    The Animation should connect to the notify::alpha signal, not to
    the non-existing notify::value signal.
    
    Fixes bugs:
    
      http://bugzilla.openedhand.com/show_bug.cgi?id=1674
      http://bugzilla.openedhand.com/show_bug.cgi?id=1688
    
    Signed-off-by: Emmanuele Bassi <ebassi@linux.intel.com>

 clutter/clutter-animation.c |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit 5a554bf063a3b673bd7f30d9a92be218e4e810c7
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Sun Jul 12 01:27:31 2009 +0100

    Small code clean up
    
    Make ClutterTexture slightly more similar to the rest of the code base.

 clutter/clutter-texture.c |   38 ++++++++++++++++++++++++--------------
 1 file changed, 24 insertions(+), 14 deletions(-)

commit 1920b03381e9b44aab9f6a5a64e8bb4c0cec1b20
Author: Robert Bragg <robert@linux.intel.com>
Date:   Tue Jul 7 16:16:56 2009 +0100

    [cogl] Fix more brokeness with _cogl_material_equal
    
    commit e2c4a2a9f83 fixed one thing but broke many others things :-/
    hopfully this fixes that.
    
    It turned out that the journal was mistakenly setting the OVERRIDE_LAYER0
    flush option for all entries, but some other logic errors were also
    uncovered in _cogl_material_equal.

 clutter/cogl/common/cogl-material.c   |   73 ++++++++++++++++++++++++---------
 clutter/cogl/common/cogl-primitives.c |    7 +++-
 2 files changed, 58 insertions(+), 22 deletions(-)

commit 8fb3a48ae2b6c9a87f17a874fad12d8f1199c29e
Author: pippin <pippin@localhost.localdomain>
Date:   Thu Jul 9 15:45:08 2009 -0400

    serialize upload of asyncronously loaded textures
    
    Rate limit the uploading of textures to stop if it uses more than 5ms
    during one master clock iteration.

 clutter/clutter-texture.c |   74 +++++++++++++++++++++++++++++++++++++++------
 1 file changed, 65 insertions(+), 9 deletions(-)

commit 211bf798544f76af7fe9e7c9893f66a0f84e02b0
Author: Robert Bragg <robert@linux.intel.com>
Date:   Thu Jul 9 20:03:01 2009 +0100

    ensure next iteration
    
    Added an internal clutter function, _clutter_master_clock_ensure_next_iteration
    that ensures another iteration of the master clock, can be called from repaint
    functions as well as other threads.

 clutter/clutter-master-clock.c |   23 +++++++++++++++++++++++
 clutter/clutter-master-clock.h |   15 ++++++++-------
 2 files changed, 31 insertions(+), 7 deletions(-)

commit e2c4a2a9f8324a3a17104a15034a40279b4910bb
Author: Robert Bragg <robert@linux.intel.com>
Date:   Sat Jul 4 00:15:49 2009 +0100

    [cogl] Fix drawing with sliced textures using material layer0 overrides
    
    To help us handle sliced textures; When flushing materials there is an
    override option that can be given to replace the texture name for layer0
    so we may iterate the slices without needing to modify the material
    in use.
    
    Since improving the journal's ability to batch state changes we added a
    _cogl_material_equals function that is used by the journal to compare
    materials and identify when a state change is required, but this wasn't
    correctly considering the layer0 override resulting in false positives that
    meant the journal wouldn't update the GL state and the first texture name
    was used for all slices.

 clutter/cogl/common/cogl-material-private.h |    3 +-
 clutter/cogl/common/cogl-material.c         |  208 ++++++++++++++++++---------
 clutter/cogl/common/cogl-primitives.c       |    3 +-
 3 files changed, 144 insertions(+), 70 deletions(-)

commit df4429462fa495e44d3a8431ab27771426f7ba42
Author: Robert Bragg <robert@linux.intel.com>
Date:   Fri Jul 3 00:34:10 2009 +0100

    [cogl matrix stack] Create a client side matrix stack for the projection matrix
    
    The cost of glGetFloatv with Mesa is still representing a majority of our
    time in OpenGL for some applications, and the last thing left using this is
    the current-matrix API when getting the projection matrix.
    
    This adds a matrix stack for the projection matrix, so all getting, setting
    and modification of the projection matrix is now managed by Cogl and it's only
    when we come to draw that we flush changes to the matrix to OpenGL.
    
    This also brings us closer to being able to drop internal use of the
    deprecated OpenGL matrix functions, re: commit 54159f5a1d02

 clutter/cogl/common/cogl-current-matrix.c |  105 ++++++++++++++++++-----------
 clutter/cogl/common/cogl-current-matrix.h |    2 +
 clutter/cogl/common/cogl-matrix-stack.c   |    8 +--
 clutter/cogl/common/cogl-matrix.c         |    1 +
 clutter/cogl/common/cogl-primitives.c     |   10 ++-
 clutter/cogl/common/cogl-vertex-buffer.c  |    4 +-
 clutter/cogl/common/cogl.c                |    7 +-
 clutter/cogl/gl/cogl-context.h            |    1 +
 clutter/cogl/gl/cogl-primitives.c         |    6 +-
 9 files changed, 85 insertions(+), 59 deletions(-)

commit c3cc553c4991100b456e96ea14fc17c85311d6e2
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu Jul 2 14:21:16 2009 +0100

    Add more (allow-none) annotations

 clutter/clutter-actor.c |   91 ++++++++++++++++++++++++++++-------------------
 1 file changed, 54 insertions(+), 37 deletions(-)

commit f1044a279c45e8f4f48cc81a5c1c0fa720835d1d
Author: Colin Walters <walters@verbum.org>
Date:   Thu Jul 2 13:15:42 2009 +0100

    Use the (allow-none) annotation for clutter_init*
    
    We accept NULL for some parameters in the initialization functions.
    
    Signed-off-by: Emmanuele Bassi <ebassi@linux.intel.com>

 clutter/clutter-main.c |   18 ++++++++++--------
 1 file changed, 10 insertions(+), 8 deletions(-)

commit d1232509a21a7ce05aa8c85b2c14872ffc4df5cb
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Wed Jul 1 15:59:13 2009 +0100

    Post-release bump to 0.9.7

 configure.ac |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit 9ce88d86b484bcc4a15decfb95b97294e4cce292
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Wed Jul 1 15:28:33 2009 +0100

    [release] 0.9.6

 configure.ac |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit a373bbb819462b6baa62f0ecfff9716c8dbc8fa8
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Wed Jul 1 14:56:13 2009 +0100

    [docs] Update the NEWS and README files

 NEWS   |   40 ++++++++++++++++++++++++++++++++++++++++
 README |    5 +++++
 2 files changed, 45 insertions(+)

commit 45c85c4213c85d0dbbbe0e7eb8f93e290d5ffff2
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Wed Jul 1 15:15:52 2009 +0100

    [actor] Remove the unused get_allocation_coords()
    
    The clutter_actor_get_allocation_coords() is not used, and since
    the switch to floats in the Actor's API, it returns exactly what
    the get_allocation_box() returns.

 clutter/clutter-actor.c      |   62 +++++++-----------------------------------
 clutter/clutter-actor.h      |    5 ----
 clutter/clutter-deprecated.h |    2 ++
 3 files changed, 12 insertions(+), 57 deletions(-)

commit 37bd35f592e13dfa8ded884fcf668409dec119f3
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Wed Jul 1 13:59:13 2009 +0100

    [actor] Allow changing the transformations matrix
    
    Currently, the transformation matrix for an actor is constructed
    from scenegraph-related accessors. An actor, though, can call COGL
    API to add new transformations inside the paint() implementation,
    for instance:
    
      static void
      my_foo_paint (ClutterActor *a)
      {
        ...
        cogl_translate (-scroll_x, -scroll_y, 0);
        ...
      }
    
    Unfortunately these transformations will be completely ignored by
    the scenegraph machinery; for instance, getting the actor-relative
    coordinates from event coordinates is going to break badly because
    of this.
    
    In order to make the scenegraph aware of the potential of additional
    transformations, we need a ::apply_transform() virtual function. This
    vfunc will pass a CoglMatrix which can be used to apply additional
    operations:
    
      static void
      my_foo_apply_transform (ClutterActor *a, CoglMatrix *m)
      {
        CLUTTER_ACTOR_CLASS (my_foo_parent_class)->apply_transform (a, m);
        ...
        cogl_matrix_translate (m, -scroll_x, -scroll_y, 0);
        ...
      }
    
    The ::paint() implementation will be called with the actor already
    using the newly applied transformation matrix, as expected:
    
      static void
      my_foo_paint (ClutterActor *a)
      {
        ...
      }
    
    The ::apply_transform() implementations *must* chain up, so that the
    various transformations of each class are preserved. The default
    implementation inside ClutterActor applies all the transformations
    defined by the scenegraph-related accessors.
    
    Actors performing transformations inside the paint() function will
    continue to work as previously.

 clutter/clutter-actor.c                    |  104 ++++++++++++++++++++--------
 clutter/clutter-actor.h                    |   15 +++-
 doc/reference/clutter/clutter-sections.txt |    1 +
 3 files changed, 89 insertions(+), 31 deletions(-)

commit 0414daf0fb64433cb168799bfec79d5996b05ddf
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Wed Jul 1 12:34:54 2009 +0100

    Split the typdef to avoid confusing scanners
    
    Scanners like gtk-doc and g-ir-scanner get confused by:
    
      typedef struct _Foo {
        ...
      } Foo;
    
    And expect instead:
    
      typedef struct _Foo Foo;
    
      struct _Foo {
        ...
      };
    
    CoglMatrix definition should be changed to avoid the former type.

 clutter/cogl/cogl-matrix.h |    6 ++++--
 1 file changed, 4 insertions(+), 2 deletions(-)

commit 250b775926da40a5e4b96565b413c4a2c57d4a8d
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu Jun 25 14:41:25 2009 +0100

    [x11] Fix the race between resize and glViewport calls
    
    The race we were experiencing in the X11 backends is apparently
    back after the fix in commit 00a3c698.
    
    This time, just delaying the setting of the SYNC_MATRICES flag
    is not enough, so we can resume the use of a STAGE_IN_RESIZE
    private flag.
    
    This should also fix bug:
    
      http://bugzilla.openedhand.com/show_bug.cgi?id=1668

 clutter/clutter-main.c          |    7 +++++--
 clutter/clutter-private.h       |    3 ++-
 clutter/x11/clutter-event-x11.c |    6 ++++--
 clutter/x11/clutter-stage-x11.c |   35 +++++++++++++++++++++++++++--------
 4 files changed, 38 insertions(+), 13 deletions(-)

commit 3726213291ad513e09ec7e8b3776cc2d2b9d9cb9
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu Jun 25 14:39:57 2009 +0100

    Add debug notes for calls to glViewport()
    
    In order to validate the sequence of:
    
            XResizeWindow
            ConfigureNotify
            glViewport
    
    that should happen on X11 we need to add debug annotations to the
    calls to glViewport() done through COGL.

 clutter/cogl/common/cogl.c |    1 +
 1 file changed, 1 insertion(+)

commit 3bab7871030d8ad6be6dc730e5902d256dea28a2
Author: Robert Bragg <robert@linux.intel.com>
Date:   Wed Jul 1 12:57:30 2009 +0100

    [cogl] cache the viewport width and height
    
    This avoids some calls to glGetFloatv, which have at least proven to be very
    in-efficient in mesa at this point in time, since it always updates all derived
    state even when it may not relate to the state being requested.

 clutter/cogl/common/cogl.c     |   30 ++++++++++++++++--------------
 clutter/cogl/gl/cogl-context.c |    3 +++
 clutter/cogl/gl/cogl-context.h |    3 +++
 clutter/cogl/gl/cogl-fbo.c     |    2 +-
 4 files changed, 23 insertions(+), 15 deletions(-)

commit 358d7c30dcb6e50b8dc1208d7b602b74cc198f10
Author: Robert Bragg <robert@linux.intel.com>
Date:   Fri Jun 19 12:15:12 2009 +0100

    [cogl] Ensure well defined semantics for COGL_INVALID_HANDLE material layers
    
    Fixes and adds a unit test for creating and drawing using materials with
    COGL_INVALID_HANDLE texture layers.
    
    This may be valid if for example the user has set a texture combine string
    that only references a constant color.
    
    _cogl_material_flush_layers_gl_state will bind the fallback texture for any
    COGL_INVALID_HANDLE layer, later though we could explicitly check when the
    current blend mode does't actually reference a texture source in which case
    binding the fallback texture is redundant.
    
    This tests drawing using cogl_rectangle, cogl_polygon and
    cogl_vertex_buffer_draw.

 clutter/cogl/common/cogl-material.c      |    8 +-
 clutter/cogl/common/cogl-primitives.c    |   35 ++++--
 clutter/cogl/common/cogl-vertex-buffer.c |   10 +-
 tests/conform/Makefile.am                |    1 +
 tests/conform/test-conform-main.c        |    1 +
 tests/conform/test-materials.c           |  195 ++++++++++++++++++++++++++++++
 6 files changed, 240 insertions(+), 10 deletions(-)

commit fce406f1b88794d35d8fb0c04c6bf690b990bd0d
Merge: 04bb789 33400c0
Author: Robert Bragg <robert@linux.intel.com>
Date:   Tue Jun 30 17:17:30 2009 +0100

    Merge branch 'cogl-journal-batching'
    
    [cogl] Improve ability to break out into raw OpenGL via begin/end mechanism
    Adds a cogl_flush() to give developers breaking into raw GL a fighting chance
    [cogl-material] Be more carefull about flushing in cogl_material_remove_layer
    Revert "[rectangle] Avoid modifying materials mid scene"
    Revert "[actor] Avoid modifying materials mid-scene to improve journal batching"
    [cogl-vertex-buffer] Disable unused client tex coord arrays
    [cogl] disable all client tex coord arrays in _cogl_add_path_to_stencil_buffer
    [cogl] flush matrices in _cogl_add_path_to_stencil_buffer
    [journal] Don't resize a singlton VBO; create and destroy a VBO each flush
    [cogl] avoid using the journal in _cogl_add_path_to_stencil_buffer
    [pango-display-list] Use the Cogl journal for short runs of text
    [material] _cogl_material_equal: catch the simplest case of matching handles
    [material] avoid flushing the journal when just changing the color
    [cogl journal] Perform software modelview transform on logged quads.
    [Cogl journal] use G_UNLIKLEY around runtime debugging conditions
    [cogl journal] Adds a --cogl-debug=batching option to trace batching
    [Cogl journal] Adds a --cogl-debug=journal option for tracing the journal
    [cogl] Adds a debug option for disabling use of VBOs --cogl-debug=disable-vbos
    [cogl] Force Cogl to always use the client side matrix stack
    [cogl-debug] Adds a "client-side-matrices" Cogl debug option
    [cogl-color] Adds a cogl_color_equal() function
    [cogl material] optimize logging of material colors in the journal
    [rectangle] Avoid modifying materials mid scene
    [actor] Avoid modifying materials mid-scene to improve journal batching
    [journal] Always pad our vertex data as if at least 2 layers are enabled
    [cogl] Improving Cogl journal to minimize driver overheads + GPU state changes
    
    The Cogl journal is a mechanism Cogl uses to batch geometry resulting from
    any of the cogl_rectangle* functions before sending it to OpenGL.  This aims
    to improve the Cogl journal so that it can reduce the number of state
    changes and draw calls we issue to the OpenGL driver and hopfully improve
    performance.
    
    Previously each call to any of the cogl_rectangle* functions would imply an
    immediate GL draw call, as well as a corresponding modelview change;
    material state changes and gl{Vertex,Color,TexCoord}Pointer calls.  Now
    though we have tried to open the scope for batching up as much as possible
    so we only have to flush the geometry either before calling glXSwapBuffers,
    or when we change state that isn't tracked by the journal.
    
    As a basic example, it's now possible for us to batch typical picking
    renders into a single draw call for the whole scene.
    
    Some key points about this change:
    - We now perform transformations of quads in software (except for long runs of
      text which continue to use VBOs)
        * It might seem surprising at first, but when you consider that so many
          Clutter actors are little more than textured quads and each actor
          typically implies a modelview matrix change; the costs involved in
          setting up the GPU with the new modelview can easily out weigh the cost
          of simply transforming 4 vertices.
    - We always use Cogl's own client side matrix API now.
        * We found the performance of querying the OpenGL driver for matrix state
          was often worse than using the client matrix code, and also - discussing
          with Mesa developers - agreed that since khronos has essentially
          deprecated the GL matrix API (by removing it from OpenGL 3 and
          OpenGL-ES 2) it was appropriate to take full responsibility for all our
          matrix manipulation.
    - Developers should avoid modifying materials mid-scene.
        * With the exception of material color changes, if you try and modify a
          material that is referenced in the journal we will currently force a
          journal flush. Note: you can assume that re-setting the same value for
          a material property won't require a flush though.
    - Several new --cogl-debug options have been added
        * "disable-batching" can be used to identify bugs in the way that the
          journal does its batching; of could this shouldn't ever be needed :-)
        * "disable-vbos" can be used to test the VBO fallback paths where we
          simply use malloc()'d buffers instead.
        * "batching" lets you get an overview of how the journal is batching
          your geometry and may help you identify ways to improve your
          application performance.
        * "journal" lets you trace all the geometry as it gets logged in the
          journal, and all the geometry as its flushed from the journal.
          Obviously an inconsistency can identify a bug, but the numbers may
          help you verify application logic too.
        * "disable-software-transform" as implied will instead use the driver
          /GPU to transform quads by the modelview matrix.
        Although committed separately a --clutter-debug=nop-picking option was
        also added that lets you remove picking from the equation, which can
        sometimes help make problem analysis more deterministic.

commit 33400c0aae58468107be8a9e4572a37dd890ec81
Author: Robert Bragg <robert@linux.intel.com>
Date:   Mon Jun 29 22:32:05 2009 +0100

    [cogl] Improve ability to break out into raw OpenGL via begin/end mechanism
    
    Although we wouldn't recommend developers try and interleve OpenGL drawing
    with Cogl drawing - we would prefer patches that improve Cogl to avoid this
    if possible - we are providing a simple mechanism that will at least give
    developers a fighting chance if they find it necissary.
    
    Note: we aren't helping developers change OpenGL state to modify the
    behaviour of Cogl drawing functions - it's unlikley that can ever be
    reliably supported - but if they are trying to do something like:
    
       - setup some OpenGL state.
       - draw using OpenGL (e.g. glDrawArrays() )
       - reset modified OpenGL state.
       - continue using Cogl to draw
    
    They should surround their blocks of raw OpenGL with cogl_begin_gl() and
    cogl_end_gl():
    
       cogl_begin_gl ();
       - setup some OpenGL state.
       - draw using OpenGL (e.g. glDrawArrays() )
       - reset modified OpenGL state.
       cogl_end_gl ();
       - continue using Cogl to draw
    
    Again; we aren't supporting code like this:
       - setup some OpenGL state.
       - use Cogl to draw
       - reset modified OpenGL state.
    When the internals of Cogl evolves, this is very liable to break.
    
    cogl_begin_gl() will flush all internally batched Cogl primitives, and emit
    all internal Cogl state to OpenGL as if it were going to draw something
    itself.
    
    The result is that the OpenGL modelview matrix will be setup; the state
    corresponding to the current source material will be setup and other world
    state such as backface culling, depth and fogging enabledness will be also
    be sent to OpenGL.
    
    Note: no special material state is flushed, so if developers want Cogl to setup
    a simplified material state it is the their responsibility to set a simple
    source material before calling cogl_begin_gl. E.g. by calling
    cogl_set_source_color4ub().
    
    Note: It is the developers responsibility to restore any OpenGL state that they
    modify to how it was after calling cogl_begin_gl() if they don't do this then
    the result of further Cogl calls is undefined.

 clutter/cogl/cogl.h.in               |   79 ++++++++++++++++++++++++++++++++++
 clutter/cogl/common/cogl.c           |   75 ++++++++++++++++++++++++++++++++
 clutter/cogl/gl/cogl-context.c       |    2 +
 clutter/cogl/gl/cogl-context.h       |    2 +
 doc/reference/cogl/cogl-sections.txt |    2 +
 5 files changed, 160 insertions(+)

commit 6d9498da7cbe180ddc4b68ae3a48985631db46a0
Author: Robert Bragg <robert@linux.intel.com>
Date:   Mon Jun 29 17:10:34 2009 +0100

    Adds a cogl_flush() to give developers breaking into raw GL a fighting chance
    
    This function should only need to be called in exceptional circumstances
    since Cogl can normally determine internally when a flush is necessary.
    
    As an optimization Cogl drawing functions may batch up primitives
    internally, so if you are trying to use raw GL outside of Cogl you stand a
    better chance of being successful if you ask Cogl to flush any batched
    geometry before making your state changes.
    
    cogl_flush() ensures that the underlying driver is issued all the commands
    necessary to draw the batched primitives.  It provides no guarantees about
    when the driver will complete the rendering.
    
    This provides no guarantees about the GL state upon returning and to avoid
    confusing Cogl you should aim to restore any changes you make before
    resuming use of Cogl.
    
    If you are making state changes with the intention of affecting Cogl drawing
    primitives you are 100% on your own since you stand a good chance of
    conflicting with Cogl internals.  For example clutter-gst which currently
    uses direct GL calls to bind ARBfp programs will very likely break when Cogl
    starts to use ARBfb programs internally for the material API, but for now it
    can use cogl_flush() to at least ensure that the ARBfp program isn't applied
    to additional primitives.
    
    This does not provide a robust generalized solution supporting safe use of
    raw GL, its use is very much discouraged.

 clutter/clutter-main.c                  |    2 +-
 clutter/cogl/cogl.h.in                  |   42 ++++++++++++++++++++-----------
 clutter/cogl/common/cogl.c              |    4 +--
 clutter/eglnative/clutter-backend-egl.c |    2 +-
 clutter/eglx/clutter-backend-egl.c      |    2 +-
 clutter/fruity/clutter-backend-fruity.c |    2 +-
 clutter/glx/clutter-backend-glx.c       |    2 +-
 clutter/osx/clutter-stage-osx.c         |    2 +-
 clutter/sdl/clutter-backend-sdl.c       |    2 +-
 clutter/win32/clutter-backend-win32.c   |    2 +-
 doc/reference/cogl/cogl-sections.txt    |    3 +++
 11 files changed, 41 insertions(+), 24 deletions(-)

commit 87f99e214a6f60c06cc34f844e02ecb0f63c953f
Author: Robert Bragg <robert@linux.intel.com>
Date:   Wed Jun 24 18:34:06 2009 +0100

    [cogl-material] Be more carefull about flushing in cogl_material_remove_layer
    
    Previously we would call _cogl_material_pre_change_notify unconditionally, but
    now we wait until we really know we are removing a layer before notifying the
    change, which will require a journal flush.
    
    Since the convenience functions cogl_set_source_color4ub and
    cogl_set_source_texture share a single material, cogl_set_source_color4ub
    always calls cogl_material_remove_layer.  Often this is a NOP though and
    shouldn't require a journal flush.
    
    This gets performance back to where it was before reverting the per-actor
    material commits.

 clutter/cogl/common/cogl-material.c |   12 +++++++++---
 1 file changed, 9 insertions(+), 3 deletions(-)

commit 6ee8e1565475d75d343682e4d4eed2f68e0c26eb
Author: Robert Bragg <robert@linux.intel.com>
Date:   Wed Jun 24 18:24:58 2009 +0100

    Revert "[rectangle] Avoid modifying materials mid scene"
    
    This reverts commit 8cf42ea8ac5c05f6b443c453f9c6c2a3cd75acfa.
    
    Since the journal puts material colors in the vertex array accumulated for
    drawing we don't need to flush the journal simply due to color changes which
    means using cogl_set_source_color4ub is no longer a concern.

 clutter/clutter-rectangle.c |   89 +++++++++++++++++--------------------------
 1 file changed, 34 insertions(+), 55 deletions(-)

commit 5ffbe052480cb06e44f1a317ac729553ddd2dc96
Author: Robert Bragg <robert@linux.intel.com>
Date:   Wed Jun 24 18:20:45 2009 +0100

    Revert "[actor] Avoid modifying materials mid-scene to improve journal batching"
    
    This reverts commit 85243da382025bd516937c76a61b8381f6e74689.
    
    Since the journal puts material colors in the vertex array accumulated for
    drawing we don't need to flush the journal simply due to color changes
    which means using cogl_set_source_color4ub is no longer a concern.

 clutter/clutter-actor.c |   14 ++++----------
 1 file changed, 4 insertions(+), 10 deletions(-)

commit 8b67916cc1e2aed7861214205fc0d68c0c6d67f1
Author: Robert Bragg <robert@linux.intel.com>
Date:   Wed Jun 24 18:10:50 2009 +0100

    [cogl-vertex-buffer] Disable unused client tex coord arrays
    
    Before any cogl vertex buffer drawing we call
    enable_state_for_drawing_buffer which sets up the GL state, but we weren't
    disabling unsed client texture coord arrays.

 clutter/cogl/common/cogl-vertex-buffer.c |    7 +++++++
 1 file changed, 7 insertions(+)

commit 8873c6a11a4668e737e4dc75d1d2a2c14904482f
Author: Robert Bragg <robert@linux.intel.com>
Date:   Mon Jun 22 01:29:39 2009 +0100

    [cogl] disable all client tex coord arrays in _cogl_add_path_to_stencil_buffer
    
    After flushing the journal an unknown number of client side texture arrays
    may be left enabled. Disable them all before using glDrawArrays.

 clutter/cogl/gl/cogl-primitives.c |    8 ++++++++
 1 file changed, 8 insertions(+)

commit ca0a0e9dac23219709a1c365a070ea9d4d517909
Author: Robert Bragg <robert@linux.intel.com>
Date:   Mon Jun 22 00:49:20 2009 +0100

    [cogl] flush matrices in _cogl_add_path_to_stencil_buffer
    
    Before calling glRectf we need to ensure we flush the modelview and
    projection matrices.

 clutter/cogl/gl/cogl-primitives.c |    2 ++
 1 file changed, 2 insertions(+)

commit f386b1f002f111210e87e6f72eb1795ad2befc1e
Author: Robert Bragg <robert@linux.intel.com>
Date:   Mon Jun 22 00:11:41 2009 +0100

    [journal] Don't resize a singlton VBO; create and destroy a VBO each flush
    
    This simplifies the vertex data uploading in the journal, and could improve
    performance.  Modifying a VBO mid-scene could reqire synchronizing with the
    GPU or some form of shadowing/copying to avoid modifying data that the GPU
    is currently processing; the buffer was also being marked as GL_STATIC_DRAW
    which could have made things worse.
    
    Now we simply create a GL_STATIC_DRAW VBO for each flush and and delete it
    when we are finished.

 clutter/cogl/common/cogl-primitives.c |   40 ++++++++++-----------------------
 1 file changed, 12 insertions(+), 28 deletions(-)

commit 7b7787b050a1dd245dea396335ddf96662c6a570
Author: Robert Bragg <robert@linux.intel.com>
Date:   Mon Jun 22 00:05:02 2009 +0100

    [cogl] avoid using the journal in _cogl_add_path_to_stencil_buffer
    
    Using cogl_rectangle (and thus the journal) in
    _cogl_add_path_to_stencil_buffer means we have to consider all the state
    that the journal may change in case it may interfer with the direct GL calls
    used.  This has proven to be error prone and in this case the journal is an
    unnecissary overhead.  We now simply call glRectf instead of using
    cogl_rectangle.

 clutter/cogl/gl/cogl-primitives.c |   16 ++++++----------
 1 file changed, 6 insertions(+), 10 deletions(-)

commit 6562f3224a558b224b9076fe794547bfc9bb2af5
Author: Robert Bragg <robert@linux.intel.com>
Date:   Wed Jun 17 23:35:49 2009 +0100

    [pango-display-list] Use the Cogl journal for short runs of text
    
    For small runs of text like icon labels, we can get better performance
    going through the Cogl journal since text may then be batched together
    with other geometry.
    
    For larger runs of text though we still use VBOs since the cost of logging
    the quads becomes too expensive, including the software transform which
    isn't at all optimized at this point.  VBOs also have the further advantage
    of avoiding repeated validation of vertices by the driver and repeated
    mapping of data into the GPU so long as the text doesn't change.
    
    Currently the threshold is 100 vertices/25 quads. This number was plucked
    out of thin air and should be tuned later.
    
    With this change I see ~180% fps improvment for test-text. (x61s + i965 +
    Mesa 7.6-devel)

 clutter/pango/cogl-pango-display-list.c |   33 +++++++++++++++++++++++++++++++
 1 file changed, 33 insertions(+)

commit 6ac3b5a564608862fdf4e9b8887b882ebe497f4b
Author: Robert Bragg <robert@linux.intel.com>
Date:   Wed Jun 17 23:31:40 2009 +0100

    [material] _cogl_material_equal: catch the simplest case of matching handles
    
    We were missing the simplest test of all: are the two CoglHandles equal and
    are the flush option flags for each material equal?  This should improve
    batching for some common cases.

 clutter/cogl/common/cogl-material.c |    4 ++++
 1 file changed, 4 insertions(+)

commit 9afa52f056b58bbd35274fec3fe21ff483949321
Author: Robert Bragg <robert@linux.intel.com>
Date:   Wed Jun 17 23:31:11 2009 +0100

    [material] avoid flushing the journal when just changing the color
    
    Whenever we modify a material we call _cogl_material_pre_change_notify which
    checks to see if the material is referenced by the journal and if so flushes
    if before we modify the material.
    
    Since the journal logs material colors directly into a vertex array (to
    avoid us repeatedly calling glColor) then we know we never need to flush
    the journal when material colors change.

 clutter/cogl/common/cogl-material.c |   80 +++++++++++++++++++++++------------
 1 file changed, 52 insertions(+), 28 deletions(-)

commit efbf483d8cdd448b20ddcfedc518509f907b2ac6
Author: Robert Bragg <robert@linux.intel.com>
Date:   Wed Jun 17 01:31:36 2009 +0100

    [cogl journal] Perform software modelview transform on logged quads.
    
    Since most Clutter actors aren't much more than textured quads; flushing the
    journal typically involves lots of 'change modelview; draw quad' sequences.
    
    The amount of overhead involved in uploading a new modelview and queuing
    that primitive is huge in comparison to simply transforming 4 vertices by
    the current modelview when logging quads.  (Note if your GPU supports HW
    vertex transform, then it still does the projective and viewport transforms)
    
    At the same time a --cogl-debug=disable-software-transform option has been
    added for comparison and debugging.
    
    This change allows typical pick scenes to be batched into a single draw call
    and I'm seeing test-pick run over 200% faster with this.  (i965 + Mesa
    7.6-devel)

 clutter/cogl/cogl-debug.h             |    3 +-
 clutter/cogl/common/cogl-debug.c      |    3 +-
 clutter/cogl/common/cogl-primitives.c |  158 ++++++++++++++++++++++++---------
 3 files changed, 120 insertions(+), 44 deletions(-)

commit 612a1e2dea5599a30e3c922dee288d72e890c415
Author: Robert Bragg <robert@linux.intel.com>
Date:   Wed Jun 17 01:30:24 2009 +0100

    [Cogl journal] use G_UNLIKLEY around runtime debugging conditions
    
    May as well improve the branch prediction around runtime debugging code.

 clutter/cogl/common/cogl-primitives.c |   16 ++++++++--------
 1 file changed, 8 insertions(+), 8 deletions(-)

commit 7d1876fd261f5039e25d468e0cc7dcbf63229912
Author: Robert Bragg <robert@linux.intel.com>
Date:   Thu Jun 11 11:54:01 2009 +0100

    [cogl journal] Adds a --cogl-debug=batching option to trace batching
    
    Enabling this option makes Cogl trace how the journal is managing to batch
    your rectangles.  The journal staggers how it emmits state to the GL driver
    and the batches will normally get smaller for each stage, but ideally you
    don't want to be in a situation where Cogl is only able to draw one quad per
    modelview change and draw call.
    
    E.g. this is a fairly ideal example:
    BATCHING: journal len = 101
    BATCHING:  vbo offset batch len = 101
    BATCHING:   material batch len = 101
    BATCHING:    modelview batch len = 101
    
    This isn't:
    BATCHING: journal len = 1
    BATCHING:  vbo offset batch len = 1
    BATCHING:   material batch len = 1
    BATCHING:    modelview batch len = 1
    BATCHING: journal len = 1
    BATCHING:  vbo offset batch len = 1
    BATCHING:   material batch len = 1
    BATCHING:    modelview batch len = 1
    <repeat>

 clutter/cogl/cogl-debug.h             |    5 +++--
 clutter/cogl/common/cogl-debug.c      |    3 ++-
 clutter/cogl/common/cogl-primitives.c |   17 ++++++++++++-----
 3 files changed, 17 insertions(+), 8 deletions(-)

commit d03e6cfb2c1ea47fdcf8db7d471666bd380c93aa
Author: Robert Bragg <robert@linux.intel.com>
Date:   Wed Jun 17 01:59:28 2009 +0100

    [Cogl journal] Adds a --cogl-debug=journal option for tracing the journal
    
    When this option is used Cogl will print a trace of all quads that get
    logged into the journal, and a trace of quads as they get flushed.
    
    If you are seeing a bug with the geometry being drawn by Cogl this may give
    some clues by letting you sanity check the numbers being logged vs the
    numbers being emitted.

 clutter/cogl/cogl-debug.h             |    3 ++-
 clutter/cogl/common/cogl-debug.c      |    3 ++-
 clutter/cogl/common/cogl-primitives.c |   36 +++++++++++++++++++++------------
 3 files changed, 27 insertions(+), 15 deletions(-)

commit 3ea7816499996c3bb918b27c6f44c987b90d2e9c
Author: Robert Bragg <robert@linux.intel.com>
Date:   Wed Jun 17 01:46:06 2009 +0100

    [cogl] Adds a debug option for disabling use of VBOs --cogl-debug=disable-vbos
    
    For testing the VBO fallback paths it helps to be able to disable the
    COGL_FEATURE_VBOS feature flag.  When VBOs aren't available Cogl should use
    client side malloc()'d buffers instead.

 clutter/cogl/cogl-debug.h        |    3 ++-
 clutter/cogl/common/cogl-debug.c |    3 ++-
 clutter/cogl/common/cogl.c       |    3 +++
 3 files changed, 7 insertions(+), 2 deletions(-)

commit 54159f5a1d029dbfff19711f5397fc9b99556ed4
Author: Robert Bragg <robert@linux.intel.com>
Date:   Wed Jun 17 01:37:39 2009 +0100

    [cogl] Force Cogl to always use the client side matrix stack
    
    Previously we only used the Cogl matrix stack API for indirect contexts, but
    it's too costly to keep on requesting modelview matrices from GL (for
    logging in the journal) even for direct rendering.
    
    I also experimented with a patch for mesa to improve performance and
    discussed this with upstream, but we agreed to consider the GL matrix API
    essentially deprecated.  (For reference the GLES 2 and GL 3 specs have
    removed the matrix APIs)

 clutter/cogl/common/cogl-current-matrix.c |    2 ++
 1 file changed, 2 insertions(+)

commit 713af6535de11f27e1da9c1e233e8402d2864ab9
Author: Robert Bragg <robert@linux.intel.com>
Date:   Fri Jun 5 13:50:00 2009 +0100

    [cogl-debug] Adds a "client-side-matrices" Cogl debug option
    
    This allows us to force Cogl to use the client side matrix stack even when
    direct rendering.

 clutter/cogl/cogl-debug.h                 |    3 ++-
 clutter/cogl/common/cogl-current-matrix.c |    3 ++-
 clutter/cogl/common/cogl-debug.c          |    3 ++-
 3 files changed, 6 insertions(+), 3 deletions(-)

commit a8be68c83cb97a8bafc93f5304e177e1b265bca1
Author: Robert Bragg <robert@linux.intel.com>
Date:   Fri Jun 5 12:58:31 2009 +0100

    [cogl-color] Adds a cogl_color_equal() function
    
    CoglColors shouldn't be compared using memcmp since they may contain
    uninitialized padding bytes.
    
    The prototype is also suitable for passing to g_hash_table_new as the
    key_equal_func.
    
    _cogl_pango_display_list_add_texture now uses this instead of memcmp.

 clutter/cogl/cogl-color.h               |   16 ++++++++++++++++
 clutter/cogl/common/cogl-color.c        |   15 +++++++++++++++
 clutter/pango/cogl-pango-display-list.c |    3 +--
 3 files changed, 32 insertions(+), 2 deletions(-)

commit aca1bf4329481cedfd8ffa65591338662c6d626a
Author: Robert Bragg <robert@linux.intel.com>
Date:   Thu Jun 4 14:23:16 2009 +0100

    [cogl material] optimize logging of material colors in the journal
    
    We now put the color of materials into the vertex array used by the journal
    instead of calling glColor() but the number of requests for the material
    color were quite expensive so we have changed the material color to
    internally be byte components instead of floats to avoid repeat conversions
    and added _cogl_material_get_colorubv as a fast-path for the journal to
    copy data into the vertex array.

 clutter/cogl/common/cogl-material-private.h |   21 ++++-------
 clutter/cogl/common/cogl-material.c         |   51 ++++++++++++++++-----------
 clutter/cogl/common/cogl-primitives.c       |   26 ++++++--------
 clutter/cogl/gles/cogl-gles2-wrapper.c      |    7 ++++
 clutter/cogl/gles/cogl-gles2-wrapper.h      |    2 ++
 5 files changed, 56 insertions(+), 51 deletions(-)

commit 938452f1b1109e7c8daff8f49c4f0a45a13be25f
Author: Robert Bragg <robert@linux.intel.com>
Date:   Fri Jun 5 13:03:14 2009 +0100

    [rectangle] Avoid modifying materials mid scene
    
    To improve batching of geometry in the Cogl journal we need to avoid modifying
    materials midscene.
    
    Currently cogl_set_source_color and cogl_set_source_texture simply modify a
    single shared material. In the future we can improve this so they use a pool
    of materials that gets recycled as the journal is flushed, but for now we
    give all ClutterRectangles their own private materials for painting with.

 clutter/clutter-rectangle.c |   89 ++++++++++++++++++++++++++-----------------
 1 file changed, 55 insertions(+), 34 deletions(-)

commit dc1ca79398e343d06918cf1c38b72771f476f0a6
Author: Robert Bragg <robert@linux.intel.com>
Date:   Wed Jun 17 18:36:27 2009 +0100

    [actor] Avoid modifying materials mid-scene to improve journal batching
    
    Currently cogl_set_source_color uses a single shared material which means
    each actor that uses it causes the journal to flush if the color changes.
    Until we improve cogl_set_source_color to use a pool of materials that can
    be recycled as the journal is flushed we avoid mid-scene material changes by
    giving all actors a private material instead.

 clutter/clutter-actor.c |   14 ++++++++++----
 1 file changed, 10 insertions(+), 4 deletions(-)

commit 40cfaeaffc9b744d99c21c1e6cd5b57e358ff37a
Author: Robert Bragg <robert@linux.intel.com>
Date:   Wed Jun 10 13:59:45 2009 +0100

    [journal] Always pad our vertex data as if at least 2 layers are enabled
    
    The number of material layers enabled when logging a quad in the journal
    determines the stride of the corresponding vertex data (since we need a set
    of texture coordinates for each layer.) By padding data in the case where we
    have only one layer we can avoid a change in stride if we are mixing single
    and double layer primitives in a scene (e.g.  relevent for a composite
    manager that may use 2 layers for all shaped windows) Avoiding stride
    changes means we can minimize calls to gl{Vertex,Color}Pointer when flushing
    the journal.
    
    Since we need to update the texcoord pointers when the actual number of
    layers changes, this adds another batch_and_call() stage to deal with
    glTexCoordPointer and enabling/disabling the client arrays.

 clutter/cogl/common/cogl-primitives.c |  108 ++++++++++++++++++++++++---------
 1 file changed, 78 insertions(+), 30 deletions(-)

commit 845ff67301da767926f96c56026a8dd9c7964f01
Author: Robert Bragg <robert@linux.intel.com>
Date:   Wed Jun 17 18:46:42 2009 +0100

    [cogl] Improving Cogl journal to minimize driver overheads + GPU state changes
    
    Previously the journal was always flushed at the end of
    _cogl_rectangles_with_multitexture_coords, (i.e.  the end of any
    cogl_rectangle* calls) but now we have broadened the potential for batching
    geometry.  In ideal circumstances we will only flush once per scene.
    
    In summary the journal works like this:
    
    When you use any of the cogl_rectangle* APIs then nothing is emitted to the
    GPU at this point, we just log one or more quads into the journal.  A
    journal entry consists of the quad coordinates, an associated material
    reference, and a modelview matrix.  Ideally the journal only gets flushed
    once at the end of a scene, but in fact there are things to consider that
    may cause unwanted flushing, including:
    
    - modifying materials mid-scene
        This is because each quad in the journal has an associated material
        reference (i.e. not copy), so if you try and modify a material that is
        already referenced in the journal we force a flush first)
    
        NOTE: For now this means you should avoid using cogl_set_source_color()
    	      since that currently uses a single shared material. Later we
    	  should change it to use a pool of materials that is recycled
    	  when the journal is flushed.
    
    - modifying any state that isn't currently logged, such as depth, fog and
      backface culling enables.
    
    The first thing that happens when flushing, is to upload all the vertex data
    associated with the journal into a single VBO.
    
    We then go through a process of splitting up the journal into batches that
    have compatible state so they can be emitted to the GPU together.  This is
    currently broken up into 3 levels so we can stagger the state changes:
    
    1) we break the journal up according to changes in the number of material layers
       associated with logged quads. The number of layers in a material determines
       the stride of the associated vertices, so we have to update our vertex
       array offsets at this level. (i.e. calling gl{Vertex,Color},Pointer etc)
    2) we further split batches up according to material compatability. (e.g.
       materials with different textures) We flush material state at this level.
    3) Finally we split batches up according to modelview changes. At this level
       we update the modelview matrix and actually emit the actual draw command.
    
    This commit is largely about putting the initial design in-place; this will be
    followed by other changes that take advantage of the extended batching.

 clutter/clutter-main.c                      |    3 +
 clutter/cogl/cogl-debug.h                   |   21 +-
 clutter/cogl/cogl-material.h                |   19 +-
 clutter/cogl/cogl.h.in                      |   14 +
 clutter/cogl/common/cogl-clip-stack.c       |    4 +
 clutter/cogl/common/cogl-debug.c            |    3 +-
 clutter/cogl/common/cogl-material-private.h |   99 ++--
 clutter/cogl/common/cogl-material.c         |  318 +++++++++++--
 clutter/cogl/common/cogl-primitives.c       |  667 +++++++++++++++++++--------
 clutter/cogl/common/cogl-primitives.h       |    2 +
 clutter/cogl/common/cogl-vertex-buffer.c    |   28 +-
 clutter/cogl/common/cogl.c                  |   38 +-
 clutter/cogl/gl/cogl-context.c              |    4 +
 clutter/cogl/gl/cogl-context.h              |    4 +
 clutter/cogl/gl/cogl-fbo.c                  |    2 +
 clutter/cogl/gl/cogl-primitives.c           |   44 +-
 clutter/cogl/gl/cogl-program.c              |    5 +
 clutter/cogl/gl/cogl-texture-private.h      |   12 +-
 clutter/cogl/gl/cogl-texture.c              |    3 +-
 clutter/eglnative/clutter-backend-egl.c     |    1 +
 clutter/eglx/clutter-backend-egl.c          |    1 +
 clutter/fruity/clutter-backend-fruity.c     |    1 +
 clutter/glx/clutter-backend-glx.c           |    1 +
 clutter/osx/clutter-stage-osx.c             |    1 +
 clutter/sdl/clutter-backend-sdl.c           |    3 +-
 clutter/win32/clutter-backend-win32.c       |    1 +
 26 files changed, 1003 insertions(+), 296 deletions(-)

commit 04bb7899416063994af8730866f390e68ecc4d65
Author: Øyvind Kolås <pippin@linux.intel.com>
Date:   Tue Jun 30 16:48:53 2009 +0100

    [texture] fix load-async and load-data-async properties.
    
    Removed the G_PARAM_CONSTRUCT from the property registration of
    "load-async" and "load-data-async". It made it impossible to use only
    load-data-async, as the async loading state would be unset when
    load-async got set it's default FALSE value.

 clutter/clutter-texture.c |    4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

commit 722360774ca4628c1589f5d6f09932faa0c8b711
Author: Robert Bragg <robert@linux.intel.com>
Date:   Mon Jun 22 00:58:32 2009 +0100

    [clip-stack] Use signed integers while combining window space clip rectangles
    
    Use signed integers while combining window space clip rectangles, so we avoid
    arithmatic errors later resulting in glScissor getting negative width and
    height arguments.

 clutter/cogl/common/cogl-clip-stack.c |   10 +++++-----
 1 file changed, 5 insertions(+), 5 deletions(-)

commit d63cda3b7620daa4e081e7023ce5d0afb5783b54
Author: Robert Bragg <robert@linux.intel.com>
Date:   Mon Jun 22 00:00:04 2009 +0100

    [cogl] Remove unused ctx->polygon_vertices array
    
    This array used to be used by cogl_polygon but was changed to use
    ctx->logged_vertices some time ago.

 clutter/cogl/gl/cogl-context.c |    4 ----
 clutter/cogl/gl/cogl-context.h |    1 -
 2 files changed, 5 deletions(-)

commit 30f13cafc5fff69c7e31f3ead2df5d6c0282ec07
Author: Robert Bragg <robert@linux.intel.com>
Date:   Tue Jun 23 15:24:42 2009 +0100

    [cogl] Give the default (fallback) texture a format of RGBA_8888_PRE
    
    Previously this was RGBA_8888. It souldn't really make a difference but for
    consistency we expect almost all textures in use to have an internaly
    premultiplied pixel format.

 clutter/cogl/gl/cogl-context.c |    8 ++++----
 1 file changed, 4 insertions(+), 4 deletions(-)

commit 4680b34046aba7adfb958d2995d7e56fdcb3d473
Author: Robert Bragg <robert@linux.intel.com>
Date:   Fri Jun 19 16:39:37 2009 +0100

    [cogl-texture] use the right format when downloading sliced textures from GL
    
    _cogl_texture_download_from_gl needs to create transient CoglBitmaps when
    downloading sliced textures from GL, and then copies these as subregions
    into the final target_bitmap. _cogl_texture_download_from_gl also supports
    target_bitmaps with a different format to the source CoglTexture being
    downloaded.
    
    The problem was that in the case of slice textures we were always looking
    at the format of the CoglTexture, not of the target_bitmap when setting
    up the transient slice bitmap.

 clutter/cogl/gl/cogl-texture.c |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit 24ca92951f739278697990fb25f351045d6ece9c
Author: Robert Bragg <robert@linux.intel.com>
Date:   Wed Jun 17 14:30:44 2009 +0100

    [cogl] Adds cogl_read_pixels to replace direct use of glReadPixels
    
    To allow for flushing of batched geometry within Cogl we can't support users
    directly calling glReadPixels.  glReadPixels is also awkward, not least
    because it returns upside down image data.
    
    All the unit tests have been swithed over and clutter_stage_read_pixels now
    sits on top of this too.

 clutter/clutter-stage.c                       |   44 +++----------------
 clutter/cogl/cogl.h.in                        |   33 +++++++++++++++
 clutter/cogl/common/cogl.c                    |   56 +++++++++++++++++++++++++
 doc/reference/cogl/cogl-sections.txt          |    4 ++
 tests/conform/test-blend-strings.c            |   16 ++++---
 tests/conform/test-premult.c                  |   14 ++++---
 tests/conform/test-vertex-buffer-contiguous.c |   28 +++++++++----
 tests/conform/test-vertex-buffer-interleved.c |    9 ++--
 tests/conform/test-vertex-buffer-mutability.c |   13 ++++--
 9 files changed, 151 insertions(+), 66 deletions(-)

commit 27fff12a6a880241002cec3705da7af9905a20bf
Author: Robert Bragg <robert@linux.intel.com>
Date:   Wed Jun 17 02:08:31 2009 +0100

    [cogl matrix] Adds ability to dirty state cached by the client matrix apis
    
    To be able to load matrices to GL manually within Cogl we need a way to
    dirty the state cached by the client matrix stack API.

 clutter/cogl/common/cogl-current-matrix.c |   15 +++++++++++++++
 clutter/cogl/common/cogl-current-matrix.h |    1 +
 clutter/cogl/common/cogl-matrix-stack.c   |    7 +++++++
 clutter/cogl/common/cogl-matrix-stack.h   |    1 +
 4 files changed, 24 insertions(+)

commit 26d5afd203ba393255fdc98cd980f65d014967c3
Author: Robert Bragg <robert@linux.intel.com>
Date:   Thu Jun 11 00:34:00 2009 +0100

    [debug] Adds a "nop-picking" clutter debug option to NOP _clutter_do_pick()
    
    I've found this is something I do quite often when debugging rendering
    problems since its a simple way to wipe out lots of geometry and removes a
    lot of unpredictable noise when logging geometry passing through the Cogl
    journal.

 clutter/clutter-debug.h |    3 ++-
 clutter/clutter-main.c  |    6 +++++-
 2 files changed, 7 insertions(+), 2 deletions(-)

commit 56bc54d2426e7ea4a092d4cae1792a124ce55600
Author: Robert Bragg <robert@linux.intel.com>
Date:   Tue Jun 16 22:48:21 2009 +0100

    [cogl_polygon] fixes a buffer overrun and color format bug
    
    We were calculating our vertex stride and allocating our vertex array
    differently depending on whether the user passed TRUE for use_color or not.
    The problem was that we were always writting color data to the array
    regardless of use_color.
    
    There was also a bug with _cogl_texture_sliced_polygon in that it was
    writing byte color components but we were expecting float components.  We
    now use byte components in _cogl_multitexture_unsliced_polygon too and pass
    GL_UNSIGNED_BYTE to glColorPointer.

 clutter/cogl/common/cogl-primitives.c |   40 +++++++++++++++++++--------------
 1 file changed, 23 insertions(+), 17 deletions(-)

commit 060f1488e043c31b5c6841a719a5bc0cb7e8c30b
Author: Robert Bragg <robert@linux.intel.com>
Date:   Tue Jun 16 00:45:44 2009 +0100

    [test-cogl-tex-getset] Assume a premultiplied pixel format
    
    test-cogl-tex-getset was assuming it was dealing with
    COGL_PIXEL_FORMAT_RGBA_8888 but since merging the premultiplcation branch
    the pixel format is actually COGL_PIXEL_FORMAT_RGBA_8888_PRE

 tests/interactive/test-cogl-tex-getset.c |    6 +++---
 1 file changed, 3 insertions(+), 3 deletions(-)

commit 8f734ccbb48effa1b9f3057e26ac5eb40ef54930
Author: Robert Bragg <robert@linux.intel.com>
Date:   Wed Jun 17 15:03:33 2009 +0100

    [vertex-buffer] Add cogl_vertex_buffer_indices_get_type API
    
    cogl_vertex_buffer_indices lets you query back the data type used for the
    given indices handle.

 clutter/cogl/cogl-vertex-buffer.h        |   11 +++++++++++
 clutter/cogl/common/cogl-vertex-buffer.c |   21 +++++++++++++++++++++
 2 files changed, 32 insertions(+)

commit 555159776b9146d86b0be8b224c4712cf67dcaa7
Author: Robert Bragg <robert@linux.intel.com>
Date:   Wed Jun 17 15:02:56 2009 +0100

    [vertex-buffer] Remove the COGL_INDICES_TYPE_UNSIGNED_INT indicies type
    
    Since some embedded GPUs may not support 32bit integer indices we wont
    include it until there is a particular need.

 clutter/cogl/cogl-vertex-buffer.h |    2 --
 1 file changed, 2 deletions(-)

commit a66f027c61c9dfd545c3ba4d9d104679bef2ec43
Author: Damien Lespiau <damien.lespiau@intel.com>
Date:   Thu Jun 25 16:06:41 2009 +0200

    [cogl] Add COGL_HAS_GL and COGL_HAS_GLES
    
    Cogl already add similar defines but with the CLUTTER namespace
    (CLUTTER_COGL_HAS_GL and CLUTTER_COGL_HAS_GLES). Let's just add two
    similar defines with the COGL namespace. Removing the CLUTTER_COGL ones
    could break applications silently for no real good reason.

 clutter/cogl/gl/cogl-defines.h.in   |    1 +
 clutter/cogl/gles/cogl-defines.h.in |    1 +
 2 files changed, 2 insertions(+)

commit 30b5dac7c319ecedee7492b126bcb6e0c4b5928c
Author: Damien Lespiau <damien.lespiau@intel.com>
Date:   Thu Jun 25 15:59:11 2009 +0200

    [misc] Update headers #endif comments
    
    While grepping through the public headers looking for invalid use of
    private HAVE_* defines, I stumbled upon two out of sync comments. Yes
    it's a very minor trivial change.

 clutter/clutter-actor.h |    2 +-
 clutter/clutter-color.h |    2 +-
 2 files changed, 2 insertions(+), 2 deletions(-)

commit 81bc2b4cc7c755b825f55424be261a5120f4fc0c
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Mon Jun 29 16:34:49 2009 +0100

    [actor] Remove unused clutter_actor_pick()
    
    The clutter_actor_pick() function just emits the ::pick signal
    on the actor. Nobody should be using it, since the paint() method
    is already context sensitive and will result in a ::pick emission
    by itself. The clutter_actor_pick() is just confusing things.

 clutter/clutter-actor.c                    |   29 ----------------------------
 clutter/clutter-actor.h                    |    2 --
 clutter/clutter-deprecated.h               |    2 ++
 doc/reference/clutter/clutter-sections.txt |    1 -
 4 files changed, 2 insertions(+), 32 deletions(-)

commit bd668cf156bf54d2ad1cee8ea7cd0c13b02ea95f
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Mon Jun 29 16:33:07 2009 +0100

    Add more debug notes inside the master clock

 clutter/clutter-master-clock.c |   20 +++++++++++++++-----
 1 file changed, 15 insertions(+), 5 deletions(-)

commit 9e84e5203421c8a358fbcfe6f1eb6c70f95fd160
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Tue Jun 23 15:45:42 2009 +0100

    [docs] Update after the Input API changes

 doc/reference/clutter/clutter-sections.txt |    3 +--
 1 file changed, 1 insertion(+), 2 deletions(-)

commit 537ccc3cd94cb43740c622d5e65d62cbae062579
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Tue Jun 23 15:25:16 2009 +0100

    [docs] Add an initial porting guide
    
    The Clutter API reference should have a section on how to port
    applications from older version of Clutter to the new API.
    
    The first guide deals on how to port animations created with
    ClutterEffect to clutter_actor_animate().

 doc/reference/clutter/Makefile.am                 |    6 +-
 doc/reference/clutter/clutter-docs.xml.in         |   16 ++-
 doc/reference/clutter/migrating-ClutterEffect.xml |  137 +++++++++++++++++++++
 3 files changed, 154 insertions(+), 5 deletions(-)

commit de745e93c99951baae16151c373ebc06a2571b59
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Tue Jun 23 15:23:53 2009 +0100

    [docs] Fix the ActorBox annotations
    
    The ClutterActorBox API is incorrectly annotated and gtk-doc is unable
    to pick it up.

 clutter/clutter-actor.c |   10 +++++-----
 1 file changed, 5 insertions(+), 5 deletions(-)

commit 20f3c173fe10bee6d04814d08bfe21e23c294cf8
Author: Neil Roberts <neil@linux.intel.com>
Date:   Wed Jun 24 12:04:55 2009 +0100

    [test-shader] Fix some of the shaders to use premultiplied colors
    
    Texture data is now in premultiplied format and the shader should
    output a premultiplied color if the default blend mode is being
    used. Shaders that directly manipulate the rgb values now
    unpremultiply and premultiply again afterwards.

 tests/interactive/test-shader.c |    6 ++++++
 1 file changed, 6 insertions(+)

commit e9d277609d81bd5198638b9565e1668ff8391235
Author: Tim Horton <hortont@svn.gnome.org>
Date:   Thu Jun 18 22:46:48 2009 -0400

    Add element-type annotations for animate*v functions
    
    Fixes bug:
    
      http://bugzilla.openedhand.com/show_bug.cgi?id=1653
    
    Signed-off-by: Emmanuele Bassi <ebassi@linux.intel.com>

 clutter/clutter-animation.c |   12 ++++++------
 1 file changed, 6 insertions(+), 6 deletions(-)

commit c272a7b2a2a9817b3b4f67fafcefeb2b241b7eb0
Author: Ole André Vadla Ravnås <ole.andre.ravnas@tandberg.com>
Date:   Thu Jun 18 23:53:46 2009 +0200

    [master clock] Fix MT safety issues
    
    Fix MT issues when enabling threading in Clutter.
    
    Fixes bug:
    
      http://bugzilla.openedhand.com/show_bug.cgi?id=1655
    
    Signed-off-by: Emmanuele Bassi <ebassi@linux.intel.com>

 clutter/clutter-master-clock.c |    8 ++++++++
 1 file changed, 8 insertions(+)

commit ba6c0c27f9b796bbf6f81de1deab10877a287f37
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Mon Jun 22 12:07:08 2009 +0100

    [texture] Revert to integer parameters in ::size-change
    
    In the int-to-float switch for actor properties, the ::size-change signal
    was moved to use floats instead of integers. Sub-pixel precision for image
    size is meaningless, though, so we should revert it back to ints.
    
    Fixes bug:
    
      http://bugzilla.openedhand.com/show_bug.cgi?id=1659

 clutter/clutter-texture.c |   96 +++++++++++++++++++++++++--------------------
 1 file changed, 53 insertions(+), 43 deletions(-)

commit 8a1cf0cff4320b61cbede38b39e5b7ece6d24b08
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Fri Jun 19 18:25:25 2009 +0100

    Post-release bump to 0.9.5

 configure.ac |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit fdaaa8b6d701d2b43fd2750de1b018b5af5577ea
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Fri Jun 19 17:50:31 2009 +0100

    [release] 0.9.4

 configure.ac |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit b833ed3c0d678e0fa65da8c602d946446d225f5d
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Tue Jun 16 16:42:41 2009 +0100

    Update the NEWS file

 NEWS |   78 ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 1 file changed, 78 insertions(+)

commit 3d49edad85dd4756b4845b619abdfa76ecd4e469
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Fri Jun 19 18:06:02 2009 +0100

    [docs] Add new input-related accessors
    
    Add the ClutterEvent accessors for the device pointer and type, and
    the ClutterInputDevice accessors for the id and type.

 doc/reference/clutter/clutter-sections.txt |    4 ++++
 1 file changed, 4 insertions(+)

commit a79d6228aa75e5d27f4229c32950494629c81126
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Fri Jun 19 16:38:35 2009 +0100

    Remove the last few fixed-point entry points
    
    The last fixed-point entry points are just a few, and trivial. The
    end user is expected to do the conversion using the CoglFixed type
    and macros.

 clutter/clutter-behaviour-ellipse.c        |  275 ++--------------------------
 clutter/clutter-behaviour-ellipse.h        |  136 +++++---------
 clutter/clutter-behaviour-rotate.c         |   96 ----------
 clutter/clutter-behaviour-rotate.h         |   11 --
 clutter/clutter-behaviour-scale.c          |  104 -----------
 clutter/clutter-behaviour-scale.h          |   47 ++---
 clutter/clutter-deprecated.h               |   20 ++
 clutter/clutter-timeline.c                 |   16 --
 clutter/clutter-timeline.h                 |    1 -
 doc/reference/clutter/clutter-sections.txt |   16 --
 10 files changed, 94 insertions(+), 628 deletions(-)

commit cb4e5c90835e218247d3787c9df310b1fbdc7726
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Fri Jun 19 15:12:32 2009 +0100

    [x11] Simplify the XInput support
    
    Instead of using a specific function to check whether the X
    server supports the XInput extension we can use the generic
    Xlib function XQueryExtension(). This cuts down the extra
    checks inside the configure.ac and simplifies the code inside
    clutter_x11_register_xinput().

 clutter/x11/clutter-backend-x11.c |   54 +++++++++++++++++--------------------
 configure.ac                      |   41 ----------------------------
 2 files changed, 25 insertions(+), 70 deletions(-)

commit 21608fe5f7c7a7750b09a1cbd10d68027a425085
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Fri Jun 19 14:32:37 2009 +0100

    [x11] Add a command line switch for enabling XInput
    
    Currently, XInput support requires a function call. In order to
    make it easier for people to test it, we can also add a command
    line switch that moves the pointer device detection and handling
    to XInput. This should ensure that, at least for people building
    Clutter with --enable-xinput, applications can be easily migrated
    and regressions can be caught.

 clutter/x11/clutter-backend-x11.c |   18 +++++++++++++-----
 1 file changed, 13 insertions(+), 5 deletions(-)

commit 0ec541282acf7b9ea08217b154524013c93b7d95
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Fri Jun 19 14:20:50 2009 +0100

    [tests] Remove unneeded g_type_init()
    
    Now that we can safely check for an uninitialized Clutter we
    don't have side effects in calling one of the functions like
    clutter_x11_enable_xinput(), which require to be called before
    any other Clutter function.

 tests/interactive/test-devices.c |    4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

commit a6b469736770d2c2ea25b582196bd221ce85721e
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Fri Jun 19 14:19:39 2009 +0100

    [backend] Do not store the stage manager singleton
    
    The StageManager singleton instance is already kept around
    by the clutter_stage_manager_get_default() function; there is
    no need to have it inside the main Clutter context as well.

 clutter/clutter-backend.c         |    9 +++------
 clutter/clutter-private.h         |    1 -
 clutter/x11/clutter-backend-x11.c |    5 +----
 3 files changed, 4 insertions(+), 11 deletions(-)

commit b6e404a40605bc94ad429e5d64325286a381275e
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Fri Jun 19 14:12:36 2009 +0100

    [x11] Use _clutter_context_is_initialized()
    
    Instead of using _clutter_context_get_default() and checking the
    is_initialized flag, we should use the newly added private function
    that does not cause side effects, especially for functions that have
    to be called before any other Clutter function.

 clutter/x11/clutter-backend-x11.c |   22 ++++++++--------------
 1 file changed, 8 insertions(+), 14 deletions(-)

commit b5f4befeaa2d1944c7623a31f8a8ccaae200b640
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Fri Jun 19 14:09:42 2009 +0100

    Allow checking initialization without side-effects
    
    The _clutter_context_get_default() function will automatically
    create the main Clutter context; if we just want to check whether
    Clutter has been initialized this will complicate matters, by
    requiring a call to g_type_init() inside the client code.
    
    Instead, we should simply provide an internal API that checks
    whether the main Clutter context exists and if it has been
    initialized, without any side effect.

 clutter/clutter-main.c    |   13 +++++++++++--
 clutter/clutter-private.h |    1 +
 2 files changed, 12 insertions(+), 2 deletions(-)

commit 184df2a5fa34375cff8cde5318ba46bdbd7c3026
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Fri Jun 19 13:07:20 2009 +0100

    [input] Rework input device API
    
    The input device API is split halfway thorugh the backends in a very
    weird way. The data structures are private, as they should, but most
    of the information should be available in the main API since it's
    generic enough.
    
    The device type enumeration, for instance, should be common across
    every backend; the accessors for device type and id should live in the
    core API. The internal API should always use ClutterInputDevice and
    not the private X11 implementation when dealing with public structures
    like ClutterEvent.
    
    By adding accessors for the device type and id, and by moving the
    device type enumeration into the core API we can cut down the amount
    of symbols private and/or visible only to the X11 backends; this way
    when other backends start implementing multi-pointer support we can
    share the same API across the code.

 clutter/clutter-event.c           |  147 +++++++++++++++++++++-
 clutter/clutter-event.h           |   95 +++++++++-----
 clutter/clutter-main.c            |   35 ------
 clutter/clutter-private.h         |    3 +
 clutter/x11/clutter-backend-x11.c |  252 ++++++++++++++++++-------------------
 clutter/x11/clutter-backend-x11.h |    2 +-
 clutter/x11/clutter-event-x11.c   |   39 +++---
 clutter/x11/clutter-x11.h         |   10 +-
 tests/interactive/test-devices.c  |   60 +++++----
 9 files changed, 392 insertions(+), 251 deletions(-)

commit 3653a9a64d1666f05a256d96ef5741144459b686
Author: Damien Lespiau <damien.lespiau@intel.com>
Date:   Mon Jun 15 14:15:27 2009 +0100

    Public headers should not have #ifdefs relying on private defines
    
    HAVE_COGL_GLES2 is defined in config.h through the configure script and
    should not be used in public headers.
    
    The patch makes configure generate the right define that can be used
    later in the header.

 clutter/cogl/gles/cogl-defines.h.in |    6 ++++--
 configure.ac                        |    3 +++
 2 files changed, 7 insertions(+), 2 deletions(-)

commit c6fba47a5229b7d52f2ff7e78c6cff52ce2069c2
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Wed Jun 17 17:59:54 2009 +0100

    Hide clutter_context_get_default()
    
    The clutter_context_get_default() function is private, but shared
    across Clutter. For this reason, it should be prefixed by '_' so
    that the symbol is hidden from the shared object.

 clutter/clutter-actor.c                 |   13 +++----
 clutter/clutter-backend.c               |    8 ++--
 clutter/clutter-event.c                 |   10 ++---
 clutter/clutter-feature.c               |    4 +-
 clutter/clutter-main.c                  |   61 ++++++++++++++++---------------
 clutter/clutter-private.h               |    4 +-
 clutter/clutter-stage.c                 |    5 ++-
 clutter/clutter-texture.c               |    2 +-
 clutter/eglnative/clutter-event-egl.c   |    2 +-
 clutter/fruity/clutter-backend-fruity.c |    8 ++--
 clutter/fruity/clutter-fruity.c         |    2 +-
 clutter/sdl/clutter-event-sdl.c         |    2 +-
 clutter/win32/clutter-backend-win32.c   |    4 +-
 clutter/win32/clutter-event-win32.c     |    6 +--
 clutter/win32/clutter-stage-win32.c     |   10 +++--
 clutter/x11/clutter-backend-x11.c       |   16 ++++----
 clutter/x11/clutter-event-x11.c         |    4 +-
 clutter/x11/clutter-stage-x11.c         |   14 +++----
 18 files changed, 87 insertions(+), 88 deletions(-)

commit 8c676ebd872b65e84896f5390b7642416fcb1040
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Wed Jun 17 15:43:53 2009 +0100

    Remove an unusued member from MainContext
    
    The MainContext structure has a field for the master clock, but
    clutter_master_clock_get_default() will return the same instance
    from everywhere.

 clutter/clutter-main.c    |    2 --
 clutter/clutter-private.h |    1 -
 2 files changed, 3 deletions(-)

commit 1aa8c89f2c18e01e9f36338c0609f58caaa90c3a
Author: Matthew Allum <mallum@openedhand.com>
Date:   Wed Jun 17 15:09:16 2009 +0100

    [XInput] Get XInput working again.
    
    Check for distros shipping out of sync header vs libXi,
    call in g_type_init() in test-devices, fix ifdef so
    XInput events get correctly selected.

 clutter/glx/clutter-stage-glx.c  |    2 +-
 configure.ac                     |   13 ++++++++++---
 tests/interactive/test-devices.c |    2 ++
 3 files changed, 13 insertions(+), 4 deletions(-)

commit 3035092edba837593ff753817b3d8807a83555aa
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Tue Jun 16 18:08:52 2009 +0100

    Do not use the --pkd switch for g-ir-scanner
    
    Revert commit 8aacff0e0f38d2cdfae841f6a154baa793ea7739

 clutter/Makefile.am |    1 -
 1 file changed, 1 deletion(-)

commit c4716d78d0ee874115e970666ba7739f1829b90e
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Tue Jun 16 16:42:07 2009 +0100

    [docs] Update the backends hacking reference

 HACKING.backends |    2 --
 1 file changed, 2 deletions(-)

commit 29ab2691166a2417733fef527845e9877e627186
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Tue Jun 16 16:41:46 2009 +0100

    [docs] Update the release notes

 README |   40 ++++++++++++++++++++++++++++++++++++----
 1 file changed, 36 insertions(+), 4 deletions(-)

commit 5e098c388668fe3ee3f08b28e73a9a4120216993
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Tue Jun 16 16:41:29 2009 +0100

    [docs] Update the HACKING file

 HACKING |   52 +++++++---------------------------------------------
 1 file changed, 7 insertions(+), 45 deletions(-)

commit 8aacff0e0f38d2cdfae841f6a154baa793ea7739
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Tue Jun 16 16:40:36 2009 +0100

    [introspection] Add --pkg switch pointing at Clutter
    
    Add a <package/> element pointing to Clutter's pkg-config
    file name.

 clutter/Makefile.am |    1 +
 1 file changed, 1 insertion(+)

commit 9f83e7dc2ee855dbbb8cb7de8b7a42d43dd485b0
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Tue Jun 16 16:38:01 2009 +0100

    [stage] Remove an assertion
    
    We might get a size request on destruction, so it should be safe
    to avoid an assertion failure because we don't have the stage
    implementation anymore.

 clutter/clutter-stage.c |    9 ++++++---
 1 file changed, 6 insertions(+), 3 deletions(-)

commit 4bed539b215d2504977aa6cee739854b7ca612d8
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Tue Jun 16 16:30:41 2009 +0100

    Add more ActorBox utility methods
    
    ActorBox should have methods for easily extracting the X and Y
    coordinates of the origin, and the width and height separately.
    
    These methods will make it easier for high-level language bindings
    to manipulate ActorBox instances and avoid the Geometry type.

 clutter/clutter-actor.c                    |   72 ++++++++++++++++++++++++++++
 clutter/clutter-types.h                    |    4 ++
 doc/reference/clutter/clutter-sections.txt |    4 ++
 3 files changed, 80 insertions(+)

commit 9ed2a47db1818322c8ef8a93aa8654c1ab1e7ef6
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Tue Jun 16 13:48:11 2009 +0100

    [doap] Add branches for past releases

 clutter.doap |    8 ++++----
 1 file changed, 4 insertions(+), 4 deletions(-)

commit 275f292ab9ac2961695d0596d9fe5b172f7470c7
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Tue Jun 16 12:47:19 2009 +0100

    Add accessors for the boxed types
    
    The Vertex and ActorBox boxed types are meant to be used across
    the API, but are fairly difficult to bind. Their memory management
    is also unclear, and has to go through the indirection of
    g_boxed_copy() and g_boxed_free().

 clutter/clutter-actor.c                    |  391 +++++++++++++++++++++++-----
 clutter/clutter-actor.h                    |   47 +---
 clutter/clutter-deprecated.h               |    2 +
 clutter/clutter-types.h                    |   90 +++++--
 doc/reference/clutter/clutter-sections.txt |   24 +-
 5 files changed, 417 insertions(+), 137 deletions(-)

commit 63c84c46f8c4e2c1e0c6654d016912dc3bbaefc5
Author: Colin Walters <walters@verbum.org>
Date:   Tue Jun 16 10:34:13 2009 -0400

    Plug minor memory leak in cogl_vertex_buffer_submit_real
    
    Free a temporary list.

 clutter/cogl/common/cogl-vertex-buffer.c |    1 +
 1 file changed, 1 insertion(+)

commit f8e956548235116de18558c86470b16555149122
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Mon Jun 15 15:08:59 2009 +0100

    [tests] Beautify the bouncing actor
    
    The test-easing interactive demo for the high-level animation API
    is a bit "flat". Instead of using a Rectangle actor we should
    probably be using something more "interesting" -- like a CairoTexture
    with a gradient.

 tests/interactive/test-easing.c |   72 ++++++++++++++++++++++++++++++---------
 1 file changed, 56 insertions(+), 16 deletions(-)

commit f95f4ba3cb02b0f4d0aefcd19d18a1af0ba81707
Author: Neil Roberts <neil@linux.intel.com>
Date:   Mon Jun 15 12:41:13 2009 +0100

    [ClutterCairoTexture] Use the right component ordering when uploading data
    
    Cairo stores the image data in ARGB native byte order so we need to
    upload this as BGRA on little endian architectures and ARGB on big
    endian. ClutterTexture doesn't currently expose any flags to describe
    ARGB format so until we can fix the Clutter API it now uses the Cogl
    API directly.

 clutter/clutter-cairo-texture.c |   46 +++++++++++++++++++++++++--------------
 1 file changed, 30 insertions(+), 16 deletions(-)

commit c6b4ea8b442af4e6bfa0e5961685b58c23595e32
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Mon Jun 15 11:50:23 2009 +0100

    [cairo-texture] Clean up and whitespace fixes
    
    Simple clean up of the CairoTexture to remove unneeded checks,
    redundant variables and white space.

 clutter/clutter-cairo-texture.c |   34 ++++++++++++++++------------------
 1 file changed, 16 insertions(+), 18 deletions(-)

commit 9799750c0338218a542334c9f4dbf2177beafa4f
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Mon Jun 15 10:53:43 2009 +0100

    [animation] Rework animation chaining
    
    In order to chain up animations using clutter_actor_animate() and
    friends you have to use an idle handler that guarantees that the
    main loop spins at least once after the animation pointer has been
    detached from the actor.
    
    This has several drawbacks, first and foremost the fact that the
    slice of the main loop for the idle handler might be starved by
    other operations, like redrawing. This inevitably leads to tricks
    with priorities and the like, contributing to the overall complexity.
    
    Instead, we should guarantee that the animation instance created by
    clutter_actor_animate() is valid for the ::completed signal until
    it reaches its default handler; after that, the animation is detached
    from the actor and destroyed. This means that it's possible to
    create a new animation after the first is complete by simply using
    g_signal_connect_after().
    
    This unfortunately makes it impossible to keep a reference to the
    animation pointer attached to the actor by using g_object_ref(); a
    way to "fix" this would be to have a clutter_animation_attach()
    and a clutter_animation_detach() pair of methods that allow attaching
    any animation to an actor. This might overcomplicate what it is
    the simple animation API, though, so it's currently not implemented
    and left for future versions.
    
    The test-easing interactive demo has been modified to show how
    the animation queuing works by adding a command line switch that
    recenters the animated actor once the first animation has ended.

 clutter/clutter-animation.c     |  252 ++++++++++++---------------------------
 tests/interactive/test-easing.c |   53 +++++++-
 2 files changed, 126 insertions(+), 179 deletions(-)

commit 612d1cded77c07b6a4884e5ec3c0bf5b8929bff9
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Mon Jun 15 11:24:54 2009 +0100

    [animation] Allow swapped/after signal variants
    
    Continuing in the tradition on making clutter_actor_animate() the
    next g_object_connect(), here's the addition of the signal-after::
    and signal-swapped:: modifiers for the automagic signal connection
    arguments.
    
    Fixes bug:
    
      http://bugzilla.openedhand.com/show_bug.cgi?id=1646

 clutter/clutter-animation.c |   47 ++++++++++++++++++++++++++++++++++++++++---
 1 file changed, 44 insertions(+), 3 deletions(-)

commit 0415d62d40b728e328042eb6c1c3f60c92dd2909
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Mon Jun 15 10:48:56 2009 +0100

    Disable single header inclusion for GLib
    
    In order to be ready for the next major version of GLib we need to
    disable single header inclusion by using the G_DISABLE_SINGLE_INCLUDES
    define in the build process.

 clutter/Makefile.am                    |    1 +
 clutter/cogl/common/Makefile.am        |    1 +
 clutter/cogl/gl/Makefile.am            |    1 +
 clutter/cogl/gles/Makefile.am          |    1 +
 clutter/json/Makefile.am               |    1 +
 clutter/pango/Makefile.am              |    1 +
 tests/conform/Makefile.am              |    1 +
 tests/conform/test-clutter-rectangle.c |    2 +-
 tests/interactive/Makefile.am          |    9 +++++++--
 tests/micro-bench/Makefile.am          |    1 +
 10 files changed, 16 insertions(+), 3 deletions(-)

commit e6a987d670cce4e6ce99529f1ef0b227dd237edd
Author: Owen W. Taylor <otaylor@fishsoup.net>
Date:   Thu Jun 11 18:56:27 2009 -0400

    Fix redraw queueing in the presence of cloning
    
    We can't short-circuit the emission of ::queue-redraw for not-visible
    actors, since ClutterClone uses that signal to know when things need
    to be redrawn.
    
    Calling clutter_actor_queue_redraw() out of clutter_actor_real_map() /
    clutter_actor_real_unmap() was causing the flag state to get set
    incorrectly from _clutter_actor_set_enable_paint_unmapped(), because
    a paint queueing a redraw was not expected.
    
    Moving queuing the redraw to clutter_actor_hide()/show() fixes this, and
    also fixes a problem where showing a child of a cloned actor wouldn't
    cause the clone to be repainted.
    
    http://bugzilla.openedhand.com/show_bug.cgi?id=1484
    
    Signed-off-by: Emmanuele Bassi <ebassi@linux.intel.com>

 clutter/clutter-actor.c |   25 +++++++++++++------------
 1 file changed, 13 insertions(+), 12 deletions(-)

commit abac520f0c081c3c4c986d50ff42a297dd6e8ccd
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Fri Jun 12 03:46:38 2009 +0100

    [tests] Add unit for Clone behaviour
    
    A clone actor should not modify the state of its source, so we need
    to check that it's not breaking any invariant.

 .gitignore                            |    2 ++
 tests/conform/test-actor-invariants.c |   34 +++++++++++++++++++++++++++++++++
 tests/conform/test-conform-main.c     |    1 +
 3 files changed, 37 insertions(+)

commit 795e005566f2055999e226da8a34f50890c71c25
Author: Owen W. Taylor <otaylor@fishsoup.net>
Date:   Thu Jun 11 18:46:44 2009 -0400

    Fix handling of not-visible texture pixmaps
    
    If we have an not-visible texture pixmap, we need to:
    
     - Still update it if it is realized, since it won't be
       updated when shown. And it might be also be cloned.
    
     - Queue a redraw if even if not visible, since it
       it might be cloned.
    
    http://bugzilla.openedhand.com/show_bug.cgi?id=1647
    
    Signed-off-by: Emmanuele Bassi <ebassi@linux.intel.com>

 clutter/glx/clutter-glx-texture-pixmap.c |    2 --
 clutter/x11/clutter-x11-texture-pixmap.c |    3 ---
 2 files changed, 5 deletions(-)

commit b9a53d379d3aaca4b09a90cd44d5a9d9736a2435
Author: Damien Lespiau <damien.lespiau@intel.com>
Date:   Sun Jun 14 01:16:30 2009 +0100

    [gitignore] ignore TAGS and new test
    
    * ignore files generated by make tags
    * ignore the newly introduced premult test

 .gitignore |    2 ++
 1 file changed, 2 insertions(+)

commit 0dfc1dd284ea698ed6d3d814d12a5e5b7bff7095
Author: Neil Roberts <neil@linux.intel.com>
Date:   Fri Jun 12 11:05:26 2009 +0100

    [test-cogl-tex-tile] Fix breakages from ClutterFixed removal and timelines
    
    The test has been broken since the change to use floats instead of
    fixed point because it was passing degrees to sin and cos but they
    expect radians.
    
    It was further broken since the timeline changes because it was
    directly using the parameter of the new-frame signal as a frame number
    but it now represents the elapsed time.

 tests/interactive/test-cogl-tex-tile.c |   31 ++++++++++++++-----------------
 1 file changed, 14 insertions(+), 17 deletions(-)

commit 9d829957737fc016033e80c33593d2cc8daa0f4c
Author: Robert Bragg <robert@linux.intel.com>
Date:   Mon Jun 8 17:43:34 2009 +0100

    [_cogl_texture_bitmap_prepare] use bitmap format for FORMAT_ANY + no alpha
    
    My patch to choose a premultiplied format when the user gives
    COGL_PIXEL_FORMAT_ANY for the internal_format broke the case where the data
    in question doesn't have and alpha channel.
    
    This was accidentally missed when merging the premultiplication branch
    since I merged a local version of the branch that missed this commit.

 clutter/cogl/gl/cogl-texture.c   |    2 ++
 clutter/cogl/gles/cogl-texture.c |    2 ++
 2 files changed, 4 insertions(+)

commit 6414adbfeb696282c5e5ca0eb47a77caf3309d92
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu Jun 11 16:59:50 2009 +0100

    [tests] Fix the cogl_polygon() interactive test
    
    We need to premultiply the alpha, and we also need to change the
    frame painting to use the frame-less Timeline.

 tests/interactive/test-cogl-tex-polygon.c |    6 ++++--
 1 file changed, 4 insertions(+), 2 deletions(-)

commit a8fc4e1694a5faef75d3b962640c87b057bef322
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu Jun 11 16:53:52 2009 +0100

    [tests] Fix the VBO interactive test
    
    We need to fix the VBO premultiplication; we also do not need to
    forcibly queue a redraw in an idle handler: the timeline and the
    master clock will do that for us.

 tests/interactive/test-cogl-vertex-buffer.c |   26 ++++++++------------------
 1 file changed, 8 insertions(+), 18 deletions(-)

commit 19f112f9bca3077cc946acb828bd681b3ddf1b7c
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu Jun 11 16:23:26 2009 +0100

    [tests] Update test-actors (and clones)
    
    The test-actors test (and its clones, test-actor-clone and
    test-paint-wrapper) was written a long time ago for a different API
    and has been tweaked to bits. We should probably have something a
    little bit more complicated, but at least we should not use semantics
    and coding patterns from Clutter 0.2, otherwise we won't be testing
    anything except that Clutter 0.2 worked.

 tests/interactive/test-actor-clone.c   |   63 ++++----
 tests/interactive/test-actors.c        |   56 ++++----
 tests/interactive/test-paint-wrapper.c |  247 +++++++++++++++++---------------
 3 files changed, 181 insertions(+), 185 deletions(-)

commit 71b62e75d24eeee15c6522e6d67f6439fb1315c5
Author: Robert Bragg <robert@linux.intel.com>
Date:   Mon Jun 8 12:18:34 2009 +0100

    [cogl] Don't allow calling cogl_set_source_texture with an INVALID_HANDLE
    
    Although the underlying materials should allow layers with INVALID_HANDLES
    it shouldn't be necissary to expose that via cogl_set_source_texture() and
    it's easier to resolve a warning/crash here than odd artefacts/crashes later
    in the pipeline.

 clutter/cogl/common/cogl-material.c |    2 ++
 1 file changed, 2 insertions(+)

commit 96827db74089054763c596e28aa180bc0fb1b7c5
Merge: eb55397 ec77b91
Author: Robert Bragg <robert@linux.intel.com>
Date:   Thu Jun 11 15:16:27 2009 +0100

    Bug 1406 - Handling of premultiplication in clutter
    
    Merge branch 'premultiplication'
    
    [cogl-texture docs] Improves the documentation of the internal_format args
    [test-premult] Adds a unit test for texture upload premultiplication semantics
    [fog] Document that fogging only works with opaque or unmultipled colors
    [test-blend-strings] Explicitly request RGBA_888 tex format for test textures
    [premultiplication] Be more conservative with what data gets premultiplied
    [bitmap] Fixes _cogl_bitmap_fallback_unpremult
    [cogl-bitmap] Fix minor copy and paste error in _cogl_bitmap_fallback_premult
    Avoid unnecesary unpremultiplication when saving to local data
    Don't unpremultiply Cairo data
    Default to a blend function that expects premultiplied colors
    Implement premultiplication for CoglBitmap
    Use correct texture format for pixmap textures and FBO's
    Add cogl_color_premultiply()

commit ec77b9139820207962ba38b3cd2ecc491144592f
Author: Robert Bragg <robert@linux.intel.com>
Date:   Thu Jun 11 14:31:01 2009 +0100

    [cogl-texture docs] Improves the documentation of the internal_format args
    
    Clarifies that if you give COGL_PIXEL_FORMAT_ANY as the internal format for
    cogl_texture_new_from_file or cogl_texture_new_from_data then Cogl will
    choose a premultiplied internal format.

 clutter/cogl/cogl-texture.h |   16 ++++++++++++++--
 1 file changed, 14 insertions(+), 2 deletions(-)

commit 41579eb3c9d7243d41754e38d30f1d8ad20958fd
Author: Robert Bragg <robert@linux.intel.com>
Date:   Sun Jun 7 16:31:12 2009 +0100

    [test-premult] Adds a unit test for texture upload premultiplication semantics
    
    cogl_texture_new_from_data lets you specify a source format for the users given
    data, and an internal format which the user wants the GPU to see. This unit
    test verifies that the users data is premultiplied, un-premultiplied or
    left alone for a number of (source format, internal format) pairs.
    
    cogl_texture_set_region allows specifying a source format, and the internal
    format is determined from the texture being updated. As above we test
    a number of format pairs and check Cogl is converting data correctly.
    
    The test verifies that if the user allows COGL_FORMAT_ANY for the
    internal_format then by default Cogl will choose a premultipled format for
    RGBA textures.
    
    Note: Currently this only tests cogl_texture_new_from_data and
    cogl_texture_set_region, we should also test cogl_texture_new_from_file,
    cogl_texture_new_from_bitmap and cogl_texture_new_from_foreign.

 tests/conform/Makefile.am         |    1 +
 tests/conform/test-conform-main.c |    1 +
 tests/conform/test-premult.c      |  388 +++++++++++++++++++++++++++++++++++++
 3 files changed, 390 insertions(+)

commit 70636b4815283136ca5d878b6e39e12337c4f9ed
Author: Robert Bragg <robert@linux.intel.com>
Date:   Sun Jun 7 11:54:05 2009 +0100

    [fog] Document that fogging only works with opaque or unmultipled colors
    
    The fixed function fogging provided by OpenGL only works with unmultiplied
    colors (or if the color has an alpha of 1.0) so since we now premultiply
    textures and colors by default a note to this affect has been added to
    clutter_stage_set_fog and cogl_set_fog.
    
    test-depth.c no longer uses clutter_stage_set_fog for this reason.
    
    In the future when we can depend on fragment shaders we should also be
    able to support fogging of premultiplied primitives.

 clutter/clutter-stage.c        |   10 ++++++++++
 clutter/cogl/cogl.h.in         |   23 ++++++++++++++++-------
 tests/interactive/test-depth.c |    3 ---
 3 files changed, 26 insertions(+), 10 deletions(-)

commit 80aceda9bb3fde41827cb35bec98ba523a095b0f
Author: Robert Bragg <robert@linux.intel.com>
Date:   Sat Jun 6 21:55:05 2009 +0100

    [test-blend-strings] Explicitly request RGBA_888 tex format for test textures
    
    This test assumes that the textures will be stored internally with exactly
    the color given so that specific texture combining arithmetic can be
    tested. Using COGL_PIXEL_FORMAT_ANY allows Cogl to internally premultiply
    the textures, so we have to explicitly request an unmultiplied format.

 tests/conform/test-blend-strings.c |    4 +++-
 1 file changed, 3 insertions(+), 1 deletion(-)

commit a9b011f3edc9730f60280e38bf2164f1c2dd95a9
Author: Robert Bragg <robert@linux.intel.com>
Date:   Sat Jun 6 21:45:05 2009 +0100

    [premultiplication] Be more conservative with what data gets premultiplied
    
    We don't want to force texture data to be premultipled if the user
    explicitly specifies a non premultiplied internal_format such as
    COGL_PIXEL_FORMAT_RGBA_8888.  So now Cogl will only automatically
    premultiply data when COGL_PIXEL_FORMAT_ANY is given for the
    internal_format, or a premultiplied internal format such as
    COGL_PIXEL_FORMAT_RGBA_8888_PRE is requested but non-premultiplied source
    data is given.
    
    This approach is consistent with OpenVG image formats which have already
    influenced Cogl's pixel format semantics.

 clutter/cogl/gl/cogl-texture.c   |   24 +++++++++++-------------
 clutter/cogl/gles/cogl-texture.c |   24 +++++++++++-------------
 2 files changed, 22 insertions(+), 26 deletions(-)

commit 9d3aa576045ce0aea51ef767b74596bb4582570f
Author: Robert Bragg <robert@linux.intel.com>
Date:   Sun Jun 7 15:58:56 2009 +0100

    [bitmap] Fixes _cogl_bitmap_fallback_unpremult
    
    The _cogl_unpremult_alpha_{first,last} functions which
    _cogl_bitmap_fallback_unpremult depends on were incorrectly casting each
    of the byte components of a texel to a gulong and performing shifts as
    if it were dealing with the whole texel.
    
    It now just uses array indexing to access the byte components without
    needing to cast or manually shift any bits around.
    
    Even though we used to depend on unpremult whenever we used a
    ClutterCairoTexture, clutter_cairo_texture_context_destroy had it's own
    unpremult code which worked which is why this bug wouldn't have been noticed
    before.

 clutter/cogl/common/cogl-bitmap-fallback.c |   60 ++++++++++++++--------------
 1 file changed, 30 insertions(+), 30 deletions(-)

commit cb959ef457a670a5e827963d4a85f6c732993295
Author: Robert Bragg <robert@linux.intel.com>
Date:   Sun Jun 7 20:29:13 2009 +0100

    [cogl-bitmap] Fix minor copy and paste error in _cogl_bitmap_fallback_premult
    
    The returned bitmap format should include the COGL_PREMULT_BIT flag not
    have it explicitly removed as for _cogl_bitmap_fallback_unpremult.

 clutter/cogl/common/cogl-bitmap-fallback.c |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit 5e18cee77ab0167a000bb3af8a7c047357141177
Author: Owen W. Taylor <otaylor@fishsoup.net>
Date:   Sat May 9 14:39:01 2009 -0400

    Avoid unnecesary unpremultiplication when saving to local data
    
    Now that we typically have premultiplied data stored in Cogl
    textures, when fetching a texture into local data for temporary
    storage, use a premultiplied format to avoid an unpremultiply/
    premultiply roundtrip.
    
    http://bugzilla.openedhand.com/show_bug.cgi?id=1406
    
    Signed-off-by: Robert Bragg <robert@linux.intel.com>

 clutter/clutter-texture.c |    4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

commit 1e5b5d10c5608efa411afcb8e032c5e956325249
Author: Owen W. Taylor <otaylor@fishsoup.net>
Date:   Thu Jun 4 13:45:43 2009 -0400

    Don't unpremultiply Cairo data
    
    Instead of unpremultiplying the Cairo data, pass it directly to Cogl
    in premultiplied form; we now *prefer* premultiplied data.
    
    http://bugzilla.openedhand.com/show_bug.cgi?id=1406
    
    Signed-off-by: Robert Bragg <robert@linux.intel.com>

 clutter/clutter-cairo-texture.c |   58 ++++++---------------------------------
 1 file changed, 9 insertions(+), 49 deletions(-)

commit c3448314d59a855a7dfaa47d68c3fa3531eee4ce
Author: Owen W. Taylor <otaylor@fishsoup.net>
Date:   Sat May 9 14:39:01 2009 -0400

    Default to a blend function that expects premultiplied colors
    
    Many operations, like mixing two textures together or alpha-blending
    onto a destination with alpha, are done most logically if texture data
    is in premultiplied form. We also have many sources of premultiplied
    texture data, like X pixmaps, FBOs, cairo surfaces. Rather than trying
    to work with two different types of texture data, simplify things by
    always premultiplying texture data before uploading to GL.
    
    Because the default blend function is changed to accommodate this,
    uses of pure-color CoglMaterial need to be adapted to add
    premultiplication.
    
    gl/cogl-texture.c gles/cogl-texture.c: Always premultiply
      non-premultiplied texture data before uploading to GL.
    
    cogl-material.c cogl-material.h: Switch the default blend functions
      to ONE, ONE_MINUS_SRC_ALPHA so they work correctly with premultiplied
      data.
    
    cogl.c: Make cogl_set_source_color() premultiply the color.
    
    cogl.h.in color-material.h: Add some documentation about
      premultiplication and its interaction with color values.
    
    cogl-pango-render.c clutter-texture.c tests/interactive/test-cogl-offscreen.c:
      Use premultiplied colors.
    
    http://bugzilla.openedhand.com/show_bug.cgi?id=1406
    
    Signed-off-by: Robert Bragg <robert@linux.intel.com>

 clutter/clutter-texture.c               |    3 ++-
 clutter/cogl/cogl-material.h            |   10 ++++++++++
 clutter/cogl/cogl.h.in                  |    9 +++++++--
 clutter/cogl/common/cogl-material.c     |    2 +-
 clutter/cogl/common/cogl.c              |    7 ++++++-
 clutter/cogl/gl/cogl-texture.c          |   22 ++++++++++++----------
 clutter/cogl/gles/cogl-texture.c        |   23 +++++++++++++----------
 clutter/pango/cogl-pango-display-list.c |    5 ++++-
 clutter/pango/cogl-pango-render.c       |   18 +++++++++++-------
 tests/interactive/test-cogl-offscreen.c |    2 +-
 10 files changed, 67 insertions(+), 34 deletions(-)

commit 888a26199918f84d6f444910f49db8cc321296f3
Author: Owen W. Taylor <otaylor@fishsoup.net>
Date:   Sat May 9 14:39:01 2009 -0400

    Implement premultiplication for CoglBitmap
    
    cogl-bitmap.c cogl-bitmap-pixbuf.c cogl-bitmap-fallback.c cogl-bitmap-private.h:
      Add _cogl_bitmap_can_premult(), _cogl_bitmap_premult() and implement
      a reasonably fast implementation in the "fallback" code.
    
    http://bugzilla.openedhand.com/show_bug.cgi?id=1406
    
    Signed-off-by: Robert Bragg <robert@linux.intel.com>

 clutter/cogl/common/cogl-bitmap-fallback.c |   93 ++++++++++++++++++++++++++++
 clutter/cogl/common/cogl-bitmap-pixbuf.c   |   13 ++++
 clutter/cogl/common/cogl-bitmap-private.h  |   14 +++++
 clutter/cogl/common/cogl-bitmap.c          |   26 ++++++--
 4 files changed, 140 insertions(+), 6 deletions(-)

commit 4dcd5f6134f62bf1d5988cea7479b14c896190fd
Author: Owen W. Taylor <otaylor@fishsoup.net>
Date:   Sat May 9 14:39:01 2009 -0400

    Use correct texture format for pixmap textures and FBO's
    
    RGBA data in X pixmaps and in FBOs is already premultiplied; use
    the right format when creating cogl textures.
    
    http://bugzilla.openedhand.com/show_bug.cgi?id=1406
    
    Signed-off-by: Robert Bragg <robert@linux.intel.com>

 clutter/clutter-texture.c                |    4 ++--
 clutter/glx/clutter-glx-texture-pixmap.c |    6 ++++--
 clutter/x11/clutter-x11-texture-pixmap.c |    6 ++++--
 3 files changed, 10 insertions(+), 6 deletions(-)

commit f90017ab4ef69d1275f726f4a8a272bfae3cb5a7
Author: Owen W. Taylor <otaylor@fishsoup.net>
Date:   Sat May 9 14:39:01 2009 -0400

    Add cogl_color_premultiply()
    
    Add a convenience function to convert an ARGB color from
    non-premultiplied to premultiplied form.
    
    http://bugzilla.openedhand.com/show_bug.cgi?id=1406
    
    Signed-off-by: Robert Bragg <robert@linux.intel.com>

 clutter/cogl/cogl-color.h        |   12 ++++++++++++
 clutter/cogl/common/cogl-color.c |    8 ++++++++
 2 files changed, 20 insertions(+)

commit eb55397423181272914c4bdb861eb55b72808dc6
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu Jun 11 13:24:34 2009 +0100

    [build] Fix distcheck for the json-glib internal copy
    
    Since commit d743aeaa updated the internal copy of JSON-GLib and
    added a new private header file, we need to fix the build to avoid
    a distcheck failure.

 clutter/json/Makefile.am |   12 +++++++-----
 1 file changed, 7 insertions(+), 5 deletions(-)

commit 61c45da90a489a619b6e99b6a93f12c5192d306a
Merge: cd08dc6 e60584e
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu Jun 11 13:01:34 2009 +0100

    Bug 1637 - Master clock improvements
    
    Merge branch 'master-clock-updates'
    
    * master-clock-updates: (22 commits)
      Change the paint forcing on the Text cache text
      [timelines] Improve marker hit check and don't fudge the delta
      Revert "[timeline] Don't clamp the elapsed time when a looping tl reaches the end"
      [tests] Don't add a newline to the end of g_test_message calls
      [test-timeline] Add a marker at the beginning of the timeline
      [timeline] Don't clamp the elapsed time when a looping tl reaches the end
      [master-clock] Throttle if no redraw was performed
      [docs] Update Clutter's API reference
      Force a paint instead of calling clutter_redraw()
      Fix clutter_redraw() to match the redraw cycle
      Run the repaint functions inside the redraw cycle
      Remove useless manual timeline ticking
      Move elapsed-time calculations into ClutterTimeline
      Limit the frame rate when not syncing to VBLANK
      Decrease the main-loop priority of the frame cycle
      Avoid motion-compression in test-picking test
      Compress events as part of the frame cycle
      Remove stage update idle and do updates from the master clock
      Call g_main_context_wakeup() when we start running timelines
      Remove unused msecs_delta member
      ...

commit cd08dc6327d5c1eb5342c49b222ad00feaa9c449
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu Jun 11 12:36:41 2009 +0100

    [tests] Fix a segfault in the binding-pool test
    
    The commit that moved all the properties to floats missed the
    test-binding-pool interactive test.

 tests/interactive/test-binding-pool.c |   24 ++++++++++++------------
 1 file changed, 12 insertions(+), 12 deletions(-)

commit e60584ea6f7db76974b18789c9b90aaeeedf072a
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Wed Jun 10 18:10:32 2009 +0100

    Change the paint forcing on the Text cache text
    
    The changes in the master clock and the repaint cycle have been
    changed, and broke the way the test for the Text actor cache of
    PangoLayouts forces a redraw.
    
    We have to call clutter_actor_paint() on the Stage embedding the
    Text actor we want to test; this is kinda fugly because if the
    Layout has changed it will end up causing a reallocation cycle
    in the middle of the Text actor paint. Since it's a test case,
    and since forcing redraws is a bit of a hack as well, we can
    close both our eyes on that.

 tests/conform/test-text-cache.c |    9 ++++++++-
 1 file changed, 8 insertions(+), 1 deletion(-)

commit f1000db3caa450e4917b48d3c4f69bea5a255197
Author: Neil Roberts <neil@linux.intel.com>
Date:   Thu Jun 11 12:14:53 2009 +0100

    [timelines] Improve marker hit check and don't fudge the delta
    
    Markers added at the start of the timeline need to be special cased
    because we effectively check whether the marker time is greater than
    the old frame time or less than or equal to the new frame time but we
    never actually emit a frame for the start of the timeline.
    
    If the timeline is looping then it adjusts the position to interpolate
    a wrapped around position. However we do not emit a new frame after
    setting this position so we need to check for markers again there.
    
    clutter_timeline_get_delta should return the actual wall clock time
    between emissions of the new-frame signal - even if the elapsed time
    has been fudged at the end of the timeline. To make this work it no
    longer directly manipulates priv->msecs_delta but instead passes a
    delta value to check_markers.

 clutter/clutter-timeline.c |  102 ++++++++++++++++++++++++++++++++++++--------
 1 file changed, 85 insertions(+), 17 deletions(-)

commit bf0c21e0154a9666d5be2be18cf93f3a5119953c
Author: Tommi Komulainen <tko@litl.com>
Date:   Fri Apr 24 16:43:39 2009 +0100

    stage: set key focus actor to NULL before emitting focus-out
    
    Someone might hide the previously focused actor in the focus-out signal
    handler and as key focus still appears to be on that actor we'd get
    re-entrant call and get glib critical from g_object_weak_unref
    
    This changes clutter_stage_get_key_focus() to return stage/NULL during
    focus-out signal emission. It used to be the actor focus-out was being
    emitted on.
    
    Fixes bug:
    
      http://bugzilla.openedhand.com/show_bug.cgi?id=1547
    
    Signed-off-by: Emmanuele Bassi <ebassi@linux.intel.com>

 clutter/clutter-stage.c |   18 +++++++++++++++++-
 1 file changed, 17 insertions(+), 1 deletion(-)

commit 9021aa2909189becd9809d29ebf8c9a3c362ce5f
Author: Neil Roberts <neil@linux.intel.com>
Date:   Thu Jun 11 10:55:52 2009 +0100

    Revert "[timeline] Don't clamp the elapsed time when a looping tl reaches the end"
    
    This reverts commit 9c5663d6717722d6d77162060f284355b5081174.
    
    The patch was causing problems for applications that expect the
    elapsed_time to be at either end of the timeline when the completed
    signal is fired. For example test-behave swaps the direction of the
    timeline in the completed handler but if the time has overflowed the
    end then the timeline would only take a short time to get back the
    beginning. This caused the animation to just vibrate around the
    beginning.

 clutter/clutter-timeline.c                |  142 ++++++++++-------------------
 tests/conform/test-timeline-interpolate.c |    8 +-
 2 files changed, 54 insertions(+), 96 deletions(-)

commit 6bb5b3a13e6dfe1934c9d2476f00ac2be86d33cd
Author: Neil Roberts <neil@linux.intel.com>
Date:   Thu Jun 11 11:38:49 2009 +0100

    [tests] Don't add a newline to the end of g_test_message calls
    
    Two of the timeline tests were calling g_test_message and adding a \n
    so the output looked odd.

 tests/conform/test-timeline-interpolate.c |   14 +++++++-------
 tests/conform/test-timeline-rewind.c      |   20 ++++++++++----------
 2 files changed, 17 insertions(+), 17 deletions(-)

commit 19cbb307831234e5cfeb473802db77eb56328013
Author: Neil Roberts <neil@linux.intel.com>
Date:   Thu Jun 11 11:23:45 2009 +0100

    [test-timeline] Add a marker at the beginning of the timeline
    
    The beginning of the timeline needs special treatment to detect a
    marker so it should have one in the conformance test.

 tests/conform/test-timeline.c |    4 ++++
 1 file changed, 4 insertions(+)

commit 9c5663d6717722d6d77162060f284355b5081174
Author: Neil Roberts <neil@linux.intel.com>
Date:   Wed Jun 10 17:41:16 2009 +0100

    [timeline] Don't clamp the elapsed time when a looping tl reaches the end
    
    The new-frame signal of a timeline was previously guaranteed to be
    emitted with the elapsed_time set to the end before it emits the
    completed signal. This doesn't necessarily make sense for looping
    timelines because it would cause the elapsed time to be clamped to a
    slightly off value whenever the timeline restarts. This patch makes it
    perform the wrap around before emitting the new-frame signal so that
    the elapsed time always corresponds to the time elapsed since the
    timeline was started.
    
    Additionally it no longer fudges the msecs_delta property to make the
    marker check work so clutter_timeline_get_delta will always return the
    wall clock time since the last frame.

 clutter/clutter-timeline.c                |  142 +++++++++++++++++++----------
 tests/conform/test-timeline-interpolate.c |    8 +-
 2 files changed, 96 insertions(+), 54 deletions(-)

commit df839e22e6c5e5e323168fd4b336ff2b4df0fbcc
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Wed Jun 10 16:23:35 2009 +0100

    [text] Do not leak the effective attributes
    
    Thanks to Iain Holmes for catching the leak.

 clutter/clutter-text.c |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit acf7722a41dc5c568f895166cc471f53f3546926
Author: Neil Roberts <neil@linux.intel.com>
Date:   Wed Jun 10 15:50:27 2009 +0100

    [master-clock] Throttle if no redraw was performed
    
    A flag in the master clock is now set whenever the dispatch caused an
    actual redraw of a stage. If this flag is not set during the prepare
    and check functions then it will resort to limiting the redraw
    attempts to the default frame rate as if vblank syncing was
    disabled. Otherwise if a timeline is running that does not cause the
    scene to change then it would busy-wait with 100% CPU until the next
    frame.
    
    This fix was suggested by Owen Taylor in:
    
      http://bugzilla.openedhand.com/show_bug.cgi?id=1637
    
    Signed-off-by: Emmanuele Bassi <ebassi@linux.intel.com>

 clutter/clutter-master-clock.c |   11 +++++++++--
 clutter/clutter-private.h      |    2 +-
 clutter/clutter-stage.c        |   12 ++++++++----
 3 files changed, 18 insertions(+), 7 deletions(-)

commit eca73fe6c7cdc6657f6da2bdff19d635d0459792
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Wed Jun 10 14:54:42 2009 +0100

    [docs] Annotate fixed sized arrays

 clutter/clutter-actor.c |    8 ++++----
 1 file changed, 4 insertions(+), 4 deletions(-)

commit 7c08f554bc403938d90363fcba552d5121ad1449
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Wed Jun 10 14:54:19 2009 +0100

    [docs] Update Clutter's API reference

 doc/reference/clutter/clutter-sections.txt |    5 +----
 1 file changed, 1 insertion(+), 4 deletions(-)

commit 0f9dea0337aadc5c7218c93a592d83ae4828d6b4
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Wed Jun 10 14:52:53 2009 +0100

    Force a paint instead of calling clutter_redraw()
    
    We do not need the whole redraw machinery inside
    clutter_stage_read_pixels(): instead, we want Clutter to drop everything,
    paint and call glReadPixels() with the current buffer.

 clutter/clutter-stage.c |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit 92a7e23ec1c7fbbb8233bf7207630b5fc9992c08
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Wed Jun 10 14:24:33 2009 +0100

    [build] Use top_srcdir instead of relative paths

 doc/reference/clutter/Makefile.am |   12 ++++++------
 1 file changed, 6 insertions(+), 6 deletions(-)

commit 84d67bf1b3c39444efd2c85c90f9bbd7da5fc0ec
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Wed Jun 10 14:23:45 2009 +0100

    [l10n] Add LINGUAS
    
    Use the LINGUAS file to generate the contents of the ALL_LINGUAS
    variable.

 configure.ac |    2 +-
 po/LINGUAS   |    1 +
 2 files changed, 2 insertions(+), 1 deletion(-)

commit bd3254c0f8ee775df9979deb46d2ac8dbfc92876
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Wed Jun 10 12:50:45 2009 +0100

    [docs] Various gtk-doc fixes for COGL
    
    Try to keep the gtk-doc errors down to a minimum.

 clutter/cogl/cogl-bitmap.h           |    8 ++--
 clutter/cogl/cogl-material.h         |   24 ++++++----
 clutter/cogl/cogl-matrix.h           |   32 +++++++------
 clutter/cogl/cogl-offscreen.h        |    4 +-
 clutter/cogl/cogl-vertex-buffer.h    |    9 ++--
 clutter/cogl/cogl.h.in               |    6 +--
 doc/reference/cogl/Makefile.am       |    2 -
 doc/reference/cogl/cogl-sections.txt |   83 ++++++++++++++++++++++++++++++++--
 8 files changed, 126 insertions(+), 42 deletions(-)

commit e1cac4fece275c0e8428942a880ae5e5f4b3b13b
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Tue Jun 9 16:29:29 2009 +0100

    Fix clutter_redraw() to match the redraw cycle
    
    The clutter_redraw() function is used by embedding toolkits to
    force a redraw on a stage. Since everything is performed by
    toggling a flag inside the Stage itself and then letting the
    master clock advance, we need a ClutterStage method to ensure
    that we start the master clock and redraw.

 clutter/clutter-main.c                     |   13 ++-----------
 clutter/clutter-stage.c                    |   27 +++++++++++++++++++++++++++
 clutter/clutter-stage.h                    |    1 +
 doc/reference/clutter/clutter-sections.txt |    1 +
 4 files changed, 31 insertions(+), 11 deletions(-)

commit 7099d251c664752ef72c076d2b9cc45b70d58624
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Tue Jun 9 16:28:25 2009 +0100

    Run the repaint functions inside the redraw cycle
    
    Now that every redraw is performed within the master clock we
    need to run the repaint functions inside it.

 clutter/clutter-master-clock.c |    3 ++-
 1 file changed, 2 insertions(+), 1 deletion(-)

commit 287d4f76ecf0ccd2171eaf4a61c79ccea06e5f1d
Author: Owen W. Taylor <otaylor@fishsoup.net>
Date:   Mon Jun 8 13:13:18 2009 -0400

    Remove useless manual timeline ticking
    
    The master clock now works fine whether or not there are any stages,
    so in the timeline conformance tests don't need to set up their
    own times.
    
    Set CLUTTER_VBLANK=none for the conformance tests, which in addition
    to removing an test-environment dependency, will result in the ticking
    for timeline tests being throttled to the default frame rate.
    
    http://bugzilla.openedhand.com/show_bug.cgi?id=1637
    
    Signed-off-by: Emmanuele Bassi <ebassi@linux.intel.com>

 tests/conform/test-conform-main.c         |    7 +++++
 tests/conform/test-timeline-interpolate.c |   19 -------------
 tests/conform/test-timeline-rewind.c      |   19 -------------
 tests/conform/test-timeline.c             |   44 -----------------------------
 4 files changed, 7 insertions(+), 82 deletions(-)

commit 6705ce6c6a8c7b490714a15c697c1ad24c9bf8b0
Author: Owen W. Taylor <otaylor@fishsoup.net>
Date:   Mon Jun 8 13:00:09 2009 -0400

    Move elapsed-time calculations into ClutterTimeline
    
    Instead of calculating a delta in the master clock, and passing that
    into each timeline, make each timeline individually responsible for
    remembering the last time and computing the delta.
    
    This:
    
     - Fixes a problem where we could spin infinitely processing
       timeline-only frames with < 1msec differences.
     - Makes timelines consistently start timing on the first frame;
       instead of doing different things for the first started timeline
       and other timelines.
     - Improves accuracy of elapsed time computations by avoiding
       accumulating microsecond => millisecond truncation errors.
    
    http://bugzilla.openedhand.com/show_bug.cgi?id=1637
    
    Signed-off-by: Emmanuele Bassi <ebassi@linux.intel.com>

 clutter/clutter-master-clock.c            |   37 +++-----------------
 clutter/clutter-timeline.c                |   53 +++++++++++++++++++++--------
 clutter/clutter-timeline.h                |    4 +--
 tests/conform/test-timeline-interpolate.c |   17 +--------
 tests/conform/test-timeline-rewind.c      |   17 +--------
 tests/conform/test-timeline.c             |   15 +-------
 6 files changed, 48 insertions(+), 95 deletions(-)

commit dcd8d2831455f1ae950cbab073f37d0ad36d2295
Author: Owen W. Taylor <otaylor@fishsoup.net>
Date:   Sat Jun 6 22:48:15 2009 -0400

    Limit the frame rate when not syncing to VBLANK
    
    clutter-master-clock.c clutter-master-clock.h: When the
      SYNC_TO_VBLANK feature is not available, wait for 1/frame_rate
      seconds since the start of the last frame before drawing the next
      frame. Add _clutter_master_clock_start_running() to abstract
      the usage of g_main_context_wakeup()
    
    clutter-stage.c: Add _clutter_master_clock_start_running()
    
    clutter-main.c: Update docs for clutter_set_default_frame_rate()
      clutter_get_default_frame_rate() to no longer talk about timeline
      frame rates.
    
    test-text-perf.c test-text.c: Set a frame rate of 1000fps so that
      frame-rate limiting doesn't affect the result.
    
    http://bugzilla.openedhand.com/show_bug.cgi?id=1637
    
    Signed-off-by: Emmanuele Bassi <ebassi@linux.intel.com>

 clutter/clutter-main.c             |    9 +--
 clutter/clutter-master-clock.c     |  131 ++++++++++++++++++++++++++++--------
 clutter/clutter-master-clock.h     |    2 +
 clutter/clutter-stage.c            |   18 +++--
 tests/micro-bench/test-text-perf.c |    1 +
 tests/micro-bench/test-text.c      |    1 +
 6 files changed, 124 insertions(+), 38 deletions(-)

commit 64bb2e694fde2656c26b3b0bf60edbab544ba7ee
Author: Owen W. Taylor <otaylor@fishsoup.net>
Date:   Sat Jun 6 19:31:32 2009 -0400

    Decrease the main-loop priority of the frame cycle
    
    Change CLUTTER_PRIORITY_REDRAW to be lower than the GTK+ resize
      and relayout priorities to avoid starving GTK+ when run in the
      same process as clutter.
    Remove the unused CLUTTER_PRIORITY_TIMELINE
    
    http://bugzilla.openedhand.com/show_bug.cgi?id=1637
    
    Signed-off-by: Emmanuele Bassi <ebassi@linux.intel.com>

 clutter/clutter-main.h |   17 ++++++-----------
 1 file changed, 6 insertions(+), 11 deletions(-)

commit fc83e364779431dd3a89733ad9e762440de8a001
Author: Owen W. Taylor <otaylor@fishsoup.net>
Date:   Sat Jun 6 22:55:34 2009 -0400

    Avoid motion-compression in test-picking test
    
    Using clutter_stage_get_actor_at_pos() rather than synthesizing
    events; the synthesized events were being compressed, so we were
    only tesitng one pick per frame.
    
    http://bugzilla.openedhand.com/show_bug.cgi?id=1637
    
    Signed-off-by: Emmanuele Bassi <ebassi@linux.intel.com>

 tests/micro-bench/test-picking.c |   20 +++++++-------------
 1 file changed, 7 insertions(+), 13 deletions(-)

commit 6e69692e22334d15e2d01d39439362bbf1ba8679
Author: Owen W. Taylor <otaylor@fishsoup.net>
Date:   Sat Jun 6 19:10:41 2009 -0400

    Compress events as part of the frame cycle
    
    Instead of trying to guess about which motion events are
    extraneous, queue up all events until we process a frame.
    This allows us to look ahead and reliably compress consecutive
    sequence of motion events.
    
    clutter-main.c: Feed received events to the stage for queueing.
      Remove old compression code. Remove clutter_get_motion_events_frequency()
      clutter_set_motion_events_frequency()
    clutter-stage.c: Keep a queue of pending events.
    clutter-master-clock.c: Add processng of queued events to the
      clock source dispatch function.
    
    http://bugzilla.openedhand.com/show_bug.cgi?id=1637
    
    Signed-off-by: Emmanuele Bassi <ebassi@linux.intel.com>

 clutter/clutter-main.c         |  129 +++++++---------------------------------
 clutter/clutter-main.h         |    2 -
 clutter/clutter-master-clock.c |   19 +++++-
 clutter/clutter-private.h      |   10 +++-
 clutter/clutter-stage.c        |   90 +++++++++++++++++++++++++++-
 5 files changed, 136 insertions(+), 114 deletions(-)

commit 89a8fd7755b7a12d579994f7cf0d0e66cf7f99b6
Author: Owen W. Taylor <otaylor@fishsoup.net>
Date:   Sat Jun 6 18:22:51 2009 -0400

    Remove stage update idle and do updates from the master clock
    
    When a redraw is queued on a stage, simply set a flag; then in
    the check/prepare functions of the master clock source, check
    for stages that need redrawing.
    
    This avoids the complexity of having multiple competing sources
    at the same priority and makes the update ordering more reliable and
    understandable.
    
    http://bugzilla.openedhand.com/show_bug.cgi?id=1637
    
    Signed-off-by: Emmanuele Bassi <ebassi@linux.intel.com>

 clutter/clutter-master-clock.c |   27 ++++++++-----
 clutter/clutter-private.h      |    2 +
 clutter/clutter-stage.c        |   84 +++++++++++++++++++++-------------------
 3 files changed, 64 insertions(+), 49 deletions(-)

commit 77cd4e2bc8ec4ad99ab2349fcb10dc5f0b57dca8
Author: Owen W. Taylor <otaylor@fishsoup.net>
Date:   Sat Jun 6 18:12:26 2009 -0400

    Call g_main_context_wakeup() when we start running timelines
    
    If a timeline is added from a different thread, we need to
    call g_main_context_wakeup() to wake the main thread up to
    start updating the timeline.
    
    http://bugzilla.openedhand.com/show_bug.cgi?id=1637
    
    Signed-off-by: Emmanuele Bassi <ebassi@linux.intel.com>

 clutter/clutter-master-clock.c |    5 +++++
 1 file changed, 5 insertions(+)

commit 4b63f9524e64f2c0a2f7baa4034f2a9657de7ddb
Author: Owen W. Taylor <otaylor@fishsoup.net>
Date:   Sat Jun 6 18:11:19 2009 -0400

    Remove unused msecs_delta member
    
    msecs_delta member of ClutterMasterClock was set but not used.
    
    http://bugzilla.openedhand.com/show_bug.cgi?id=1637
    
    Signed-off-by: Emmanuele Bassi <ebassi@linux.intel.com>

 clutter/clutter-master-clock.c |    2 --
 1 file changed, 2 deletions(-)

commit ebaec9798ed6790a559c96010e1074b74c1e260b
Author: Owen W. Taylor <otaylor@fishsoup.net>
Date:   Sat Jun 6 17:44:40 2009 -0400

    Simplify timeout list handling for the master clock
    
    Instead of keeping a list of all timelines, and connecting to
    signals and weak notifies, simply keep a list of running timelines;
    this greatly simplifies both the book-keeping, and also determining
    if there are any running timelines.
    
    http://bugzilla.openedhand.com/show_bug.cgi?id=1637
    
    Signed-off-by: Emmanuele Bassi <ebassi@linux.intel.com>

 clutter/clutter-master-clock.c |  117 +++++++---------------------------------
 clutter/clutter-timeline.c     |   39 ++++++++++----
 2 files changed, 48 insertions(+), 108 deletions(-)

commit 3ab303b66234f633d03db660e4a780320dbfe423
Author: Owen W. Taylor <otaylor@fishsoup.net>
Date:   Sat Jun 6 17:54:05 2009 -0400

    Only advance the master clock before drawing a frame
    
    Remove code to advance the master clock after drawing a frame; if
    there are any running timelines the master clock will do another
    frame by itself, and the clock will be advanced before running
    that frame.
    
    With this change, there is no point in queueing an extra frame
    redraw after completing a timeline, since we are always advancing
    the timeline *before* redrawing, so remove that code as well.
    (This does mean that calling clutter_timeline_stop() won't implicitly
    cause the stage to be redrawn; this doesn't seem like something
    an app should rely on in any case.)
    
    http://bugzilla.openedhand.com/show_bug.cgi?id=1637
    
    Signed-off-by: Emmanuele Bassi <ebassi@linux.intel.com>

 clutter/clutter-main.c         |    5 ----
 clutter/clutter-master-clock.c |   63 ----------------------------------------
 2 files changed, 68 deletions(-)

commit 19c2e66398280950d210a321beae5774a735fed4
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Tue Jun 9 14:47:36 2009 +0100

    [docs] Various gtk-docs fixes

 clutter/clutter-event.c                    |    2 +-
 clutter/clutter-stage.c                    |    2 +-
 clutter/clutter-timeline.c                 |   50 +---------------------------
 clutter/clutter-units.c                    |    6 ++--
 clutter/clutter-units.h                    |    2 +-
 clutter/eglnative/clutter-egl.h            |    7 ++++
 clutter/eglx/clutter-backend-egl.c         |    2 +-
 clutter/eglx/clutter-eglx.h                |    8 +++++
 doc/reference/clutter/clutter-sections.txt |    1 +
 9 files changed, 24 insertions(+), 56 deletions(-)

commit 33f5fe73b3acfabd20dd867244005a6cf2609ab1
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Tue Jun 9 14:05:03 2009 +0100

    [stage] Rename fullscreen methods
    
    The clutter_stage_fullscreen() and clutter_stage_unfullscreen() are
    a GDK-ism. The underlying implementation is already using an accessor
    with a boolean parameter.
    
    This should take the amount of collisions between properties, methods
    and signals to zero.

 clutter/clutter-deprecated.h                   |    3 +
 clutter/clutter-stage.c                        |   75 ++++++++++++------------
 clutter/clutter-stage.h                        |    5 +-
 doc/reference/clutter/clutter-sections.txt     |    4 +-
 tests/interactive/test-clutter-cairo-flowers.c |    2 +-
 tests/interactive/test-events.c                |   12 ++--
 tests/interactive/test-fullscreen.c            |    4 +-
 tests/interactive/test-perspective.c           |    2 +-
 8 files changed, 54 insertions(+), 53 deletions(-)

commit 7c89a0ccfab2d597b306f8189c623cec3ee76580
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Tue Jun 9 13:48:03 2009 +0100

    [stage] Rename :fullscreen to :fullscreen-set
    
    The :fullscreen property is very much confusing as it is implemented.
    It can be written to a value, but the whole process might fail. If we
    set:
    
      g_object_set (stage, "fullscreen", TRUE, NULL);
    
    and the fullscreen process fails or it is not implemented, the value
    will be reset to FALSE (if we're lucky) or left TRUE (most of the
    times).
    
    The writability is just a shorthand for invoking clutter_stage_fullscreen()
    or clutter_stage_unfullscreen() depending on a boolean value without
    using an if.
    
    The :fullscreen property also greatly confuses high level languages,
    since the same symbol is used:
    
      - for a method name (Clutter.Stage.fullscreen())
      - for a property name (Clutter.Stage.fullscreen)
      - for a signal (Clutter.Stage::fullscreen)
    
    For these reasons, the :fullscreen should be renamed to :fullscreen-set
    and be read-only. Implementations of the Stage should only emit the
    StageState event to change from normal to fullscreen, and the Stage
    will automatically update the value of the property and emit a notify
    signal for it.

 clutter/clutter-stage.c              |  127 ++++++++++++++++++----------------
 clutter/sdl/clutter-stage-sdl.c      |    2 +-
 clutter/x11/clutter-stage-x11.c      |    4 +-
 tests/interactive/test-events.c      |   12 ++--
 tests/interactive/test-fullscreen.c  |    2 +-
 tests/interactive/test-perspective.c |    3 +-
 6 files changed, 79 insertions(+), 71 deletions(-)

commit ea82346e0df061e230d9ce27c2ff578558e54c5f
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Tue Jun 9 12:43:57 2009 +0100

    [build] Update the experimental features checks
    
    Instead of blacklisting experimental features at the end we can
    explicitly mark backends and image backends near their checks and
    provide a summary at the end.

 configure.ac |   23 +++++++++++++++++------
 1 file changed, 17 insertions(+), 6 deletions(-)

commit d743aeaa21b2c06ce9e673808e6f3ab2b05dd929
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Tue Jun 9 12:42:19 2009 +0100

    [json] Update the internal JSON-GLib copy
    
    There have been changes in JSON-GLib upstream to clean up the
    data structures, and facilitate introspection.
    
    We still not use the updated JsonParser with the (private) JsonScanner
    code, since it's a fork of GLib's GScanner.

 clutter/clutter-script.c          |    2 +-
 clutter/json/json-array.c         |  479 ++++++++++++++++++++++++++-
 clutter/json/json-generator.c     |    4 +-
 clutter/json/json-node.c          |  163 ++++++++--
 clutter/json/json-object.c        |  647 +++++++++++++++++++++++++++++++++++--
 clutter/json/json-parser.c        |    8 +-
 clutter/json/json-types-private.h |   61 ++++
 clutter/json/json-types.h         |  228 +++++++++----
 8 files changed, 1459 insertions(+), 133 deletions(-)

commit 91856b1bed071b98a4d3eb22a4efae089faf6490
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Tue Jun 9 12:40:06 2009 +0100

    [introspection] Add --c-include to g-ir-scanner
    
    Since Clutter has a single-include header policy we need to put
    the header to be included inside the GIR file.

 clutter/Makefile.am      |   38 ++++++++++++++++++++------------------
 clutter/cogl/Makefile.am |    1 +
 2 files changed, 21 insertions(+), 18 deletions(-)

commit 8728afa2ee8311a92021ee70ca5c4d09fe6c4966
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Tue Jun 9 12:39:28 2009 +0100

    [build] Add as-compiler-flag.m4 to the dist

 build/autotools/Makefile.am |    1 +
 1 file changed, 1 insertion(+)

commit 4b125d7fde86559baaf945943bbe5d9f81b45c9e
Author: Neil Roberts <neil@linux.intel.com>
Date:   Tue Jun 9 11:13:11 2009 +0100

    [CoglTexture] Initialise tex->first_pixels to NULL in all constructors
    
    Otherwise if there is an error before the slices are created it will
    try to free the first_pixels array and crash.
    
    It now also checks whether first_pixels has been created before using
    it to update the mipmaps. This should only happen for
    cogl_texture_new_from_foreign and doesn't matter if the FBO extension
    is available. It would be better in this case to fetch the first pixel
    using glGetTexImage as Owen mentioned in the last commit.

 clutter/cogl/gl/cogl-texture.c   |    6 +++++-
 clutter/cogl/gles/cogl-texture.c |    6 +++++-
 2 files changed, 10 insertions(+), 2 deletions(-)

commit 1d7a7bf1e61a800e5ddeb738899f09a0009eabba
Author: Owen W. Taylor <otaylor@fishsoup.net>
Date:   Mon Jun 8 16:45:43 2009 -0400

    Fix unitialized first_pixels for foreign textures
    
    tex->first_pixels was never set for foreign textures, leading
    to a crash when the texture object is freed.
    
    As a quick fix, simply set to NULL. A more complete fix would
    require remembering if we had ever seen the first pixel uploaded,
    and if not, doing a glReadPixel to get it before triggering the
    mipmap update.
    
    http://bugzilla.openedhand.com/show_bug.cgi?id=1645
    
    Signed-off-by: Neil Roberts <neil@linux.intel.com>

 clutter/cogl/gl/cogl-texture.c   |    2 ++
 clutter/cogl/gles/cogl-texture.c |    2 ++
 2 files changed, 4 insertions(+)

commit 08d580f68a02b7cd9eb4b8a93d9f32aa63db3a38
Author: Owen W. Taylor <otaylor@fishsoup.net>
Date:   Mon Jun 8 09:26:57 2009 -0400

    On bad blend strings, print the error if not returning it
    
    It's very common that there's no reasonable fallback to do if the
    blend or combine string you set isn't supported. So, rather than
    requiring everybody to pass in a GError purely to catch syntax erorrs,
    automatically g_warning() if a parse error is encountered and @error
    is NULL.
    
    http://bugzilla.openedhand.com/show_bug.cgi?id=1642
    
    Signed-off-by: Robert Bragg <robert@linux.intel.com>

 clutter/cogl/cogl-material.h        |    5 ++++-
 clutter/cogl/common/cogl-material.c |   30 ++++++++++++++++++++++++++----
 2 files changed, 30 insertions(+), 5 deletions(-)

commit d873a57ec90da7b5ae5b2cec62c1779316200177
Author: Garry Bodsworth <gjb@camvine.com>
Date:   Mon Jun 8 11:56:59 2009 +0100

    Fix for new potential memory leak in ClutterGLXTexturePixmap.
    
    This fixes a new instance of glXDestroyGLXPixmap which should be
    glXDestroyPixmap.
    
    Signed-off-by: Robert Bragg <robert@linux.intel.com>

 clutter/glx/clutter-glx-texture-pixmap.c |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit fd0a490ced2a945eb19ed9d22b88efc7ade5f97c
Author: Owen W. Taylor <otaylor@fishsoup.net>
Date:   Mon Jun 8 07:57:41 2009 -0400

    Properly adjust msecs_delta when clamping elapsed time
    
    When we complete a timeline, we clamp the elapsed_time variable
    to the range of the timeline. We need to adjust msecs_delta so that
    when we check for hit markers we have the correct interval.
    
    http://bugzilla.openedhand.com/show_bug.cgi?id=1641
    
    Signed-off-by: Emmanuele Bassi <ebassi@linux.intel.com>

 clutter/clutter-timeline.c |   14 +++++++++++---
 1 file changed, 11 insertions(+), 3 deletions(-)

commit fd19d337461bd187a38e73edc3d620b97eac8bf8
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Mon Jun 8 14:42:22 2009 +0100

    [animation] Keep a reference during notify::alpha
    
    The Animation should be referenced during the notification of the
    alpha value, since the callback is invoked depending on the Alpha
    and it won't vivify the Animation instance for us.
    
    Fixes bug:
    
      http://bugzilla.openedhand.com/show_bug.cgi?id=1537

 clutter/clutter-animation.c |    9 ++++++++-
 1 file changed, 8 insertions(+), 1 deletion(-)

commit 41e85f3073ab88cb5bfaeda479ed5ffa7db93264
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Sat Jun 6 15:27:37 2009 +0100

    introspection-friendly ClutterEvent accessors
    
    ClutterEvent is not really gobject-introspection friendly because
    of the whole discriminated union thing. In particular, if you get
    a ClutterEvent in a signal handler, you probably can't access the
    event-type-specific fields, and you probably can't call methods
    like clutter_key_event_symbol() either, because you can't cast the
    ClutterEvent to a ClutterKeyEvent.
    
    The cleanest solution is to turn every accessor into ClutterEvent
    methods, accepting a ClutterEvent* and internally checking the event
    type.
    
    Fixes bug:
    
      http://bugzilla.openedhand.com/show_bug.cgi?id=1585

 clutter/clutter-deprecated.h               |    5 +
 clutter/clutter-event.c                    |  214 ++++++++++++++++++++--------
 clutter/clutter-event.h                    |   64 +++++----
 clutter/clutter-text.c                     |   11 +-
 doc/reference/clutter/clutter-sections.txt |   16 ++-
 tests/interactive/test-actor-clone.c       |    8 +-
 tests/interactive/test-actors.c            |    8 +-
 tests/interactive/test-layout.c            |    8 +-
 tests/interactive/test-paint-wrapper.c     |    6 +-
 tests/interactive/test-pixmap.c            |    8 +-
 tests/interactive/test-threads.c           |   18 ++-
 11 files changed, 245 insertions(+), 121 deletions(-)

commit 04dc4106e5451da823d1141013d1653e4b909f19
Author: Garry Bodsworth <gjb@camvine.com>
Date:   Mon Jun 8 08:46:33 2009 +0100

    [glx-texture-pixmap] Unref a cogl texture handle.
    
    According to clutter_texture_set_cogl_texture you should unref the handle as
    the texture takes its own.
    
    Signed-off-by: Robert Bragg <robert@linux.intel.com>

 clutter/glx/clutter-glx-texture-pixmap.c |    1 +
 1 file changed, 1 insertion(+)

commit c968b06f15f994827f9dd77e7e9efb6e8e06db6b
Author: Garry Bodsworth <gjb@camvine.com>
Date:   Mon Jun 8 08:38:50 2009 +0100

    Fix memory leak in ClutterGLXTexturePixmap.
    
    The OpenGL spec states that if you create a pixmap using glXCreatePixmap you
    should use glXDestroyPixmap to destroy it.
    
    Signed-off-by: Robert Bragg <robert@linux.intel.com>

 clutter/glx/clutter-glx-texture-pixmap.c |    4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

commit 1e6e41190b47c384d70216a09204f39808a3fd84
Author: Owen W. Taylor <otaylor@fishsoup.net>
Date:   Sat Jun 6 12:07:42 2009 -0400

    Straighten out 'realize' handling for ClutterGLXTexturePixmap
    
    Setting the pixmap for an unrealized ClutterGLXTexturePixmap should
    not cause it to be realized, and certainly shouldn't cause the the
    REALIZED flag to be set without using clutter_actor_realize().
    
    This patch uses the simple approach that;
    
     - pixmap changes on an unrealized ClutterGLXTexturePixmap
       are ignored
     - when the ClutterGLXTexturePixmap is realized, we then create
       the GLXPixmap and the corresponding texture.
    
    The call to clutter_glx_texture_pixmap_update_area() is moved
    from create_cogl_texture() to
    clutter_glx_texture_pixmap_create_glx_pixmap() since
    create_cogl_texture() is only called from one place, and updating
    the area is really something we do *after* creating the texture,
    not part of creating the texture.
    
    clutter_glx_texture_pixmap_create_glx_pixmap() is reorganized a
    bit to avoid debug-logging confusingly if it's called before a pixmap
    has been set, and for readability.
    
    http://bugzilla.openedhand.com/show_bug.cgi?id=1635
    
    Signed-off-by: Emmanuele Bassi <ebassi@linux.intel.com>

 clutter/glx/clutter-glx-texture-pixmap.c |   80 ++++++++++++------------------
 1 file changed, 31 insertions(+), 49 deletions(-)

commit d28c9e5db1c7dd7faab2fc9e718d70747d21dfb1
Author: Owen W. Taylor <otaylor@fishsoup.net>
Date:   Sat Jun 6 09:55:00 2009 -0400

    Remove unnecessary setting of CLUTTER_ACTOR_REALIZED flag
    
    An implementaton of realize() never needs to set the
    CLUTTER_ACTOR_REALIZED flag, though it can unset the flag if
    things fail unexpectedly. (Previously, stage backend implementations
    had to do this since clutter_actor_realize() wasn't used; this
    is no longer the case.)
    
    http://bugzilla.openedhand.com/show_bug.cgi?id=1634
    
    Signed-off-by: Emmanuele Bassi <ebassi@linux.intel.com>

 clutter/clutter-stage.c                  |    5 +----
 clutter/eglnative/clutter-stage-egl.c    |    3 +--
 clutter/eglx/clutter-stage-egl.c         |    2 --
 clutter/fruity/clutter-stage-fruity.c    |    3 +--
 clutter/glx/clutter-stage-glx.c          |    6 ++----
 clutter/osx/clutter-stage-osx.c          |    8 +-------
 clutter/sdl/clutter-stage-sdl.c          |    2 --
 clutter/win32/clutter-stage-win32.c      |    3 +--
 clutter/x11/clutter-x11-texture-pixmap.c |    2 --
 9 files changed, 7 insertions(+), 27 deletions(-)

commit 2b7e98f4b3d48269dbfb2232af80cde92bcae306
Author: Owen W. Taylor <otaylor@fishsoup.net>
Date:   Sat Jun 6 11:37:18 2009 -0400

    Be more tolerant about natural_width < min_width
    
    Due to the accumulation of floating point errors, natural_width
    and min_width can diverge significantly even if the math for
    computing them is correct. So just clamp natural_width to
    min_width instead of warning about it.
    
    http://bugzilla.openedhand.com/show_bug.cgi?id=1632
    
    Signed-off-by: Emmanuele Bassi <ebassi@linux.intel.com>

 clutter/clutter-actor.c |   28 ++++++++++------------------
 1 file changed, 10 insertions(+), 18 deletions(-)

commit 583a86b537cd3b0d41c23949600c06515f5056bf
Author: Owen W. Taylor <otaylor@fishsoup.net>
Date:   Sat Jun 6 11:28:02 2009 -0400

    Use double temporaries when computing group size
    
    If we use float temporaries when computing the bounds of
    a group, then, depending on what variables are kept in registers
    and what stored on the stack, the accumulated difference between
    natural_width and min_width can be more than FLOAT_EPSILON.
    
    Using double temporaries will eliminate the difference in most
    cases, or, very rarely, reduce it to a last-bit error.
    
    http://bugzilla.openedhand.com/show_bug.cgi?id=1632
    
    Signed-off-by: Emmanuele Bassi <ebassi@linux.intel.com>

 clutter/clutter-group.c |    8 ++++----
 1 file changed, 4 insertions(+), 4 deletions(-)

commit 009eafb9ee1ea3b6e969b95f219e3f607c10f7e9
Author: Owen W. Taylor <otaylor@fishsoup.net>
Date:   Sat Jun 6 11:56:08 2009 -0400

    Handle a clone of an actor with an unmapped parent
    
    If we are cloning an source actor with an unmapped parent, then when
    we temporarily map the source actor:
    
     - We need to skip the check that a mapped actor has a mapped
       parent.
     - We need to realize the actor's parents before mapping it,
       or we'll get an assertion failure in clutter_actor_update_map_state()
       because an actor with an unmapped parent is !may_be_realized.
    
    http://bugzilla.openedhand.com/show_bug.cgi?id=1633
    
    Signed-off-by: Emmanuele Bassi <ebassi@linux.intel.com>

 clutter/clutter-actor.c |   26 ++++++++++++++++++--------
 1 file changed, 18 insertions(+), 8 deletions(-)

commit d8459b0a32c95e0e6d59cc314d5d032c9f9c4edb
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Mon Jun 8 10:59:22 2009 +0100

    [tests] Clarify the numbers

 tests/conform/test-timeline.c |    6 +++---
 1 file changed, 3 insertions(+), 3 deletions(-)

commit 2ebe36cf0834ba6eca511a349aca95aa3777f87b
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Mon Jun 8 10:58:20 2009 +0100

    [tests] The ::focus-in signal was renamed ::key-focus-in
    
    The test-events interactive test is still using the old name.

 tests/interactive/test-events.c |   10 +++++-----
 1 file changed, 5 insertions(+), 5 deletions(-)

commit 54b5d076820cce3f69a699b34ca810204651bcc0
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Mon Jun 8 02:22:26 2009 +0100

    [build] Add AS_COMPILER_FLAGS
    
    Use the AS_COMPILER_FLAGS to check whether the maintainer compiler flags
    we use are supported; this should fail gracefully and only use the ones
    that the compiler actually understands.
    
    Fixes bug:
    
      http://bugzilla.openedhand.com/show_bug.cgi?id=1639

 build/autotools/as-compiler-flag.m4 |   62 +++++++++++++++++++++++++++++++++++
 configure.ac                        |    5 ++-
 2 files changed, 66 insertions(+), 1 deletion(-)

commit 12b4e0400cfa85ab2c7d1544174747226d6b031a
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Mon Jun 8 02:04:27 2009 +0100

    [x11] Do not forcibly set the stage size on fullscreen
    
    Setting the stage size using clutter_actor_set_size() is almost always
    wrong: the X11 stage implementation should save the size and queue a
    relayout -- like it does when receiving a ConfigureNotify. The same
    should happen when setting it to be full screen.

 clutter/x11/clutter-stage-x11.c |   34 +++++++++++++++++++++++-----------
 1 file changed, 23 insertions(+), 11 deletions(-)

commit ca305d2a403a1e1f40cf9a606b590853863964f9
Author: Owen W. Taylor <otaylor@fishsoup.net>
Date:   Mon Jun 8 01:51:02 2009 +0100

    [build] Search for Cogl GIR in the right place
    
    Since we build the Cogl GIR inside /clutter/cogl we should be looking
    there when building the Clutter GIR. Otherwise g-ir-scanner will look
    inside the gir directory -- and if you never built Clutter before it
    will error out.
    
    Fixes bug:
    
      http://bugzilla.openedhand.com/show_bug.cgi?id=1638
    
    Signed-off-by: Emmanuele Bassi <ebassi@linux.intel.com>

 clutter/Makefile.am |    1 +
 1 file changed, 1 insertion(+)

commit a87f6f32a6ce41623e893cc054591e9fe67d199f
Author: Robert Bragg <robert@linux.intel.com>
Date:   Sat Jun 6 21:33:31 2009 +0100

    [test-blend-strings] Fix a silly off by one that meant the test couldn't fail
    
    The test was quiting after the 2nd frame but it should be the third frame because
    the test doesn't actually check results until the third frame due to the workaround
    for drivers with broken glReadPixels.
    
    (When first written the test would have been verified with the
    clutter_main_quit() commented out which gives visual feedback of what the
    test does, so the off by one would have snuck in just before uncommenting
    and pushing.)

 tests/conform/test-blend-strings.c |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit 9691827b5b03886d6eb88e1aed5844514d59366f
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Sat Jun 6 15:57:29 2009 +0100

    [texture] Fix error reporting on ::load-finished
    
    The load-finished signal has a GError* argument which is meant to
    signify whether the loading was successful. However many of the
    places in ClutterTexture that emit this signal directly pass their
    'error' variable which is a GError** and will be NULL or not
    completely independently of whether there was an error. If the
    argument was dereferenced it would probably crash.
    
    The test-texture-async interactive test case should also verify
    that the ::load-finished signal is correctly emitted.
    
    Fixes bug:
    
      http://bugzilla.openedhand.com/show_bug.cgi?id=1622

 clutter/clutter-texture.c              |   31 ++++++++++-------
 tests/interactive/test-texture-async.c |   60 ++++++++++++++++++++++++++++----
 2 files changed, 72 insertions(+), 19 deletions(-)

commit ea9bd6761ad840c12c063a14d9334dd807473a9d
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Sat Jun 6 14:39:21 2009 +0100

    [units] Always recompute pixels
    
    When asking for the pixels value we should always recompute it.
    
    The "pixel_set" guard can be left in place for future use.

 clutter/clutter-units.c |    3 ---
 1 file changed, 3 deletions(-)

commit 7e5f7eb7902e9424bb223896ca0219e3032c416c
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Sat Jun 6 14:38:10 2009 +0100

    [build] Remove -Werror for the maintainer cflags
    
    Now that we have Shave in place and don't risk losing warnings
    we can avoid -Werror in the anal-retentive maintainer compiler
    flags.

 configure.ac |    5 ++---
 1 file changed, 2 insertions(+), 3 deletions(-)

commit c3dc03997cf4a2b82f45c90ad855785f8ac86853
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Sat Jun 6 14:37:41 2009 +0100

    Fixes for some compiler warnings

 clutter/clutter-actor.c   |    2 ++
 clutter/clutter-texture.c |    1 +
 clutter/clutter-units.c   |    8 ++++++--
 3 files changed, 9 insertions(+), 2 deletions(-)

commit 5f0afa52187750c08be279a5ff840ef8b9a4f642
Author: Owen W. Taylor <otaylor@fishsoup.net>
Date:   Fri Jun 5 17:53:57 2009 -0400

    [actor] get_transformed_position(): initialize Z value
    
    Initialize the Z value in the point we pass to
    clutter_actor_apply_transform_to_point().
    
    http://bugzilla.openedhand.com/show_bug.cgi?id=1630
    
    Signed-off-by: Emmanuele Bassi <ebassi@linux.intel.com>

 clutter/clutter-actor.c |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit 276952d6f9c20e4a2be5fbf2ab381c263598f864
Author: Owen W. Taylor <otaylor@fishsoup.net>
Date:   Fri Jun 5 16:52:18 2009 -0400

    Fix stopping a timeline
    
    Correctly apply De Morgan's laws to the short-circuit test in
    clutter_timeline_pause(); it was short-circuiting always and
    never actually pausing.
    
    http://bugzilla.openedhand.com/show_bug.cgi?id=1629
    
    Signed-off-by: Emmanuele Bassi <ebassi@linux.intel.com>

 clutter/clutter-timeline.c |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit f87e10c02409b8c5fbdb4cf5b289109fbcc67e45
Author: Johan Bilien <jobi@via.ecp.fr>
Date:   Wed Jun 3 22:08:17 2009 +0100

    Fix the leak of the GList of layers in CoglMaterial
    
    http://bugzilla.openedhand.com/show_bug.cgi?id=1624
    
    Signed-off-by: Emmanuele Bassi <ebassi@linux.intel.com>

 clutter/cogl/common/cogl-material.c |    1 +
 1 file changed, 1 insertion(+)

commit 6f7afdf5536408885acb8f31a7dcf1bf0ab93114
Author: Bastian Winkler <buz@netbuz.org>
Date:   Wed Jun 3 14:36:18 2009 +0200

    Broken fixed:: arguments
    
    The commit 2c95b378 prevents clutter_animation_setup_property from being
    called with fixed:: property names. This patch adds a additional
    parameter "is_fixed" to clutter_animation_setup_property instead of
    searching for "fixed::" in property_name.
    
    Signed-off-by: Emmanuele Bassi <ebassi@linux.intel.com>

 clutter/clutter-animation.c |   29 ++++++++++++++++-------------
 1 file changed, 16 insertions(+), 13 deletions(-)

commit ca5473836bb41687640a7f2fcf538bfa3733f122
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Sat Jun 6 12:34:00 2009 +0100

    [build] Check for libXext
    
    It seems GNU Gold (the new linker) either behaves as if with
    --no-undefined by default, or has some issue preventing it from not
    doing that when instructed to (I'm not sure if this actually
    happens). In any case, clutter uses the Xshm extensions, but does not
    link to libXext, which makes gold unhappy.
    
    Based on a patch by: Xan Lopez <xan@gnome.org>
    
    Signed-off-by: Emmanuele Bassi <ebassi@linux.intel.com>

 configure.ac |   15 +++++++++++++++
 1 file changed, 15 insertions(+)

commit ea15e4c7f0476e1610e79a990616a467615358db
Author: Neil Roberts <neil@linux.intel.com>
Date:   Fri Jun 5 18:00:22 2009 +0100

    [CoglPangoDisplayList] Don't store the base color in the display list
    
    It should be possible render a single PangoLayout with different
    colors without recalculating the layout. This was not working because
    the color used at the first edit was being stored in the display
    list. This broke changing the opacity on a ClutterText.
    
    Now each node in the display list has a 'color override' flag which
    marks whether it should use the base color or not. The base color is
    now passed in from _cogl_pango_display_list_render_texture. The alpha
    value is always taken from the base color.

 clutter/pango/cogl-pango-display-list.c |   44 ++++++++++++++++++++++++++-----
 clutter/pango/cogl-pango-display-list.h |    6 +++--
 clutter/pango/cogl-pango-render.c       |   26 +++++++++---------
 3 files changed, 53 insertions(+), 23 deletions(-)

commit 6fe22ac8505da2c9a0b7eb97c3a6ea5f3edea95c
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Fri Jun 5 17:55:24 2009 +0100

    [repaint] Run the repaint functions in clutter_redraw()
    
    The clutter_redraw() function is used by libraries embedding
    Clutter inside another toolkit, instead of queueing a redraw
    on the embedded stage. This means that clutter_redraw() should
    perform the same sequence of actions done by the redraw idle
    callback.

 clutter/clutter-main.c    |   34 +++++++++++++++++++++++++++-------
 clutter/clutter-private.h |    3 +++
 clutter/clutter-stage.c   |    4 ++--
 3 files changed, 32 insertions(+), 9 deletions(-)

commit f66021825c191a7185e488086b4ef06e84f16061
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Fri Jun 5 17:54:21 2009 +0100

    [docs] Update README
    
    * Remove mentions of Subversion
    
    * Update the configure command line switches

 README |   31 +++++++++++++++++++------------
 1 file changed, 19 insertions(+), 12 deletions(-)

commit 01e1aae7dd7c65ef8f60d66f95cb335d609fdff4
Author: Robert Bragg <robert@linux.intel.com>
Date:   Sat Apr 4 19:21:22 2009 +0100

    [cogl] cogl_material_set_layer does nothing if resetting the same texture
    
    This avoids dirtying the layer, and should avoid some uneeded state changes

 clutter/cogl/common/cogl-material.c |    3 +++
 1 file changed, 3 insertions(+)

commit dea7f9b7d3fe36d398ade3f8e45ec4e31652dc48
Author: Robert Bragg <robert@linux.intel.com>
Date:   Fri May 22 16:59:14 2009 +0100

    [test-conformance] we were calling clutter_init with un-initialized arguments
    
    This ensure we initialize shared_state->arg{c,v}_addr before calling
    clutter_init

 tests/conform/test-conform-main.c |    6 +++---
 1 file changed, 3 insertions(+), 3 deletions(-)

commit 6b92296e7f933a6d9798ba807fbd80ee2221144d
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Fri Jun 5 16:46:12 2009 +0100

    [build] Fix compiler warnings
    
    Silence GCC

 clutter/cogl/common/cogl-blend-string.c |    4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

commit 02fa34f65b3efefaca4146e968c0f84a20061da1
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Fri Jun 5 15:18:43 2009 +0100

    Fix a compiler warning

 clutter/cogl/common/cogl-vertex-buffer.c |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit b061a00f4cde1bdf1406bbf94b87fb88e996987a
Author: Neil Roberts <neil@linux.intel.com>
Date:   Fri Jun 5 16:25:39 2009 +0100

    [ClutterActor] Fix check for zero opacity when being painted from a clone
    
    Clutter short-circuits painting when an actor's opacity is
    zero. However if the actor is being painted from a ClutterClone then
    it will be painted using the clone's opacity instead so the test was
    broken.

 clutter/clutter-actor.c |    4 +++-
 1 file changed, 3 insertions(+), 1 deletion(-)

commit 03471daf50dae5baf906ba95ba200d77e40bb3fb
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Fri Jun 5 12:46:37 2009 +0100

    [build] Add all dependencies for pkg-config
    
    A merge conflict gone bad: the IMAGE_PC_FILES variable was not appended
    to the CLUTTER_REQUIRES one, thus leading to Clutter depending on
    GdkPixbuf but never actually checking for it.

 configure.ac |    6 ++++--
 1 file changed, 4 insertions(+), 2 deletions(-)

commit 7e33fe3175d17ff659705c24ac7865510b145528
Merge: b5a7b3a cbb748f
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Fri Jun 5 12:41:42 2009 +0100

    Merge branch '1.0-integration'
    
    * 1.0-integration: (138 commits)
      [x11] Disable XInput by default
      [xinput] Invert the XI extension version check
      [cogl-primitives] Fix an unused variable warning when building GLES
      [clutter-stage-egl] Pass -1,-1 to clutter_stage_x11_fix_window_size
      Update the GLES backend to have the layer filters in the material
      [gles/cogl-shader] Add a missing semicolon
      [cogl] Move the texture filters to be a property of the material layer
      [text] Fix Pango unit to pixels conversion
      [actor] Force unrealization on destroy only for non-toplevels
      [x11] Rework map/unmap and resizing
      [xinput] Check for the XInput entry points
      [units] Validate units against the ParamSpec
      [actor] Add the ::allocation-changed signal
      [actor] Use flags to control allocations
      [units] Rework Units into logical distance value
      Remove a stray g_value_get_int()
      Remove usage of Units and macros
      [cogl-material] Allow setting a layer with an invalid texture handle
      [timeline] Remove the concept of frames from timelines
      [gles/cogl-shader] Fix parameter spec for cogl_shader_get_info_log
      ...
    
    Conflicts:
    	configure.ac

commit cbb748f7c042e250b9383c59236645966c5ad47e
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Fri Jun 5 12:26:29 2009 +0100

    [x11] Disable XInput by default
    
    The XInput support in Clutter is still using XI 1.x. This will never
    work correctly, and we are all waiting for XInput 2 anyway. The changes
    internally should be minimal, so we can leave everything in place, but
    it's better to disable XInput support by default -- at least for the
    time being.

 clutter/x11/clutter-backend-x11.c |   20 ++++++++++++--------
 clutter/x11/clutter-event-x11.c   |    6 ++----
 configure.ac                      |    2 +-
 3 files changed, 15 insertions(+), 13 deletions(-)

commit 3ee093e356de19253f4a838553c8f31579a256ad
Merge: 745ca8a 9c7afe0
Author: Neil Roberts <neil@linux.intel.com>
Date:   Fri Jun 5 12:20:41 2009 +0100

    Merge branch 'timeline-no-fps' into 1.0-integration

commit 745ca8a62ca52eedfad850e556f160f36eb32953
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Fri Jun 5 12:06:09 2009 +0100

    [xinput] Invert the XI extension version check
    
    Since having XQueryInputVersion means also having XGetExtensionVersion
    we need to check the former first to avoid the deprecation warning.

 clutter/x11/clutter-backend-x11.c |    6 +++---
 1 file changed, 3 insertions(+), 3 deletions(-)

commit fa3ed19db56db26cadd37ea73539f1bd59254ef4
Author: Neil Roberts <neil@linux.intel.com>
Date:   Thu Jun 4 22:20:18 2009 +0100

    [cogl-primitives] Fix an unused variable warning when building GLES
    
    The 'tex' variable is only used if #ifdef'd GL code so it was throwing
    an error under GLES. The variable is now moved into a block inside the
    #ifdef.

 clutter/cogl/common/cogl-primitives.c |   14 ++++++++------
 1 file changed, 8 insertions(+), 6 deletions(-)

commit 810e936164028043682b014a8e9b531fb373f317
Author: Neil Roberts <neil@linux.intel.com>
Date:   Thu Jun 4 22:15:41 2009 +0100

    [clutter-stage-egl] Pass -1,-1 to clutter_stage_x11_fix_window_size
    
    This reflects the changes made to e4ff24bc for the egl stage.

 clutter/eglx/clutter-stage-egl.c |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit 6efbb92c5899dfadac4f366bee709f5154180967
Author: Neil Roberts <neil@linux.intel.com>
Date:   Thu Jun 4 22:12:33 2009 +0100

    Update the GLES backend to have the layer filters in the material
    
    This reflects the changes made in 54d8aadf1d86 for the GLES backend.

 clutter/cogl/gles/cogl-texture-private.h |   31 ++++-
 clutter/cogl/gles/cogl-texture.c         |  182 +++++++++++++++++++-----------
 2 files changed, 142 insertions(+), 71 deletions(-)

commit eff82a546d2ae6747ae32f639f07a6d182114016
Author: Neil Roberts <neil@linux.intel.com>
Date:   Thu Jun 4 22:10:33 2009 +0100

    [gles/cogl-shader] Add a missing semicolon
    
    cogl_shader_get_info_log was missing a semicolon which broke the build
    on GLES 2.

 clutter/cogl/gles/cogl-shader.c |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit 54d8aadf1d86bf6cfacc5346c02a13f3a2577268
Author: Neil Roberts <neil@linux.intel.com>
Date:   Thu Jun 4 16:04:57 2009 +0100

    [cogl] Move the texture filters to be a property of the material layer
    
    The texture filters are now a property of the material layer rather
    than the texture object. Whenever a texture is painted with a material
    it sets the filters on all of the GL textures in the Cogl texture. The
    filter is cached so that it won't be changed unnecessarily.
    
    The automatic mipmap generation has changed so that the mipmaps are
    only generated when the texture is painted instead of every time the
    data changes. Changing the texture sets a flag to mark that the
    mipmaps are dirty. This works better if the FBO extension is available
    because we can use glGenerateMipmap. If the extension is not available
    it will temporarily enable automatic mipmap generation and reupload
    the first pixel of each slice. This requires tracking the data for the
    first pixel.
    
    The COGL_TEXTURE_AUTO_MIPMAP flag has been replaced with
    COGL_TEXTURE_NO_AUTO_MIPMAP so that it will default to
    auto-mipmapping. The mipmap generation is now effectively free if you
    are not using a mipmap filter mode so you would only want to disable
    it if you had some special reason to generate your own mipmaps.
    
    ClutterTexture no longer has to store its own copy of the filter
    mode. Instead it stores it in the material and the property is
    directly set and read from that. This fixes problems with the filters
    getting out of sync when a cogl handle is set on the texture
    directly. It also avoids the mess of having to rerealize the texture
    if the filter quality changes to HIGH because Cogl will take of
    generating the mipmaps if needed.

 clutter/clutter-texture.c                   |  132 +++++++-------------
 clutter/cogl/cogl-material.h                |   80 ++++++++++++
 clutter/cogl/cogl-texture.h                 |   80 ------------
 clutter/cogl/cogl-types.h                   |   13 +-
 clutter/cogl/common/cogl-material-private.h |    3 +
 clutter/cogl/common/cogl-material.c         |   59 +++++++++
 clutter/cogl/common/cogl-primitives.c       |    3 +-
 clutter/cogl/gl/cogl-context.h              |    1 +
 clutter/cogl/gl/cogl-defines.h.in           |    4 +
 clutter/cogl/gl/cogl-texture-private.h      |   31 ++++-
 clutter/cogl/gl/cogl-texture.c              |  179 +++++++++++++++++----------
 clutter/cogl/gl/cogl.c                      |    7 +-
 clutter/glx/clutter-glx-texture-pixmap.c    |   20 +--
 clutter/pango/cogl-pango-glyph-cache.c      |   22 +---
 clutter/pango/cogl-pango-glyph-cache.h      |    2 +-
 clutter/pango/cogl-pango-render.c           |   40 +++---
 doc/reference/cogl/cogl-sections.txt        |    7 +-
 tests/conform/test-backface-culling.c       |   22 ++--
 tests/interactive/test-cogl-multitexture.c  |    9 +-
 tests/interactive/test-cogl-tex-polygon.c   |   21 ++--
 tests/interactive/test-cogl-tex-tile.c      |    4 -
 21 files changed, 422 insertions(+), 317 deletions(-)

commit c27f42981961eed79ef32e4b4fd7081098619844
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu Jun 4 17:28:35 2009 +0100

    [text] Fix Pango unit to pixels conversion
    
    When going from Pango units to pixels we need to divide by 1024,
    and not multiply by 1024.

 clutter/clutter-text.c |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit 5ea3b47144720dfa1692cc085537300e4d24d97c
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu Jun 4 16:50:19 2009 +0100

    [actor] Force unrealization on destroy only for non-toplevels
    
    We cannot force unrealization on toplevels ourselves, so we need
    to check inside clutter_actor_destroy() if we want to avoid a
    warning.

 clutter/clutter-actor.c |    3 ++-
 1 file changed, 2 insertions(+), 1 deletion(-)

commit e4ff24bcff4881ddadaf3bb52d74ee71061504fc
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu Jun 4 16:27:21 2009 +0100

    [x11] Rework map/unmap and resizing
    
    The mapping and unmapping of the X11 stage implementation is
    a bit bong. It's asynchronous, for starters, when it really
    can avoid it by tracking the state internally.
    
    The ordering of the map/unmap sequence is also broken with
    respect to the resizing.
    
    By tracking the state internally into StageX11 we can safely
    remove the MapNotify and UnmapNotify X event handling.
    
    In theory, we should use _NET_WM_STATE a lot more, and reuse
    the X11 state flags for fullscreening as well.

 clutter/clutter-actor.c         |    5 +-
 clutter/clutter-stage-window.h  |    4 +
 clutter/clutter-stage.c         |   13 ++-
 clutter/glx/clutter-stage-glx.c |    2 +-
 clutter/x11/clutter-event-x11.c |    9 +-
 clutter/x11/clutter-stage-x11.c |  195 +++++++++++++++++++++++++--------------
 clutter/x11/clutter-stage-x11.h |   11 ++-
 7 files changed, 155 insertions(+), 84 deletions(-)

commit 0a4a28a950ae5022684742d18144c1cb9b6a96d1
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu Jun 4 13:41:32 2009 +0100

    [xinput] Check for the XInput entry points
    
    Apparently, the XInput extension is using the same pkg-config
    file ('xi') for both the 1.x and the 2.x API, so we need to
    check for both the 1.x XGetExtensionVersion and the 2.x
    XQueryInputVersion.

 clutter/x11/clutter-backend-x11.c |   36 ++++++++++++++++++++++++++----------
 clutter/x11/clutter-backend-x11.h |   12 ++----------
 clutter/x11/clutter-event-x11.c   |    8 ++++----
 clutter/x11/clutter-stage-x11.h   |    6 ++----
 configure.ac                      |   33 ++++++++++++++++++++++++++++++++-
 5 files changed, 66 insertions(+), 29 deletions(-)

commit 876dc22633a62c3eb451d9f491d97cddadf6d3c0
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu Jun 4 12:15:15 2009 +0100

    [units] Validate units against the ParamSpec
    
    When declaring a property using ClutterParamSpecUnits we pass a
    default type to limit the type of units we accept as valid values
    for the property.
    
    This means that we need to add the unit type check as part of the
    validation process.

 clutter/clutter-units.c |   38 ++++++++++++++++++++++++++++++++++++++
 1 file changed, 38 insertions(+)

commit 5ebb59e6b0a11c156e1f246a852986f15080f297
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu Jun 4 12:00:58 2009 +0100

    [actor] Add the ::allocation-changed signal
    
    Sometimes it is useful to be able to track changes in the allocation
    flags, like the absolute origin, inside children of a container.
    
    Using the notify::allocation signal is not enough, in these cases, so
    we need a specific signal that gives us both the allocation box and the
    allocation flags.

 clutter/clutter-actor.c      |   43 +++++++++++++++++++++++++++++++++++++++++-
 clutter/clutter-marshal.list |    1 +
 2 files changed, 43 insertions(+), 1 deletion(-)

commit 0187bb396524435fe32696176bcb234f36be326f
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Wed Jun 3 14:02:06 2009 +0100

    [actor] Use flags to control allocations
    
    Instead of passing a boolean value, the ::allocate virtual function
    should use a bitmask and flags. This gives us room for expansion
    without breaking API/ABI, and allows to encode more information to
    the allocation process instead of just changes of absolute origin.

 clutter/clutter-actor.c             |   64 +++++++++++++++++------------------
 clutter/clutter-actor.h             |   46 +++++++++++++++++--------
 clutter/clutter-clone.c             |   13 +++----
 clutter/clutter-group.c             |   17 +++++-----
 clutter/clutter-main.c              |    2 +-
 clutter/clutter-stage.c             |   21 +++++++-----
 clutter/clutter-text.c              |    8 ++---
 clutter/clutter-texture.c           |   13 +++----
 clutter/osx/clutter-stage-osx.c     |    8 ++---
 clutter/sdl/clutter-stage-sdl.c     |    8 ++---
 clutter/win32/clutter-stage-win32.c |   16 ++++-----
 clutter/x11/clutter-stage-x11.c     |    8 ++---
 tests/interactive/test-layout.c     |   13 ++++---
 13 files changed, 128 insertions(+), 109 deletions(-)

commit 0d5e17ecd12c680e52144e9f3493616cf96cbd05
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Wed Jun 3 11:12:09 2009 +0100

    [units] Rework Units into logical distance value
    
    Units as they have been implemented since Clutter 0.4 have always been
    misdefined as "logical distance unit", while they were just pixels with
    fractionary bits.
    
    Units should be reworked to be opaque structures to hold a value and
    its unit type, that can be then converted into pixels when Clutter needs
    to paint or compute size requisitions and perform allocations.
    
    The previous API should be completely removed to avoid collisions, and
    a new type:
    
            ClutterUnits
    
    should be added; the ability to install GObject properties using
    ClutterUnits should be maintained.

 .gitignore                                 |    2 +
 clutter/clutter-actor.c                    |  111 ++--
 clutter/clutter-units.c                    |  763 ++++++++++++++++++----------
 clutter/clutter-units.h                    |  271 +++-------
 doc/reference/clutter/clutter-sections.txt |   50 +-
 tests/conform/Makefile.am                  |    1 +
 tests/conform/test-clutter-units.c         |   58 +++
 tests/conform/test-conform-main.c          |    3 +
 tests/interactive/test-text-field.c        |   22 +-
 9 files changed, 701 insertions(+), 580 deletions(-)

commit 1580ffb884fa1864e9bd53934ae2d1258c3b7dbe
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Wed Jun 3 10:09:56 2009 +0100

    Remove a stray g_value_get_int()
    
    Now that all properties are float, using g_value_get_int() to
    retrieve the value of the :anchor-x property is going to print
    out a warning.

 clutter/clutter-actor.c |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit 046e571bae28790cb4d3e59d83e838a553fe15f0
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Tue Jun 2 18:44:30 2009 +0100

    Remove usage of Units and macros
    
    The ClutterUnit and relative macros should not be used when dealing
    with pixels -- which is to say, all the time when inside Clutter.

 clutter/clutter-backend.c             |    4 +-
 clutter/clutter-interval.c            |   15 +-----
 clutter/clutter-text.c                |   90 +++++++++++++++------------------
 clutter/x11/clutter-stage-x11.c       |   31 +++++-------
 tests/conform/test-anchors.c          |   54 ++++++++++----------
 tests/conform/test-binding-pool.c     |   16 +++---
 tests/interactive/test-animation.c    |    5 +-
 tests/interactive/test-binding-pool.c |   16 +++---
 tests/interactive/test-layout.c       |   68 ++++++++++++-------------
 tests/interactive/test-project.c      |   18 +++----
 tests/interactive/test-text-field.c   |    8 +--
 11 files changed, 142 insertions(+), 183 deletions(-)

commit 26f07abc6566e88828a9d8ca9419b1de3bec7c46
Author: Neil Roberts <neil@linux.intel.com>
Date:   Wed Jun 3 15:22:42 2009 +0100

    [cogl-material] Allow setting a layer with an invalid texture handle
    
    It was previously possible to create a material layer with no texture
    by setting some property on it such as the matrix. However it was not
    possible to get back to that state without removing the layer and
    recreating it. It is useful to be able to remove the texture to free
    resources without forgetting the state of the layer so we can put a
    different texture in later.

 clutter/cogl/common/cogl-material.c |    6 ++++--
 1 file changed, 4 insertions(+), 2 deletions(-)

commit 9c7afe0c5bf99e38c6fd4584b8fa3b0ed02cf996
Author: Neil Roberts <neil@linux.intel.com>
Date:   Thu Jun 4 13:05:12 2009 +0100

    [timeline] Remove the concept of frames from timelines
    
    Timelines no longer work in terms of a frame rate and a number of
    frames but instead just have a duration in milliseconds. This better
    matches the working of the master clock where if any timelines are
    running it will redraw as fast as possible rather than limiting to the
    lowest rated timeline.
    
    Most applications will just create animations and expect them to
    finish in a certain amount of time without caring about how many
    frames are drawn. If a frame is going to be drawn it might as well
    update all of the animations to some fraction of the total animation
    rather than rounding to the nearest whole frame.
    
    The 'frame_num' parameter of the new-frame signal is now 'msecs' which
    is a number of milliseconds progressed along the
    timeline. Applications should use clutter_timeline_get_progress
    instead of the frame number.
    
    Markers can now only be attached at a time value. The position is
    stored in milliseconds rather than at a frame number.
    
    test-timeline-smoothness and test-timeline-dup-frames have been
    removed because they no longer make sense.

 clutter/clutter-alpha.c                     |  116 +++--
 clutter/clutter-timeline.c                  |  638 ++++++++-------------------
 clutter/clutter-timeline.h                  |   24 +-
 doc/reference/clutter/clutter-sections.txt  |    8 +-
 tests/conform/Makefile.am                   |    2 -
 tests/conform/test-conform-main.c           |    3 -
 tests/conform/test-timeline-dup-frames.c    |  134 ------
 tests/conform/test-timeline-interpolate.c   |   19 +-
 tests/conform/test-timeline-rewind.c        |   12 +-
 tests/conform/test-timeline-smoothness.c    |  147 ------
 tests/conform/test-timeline.c               |   48 +-
 tests/interactive/test-actor-clone.c        |    7 +-
 tests/interactive/test-actors.c             |    9 +-
 tests/interactive/test-behave.c             |    2 +-
 tests/interactive/test-cogl-multitexture.c  |    8 +-
 tests/interactive/test-cogl-primitives.c    |    7 +-
 tests/interactive/test-cogl-tex-polygon.c   |    2 +-
 tests/interactive/test-cogl-tex-tile.c      |    2 +-
 tests/interactive/test-cogl-vertex-buffer.c |    5 +-
 tests/interactive/test-depth.c              |    2 +-
 tests/interactive/test-layout.c             |    2 +-
 tests/interactive/test-multistage.c         |    2 +-
 tests/interactive/test-paint-wrapper.c      |   13 +-
 tests/interactive/test-pixmap.c             |    2 +-
 tests/interactive/test-rotate.c             |    2 +-
 tests/interactive/test-scale.c              |    2 +-
 tests/interactive/test-score.c              |   10 +-
 tests/interactive/test-texture-async.c      |    2 +-
 tests/interactive/test-texture-quality.c    |    2 +-
 tests/interactive/test-threads.c            |    2 +-
 tests/interactive/test-viewport.c           |    2 +-
 31 files changed, 323 insertions(+), 913 deletions(-)

commit c20886c5e36fa92a8bfa79a5c24d73d4c558b9ae
Author: Neil Roberts <neil@linux.intel.com>
Date:   Thu Jun 4 12:04:47 2009 +0100

    [gles/cogl-shader] Fix parameter spec for cogl_shader_get_info_log
    
    The stub version of cogl_shader_get_info_log needed to be updated to
    match the changes to the function signature in 61deeafa.

 clutter/cogl/gles/cogl-shader.c |    7 +++----
 1 file changed, 3 insertions(+), 4 deletions(-)

commit fa0b33ec30a0e95e6dc0731abe698e16135b19db
Author: Neil Roberts <neil@linux.intel.com>
Date:   Thu Jun 4 11:59:17 2009 +0100

    [clutter-stage-win32] Call clutter_actor_map instead of setting the flags
    
    The clutter_actor_map and unmap functions need to be called to
    properly update the mapped state. This matches the changes to the X11
    stage in 125bded8.

 clutter/win32/clutter-stage-win32.c |    8 ++++----
 1 file changed, 4 insertions(+), 4 deletions(-)

commit af68945486ff20adb8d386af5dd0b76a50eca098
Author: Neil Roberts <neil@linux.intel.com>
Date:   Thu Jun 4 11:50:52 2009 +0100

    [clutter-event-win32] Fix the argument types to clutter_actor_get_size
    
    clutter_actor_get_size now takes float pointers so it was issuing a
    warning.

 clutter/win32/clutter-event-win32.c |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit f89ff7f3835edab93de1c67895b6a754abffc5eb
Author: Neil Roberts <neil@linux.intel.com>
Date:   Thu Jun 4 11:50:06 2009 +0100

    Load glBlendEquation and glBlendColor using cogl_get_proc_address
    
    These are defined since OpenGL 1.2 and since Windows doesn't export
    any functions defined after 1.1 we need to load them dynamically.

 clutter/cogl/common/cogl-material.c |    2 ++
 clutter/cogl/gl/cogl-context.h      |    2 ++
 clutter/cogl/gl/cogl-defines.h.in   |   11 +++++++++++
 clutter/cogl/gl/cogl.c              |    7 +++++++
 4 files changed, 22 insertions(+)

commit daa95b561e1dda0c13624fdbde602c36dc786842
Author: Neil Roberts <neil@linux.intel.com>
Date:   Thu Jun 4 11:48:51 2009 +0100

    Rename 'near' and 'far' variables to 'z_near' and 'z_far'
    
    The Windows headers define near and far to be empty so it breaks the
    build.

 clutter/cogl/cogl-matrix.h                |   12 ++++++------
 clutter/cogl/common/cogl-current-matrix.c |   18 +++++++++---------
 2 files changed, 15 insertions(+), 15 deletions(-)

commit b5a7b3a004de7e0b237811dbf8c4feb025a09333
Author: Neil Roberts <neil@linux.intel.com>
Date:   Thu Jun 4 11:03:34 2009 +0100

    [configure] Require pango 1.20 instead of 1.18
    
    Clutter now calls pango_layout_set_height which is only available
    since Pango 1.20.

 README       |    2 +-
 configure.ac |    2 +-
 2 files changed, 2 insertions(+), 2 deletions(-)

commit 6825b9db1c1eaeab151d4ca9cc4f5ec923cbcde0
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Wed Jun 3 12:59:16 2009 +0100

    [actor] Unrealize on destroy
    
    If the application code calls for destruction of an actor we need
    to make sure that the actor is unrealized before running the dispose
    sequence; otherwise, we might trigger an assertion failure on composite
    actors.

 clutter/clutter-actor.c |    5 +++++
 1 file changed, 5 insertions(+)

commit 181ba67114d8bd88c0b7091ad9033ebee6bff63c
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Wed Jun 3 14:03:25 2009 +0100

    Revert commit 762873e7
    
    The commit 762873e79e501c949f3ef55cbac20276b6f6ed4e is completely
    and utterly wrong and I should have never pushed it.
    
    Serves me well for trying to work on three different branches and
    on three different things.

 clutter/clutter-master-clock.c |   21 +--------------------
 clutter/clutter-timeline.c     |   10 +++-------
 clutter/clutter-timeline.h     |    2 +-
 3 files changed, 5 insertions(+), 28 deletions(-)

commit 762873e79e501c949f3ef55cbac20276b6f6ed4e
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Wed Jun 3 12:02:56 2009 +0100

    [master clock] Avoid excessive redraws
    
    Currently, the clock source spins a redraw every time there is at
    least a timeline running. If the timelines were not advanced in
    the previous frame, though, because their interval is larger than
    the vblanking interval then this will lead to excessive redraws of
    the scenegraph even if nothing has changed.
    
    To avoid this a simple guard should be set by the MasterClock::advance
    method in case no timeline was effectively advanced, and checked
    before dispatching the stage redraws.

 clutter/clutter-master-clock.c |   21 ++++++++++++++++++++-
 clutter/clutter-timeline.c     |   10 +++++++---
 clutter/clutter-timeline.h     |    2 +-
 3 files changed, 28 insertions(+), 5 deletions(-)

commit f4a431a947011aaa4101935691058a10cd80ff08
Author: Neil Roberts <neil@linux.intel.com>
Date:   Tue Jun 2 18:01:18 2009 +0100

    [cogl-texture] Don't take ownership of the data in cogl_texture_new_from_bitmap
    
    When creating a Cogl texture from a Cogl bitmap it would steal the
    data by setting the bitmap_owner flag and clearing the data pointer
    from the bitmap. The data would be freed by the time the
    new_from_bitmap is finished. There is no reason to do this because the
    data will be freed when the Cogl bitmap is unref'd and it is confusing
    not to be able to reuse the bitmap for creating multiple textures.

 clutter/cogl/gl/cogl-texture.c |    3 +--
 1 file changed, 1 insertion(+), 2 deletions(-)

commit b6f1322e07f0fd678a48f1128eae6cba8b8211d7
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Mon Jun 1 18:43:47 2009 +0100

    [tests] Add ClutterColor conformance tests
    
    Add a conformance test unit for the to_string() and from_string()
    methods.

 .gitignore                        |    2 ++
 tests/conform/Makefile.am         |    1 +
 tests/conform/test-color.c        |   71 +++++++++++++++++++++++++++++++++++++
 tests/conform/test-conform-main.c |    3 ++
 4 files changed, 77 insertions(+)

commit bd13a4ddc486586bc1051080cbe64c2d90ee853e
Author: Robert Staudinger <robsta@gnome.org>
Date:   Mon Jun 1 18:54:46 2009 +0200

    [color] Add support for the "#rgba" color format
    
    clutter_color_from_string() only supported the "#rrggbbaa" format with
    alpha channel, this patch adds support for "#rgba".
    
    Colors in "#rrggbb" format were parsed manually, this is now left to
    the pango color parsing fallback, since that's handling it just fine.
    
    Signed-off-by: Emmanuele Bassi <ebassi@linux.intel.com>

 clutter/clutter-color.c |   58 +++++++++++++++++++++++------------------------
 1 file changed, 28 insertions(+), 30 deletions(-)

commit ffd5fb172b390f7fbdeadce3dda181a67a1e7916
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Mon Jun 1 17:35:41 2009 +0100

    [docs] Rework the API reference version generation
    
    Clutter copies the gtk-doc from the usual gtk+ template, and
    has a version.xml.in containing only:
    
      @VERSION@
    
    Without a newline at the end. Unfortunately, it appears that
    autoconf has started adding a newline to the generated version.xml
    which then is used as the payload for the "version" XML entity.
    
    Instead of using a secondary file we can make configure generate
    the whole clutter-docs.xml and cogl-docs.xml files from a template;
    this way we also get the ability to substitute more autoconf variables
    into the documentation -- if needs be.

 .gitignore                                |    4 +-
 configure.ac                              |    4 +-
 doc/reference/clutter/Makefile.am         |    2 -
 doc/reference/clutter/clutter-docs.xml    |  245 -----------------------------
 doc/reference/clutter/clutter-docs.xml.in |  245 +++++++++++++++++++++++++++++
 doc/reference/clutter/version.xml.in      |    1 -
 doc/reference/cogl/Makefile.am            |    2 -
 doc/reference/cogl/cogl-docs.xml          |  107 -------------
 doc/reference/cogl/cogl-docs.xml.in       |  107 +++++++++++++
 doc/reference/cogl/version.xml.in         |    1 -
 10 files changed, 356 insertions(+), 362 deletions(-)

commit 61deeafa71a81384978bd199f0df6e88d0904a52
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Mon Jun 1 16:31:32 2009 +0100

    [cogl-shader] Make get_info_log() slightly nicer
    
    The cogl_shader_get_info_log() function is very inconvenient for
    language bindings and for regular use, as it requires a static
    buffer to be filled -- basically just providing a wrapper around
    glGetInfoLogARB().
    
    Since COGL aims to be a more convenient API than raw GL we should
    just make cogl_shader_get_info_log() return an allocated string
    with the GLSL compiler log.

 clutter/clutter-shader.c        |   12 +++++++++---
 clutter/cogl/cogl-shader.h      |   13 ++++++-------
 clutter/cogl/gl/cogl-shader.c   |   15 ++++++++-------
 clutter/cogl/gles/cogl-shader.c |   15 ++++++++-------
 4 files changed, 31 insertions(+), 24 deletions(-)

commit 5c26cc6ba7ab9b90bfe4aa2612a56c191c8b1204
Author: Neil Roberts <neil@linux.intel.com>
Date:   Mon Jun 1 17:10:22 2009 +0100

    Use GL_QUADS for flushing a quad batch
    
    Instead of using GL_TRIANGLES and uploading the indices every time, it
    now uses GL_QUADS instead on OpenGL. Under GLES it still uses indices
    but it uses the new cogl_vertex_buffer_indices_get_for_quads function
    to avoid uploading the vertices every time.
    
    This requires the _cogl_vertex_buffer_indices_pointer_from_handle
    function to be exposed privately to the rest of Cogl.
    
    The static_indices array has been removed from the Cogl context.

 clutter/cogl/common/cogl-primitives.c            |   79 +++++++---------------
 clutter/cogl/common/cogl-vertex-buffer-private.h |    4 ++
 clutter/cogl/gl/cogl-context.c                   |    3 -
 clutter/cogl/gl/cogl-context.h                   |    1 -
 clutter/cogl/gles/cogl-context.c                 |    3 -
 clutter/cogl/gles/cogl-context.h                 |    1 -
 6 files changed, 29 insertions(+), 62 deletions(-)

commit 6cd1cb21cc0b629535994ad41e4fc78613fe0319
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Mon Jun 1 15:51:59 2009 +0100

    [introspection] Remove Cogl symbols from Clutter GIR
    
    The GIR file for Clutter still contains symbols from COGL, even
    though we provide a Cogl GIR as well. The Clutter GIR should
    depend on the Cogl GIR instead.

 clutter/Makefile.am |    8 +-------
 1 file changed, 1 insertion(+), 7 deletions(-)

commit 86230eb9fa134c3df50634e9196477c82d20a403
Author: Marc-André Lureau <marcandre.lureau@gmail.com>
Date:   Sat May 30 23:58:03 2009 +0300

    build: don't double install clutter-version.h
    
    Automake 1.11 installs several files in one command, and it fails if
    the same file is installed two times.
    
    See NEWS for details:
    http://lists.gnu.org/archive/html/automake/2009-05/msg00093.html
    
    Signed-off-by: Emmanuele Bassi <ebassi@linux.intel.com>

 clutter/Makefile.am |    1 -
 1 file changed, 1 deletion(-)

commit 097400747e112d01cbd4ecb72401abcca41158f9
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Mon Jun 1 12:51:23 2009 +0100

    [git ignore] Add report XML output file

 .gitignore |    1 +
 1 file changed, 1 insertion(+)

commit c759aeb6a720043b8b74242d5e18da405be3825d
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Sun May 31 15:15:46 2009 +0100

    Uniformly use floats in Actor properties
    
    All the underlying implementation and the public entry points have
    been switched to floats; the only missing bits are the Actor properties
    that deal with positioning and sizing.
    
    This usually means a major pain when dealing with GValues and varargs
    functions. While GValue will warn you when dealing with the wrong
    conversions, varags will simply die an horrible (and hard to debug)
    death via segfault. Nothing much to do here, except warn people in the
    release notes and hope for the best.

 clutter/clutter-actor.c                        |  353 ++++++++++++++----------
 clutter/clutter-interval.c                     |   12 +-
 tests/conform/Makefile.am                      |    3 +
 tests/conform/test-anchors.c                   |  145 +++++-----
 tests/conform/test-binding-pool.c              |   18 +-
 tests/interactive/test-animation.c             |    8 +-
 tests/interactive/test-clutter-cairo-flowers.c |   23 +-
 tests/interactive/test-cogl-multitexture.c     |    2 +-
 tests/interactive/test-cogl-tex-polygon.c      |    2 +-
 tests/interactive/test-cogl-tex-tile.c         |    2 +-
 tests/interactive/test-easing.c                |    4 +-
 tests/interactive/test-layout.c                |   17 +-
 tests/interactive/test-multistage.c            |    2 +-
 tests/interactive/test-paint-wrapper.c         |    2 +-
 tests/interactive/test-rotate.c                |    2 +-
 tests/interactive/test-shader.c                |    3 +-
 16 files changed, 346 insertions(+), 252 deletions(-)

commit bafa448666a73dd06b69b6167138c3c43e854482
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Sun May 31 15:07:58 2009 +0100

    [texture] Increase verbosity of error messages
    
    The GError messages in set_from_rgb_data() and set_from_yuv_data()
    are a little bit too thin on details.

 clutter/clutter-texture.c |   15 ++++++++++++---
 1 file changed, 12 insertions(+), 3 deletions(-)

commit 8b71fa1acbb8580e61ce30fd6a48a4bf0024ba97
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Sun May 31 15:06:16 2009 +0100

    [docs] Remove misleading text
    
    The documentation for ClutterTexture's set_from_rgb_data() and
    set_from_yuv_data() says:
    
      Note: This function is likely to change in future versions.
    
    This is not true, since they'll remain for the whole 1.x API cycle.

 clutter/clutter-texture.c |   26 +++++++++++---------------
 1 file changed, 11 insertions(+), 15 deletions(-)

commit 3b70e0b6b7a3c01c9e9d0c15f39b676877eee119
Author: Neil Roberts <neil@linux.intel.com>
Date:   Fri May 29 11:52:21 2009 +0100

    [pango-display-list] Use the CoglAttributeType macros instead of GL_FLOAT
    
    Cogl now has an enum for the VBO attribute type so we should use that
    instead of the GL enums.

 clutter/pango/cogl-pango-display-list.c |    6 ++++--
 1 file changed, 4 insertions(+), 2 deletions(-)

commit 97921a7d137bde2b73cfb2dabea89c14e30510a9
Author: Neil Roberts <neil@linux.intel.com>
Date:   Fri May 29 11:38:03 2009 +0100

    [pango-display-list] Use indexed vertices on GLES
    
    Now that CoglVertexBuffers support indices we can use them with GLES
    to avoid duplicating vertices. Regular GL still uses GL_QUADS because
    it is shown to still have a performance benefit over indices with the
    Intel drivers.

 clutter/pango/cogl-pango-display-list.c |   47 ++++++++++++++-----------------
 1 file changed, 21 insertions(+), 26 deletions(-)

commit 67544f38d4dc93bd1be477656171681c5acf9721
Author: Neil Roberts <neil@linux.intel.com>
Date:   Thu May 28 13:47:18 2009 +0100

    [cogl-vertex-buffer] Add cogl_vertex_buffer_indices_get_for_quads
    
    This function can be used as an efficient way of drawing groups of
    quads without using GL_QUADS. It generates a VBO containing the
    indices needed to render using pairs of GL_TRIANGLES. The VBO is
    globally cached so that it only needs to be uploaded whenever more
    indices are requested than ever before.

 clutter/cogl/cogl-vertex-buffer.h        |   40 +++++++++++++++
 clutter/cogl/common/cogl-vertex-buffer.c |   80 ++++++++++++++++++++++++++++++
 clutter/cogl/gl/cogl-context.c           |    9 ++++
 clutter/cogl/gl/cogl-context.h           |    6 +++
 clutter/cogl/gles/cogl-context.c         |    9 ++++
 clutter/cogl/gles/cogl-context.h         |    7 ++-
 doc/reference/cogl/cogl-sections.txt     |    1 +
 7 files changed, 151 insertions(+), 1 deletion(-)

commit 4afe1e9a8b7822522e990989ad156df49bfc29e3
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Fri May 29 17:53:19 2009 +0100

    [actor] Add allocate_available_size()
    
    The allocate_available_size() method is a convenience method in
    the same spirit as allocate_preferred_size(). While the latter
    will allocate the preferred size of an actor regardless of the
    available size provided by the actor's parent -- and thus it's
    suitable for simple fixed layout managers like ClutterGroup -- the
    former will take into account the available size provided by the
    parent and never allocate more than that; it is, thus, suitable
    for simple fluid layout managers.

 clutter/clutter-actor.c                    |  112 ++++++++++++++++++++++++++++
 clutter/clutter-actor.h                    |    6 ++
 doc/reference/clutter/clutter-sections.txt |    1 +
 3 files changed, 119 insertions(+)

commit 293eeed507460ef6a9168264b04f119acf567eb7
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Fri May 29 17:50:58 2009 +0100

    [build] Remove cogl-enum-types.h on distclean
    
    The cogl-enum-types.h file is created by glib-mkenums under
    /clutter/cogl/common, and then copied in /clutter/cogl in order
    to make the inclusion of that file work inside cogl.h.
    
    Since we're copying it in a different location, the Makefile
    for that location has to clean up the copy.

 clutter/cogl/Makefile.am |    4 ++++
 1 file changed, 4 insertions(+)

commit 936f638a4234b0dd9f5122447bf09f8fcde1ac26
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Fri May 29 17:10:27 2009 +0100

    [build] Fix dist issues
    
    * cogl-deprecated.h is not being installed
    
    * cogl-enum-types.c.in is not part of the dist

 clutter/cogl/Makefile.am        |    1 +
 clutter/cogl/common/Makefile.am |    2 +-
 2 files changed, 2 insertions(+), 1 deletion(-)

commit faec5c468ba77e61a3f724be49f031be65ef2011
Author: Jonas Bonn <jonas@southpole.se>
Date:   Thu May 28 09:47:45 2009 +0200

    Freeze notifiers around property setters
    
    Notifications should be fired off from both the internal timeline and
    the wrapping animation here, so notifiers should be frozen around these
    property setters.
    
    Signed-off-by: Jonas Bonn <jonas@southpole.se>
    Signed-off-by: Emmanuele Bassi <ebassi@linux.intel.com>

 clutter/clutter-animation.c |    8 ++++++++
 1 file changed, 8 insertions(+)

commit 1187972e45b8c64ad25c2a243b0112bbde84e3e6
Author: Jonas Bonn <jonas@southpole.se>
Date:   Thu May 28 09:40:09 2009 +0200

    [animation] Final cleanups to new Animation model
    
    Just a couple of final cleanups after the reimplementation of the
    Animation model.
    
    i)  _set_mode does not need to set the timeline on the alpha
    ii) freeze notifications around the setting of a new alpha
    
    Signed-off-by: Jonas Bonn <jonas@southpole.se>
    Signed-off-by: Emmanuele Bassi <ebassi@linux.intel.com>

 clutter/clutter-animation.c |   11 ++++++-----
 1 file changed, 6 insertions(+), 5 deletions(-)

commit c5e659d5922b406059c94545c1a5c773f61b2379
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Fri May 29 14:52:49 2009 +0100

    [master clock] Use StageManager::peek_stages()
    
    Use the new StageManager::peek_stages() method to avoid a copy
    of the stages list.

 clutter/clutter-master-clock.c |    7 ++-----
 1 file changed, 2 insertions(+), 5 deletions(-)

commit 5d4974ed365d9882945f211f1dadd067b4b2d8b1
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Fri May 29 14:45:53 2009 +0100

    [stage manager] Add peek_stages()
    
    We need an method for StageManager that returns a const pointer
    to the internal list, to avoid the copy.

 clutter/clutter-stage-manager.c |   24 ++++++++++++++++++++++--
 clutter/clutter-stage-manager.h |    1 +
 2 files changed, 23 insertions(+), 2 deletions(-)

commit 63c7cc0175461a08e5b1d3f3b78e37d581a03ffd
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Fri May 29 14:25:19 2009 +0100

    [master clock] Handle Timeline::started signal correctly
    
    The "started" signal is sent first after the timeline has been set to the
    'running' state. For this reason, checking if the clock has any running
    timelines running will always return true in the "started" signal handler:
    the timeline that sent the signal is running.
    
    What needs to be checked in the signal handler is if there are any
    timelines running other than the one that emitted the ::started signal,
    which we know is running anyway.
    
    This prevents frames from being lost at the beginning of an animation when
    a timeline is started after a quiescent period.
    
    Fixes bug:
    
      http://bugzilla.openedhand.com/show_bug.cgi?id=1617
    
    Signed-off-by: Jonas Bonn <jonas@southpole.se>
    Signed-off-by: Emmanuele Bassi <ebassi@linux.intel.com>

 clutter/clutter-master-clock.c |   67 +++++++++++++++++++++++++++++++++++-----
 1 file changed, 60 insertions(+), 7 deletions(-)

commit cbbc1a9ca36972ee0bf0612605c5176ce9b63b7f
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Fri May 29 14:27:55 2009 +0100

    [build] Copy cogl-enum-types.h under the guard
    
    We avoid rebuilding cogl-enum-types.h and cogl-enum-types.c by
    using a "guard" -- a stamp file that will block Makefile. Since
    we need cogl-enum-types.h into /clutter/cogl as well for the
    cogl.h include to work, if we copy the cogl-enum-types.h
    unconditionally it will cause a rebuild of the whole COGL; which
    will cause a full rebuild.
    
    To solve this, we can copy the header file when generating it
    under the stamp file.

 clutter/cogl/common/Makefile.am |    4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

commit cfb95084651b0ea199eecef5993d7fc2da3586fa
Author: Neil Roberts <neil@linux.intel.com>
Date:   Fri May 29 14:23:16 2009 +0100

    [configure] Always execute the AM_CONDITIONAL call for X11_TESTS
    
    Automake gets upset if an AM_CONDITIONAL call is itself conditionally
    executed.

 configure.ac |    4 +++-
 1 file changed, 3 insertions(+), 1 deletion(-)

commit e565c1f1dbfdb29fcaa7065d078f524c8432c12c
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Fri May 29 12:50:48 2009 +0100

    [build] Encode the target into the backend library
    
    The libclutter-cogl internal object should be the only dependency
    for Clutter, since we are already copying it inside clutter/cogl
    for the introspection scanner. For this reason, the backend-specific,
    real internal object should be built with the backend encoded into
    the file name, like libclutter-common. This makes the build output
    a little bit more clear: instead of having two:
    
      LINK libclutter-cogl-common.la
      ...
      LINK libclutter-cogl.la
      LINK libclutter-cogl.la
    
    We'll have:
    
      LINK libclutter-cogl-common.la
      ...
      LINK libclutter-cogl-gl.la
      LINK libclutter-cogl.la
    
    Same applies for the GLES backend.

 clutter/cogl/Makefile.am      |    4 ++--
 clutter/cogl/gl/Makefile.am   |   10 +++++-----
 clutter/cogl/gles/Makefile.am |   12 ++++++------
 3 files changed, 13 insertions(+), 13 deletions(-)

commit b4861cbd21210b99294b93ea18bbfb4724a0aca6
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Fri May 29 12:40:23 2009 +0100

    Use g_once when registering enumeration types
    
    Just like we do with GObject types and G_DEFINE_TYPE, we should
    use the g_once_init_enter/g_once_init_leave mechanism to make the
    GType registration of enumeration types thread safe.

 clutter/clutter-enum-types.c.in          |   20 +++++++++++++++-----
 clutter/cogl/common/cogl-enum-types.c.in |   18 +++++++++++++-----
 2 files changed, 28 insertions(+), 10 deletions(-)

commit 3248bb1b755ae23cfb1a2eabd7a72b803faa5a31
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Fri May 29 12:31:47 2009 +0100

    [cogl] Generate enumeration GTypes
    
    COGL is starting to have more enumerations than I can handle
    by hand. Let's use glib-mkenums and be done with it.

 .gitignore                               |    3 +
 clutter/cogl/Makefile.am                 |   40 +++++---
 clutter/cogl/cogl-shader.h               |    5 +-
 clutter/cogl/cogl-types.h                |   83 +++-------------
 clutter/cogl/cogl.h.in                   |   11 ++-
 clutter/cogl/common/Makefile.am          |   53 +++++++++-
 clutter/cogl/common/cogl-enum-types.c.in |   33 +++++++
 clutter/cogl/common/cogl-enum-types.h.in |   25 +++++
 clutter/cogl/common/cogl-util.c          |  154 ------------------------------
 clutter/cogl/gl/Makefile.am              |    5 -
 10 files changed, 161 insertions(+), 251 deletions(-)

commit 7b75f93db1ad29ef4c81c20ee8434876d54aa358
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu May 28 17:18:13 2009 +0100

    [docs] Fixes for the API reference
    
    * Add unused symbols
    
    * Document and sync argument names with their gtk-doc counterpart
    
    * Add missing descriptions

 clutter/clutter-actor.h                    |    4 ++++
 clutter/clutter-animation.c                |    2 +-
 clutter/clutter-container.h                |    5 ++++
 clutter/clutter-main.h                     |    2 +-
 clutter/clutter-texture.c                  |    2 +-
 clutter/cogl/cogl-material.h               |    5 ++++
 clutter/cogl/cogl-shader.h                 |   14 ++++++++---
 clutter/cogl/cogl-vertex-buffer.h          |   35 +++++++++++++++++-----------
 clutter/cogl/cogl.h.in                     |    4 ++++
 doc/reference/clutter/clutter-sections.txt |    7 ++++--
 doc/reference/cogl/cogl-sections.txt       |    6 -----
 11 files changed, 59 insertions(+), 27 deletions(-)

commit e51fbebd67e04182438c7f24d5db7b0f678c3f56
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu May 28 17:18:10 2009 +0100

    [git ignore] Add blend strings test

 .gitignore |    1 +
 1 file changed, 1 insertion(+)

commit 9557328e4ec61ed0c78c165135c8f4b216f26b7f
Merge: 7252c14 d960ce4
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu May 28 15:53:56 2009 +0100

    Merge branch 'master' into 1.0-integration
    
    * master:
      [test-text-perf] Use queue_redraw instead of painting the stage directly
      [actor] In paint when opacity == 0, clear the queued_redraw flag

commit d960ce46e5fe087bccae2aa9a023fa1a80b76e79
Author: Neil Roberts <neil@linux.intel.com>
Date:   Thu May 28 15:27:09 2009 +0100

    [test-text-perf] Use queue_redraw instead of painting the stage directly
    
    If it doesn't queue a redraw and allow the backend to clear and swap
    the buffers then the results will be skewed because it is not
    predictable when the driver will actually render the scene.

 tests/micro-bench/test-text-perf.c |   16 +++++++++++-----
 1 file changed, 11 insertions(+), 5 deletions(-)

commit 7252c141970eaa7c17214e9890b917221be70fd0
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu May 28 13:03:19 2009 +0100

    [cogl] Make cogl_setup_viewport() a private function
    
    The setup_viewport() function should only be used by Clutter and
    not by application code.
    
    It can be emulated by changing the Stage size and perspective and
    requeueing a redraw after calling clutter_stage_ensure_viewport().

 clutter/clutter-main.c     |   16 +++++++++-------
 clutter/clutter-texture.c  |   10 +++++-----
 clutter/cogl/cogl.h.in     |   10 ++++++----
 clutter/cogl/common/cogl.c |   16 ++++++++--------
 4 files changed, 28 insertions(+), 24 deletions(-)

commit 32018584c0eda5bd29d4f3a773e7d243a740cbc4
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu May 28 12:52:00 2009 +0100

    [cogl deprecated] Add backface culling deprecation
    
    The backface culling enabling function was split and renamed, just
    like the depth testing one, so we need to add the macro to the
    cogl-deprecated.h header.

 clutter/cogl/cogl-deprecated.h |   13 ++++++-------
 1 file changed, 6 insertions(+), 7 deletions(-)

commit be826ed4e7b9e834da0055f4e5d253c22204b870
Author: Robert Bragg <robert@linux.intel.com>
Date:   Thu May 28 12:49:29 2009 +0100

    [cogl vertex buffers] Give indices a CoglHandle so they are shareable
    
    Previously indices were tightly bound to a particular Cogl vertex buffer
    but we would like to be able to share indices so now we have
    cogl_vertex_buffer_indices_new () which returns a CoglHandle.
    
    In particular we could like to have a shared set of indices for drawing
    lists of quads that can be shared between the pango renderer and the
    Cogl journal.

 clutter/cogl/cogl-vertex-buffer.h                |   34 +++-----
 clutter/cogl/common/cogl-vertex-buffer-private.h |    7 +-
 clutter/cogl/common/cogl-vertex-buffer.c         |   97 +++++-----------------
 tests/interactive/test-cogl-vertex-buffer.c      |   16 ++--
 4 files changed, 46 insertions(+), 108 deletions(-)

commit f0849fc3e25185e86464cadcc98a7bcdac1b0ab8
Author: Robert Bragg <robert@linux.intel.com>
Date:   Thu May 28 02:03:16 2009 +0100

    [cogl journal] If we are only flushing one quad use a TRIANGLE_FAN
    
    At the moment Cogl doesn't do much batching of quads so most of the time we
    are flushing a single quad at a time.  This patch simplifies how we submit
    those quads to OpenGL by using glDrawArrays with GL_TRIANGLE_FAN mode
    instead of sending indexed vertices using GL_TRIANGLES mode.
    
    Note: I hope to follow up soon with changes that improve our batching and
    also move the indices into a VBO so they don't need to be re-validated every
    time we call glDrawElements.

 clutter/cogl/common/cogl-primitives.c |   80 +++++++++++++++++++--------------
 1 file changed, 46 insertions(+), 34 deletions(-)

commit 57cb20dc0685889b5eaa89d409a47d67d15450fb
Author: Robert Bragg <robert@linux.intel.com>
Date:   Tue May 26 18:25:00 2009 +0100

    [deprecated defines] Adds some missing cogl_texture_* deprecated defines
    
    To assist people porting code from 0.8, the cogl_texture_* functions that
    have been replaced now have defines that give some hint as to how they
    should be replaced.

 clutter/cogl/cogl-deprecated.h |    8 ++++++++
 1 file changed, 8 insertions(+)

commit 605243d95285ad57cf55dc7674884f3ed4b09524
Author: Robert Bragg <robert@linux.intel.com>
Date:   Tue May 26 16:55:11 2009 +0100

    [cogl] renamed cogl_enable_* to cogl_set_*_enabled + added getters
    
    cogl_enable_depth_test and cogl_enable_backface_culling have been renamed
    and now have corresponding getters, the new functions are:
      cogl_set_depth_test_enabled
      cogl_get_depth_test_enabled
      cogl_set_backface_culling_enabled
      cogl_get_backface_culling_enabled

 README                                |    3 +++
 clutter/cogl/cogl-deprecated.h        |    1 +
 clutter/cogl/cogl.h.in                |   27 +++++++++++++++++++++++----
 clutter/cogl/common/cogl.c            |   25 +++++++++++++++++--------
 doc/reference/cogl/cogl-sections.txt  |    6 ++++--
 tests/conform/test-backface-culling.c |    4 ++--
 6 files changed, 50 insertions(+), 16 deletions(-)

commit 96188bab621d4a342d67a1e0a85dd1dcb3bdee68
Author: Robert Bragg <robert@linux.intel.com>
Date:   Tue May 26 11:33:54 2009 +0100

    [cogl matrix] Support ortho and perspective projections.
    
    This adds cogl_matrix api for multiplying matrices either by a perspective
    or ortho projective transform.  The internal matrix stack and current-matrix
    APIs also have corresponding support added.
    
    New public API:
    cogl_matrix_perspective
    cogl_matrix_ortho
    cogl_ortho
    cogl_set_modelview_matrix
    cogl_set_projection_matrix

 clutter/cogl/cogl-matrix.h                |   70 ++++++++--
 clutter/cogl/cogl.h.in                    |   39 ++++++
 clutter/cogl/common/cogl-current-matrix.c |  215 +++++++++++++++++------------
 clutter/cogl/common/cogl-matrix-stack.c   |   68 ++++++---
 clutter/cogl/common/cogl-matrix-stack.h   |   20 ++-
 clutter/cogl/common/cogl-matrix.c         |   87 ++++++++++--
 doc/reference/cogl/cogl-sections.txt      |   19 +--
 7 files changed, 370 insertions(+), 148 deletions(-)

commit 12c8ff8606c2fb6212e59c50842e04b634f7c4b2
Author: Robert Bragg <robert@linux.intel.com>
Date:   Tue May 26 15:41:53 2009 +0100

    [cogl] Remove cogl_{create,destroy}_context from the public API
    
    cogl_create_context is dealt with internally when _cogl_get_default context
    is called, and cogl_destroy_context is currently never called.
    
    It might be nicer later to get an object back when creating a context so
    Cogl can support multiple contexts, so these functions are being removed
    from the API until we get a chance to address context management properly.
    
    For now cogl_destroy_context is still exported as _cogl_destroy_context so
    Clutter could at least install a library deinit handler to call it.

 clutter/cogl/cogl.h.in               |   28 ++++++++++++----------------
 clutter/cogl/gl/cogl-context.c       |    4 ++--
 clutter/cogl/gles/cogl-context.c     |    4 ++--
 doc/reference/cogl/cogl-sections.txt |    3 ---
 4 files changed, 16 insertions(+), 23 deletions(-)

commit 59bd824404c34b20defb2e8e76335185e714efc7
Author: Robert Bragg <robert@linux.intel.com>
Date:   Tue May 26 16:27:36 2009 +0100

    [vbo indices] tweak add_indices api to return an id and add delete_indices api
    
    Originally cogl_vertex_buffer_add_indices let the user pass in their own unique
    ID for the indices; now the Id is generated internally and returned to the
    caller.

 clutter/cogl/cogl-vertex-buffer.h           |   30 +++++++++++-----
 clutter/cogl/common/cogl-vertex-buffer.c    |   52 +++++++++++++++++----------
 doc/reference/cogl/cogl-sections.txt        |    1 +
 tests/interactive/test-cogl-vertex-buffer.c |   19 +++++-----
 4 files changed, 67 insertions(+), 35 deletions(-)

commit d51faed66095259f17467dceba0cc0cd02dcd042
Author: Robert Bragg <robert@linux.intel.com>
Date:   Sun May 24 11:33:29 2009 +0100

    [cogl-vertex-buffer] Seal GL types from the public API
    
    We now have CoglAttributeType and CoglVerticesMode typedefs to replace the
    use of GLenum in the public API.

 clutter/cogl/cogl-vertex-buffer.h           |  118 ++++++++++++++++-----------
 clutter/cogl/common/cogl-vertex-buffer.c    |   48 +++++------
 tests/interactive/test-cogl-vertex-buffer.c |    6 +-
 3 files changed, 96 insertions(+), 76 deletions(-)

commit 6bb66866660018e90c2c1663e02fca3f0b818050
Author: Robert Bragg <robert@linux.intel.com>
Date:   Sun May 24 04:04:38 2009 +0100

    [cogl-vertex-buffers] Support putting index arrays into VBOS
    
    It's now possible to add arrays of indices to a Cogl vertex buffer and
    they will be put into an OpenGL vertex buffer object. Since it's quite
    common for index arrays to be static it saves the OpenGL driver from
    having to validate them repeatedly.
    
    This changes the cogl_vertex_buffer_draw_elements API: It's no longer
    possible to provide a pointer to an index array at draw time. So
    cogl_vertex_buffer_draw_elements now takes an indices identifier that
    should correspond to an idendifier returned when calling
    cogl_vertex_buffer_add_indices ()

 clutter/cogl/cogl-vertex-buffer.h                |   79 ++++++++---
 clutter/cogl/common/cogl-vertex-buffer-private.h |   33 +++--
 clutter/cogl/common/cogl-vertex-buffer.c         |  159 ++++++++++++++++++++--
 doc/reference/cogl/cogl-sections.txt             |    2 +
 tests/interactive/test-cogl-vertex-buffer.c      |   17 ++-
 5 files changed, 243 insertions(+), 47 deletions(-)

commit 68214fe4b88603c73a77d5cc543f8688a0bde82c
Author: Robert Bragg <robert@linux.intel.com>
Date:   Sat May 23 17:52:18 2009 +0100

    [cogl] Remove cogl_flush_gl_state from the API
    
    This is being removed before we release Clutter 1.0 since the implementation
    wasn't complete, and so we assume no one is using this yet.  Util we have
    someone with a good usecase, we can't pretend to support breaking out into
    raw OpenGL.

 clutter/cogl/cogl.h.in     |    8 +++++++-
 clutter/cogl/common/cogl.c |    2 ++
 2 files changed, 9 insertions(+), 1 deletion(-)

commit f322da3794f6556648566ebcf6b83f59f88e7a5b
Author: Robert Bragg <robert@linux.intel.com>
Date:   Sat May 23 17:42:10 2009 +0100

    [material] Reduce the material API in preperation for releasing Clutter 1.0
    
    There were a number of functions intended to support creating of new
    primitives using materials, but at this point they aren't used outside of
    Cogl so until someone has a usecase and we can get feedback on this
    API, it's being removed before we release Clutter 1.0.

 clutter/cogl/cogl-material.h                |  129 ++++-----------------------
 clutter/cogl/common/cogl-handle.h           |   17 ++--
 clutter/cogl/common/cogl-material-private.h |   86 ++++++++++++++++++
 clutter/cogl/common/cogl-material.c         |    6 +-
 clutter/cogl/common/cogl-primitives.c       |   50 +++++------
 clutter/cogl/common/cogl-vertex-buffer.c    |   15 ++--
 clutter/cogl/common/cogl.c                  |    3 +-
 clutter/cogl/gl/cogl-context.c              |    4 +-
 clutter/cogl/gl/cogl-primitives.c           |   15 ++--
 clutter/cogl/gles/cogl-context.c            |    4 +-
 clutter/cogl/gles/cogl-primitives.c         |   15 ++--
 doc/reference/cogl/cogl-sections.txt        |    3 +
 12 files changed, 174 insertions(+), 173 deletions(-)

commit f28d5e481b7e01b241618a10e7fde834de3ac2b2
Author: Robert Bragg <robert@linux.intel.com>
Date:   Sat May 23 16:23:00 2009 +0100

    [cogl-material] Removes all the API made redundant by the blend strings API
    
    This removes the following API:
      cogl_material_set_blend_factors
      cogl_material_set_layer_combine_function
      cogl_material_set_layer_combine_arg_src
      cogl_material_set_layer_combine_arg_op
    
    These were rather awkward to use, so since it's expected very few people are
    using them at this point and it should be straight forward to switch over
    to blend strings, the API is being removed before we release Clutter 1.0.

 clutter/cogl/cogl-material.h                |  293 ---------------------------
 clutter/cogl/common/cogl-material-private.h |   20 +-
 clutter/cogl/common/cogl-material.c         |  176 +++-------------
 clutter/pango/cogl-pango-render.c           |   22 +-
 doc/reference/cogl/cogl-sections.txt        |   11 -
 5 files changed, 38 insertions(+), 484 deletions(-)

commit 33994caa71fea904a80971a15216e6d7fa48712c
Author: Robert Bragg <robert@linux.intel.com>
Date:   Mon May 11 00:40:41 2009 +0100

    [cogl-material] Support string based blending and layer combine descriptions
    
    Setting up layer combine functions and blend modes is very awkward to do
    programatically.  This adds a parser for string based descriptions which are
    more consise and readable.
    
    E.g. a material layer combine function could now be given as:
      "RGBA = ADD (TEXTURE[A], PREVIOUS[RGB])"
    or
      "RGB = REPLACE (PREVIOUS)"
      "A = MODULATE (PREVIOUS, TEXTURE)"
    
    The simple syntax and grammar are only designed to expose standard fixed
    function hardware, more advanced combining must be done with shaders.
    
    This includes standalone documentation of blend strings covering the aspects
    that are common to blending and texture combining, and adds documentation
    with examples specific to the new cogl_material_set_blend() and
    cogl_material_layer_set_combine() functions.
    
    Note: The hope is to remove the now redundant bits of the material API
    before 1.0

 clutter/cogl/cogl-debug.h                   |   20 +-
 clutter/cogl/cogl-material.h                |  244 ++++++-
 clutter/cogl/common/Makefile.am             |    2 +
 clutter/cogl/common/cogl-blend-string.c     |  999 +++++++++++++++++++++++++++
 clutter/cogl/common/cogl-blend-string.h     |  151 ++++
 clutter/cogl/common/cogl-debug.c            |    3 +-
 clutter/cogl/common/cogl-material-private.h |   13 +-
 clutter/cogl/common/cogl-material.c         |  406 ++++++++++-
 clutter/cogl/gl/cogl-context.c              |    3 +
 clutter/cogl/gl/cogl-context.h              |    3 +
 clutter/cogl/gl/cogl-defines.h.in           |   12 +
 clutter/cogl/gl/cogl.c                      |   10 +
 clutter/cogl/gles/cogl-gles2-wrapper.c      |    9 +-
 clutter/cogl/gles/cogl-gles2-wrapper.h      |    5 +-
 clutter/cogl/gles/cogl-texture.c            |   49 +-
 doc/reference/cogl/Makefile.am              |    9 +-
 doc/reference/cogl/blend-strings.xml        |  130 ++++
 doc/reference/cogl/cogl-docs.xml            |    1 +
 doc/reference/cogl/cogl-sections.txt        |    4 +
 tests/conform/Makefile.am                   |    3 +-
 tests/conform/test-blend-strings.c          |  410 +++++++++++
 tests/conform/test-conform-main.c           |    2 +
 22 files changed, 2404 insertions(+), 84 deletions(-)

commit ef1a771fde77e29b8bf327905674da59ea3d0bf0
Author: Robert Bragg <robert@linux.intel.com>
Date:   Wed May 27 23:39:18 2009 +0100

    [build] Fixes some compiler warnings when building for GLES 2
    
    There were a number of variables shadowing other symbols, and an unused
    display variable.

 clutter/cogl/gles/cogl-gles2-wrapper.c |   20 +++++++++---------
 clutter/cogl/gles/cogl-primitives.c    |   36 ++++++++++++++++----------------
 tests/conform/test-conform-main.c      |    3 +--
 3 files changed, 29 insertions(+), 30 deletions(-)

commit ccd3b4c8863a2a0568d903b4b0273ad05cc17c39
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Wed May 27 18:28:37 2009 +0100

    [animation] Simplify the Animation code
    
    After long deliberation, the Animation class handling of the
    :mode, :duration and :loop properties, as well as the conditions
    for creating the Alpha and Timeline instances, came out as far too
    complicated for their own good.
    
    This is a rework of the API/parameters matrix and behaviour:
    
      - :mode accessors will create an Alpha, if needed
      - :duration and :loop accessors will create an Alpha and a Timeline
        if needed
      - :alpha will set or unset the Alpha
      - :timeline will set or unset the Timeline
    
    Plus, more documentation on the Animation class itself.
    
    Many thanks to Jonas Bonn <jonas@southpole.se> for the feedback
    and the ideas.

 clutter/clutter-animation.c |  420 ++++++++++++++++++-------------------------
 1 file changed, 174 insertions(+), 246 deletions(-)

commit 6fff1bcdc6cd90bfc75eff765c7512545fedded9
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Wed May 27 13:01:31 2009 +0100

    [animatable] Allow validation in ::animate_property
    
    The Animatable interface implementation will always have the computed
    value applied, whilst the non-Animatable objects go through the
    interval validation first to avoid incurring in assertions and
    warnings.
    
    The Animatable::animate_property() should also be able to validate the
    property it's supposed to interpolate, and eventually discard it. This
    requires adding a return value to the virtual function (and its wrapper
    function).
    
    The Animation code will then apply the computed value only if the
    animate_property() returns TRUE -- unifying the code path with the
    non-Animatable objects.

 clutter/clutter-animatable.c |   43 +++++++++++++++++++++++++-----------------
 clutter/clutter-animatable.h |   28 +++++++++++++--------------
 clutter/clutter-animation.c  |   21 ++++++++++++---------
 3 files changed, 52 insertions(+), 40 deletions(-)

commit 7edaf8ece8af8c1f9bf7dd25263ec16dee5adf69
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Wed May 27 12:12:11 2009 +0100

    [animation] Proxy properties whenever possible
    
    The Animation class should proxy the :mode, :duration and :loop
    properties whenever possible, to avoid them going out of sync when
    changed using the Alpha and Timeline instances directly.
    
    Currently, if Timeline:duration is changed, querying Animation:duration
    will yield the old value, but the animation itself (being driven by
    the Timeline) will use the Timeline's :duration new value. This holds
    for the :loop and :mode properties as well.
    
    Instead, the getters for the Animation's :duration, :loop and
    :mode properties should ask the relevant object -- if any. The
    loop, duration and mode values inside AnimationPrivate should only
    be used if no Timeline or no Alpha instances are available, or
    when creating new instances.

 clutter/clutter-animation.c |   60 +++++++++++++++++++++++++++++++++----------
 1 file changed, 46 insertions(+), 14 deletions(-)

commit 1f44c3584c9040a6745f052ad7ce7ffd9dc399a9
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Wed May 27 11:52:40 2009 +0100

    [animation] Defer the timeline handling to the Alpha
    
    The Animation should not directly manipulate a Timeline instance,
    but it should defer to the Alpha all handling of the timeline.
    
    This means that:
    
      - set_duration() and set_loop() will either create a Timeline or
        will set the :duration and :loop properties on the Timeline; if
        the Timeline must be created, and no Alpha instance is available,
        then a new Alpha instance will be created as well and the newly
        create Timeline will be assigned to the Alpha
    
      - if set_mode() on an Animation instance without an Alpha, the
        Alpha will be created; a Timeline will also be created
    
      - set_alpha() will replace the Alpha; if the new Alpha does not
        have a Timeline associated then a Timeline will be created using
        the current :duration and :loop properties of Animation; otherwise,
        if the replaced Alpha had a timeline, the timeline will be
        transferred to the new one

 clutter/clutter-animation.c |  342 +++++++++++++++++++++++++++++--------------
 1 file changed, 231 insertions(+), 111 deletions(-)

commit 331d43196da1a76fe5abe138639674b0cb9fbd47
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Tue May 26 17:23:24 2009 +0100

    [build] Decouple COGL debug level from Clutter's
    
    Using --enable-debug, which controls Clutter's debug level, also
    defines COGL_ENABLE_DEBUG. This should be left to --enable-cogl-debug
    instead, since it's the configure switch that controls COGL debug
    level.

 configure.ac |   16 ++++++++--------
 1 file changed, 8 insertions(+), 8 deletions(-)

commit 387ab4c142c8c3b4708e08be540b279fcda8ffd8
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Mon May 25 17:16:44 2009 +0100

    [doap] Update
    
    Long overdue update of the DOAP file for Clutter
    
    * Repository update
    
    * Add authors

 clutter.doap |   61 ++++++++++++++++++++++++++++++++++++++++++----------------
 1 file changed, 44 insertions(+), 17 deletions(-)

commit 733508b80d30a0946061c55e599f1348ea895140
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Mon May 25 16:52:53 2009 +0100

    [build] More spring clean fixes
    
    * Remove the last if...fi with AS_IF
    
    * Put back the regexp for the mingw32 check that commit 0d1c626a
      inadvertedly removed

 configure.ac |   55 +++++++++++++++++++++++++++++++------------------------
 1 file changed, 31 insertions(+), 24 deletions(-)

commit 0d1c626a86fdec432d5bb7ca78aec76ec1fecf7e
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Mon May 25 14:04:53 2009 +0100

    [build] Spring cleanup of configure.ac
    
    Let's try to bring configure.ac into this century, shall we?
    
    * Use the proper shell macros AS_IF and AS_CASE instead of if...fi
      and case...esac
    
    * Check for X11 and relative extensions only when building for GLX
      and EGLX backends
    
    * Add documentation on the behaviour of binary_age and interface_age
    
    * Coalesce all the common checks to avoid redundancy
    
    * Escape everything that requires escaping

 configure.ac | 1057 +++++++++++++++++++++++++++++-----------------------------
 1 file changed, 534 insertions(+), 523 deletions(-)

commit b05d4be19d07a834120bac6bbeacca31daae51b9
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Mon May 25 12:42:17 2009 +0100

    Use GLib variant of strcasecmp()
    
    The GLib version of strcasecmp() ignores any non-ASCII character,
    unlike the original which is locale-dependent.

 clutter/glx/clutter-backend-glx.c        |    2 +-
 clutter/glx/clutter-glx-texture-pixmap.c |    4 ++--
 2 files changed, 3 insertions(+), 3 deletions(-)

commit ec374c7ab9d5b98230a90a4be7b8ca6f5337f2b8
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Mon May 25 12:41:16 2009 +0100

    [build] Clean up cogl-pango Makefile

 clutter/pango/Makefile.am |   26 +++++++++++++-------------
 1 file changed, 13 insertions(+), 13 deletions(-)

commit 71498a6376f3c45e6fec228251ec11b9c2dc4cd1
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Sat May 23 19:18:18 2009 +0100

    [cogl] Remove max_waste argument from Texture ctors
    
    The CoglTexture constructors expose the "max-waste" argument for
    controlling the maximum amount of wasted areas for slicing or,
    if set to -1, disables slicing.
    
    Slicing is really relevant only for large images that are never
    repeated, so it's a useful feature only in controlled use cases.
    Specifying the amount of wasted area is, on the other hand, just
    a way to mess up this feature; 99% the times, you either pull this
    number out of thin air, hoping it's right, or you try to do the
    right thing and you choose the wrong number anyway.
    
    Instead, we can use the CoglTextureFlags to control whether the
    texture should not be sliced (useful for Clutter-GST and for the
    texture-from-pixmap actors) and provide a reasonable value for
    enabling the slicing ourself. At some point, we might even
    provide a way to change the default at compile time or at run time,
    for particular platforms.
    
    Since max_waste is gone, the :tile-waste property of ClutterTexture
    becomes read-only, and it proxies the cogl_texture_get_max_waste()
    function.
    
    Inside Clutter, the only cases where the max_waste argument was
    not set to -1 are in the Pango glyph cache (which is a POT texture
    anyway) and inside the test cases where we want to force slicing;
    for the latter we can create larger textures that will be bigger than
    the threshold we set.
    
    Signed-off-by: Emmanuele Bassi <ebassi@linux.intel.com>
    Signed-off-by: Robert Bragg <robert@linux.intel.com>
    Signed-off-by: Neil Roberts <neil@linux.intel.com>

 clutter/clutter-texture.c                     |  116 +++++++------------------
 clutter/clutter-texture.h                     |    4 +-
 clutter/cogl/cogl-texture.h                   |   34 +++-----
 clutter/cogl/cogl-types.h                     |    4 +-
 clutter/cogl/common/cogl-util.c               |    1 +
 clutter/cogl/gl/cogl-context.c                |    6 +-
 clutter/cogl/gl/cogl-texture.c                |   81 ++++++++---------
 clutter/cogl/gles/cogl-context.c              |    6 +-
 clutter/cogl/gles/cogl-texture.c              |   60 +++++++------
 clutter/glx/clutter-glx-texture-pixmap.c      |    2 +-
 clutter/pango/cogl-pango-glyph-cache.c        |    2 +-
 tests/conform/test-backface-culling.c         |   36 ++++----
 tests/conform/test-npot-texture.c             |   28 +++---
 tests/conform/test-vertex-buffer-contiguous.c |    3 +-
 tests/interactive/test-clip.c                 |    2 +-
 tests/interactive/test-cogl-multitexture.c    |   18 ++--
 tests/interactive/test-cogl-offscreen.c       |    4 +-
 tests/interactive/test-cogl-tex-convert.c     |    8 +-
 tests/interactive/test-cogl-tex-getset.c      |    4 +-
 tests/interactive/test-cogl-tex-polygon.c     |    6 +-
 tests/interactive/test-cogl-tex-tile.c        |    2 +-
 21 files changed, 191 insertions(+), 236 deletions(-)

commit 87465355d3415a28fc6b3e4f62611cc3192516d8
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Mon Mar 30 13:49:03 2009 +0100

    Add repaint functions
    
    Sometimes it is necessary for third party code to have a
    function called during the redraw process, so that you can
    update the scenegraph before it is painted.

 clutter/clutter-main.c    |  159 +++++++++++++++++++++++++++++++++++++++++++++
 clutter/clutter-main.h    |   62 +++++++++---------
 clutter/clutter-private.h |    4 ++
 clutter/clutter-stage.c   |    9 ++-
 4 files changed, 203 insertions(+), 31 deletions(-)

commit 5cde6a598f7b846615b817002389fcae954f612a
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Sat May 23 19:32:24 2009 +0100

    [git ignore] Add test-text-perf

 .gitignore |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit 654c26a1301c9bc5f8e3e5e3b68af5eb1b2e0673
Author: Neil Roberts <neil@linux.intel.com>
Date:   Fri May 22 14:49:37 2009 +0100

    [actor] In paint when opacity == 0, clear the queued_redraw flag
    
    If we are short-circuiting the paint when the opacity is zero we still
    need to clear the queued_redraw flag otherwise it won't be possible to
    queue another redraw of the actor until something else has caused a
    paint first.

 clutter/clutter-actor.c |    5 ++++-
 1 file changed, 4 insertions(+), 1 deletion(-)

commit c262ab0b638eba97e8a152ca5c76360d0f4bf348
Merge: 309f680 b3fe1b8
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Fri May 22 12:00:33 2009 +0100

    Merge branch 'master' into 1.0-integration
    
    * master:
      [cogl-vertex-buffer] Ensure the clip state before rendering
      [test-text-perf] Small fix-ups
      Add a test for text performance
      [build] Ensure that cogl-debug is disabled by default
      [build] The cogl GE macro wasn't passing an int according to the format string
      Use the right internal format for GL_ARB_texture_rectangle
      [actor_paint] Ensure painting is a NOP for actors with opacity = 0
      Make backface culling work with vertex buffers

commit b3fe1b8a8a663fc8ac5e2388c7dbc7aa20929bce
Author: Neil Roberts <neil@linux.intel.com>
Date:   Fri May 22 11:41:02 2009 +0100

    [cogl-vertex-buffer] Ensure the clip state before rendering
    
    Before any rendering is done by Cogl it needs to ensure the clip stack
    is set up correctly by calling cogl_clip_ensure. This was not being
    done for the Cogl vertex buffer so it would still use the clip from
    the previous render.

 clutter/cogl/common/cogl-vertex-buffer.c |    4 ++++
 1 file changed, 4 insertions(+)

commit 309f680d323f25a83f0a529e499f84f301708e79
Author: Damien Lespiau <damien.lespiau@intel.com>
Date:   Fri May 22 01:23:29 2009 +0100

    [texture] size-change closure is now VOID:FLOAT,FLOAT
    
    Now that everything is float, the marsharlling function of the
    size-change signal should reflect that fact.
    
    Signed-off-by: Emmanuele Bassi <ebassi@linux.intel.com>

 clutter/clutter-marshal.list |    1 +
 clutter/clutter-texture.c    |    4 ++--
 2 files changed, 3 insertions(+), 2 deletions(-)

commit a1b0160da7b72a92178d58c514d3988b2761a688
Author: Neil Roberts <neil@linux.intel.com>
Date:   Thu May 21 17:43:41 2009 +0100

    [test-text-perf] Small fix-ups
    
    - Fix a typo in a for loop in create_label which left 'i'
      uninitialised and caused a crash if you're unlucky.
    
    - Set the CLUTTER_VBLANK=none environment variable.
    
    - Don't quit on a keypress.
    
    - Trailing whitespace tidy up.

 tests/micro-bench/test-text-perf.c |   19 +++++++++----------
 1 file changed, 9 insertions(+), 10 deletions(-)

commit 8724a16452eb4cb577ba6a7763a8491e2935f9a5
Author: Owen W. Taylor <otaylor@fishsoup.net>
Date:   Sat Nov 22 19:26:56 2008 -0500

    Add a test for text performance
    
    Add tests/test-text-perf, which allows testing text performance as
    a function of the length of text strings and font size.

 tests/micro-bench/Makefile.am      |    4 +-
 tests/micro-bench/test-text-perf.c |  123 ++++++++++++++++++++++++++++++++++++
 2 files changed, 126 insertions(+), 1 deletion(-)

commit d513c1c5403e9f92178d3ed7202d78b0db6efe67
Merge: 1985fa7 7e18109
Author: Neil Roberts <neil@linux.intel.com>
Date:   Thu May 21 16:51:16 2009 +0100

    Merge branch 'pango-vbo' into 1.0-integration
    
    This makes it cache the geometry of PangoLayouts into a VBO as
    described in bug #1572.

commit 7e18109f9bec0afba900534a9c96035ae1f32dd7
Author: Neil Roberts <neil@linux.intel.com>
Date:   Thu May 21 15:49:14 2009 +0100

    [cogl-pango-display-list] Use GL_TRIANGLES under GLES
    
    GLES doesn't support GL_QUADS. This patch makes it use GL_TRIANGLES
    instead in that case. Unfortunately this means submitting two extra
    vertices per quad. It could be better to use indexed elements once
    CoglVertexBuffers gains support for that.

 clutter/pango/cogl-pango-display-list.c |   28 +++++++++++++++++++++++++++-
 1 file changed, 27 insertions(+), 1 deletion(-)

commit 78a4f1de0d934b83d5ed30d33ac992f32c1b71c6
Author: Robert Bragg <robert@linux.intel.com>
Date:   Thu May 21 15:25:31 2009 +0100

    [build] Ensure that cogl-debug is disabled by default
    
    The new cogl-debug option was accidentally being enabled by default since
    configure.ac checked the 'default_enable' variable not 'cogl_default_enable'

 configure.ac |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit 14c3ef1f8dab9390cbdb078ef4663b5ea88a78ce
Author: Robert Bragg <robert@linux.intel.com>
Date:   Thu May 21 15:04:38 2009 +0100

    [build] The cogl GE macro wasn't passing an int according to the format string
    
    This patch simply updates the arguments passed to g_warning inline with the
    given format string.

 clutter/cogl/common/cogl-internal.h |    1 +
 1 file changed, 1 insertion(+)

commit 5481681e5c74a8eb994935e5a14d08cc4372a791
Author: Owen W. Taylor <otaylor@fishsoup.net>
Date:   Wed May 6 23:35:01 2009 -0400

    Use the right internal format for GL_ARB_texture_rectangle
    
    When ClutterGLXTexturePixmap uses GL_ARB_texture_rectangle,
    it needs to pass the right internal format (GL_RGB or GL_RGBA)
    when it initializes the texture with glTexImage2D() or later
    handling won't recognize the alpha channel.
    
    http://bugzilla.openedhand.com/show_bug.cgi?id=1586
    
    Signed-off-by: Robert Bragg <robert@linux.intel.com>

 clutter/glx/clutter-glx-texture-pixmap.c |    7 +++++--
 1 file changed, 5 insertions(+), 2 deletions(-)

commit 2c6719502a1e22f4e910ef3514ba5bdf8b1f0c83
Author: Robert Bragg <robert@linux.intel.com>
Date:   Wed May 20 17:55:29 2009 +0100

    [actor_paint] Ensure painting is a NOP for actors with opacity = 0
    
    Since it is convenient to use geometry with an opacity of 0 for input only
    purposes it's a worthwhile optimization to avoid submitting anything
    for such actors while painting.

 clutter/clutter-actor.c |   11 ++++++++++-
 1 file changed, 10 insertions(+), 1 deletion(-)

commit f13c3ee3095ecb1c2ab6b8efbe25362967bc513e
Author: Neil Roberts <neil@linux.intel.com>
Date:   Thu May 21 14:56:38 2009 +0100

    Make backface culling work with vertex buffers
    
    Backface culling is enabled as part of cogl_enable so the different
    rendering functions in Cogl need to explicitly opt-in to have backface
    culling enabled. Cogl vertex buffers should allow backface culling so
    they should check whether it is enabled and then set the appropriate
    cogl_enable flag.

 clutter/cogl/cogl.h.in                   |    6 +++---
 clutter/cogl/common/cogl-vertex-buffer.c |    3 +++
 2 files changed, 6 insertions(+), 3 deletions(-)

commit 3fc64dfaa799828c3e0743df60de4255dac58d60
Author: Neil Roberts <neil@linux.intel.com>
Date:   Thu May 21 12:17:12 2009 +0100

    [pango-render] Keep a reference to the first line to detect layout changes
    
    In order to cope with the situation where an application renders with
    a PangoLayout, makes some changes and then renders again with the same
    layout, CoglPangoRenderer needs to detect that the changes have
    occured so that it can recreate the display list. This is acheived by
    keeping a reference to the first line of the layout. When the layout
    is changed Pango will clear the layout pointer in the first line and
    create a new line. So if the layout pointer in the line becomes NULL
    then we know the layout has changed. This trick was suggested by
    Behdad Esfahbod in this email:
    
    http://mail.gnome.org/archives/gtk-i18n-list/2009-May/msg00019.html

 clutter/pango/cogl-pango-render.c |   81 ++++++++++++++++++++++++++++++-------
 1 file changed, 67 insertions(+), 14 deletions(-)

commit 085be4cebc6f021d8deb114e7984fdfc49665f40
Author: Neil Roberts <neil@linux.intel.com>
Date:   Thu May 21 12:09:16 2009 +0100

    [cogl-pango-render] Fix the positioning when calling cogl_pango_render_layout
    
    When a position is given to cogl_pango_render_layout_subpixel it
    translates the GL matrix by the coordinates. However it was not
    dividing by PANGO_SCALE so the coordinates were completely wrong.

 clutter/pango/cogl-pango-render.c |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit 1985fa75b1929b005d4b5ff46d62ae840f62f38d
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Wed May 20 17:38:58 2009 +0100

    [texture] Use a box instead of int coordinates
    
    Most of the operations involving the texture's allocated area require
    floats -- either for computations or for setting the geometry into
    COGL. So it doesn't make any sense to use get_allocation_coords() and
    cast everything to floats.

 clutter/clutter-texture.c |   16 ++++++++--------
 1 file changed, 8 insertions(+), 8 deletions(-)

commit 3428e4dd1d1f852521efbc4b1590370b050173b1
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Wed May 20 17:26:39 2009 +0100

    [actor] Do not try to dereference NULL data
    
    If the shader_data bound to an Actor is NULL we should not try to access
    its members.

 clutter/clutter-actor.c |   16 +++++++++-------
 1 file changed, 9 insertions(+), 7 deletions(-)

commit f8f54989be460f8ae7abda7c2dc01eb578471742
Merge: aa1246e 4f5a5f3
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Wed May 20 16:49:22 2009 +0100

    Merge commit 'origin/master' into 1.0-integration
    
    Conflicts:
    	clutter/clutter-texture.c
    	clutter/cogl/gl/cogl-fbo.c

commit 4f5a5f38f7068d4ec0dca9967f304a39901e8fec
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Wed May 20 16:06:09 2009 +0100

    Add more padding in Model and ModelIter classes
    
    ClutterModel and ClutterModelIter have 4 padding slots, but if they
    have to survive the 1.x API cycle they will need at least twice that
    amount.

 clutter/clutter-model.h |   12 ++++++++++--
 1 file changed, 10 insertions(+), 2 deletions(-)

commit c74586d019a4651d52938610894c0396f02294bb
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Wed May 20 15:15:25 2009 +0100

    [cogl] Do no include gprintf.h
    
    We are not using any of the g_printf* family of functions, so we
    can import glib.h instead.

 clutter/cogl/common/cogl-vertex-buffer.c |    3 +--
 1 file changed, 1 insertion(+), 2 deletions(-)

commit 1f1d19f63450f52caa7231738cad84067486a2ba
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Tue May 19 16:00:18 2009 +0100

    [cogl] Move debugging to a configure-time switch
    
    Currently, COGL depends on defining debug symbols by manually
    modifying the source code. When it's done, it will forcefully
    print stuff to the console.
    
    Since COGL has also a pretty, runtime selectable debugging API
    we might as well switch everything to it.
    
    In order for this to happen, configure needs a new:
    
            --enable-cogl-debug
    
    command line switch; this will enable COGL debugging, the
    CoglHandle debugging and will also turn on the error checking
    for each GL operation.
    
    The default setting for the COGL debug defines is off, since
    it slows down the GL operations; enabling it for a particular
    debug build is trivial, though.

 clutter/cogl/cogl-debug.h           |    3 ++-
 clutter/cogl/common/Makefile.am     |    2 +-
 clutter/cogl/common/cogl-debug.c    |    3 ++-
 clutter/cogl/common/cogl-handle.h   |   23 ++++++++++++-----------
 clutter/cogl/common/cogl-internal.h |    7 +++----
 clutter/cogl/gl/Makefile.am         |    2 +-
 clutter/cogl/gles/Makefile.am       |    2 +-
 configure.ac                        |   21 ++++++++++++++++++++-
 8 files changed, 42 insertions(+), 21 deletions(-)

commit df1a9b7a74880d60fe1f00a7e35b8b620705701a
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Tue May 19 14:44:29 2009 +0100

    [cogl] Rework the debug messages
    
    COGL has a debug message system like Clutter's own. In parallel,
    it also uses a coupld of #defines. Spread around there are also
    calls to printf() instead to the more correct g_log* wrappers.
    
    This commit tries to unify and clean up the macros and the
    debug message handling inside COGL to be more consistent.

 clutter/cogl/common/cogl-handle.h     |  145 ++++++++++++++++-----------------
 clutter/cogl/common/cogl-internal.h   |   43 ++++------
 clutter/cogl/common/cogl-primitives.c |   30 +++----
 clutter/cogl/common/cogl.c            |   31 +++++--
 clutter/cogl/gl/cogl-texture.c        |   22 ++---
 clutter/cogl/gles/cogl-texture.c      |   11 ---
 6 files changed, 131 insertions(+), 151 deletions(-)

commit 529e48fbbe95f9fe2d8db631b129391d9c2f36c9
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Tue May 19 14:42:37 2009 +0100

    Remove duplicate cogl-internal.h header
    
    The cogl-internal.h header has been moved inside cogl/common in
    commit 8a1b4f8326 but has been left behind inside cogl/gl and
    cogl/gles.

 clutter/cogl/gl/Makefile.am       |    1 -
 clutter/cogl/gl/cogl-internal.h   |   66 --------------------------
 clutter/cogl/gles/Makefile.am     |    1 -
 clutter/cogl/gles/cogl-internal.h |   93 -------------------------------------
 4 files changed, 161 deletions(-)

commit 407ac5075fb5737aff3730773ec9ccba2dbe7fd0
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Tue May 19 12:51:29 2009 +0100

    [texture] Add missing accessors
    
    ClutterTexture has many properties that can only be accessed using
    the GObject API. This is fairly inefficient and makes binding the
    class overly complicated.
    
    The Texture class should have accessor methods for all its properties,
    properly documented.

 clutter/clutter-texture.c                  |  453 +++++++++++++++++++++++-----
 clutter/clutter-texture.h                  |   45 ++-
 doc/reference/clutter/clutter-sections.txt |   13 +
 3 files changed, 429 insertions(+), 82 deletions(-)

commit 3115a6168836ff65ce58c31458d7672400458d74
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Mon May 18 19:38:03 2009 +0100

    [cogl] Rework the GL-error-to-string conversion
    
    The code for the conversion of the GL error enumeration code
    into a string is not following the code style and conventions
    we follow in Clutter and COGL.
    
    The GE() macro is also using fprintf(stderr) directly instead
    of using g_warning() -- which is redirectable to an alternative
    logging system using the g_log* API.

 clutter/cogl/common/cogl-internal.h |   22 +++++++--------
 clutter/cogl/common/cogl.c          |   52 ++++++++++++++++++-----------------
 2 files changed, 38 insertions(+), 36 deletions(-)

commit e725bd21bf6b0760ed099b6e7136765774cf2093
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Tue May 19 12:53:37 2009 +0100

    [gitignore] Add more gtk-doc droppings

 .gitignore |    2 ++
 1 file changed, 2 insertions(+)

commit cd3acca2b793c45c81ea4fdc053f82aa2b0ffe21
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu May 14 23:23:00 2009 +0100

    [build] Link Cogl against -lm
    
    We use math routines inside Cogl, so it's correct to have it in
    the LIBADD line. In normal usage something else was pulling in
    -lm, but the introspection is relying on linking against the
    convenience library.
    
    Based on a patch by: Colin Walters <walters@verbum.org>
    
    Signed-off-by: Emmanuele Bassi <ebassi@linux.intel.com>

 clutter/cogl/common/Makefile.am |   10 +++-------
 clutter/cogl/gl/Makefile.am     |    9 +++------
 clutter/cogl/gles/Makefile.am   |   13 ++++---------
 3 files changed, 10 insertions(+), 22 deletions(-)

commit 08ac50faaeca28703e3f5495c76a72edca3c17f0
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu May 14 19:51:03 2009 +0100

    [build] List cogl-internal.h
    
    During the Makefile clean up, cogl-internal.h got lost and this
    broke the dist. Let's put it back in.

 clutter/cogl/common/Makefile.am |    2 ++
 1 file changed, 2 insertions(+)

commit 2f5012e38cd6566d01b98fb44679c9b431dbd473
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu May 7 18:39:07 2009 +0100

    [animation] Do not leak timelines
    
    The timeline created when calling set_timeline(NULL) is referenced
    even though we implicitly own it. When the Animation is destroyed,
    the timeline is then leaked.
    
    Thanks to: Richard Heatley <richard.heatley@starleaf.com>
    
    Fixes bug:
    
      http://bugzilla.openedhand.com/show_bug.cgi?id=1548

 clutter/clutter-animation.c |   20 ++++++++++++--------
 1 file changed, 12 insertions(+), 8 deletions(-)

commit 21e3901d6248ceb9fd4e3c0c82565817774f463f
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Wed May 6 17:18:12 2009 +0100

    [text] Expose position_to_coords()
    
    The clutter_text_position_to_coords() is useful for ClutterText
    subclasses.
    
    See bug:
    
      http://bugzilla.openedhand.com/show_bug.cgi?id=1521
    
    Based on a patch by: Raymond Liu <raymond.liu@intel.com>

 clutter/clutter-text.c                     |   33 ++++++++++++++++------------
 clutter/clutter-text.h                     |    5 +++++
 doc/reference/clutter/clutter-sections.txt |    1 +
 3 files changed, 25 insertions(+), 14 deletions(-)

commit ca238387521d2df289e8df81ddf9e01597bed046
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Wed May 6 17:08:25 2009 +0100

    [text] Add ClutterText::delete_selection()
    
    Add a method for deleting the current selection inside a Text actor.
    
    This is useful for subclasses.
    
    See bug:
    
      http://bugzilla.openedhand.com/show_bug.cgi?id=1521
    
    Based on a patch by: Raymond Liu <raymond.liu@intel.com>

 clutter/clutter-text.c                     |   47 +++++++++++++++++++---------
 clutter/clutter-text.h                     |    1 +
 doc/reference/clutter/clutter-sections.txt |    1 +
 3 files changed, 34 insertions(+), 15 deletions(-)

commit 79cb0a3515325dcf183684eb9809fd66abff478a
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Wed May 6 17:01:44 2009 +0100

    [animation] Remove InitiallyUnowned from Animation
    
    ClutterAnimation currently inherits the initial floating reference
    semantics from GInitiallyUnowned. An Animation is, though, meant to
    be used as a top-level object, like a Timeline or a Behaviour, and
    not "owned" by another object. For this reason, the initial floating
    reference does not make any sense.

 clutter/clutter-animation.c |   18 ++++++++----------
 clutter/clutter-animation.h |    4 ++--
 2 files changed, 10 insertions(+), 12 deletions(-)

commit 0f7a3b973952505e85e93d0bde59be48973fbeb2
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Wed May 6 16:43:52 2009 +0100

    [docs] Add Animation get_type() function
    
    We need to reference clutter_animation_get_type() if we want the
    properties, signals and object hierarchy to show up in the API
    reference

 doc/reference/clutter/clutter.types |    1 +
 1 file changed, 1 insertion(+)

commit 092b41d53b793a985d5234acfa9df007b16be4c3
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Wed May 6 16:42:57 2009 +0100

    [docs] Document the destructor for Timeline
    
    The rest of the API reference lists the destructor for the class
    inside the constructor's return value -- except Timeline.

 clutter/clutter-timeline.c |    6 ++++--
 1 file changed, 4 insertions(+), 2 deletions(-)

commit 1c6580afd67526d1f8e7ee114fdcd69b83e9f4c6
Author: Dan Winship <danw@gnome.org>
Date:   Thu May 14 09:28:12 2009 -0400

    [cairo-texture] Document redrawing behavior
    
    Document that repeated calls to clutter_cairo_texture_create()
    continue drawing on the same cairo_surface_t. Add
    clutter_cairo_texture_clear() for when you don't want that behavior.
    
    http://bugzilla.openedhand.com/show_bug.cgi?id=1599
    
    Signed-off-by: Emmanuele Bassi <ebassi@linux.intel.com>

 clutter/clutter-cairo-texture.c |   31 +++++++++++++++++++++++++++++++
 clutter/clutter-cairo-texture.h |    6 ++++--
 2 files changed, 35 insertions(+), 2 deletions(-)

commit 81a536238d539fb87b24b7815408c4916fa63da6
Author: Thomas Wood <thomas.wood@intel.com>
Date:   Thu May 14 15:08:31 2009 +0100

    [text] fix problems with scrolling interaction
    
    The cursor x position is already translated, so we do not need to take the
    actors allocation into account when calculating scrolling.
    
    Additionally, we need to update the text_x value before running
    clutter_text_ensure_cursor_position.

 clutter/clutter-text.c |    3 ++-
 1 file changed, 2 insertions(+), 1 deletion(-)

commit a3a5fe5594301778ec78f161dfeffac113d89901
Author: Thomas Wood <thomas.wood@intel.com>
Date:   Thu May 14 13:31:51 2009 +0100

    [text] scroll to the cursor position if it is outside the allocation
    
    Adjust the text offset to keep the cursor within the allocation. This means
    the text will scroll per character

 clutter/clutter-text.c |   22 +++++++++++++---------
 1 file changed, 13 insertions(+), 9 deletions(-)

commit cf6c2d9721b96123f20c9ed26f8066dba502a035
Author: Thomas Wood <thomas.wood@intel.com>
Date:   Thu May 14 10:55:25 2009 +0100

    [text] account for scrolling in text selections
    
    Account for any scrolling offset in single line mode when calculating the
    area that should be selected.

 clutter/clutter-text.c |    6 ++++++
 1 file changed, 6 insertions(+)

commit e79fd1055d5d220a2460fc5ada0e74d7456aedf2
Author: Thomas Wood <thomas.wood@intel.com>
Date:   Thu May 14 10:53:44 2009 +0100

    [text] account for scrolling in clutter_text_position_to_coords
    
    Add any scrolling offset to the x value when in single line mode.
    
    Now that the offset is taken into account in the position_to_coords
    function, we do not need to adjust the cursor x manually in
    clutter_text_paint.

 clutter/clutter-text.c |   10 +++++++++-
 1 file changed, 9 insertions(+), 1 deletion(-)

commit 16185c78fc59f8538f0a439908bd43ae8ee981fe
Author: Thomas Wood <thomas.wood@intel.com>
Date:   Thu May 14 10:51:58 2009 +0100

    [text] take scrolling into account when calculating cursor position
    
    Account for the scrolling in single line more when calculating the cursor
    position from coordinates.

 clutter/clutter-text.c |    4 ++++
 1 file changed, 4 insertions(+)

commit e162d0b0607e9221b360cfe7b0d61a2b4b44edd9
Author: Thomas Wood <thomas.wood@intel.com>
Date:   Thu May 14 10:17:24 2009 +0100

    [text] position the cursor correctly in single line mode
    
    The position of the text should be increased by the value of TEXT_PADDING
    and the cursor offset by the same value as the text offset.

 clutter/clutter-text.c |    7 +++----
 1 file changed, 3 insertions(+), 4 deletions(-)

commit cd86e70f4150505a035ea074aed06e4bd3fbb9df
Author: Thomas Wood <thomas.wood@intel.com>
Date:   Thu May 14 09:53:41 2009 +0100

    [text] take text padding into account when in single line mode
    
    In single line mode, extra padding is added to the text which must be
    taken into account when reporting the natural size of the actor.

 clutter/clutter-text.c |    7 ++++++-
 1 file changed, 6 insertions(+), 1 deletion(-)

commit 92e439105697fe65d8c6dda08d1658774245e9cb
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu May 14 12:05:57 2009 +0100

    [tests] Verify cursor position
    
    Print out the cursor and selection positions in order to verify
    the behaviour of the Text actor.
    
    This is a likely candidate for a conformance test unit as well.

 tests/interactive/test-text-field.c |    5 ++++-
 1 file changed, 4 insertions(+), 1 deletion(-)

commit 0d43d81ee04ea456edb3159aa0e0c71e2f869f62
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu May 14 12:00:51 2009 +0100

    [text] Maintain the cursor at the end when deleting
    
    If the cursor is already at the end of the Text contents then we
    need to maintain its position when deleting the previous character
    using the relative key binding.

 clutter/clutter-text.c |   10 +++++-----
 1 file changed, 5 insertions(+), 5 deletions(-)

commit 8174f66cc60a70e60eb98b0097416f898e8df485
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu May 14 11:50:42 2009 +0100

    [text] Reset the cursor when setting empty text
    
    When setting the contents of Text to an empty string we should
    reset the cursor position and selection bound to -1.

 clutter/clutter-text.c |   10 ++++++++++
 1 file changed, 10 insertions(+)

commit 608c3e3ab45ab262e9b89f8a78cdf2f057dca570
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu May 14 10:02:06 2009 +0100

    [build] Fix with --disable-introspection
    
    The required "fake" libclutter-cogl.la upon with the main clutter
    shared object depends is only built with introspection enabled
    instead of being built unconditionally.

 clutter/cogl/Makefile.am |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit 724e58a85a35e249490e54d27e7f9411033db3a9
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu May 14 08:32:46 2009 +0100

    [build] Do not rebuild the conformance tests scripts
    
    Make the build output a little bit cleaner by not re-creating the
    small shell scripts that allow launching the test units separately.

 .gitignore                |    1 +
 tests/conform/Makefile.am |   10 +++++++---
 2 files changed, 8 insertions(+), 3 deletions(-)

commit d8aa6827ee310115b3f0a466c0798e4e5c1e5780
Author: Owen W. Taylor <otaylor@redhat.com>
Date:   Wed May 13 23:14:24 2009 +0100

    Don't build Cogl.gir against installed Clutter library
    
    Passing:
    
     --library=clutter-@CLUTTER_FLAVOUR@-@CLUTTER_API_VERSION@
    
    to g-ir-scanner, when building Cogl was causing g-ir-scanner to
    link the introspection program against the installed clutter library,
    if it existed or fail otherwise. Instead copy the handling from
    the json/ directory where we link against the convenience library
    to scan, and do the generation of the typelib later in the
    main clutter/directory.
    
    Fixes bug:
    
      http://bugzilla.openedhand.com/show_bug.cgi?id=1594
    
    Signed-off-by: Emmanuele Bassi <ebassi@linux.intel.com>

 .gitignore               |    5 +++--
 clutter/Makefile.am      |   30 ++++++++++++++++++++----------
 clutter/cogl/Makefile.am |   29 +++++++++++------------------
 3 files changed, 34 insertions(+), 30 deletions(-)

commit 447e04bdce9b95bb1fc544d4c931071fa3665825
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Wed May 13 23:04:25 2009 +0100

    [text] Return the correct minimum height
    
    If text is set, ClutterText should never return less than the layout
    height for minimum and preferred heights.
    
    This holds unless ellipsize and wrap are enabled, in which case the
    minimum height should be the height of the first line -- which is
    the height needed to at the very least show the ellipsization.
    
    Based on a patch by: Thomas Wood <thomas@openedhand.com>
    
    Fixes bug:
    
      http://bugzilla.openedhand.com/show_bug.cgi?id=1598
    
    Signed-off-by: Emmanuele Bassi <ebassi@linux.intel.com>

 clutter/clutter-text.c |   24 +++++++++++++++++++-----
 1 file changed, 19 insertions(+), 5 deletions(-)

commit aa1246e8917f0977bd03b97c206d4c2a01ff8599
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Wed May 13 22:21:48 2009 +0100

    [backend] Abstract the GL context creation
    
    This is the another step into abstracting the backend operations
    that are currently spread all across the board back into the
    backend implementations where they belong.
    
    The GL context creation, for instance, is demanded to the stage
    realization which makes it a critical path for every operation
    that is GL-context bound. This usually does not make any difference
    since we realize the default stage, but at some point we might
    start looking into avoiding the default stage realization in order
    to make the Clutter startup faster.
    
    It also makes the code maintainable because every part is self
    contained and can be reworked with the minimum amount of pain.

 clutter/clutter-backend.c         |   16 ++++++++
 clutter/clutter-backend.h         |    3 ++
 clutter/clutter-private.h         |    3 ++
 clutter/glx/clutter-backend-glx.c |   54 +++++++++++++++++++++++++-
 clutter/glx/clutter-stage-glx.c   |   76 +++++++++++++++++--------------------
 5 files changed, 110 insertions(+), 42 deletions(-)

commit 1d7a79f343760d192619629de8e1ca9547007c13
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Wed May 13 22:20:19 2009 +0100

    Update the redraw priority
    
    The master clock is using the redraw priority to create the source
    that will be used to spin the paint sequence if something is being
    animated using a timeline.
    
    Unfortunately, the priority is too high and this causes starvation
    when embedding into other toolkits -- like gtk+.
    
    Thanks to Havoc Pennington for catching this.

 clutter/clutter-main.h |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit e59a19bd03964aacfa64479fdb51555350992989
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Wed May 13 21:49:45 2009 +0100

    [x11] Abstract XVisualInfo creation
    
    The XVisualInfo for GL is created when a stage is being realized.
    When embedding Clutter inside another toolkit we might not want to
    realize a stage to extract the XVisualInfo, then set the stage
    window using a foreign X Window -- which will cause a re-realization.
    
    Instead, we should abstract as much as possible into the X11 backend.
    
    Unfortunately, the XVisualInfo for GL is requested using GLX API; for
    this reason we have to create a ClutterBackendX11 method that we
    override inside the ClutterBackendGLX implementation.
    
    This also allows us to move a little bit of complexity from out of
    the stage realization, which is currently a very delicate and hard
    to debug section.

 clutter/glx/clutter-backend-glx.c |   67 +++++++++++++++++++++++++++++++++----
 clutter/glx/clutter-stage-glx.c   |   46 ++++++-------------------
 clutter/x11/clutter-backend-x11.c |   14 ++++++++
 clutter/x11/clutter-backend-x11.h |    7 ++++
 clutter/x11/clutter-stage-x11.c   |   16 ++++++++-
 5 files changed, 108 insertions(+), 42 deletions(-)

commit 2b1759385e8f3373497b5d99c733266c2ecae1ee
Author: Robert Bragg <robert@linux.intel.com>
Date:   Wed May 13 12:11:54 2009 +0100

    [text] Ensure clutter_text_get_selection copes with start/end positions of -1
    
    I was seeing clutter_text_get_selection trying to malloc up to 4Gb due to
    unexpected negative arithmetic for the start/end offsets which resulted
    in a crash.
    
    This just tests for positions of -1 before deciding if the start/end
    positions need to be swapped.  The conversion from position to byte offset
    already works with -1.

 clutter/clutter-text.c |    3 ++-
 1 file changed, 2 insertions(+), 1 deletion(-)

commit 979f089ef9e5ef3486fd81f8ec4d38579bb7e7b7
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Tue May 12 19:22:25 2009 +0100

    [tests] Add command line option to the picking test
    
    The picking test has two configurables: the number of actors and
    the number of events per frame. It makes sense to have them as
    command line options to test with multiple configurations without
    having to change defines and recompile.

 tests/micro-bench/test-picking.c |   56 ++++++++++++++++++++++++++------------
 1 file changed, 39 insertions(+), 17 deletions(-)

commit df85b70ab44c564f65605d38abc923822f70f405
Author: Owen W. Taylor <otaylor@fishsoup.net>
Date:   Sat May 9 20:09:42 2009 -0400

    Fix chain-up in clutter_list_model_dispose()
    
    Chain up to parent class's dispose() method not parent class's
    finalize() method.
    
    http://bugzilla.openedhand.com/show_bug.cgi?id=1595
    
    Signed-off-by: Emmanuele Bassi <ebassi@linux.intel.com>

 clutter/clutter-list-model.c |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit 62e2f276041365853838122b3a7326a27c7c733e
Author: Chris Lord <chris@linux.intel.com>
Date:   Tue May 12 16:17:51 2009 +0100

    [tests/micro-bench] Add a picking performance test
    
    Approved by Robert Bragg.

 tests/micro-bench/Makefile.am    |    4 +-
 tests/micro-bench/test-picking.c |  128 ++++++++++++++++++++++++++++++++++++++
 2 files changed, 131 insertions(+), 1 deletion(-)

commit d1fa83039d12f8501075d3e9f7fd17a42cbdd7c8
Author: Robert Bragg <robert@linux.intel.com>
Date:   Tue May 12 01:02:25 2009 +0100

    [picking] Use cogl_clip_push_window_rect to greatly reduce the cost of picking.
    
    cogl_clip_push_window_rect is implemented using GPU scissoring which allows
    the GPU to cull anything that falls outside a given rectangle.  Since in the
    case of picking we only ever care about a single pixel we can get the GPU to
    ignore all geometry that doesn't intersect that pixel and only rasterize for
    one pixel.

 clutter/clutter-main.c |    2 ++
 1 file changed, 2 insertions(+)

commit e80fcbc298812b7fc333cec34049a4ee806f469a
Author: Robert Bragg <robert@linux.intel.com>
Date:   Fri May 8 16:32:01 2009 +0100

    [cogl-clip-stack] Support pushing rectangles onto the stack using window coords
    
    Previously clipping could only be specified in object coordinates, now
    rectangles can also be pushed in window coordinates.
    
    Internally rectangles pushed this way are intersected and then clipped using
    scissoring.  We also transparently try to convert rectangles pushed in
    object coordinates into window coordinates as we anticipate the scissoring
    path will be faster then the clip planes and undoubtably it will be faster
    than using the stencil buffer.

 clutter/cogl/cogl.h.in                |   21 +++++
 clutter/cogl/common/cogl-clip-stack.c |  165 +++++++++++++++++++++++++++++++--
 clutter/cogl/common/cogl.c            |    2 +
 3 files changed, 180 insertions(+), 8 deletions(-)

commit e9b863eba28564dd0b19f982610e5afe93ac17eb
Author: Neil Roberts <neil@linux.intel.com>
Date:   Tue May 12 15:36:16 2009 +0100

    Don't clear the stencil buffer before painting and picking
    
    The stencil buffer is always cleared the first time a clip is used
    that needs it and the stencil test is disabled otherwise so there is
    no need to clear before a paint.

 clutter/clutter-main.c    |    3 +--
 clutter/clutter-stage.c   |    3 +--
 clutter/clutter-texture.c |    3 +--
 3 files changed, 3 insertions(+), 6 deletions(-)

commit 36cfb6030784791a4420a1e52a8c18d56b1d0c69
Author: Robert Bragg <robert@linux.intel.com>
Date:   Tue May 12 14:15:18 2009 +0100

    [cogl] Remove the COGL{enum,int,uint} typedefs
    
    COGLenum, COGLint and COGLuint which were simply typedefs for GL{enum,int,uint}
    have been removed from the API and replaced with specialised enum typedefs, int
    and unsigned int. These were causing problems for generating bindings and also
    considered poor style.
    
    The cogl texture filter defines CGL_NEAREST and CGL_LINEAR etc are now replaced
    by a namespaced typedef 'CoglTextureFilter' so they should be replaced with
    COGL_TEXTURE_FILTER_NEAREST and COGL_TEXTURE_FILTER_LINEAR etc.
    
    The shader type defines CGL_VERTEX_SHADER and CGL_FRAGMENT_SHADER are handled by
    a CoglShaderType typedef and should be replaced with COGL_SHADER_TYPE_VERTEX and
    COGL_SHADER_TYPE_FRAGMENT.
    
    cogl_shader_get_parameteriv has been replaced by cogl_shader_get_type and
    cogl_shader_is_compiled. More getters can be added later if desired.

 README                                    |   16 +++++
 clutter/clutter-shader-types.c            |   10 ++--
 clutter/clutter-shader-types.h            |    2 +-
 clutter/clutter-shader.c                  |   21 +++----
 clutter/clutter-texture.c                 |   14 ++---
 clutter/cogl/cogl-shader.h                |   81 +++++++++++++++-----------
 clutter/cogl/cogl-texture.h               |   54 +++++++++++++++--
 clutter/cogl/gl/cogl-defines.h.in         |   13 -----
 clutter/cogl/gl/cogl-program.c            |   14 ++---
 clutter/cogl/gl/cogl-shader.c             |   73 ++++++++++++++++++-----
 clutter/cogl/gl/cogl-texture-private.h    |    4 +-
 clutter/cogl/gl/cogl-texture.c            |   20 +++----
 clutter/cogl/gles/cogl-defines.h.in       |   16 -----
 clutter/cogl/gles/cogl-program.c          |   26 ++++-----
 clutter/cogl/gles/cogl-shader.c           |   90 +++++++++++++++++++++--------
 clutter/cogl/gles/cogl-texture-private.h  |    4 +-
 clutter/cogl/gles/cogl-texture.c          |    8 +--
 clutter/glx/clutter-glx-texture-pixmap.c  |   50 ++++++++--------
 clutter/pango/cogl-pango-glyph-cache.c    |    8 +--
 doc/reference/cogl/cogl-sections.txt      |    3 +-
 tests/interactive/test-cogl-tex-polygon.c |   44 +++++++-------
 tests/interactive/test-cogl-tex-tile.c    |   49 ++++++++--------
 22 files changed, 376 insertions(+), 244 deletions(-)

commit cea711cc7e5c2d8f8328d8ce072f43b8b034d13e
Author: Robert Bragg <robert@linux.intel.com>
Date:   Tue May 12 14:20:22 2009 +0100

    [ClutterTexture] Remove a spurious line I accidentally committed in 741c4bb5
    
    I accidentally changed clutter_texture_set_cogl_texture to always set the
    filter quality for the new Cogl texture to medium.

 clutter/clutter-texture.c |    3 ---
 1 file changed, 3 deletions(-)

commit 08a73a215f2cf18abcfd7d93e8047583511497bd
Author: Robert Bragg <robert@linux.intel.com>
Date:   Wed May 6 19:01:09 2009 +0100

    Don't call glFinish in _clutter_do_pick
    
    Calling glReadPixels is bad enough in forcing us to synchronize the CPU with
    the GPU, but glFinish has even stronger synchonization semantics than
    glReadPixels which may negate some driver optimizations possible in
    glReadPixels.

 clutter/clutter-main.c |    8 ++------
 1 file changed, 2 insertions(+), 6 deletions(-)

commit 10783e053be104c14bfab24dff7c54046790af60
Author: Neil Roberts <neil@linux.intel.com>
Date:   Tue May 12 14:15:37 2009 +0100

    [build] Fix out-of-tree builds for Cogl
    
    Commit 43fa38fcf5 broke out-of-tree builds by removing some of the
    builddir directories from the include path. builddir/clutter/cogl and
    builddir/clutter are needed because cogl.h and cogl-defines-gl.h are
    automatically generated by the configure script. The main clutter
    headers are in the srcdir so this needs to be in the path too.

 clutter/cogl/gl/Makefile.am |    2 ++
 1 file changed, 2 insertions(+)

commit dd95939d260e19bac8119d430ff3d9b9279c0234
Author: Raymond Liu <raymond.liu@intel.com>
Date:   Thu May 7 18:20:19 2009 +0800

    Emit key focus signal when stage state changes
    
    When the stage state changes between active/deactive, send out
    key-focus-in/key-focus-out signal for the current key focused
    actor on the stage.
    
    Fixes bug:
    
      http://bugzilla.openedhand.com/show_bug.cgi?id=1503
    
    Signed-off-by: Emmanuele Bassi <ebassi@linux.intel.com>

 clutter/clutter-stage.c |   29 +++++++++++++++++++++++++++++
 1 file changed, 29 insertions(+)

commit 4b285e02bc85e92612485b5ebea568b90951be40
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Mon May 11 18:17:30 2009 +0100

    [x11] Unset the GL context when re-realizing
    
    Setting the stage window using the set_stage_foreign() method will
    lead to a re-realization. We need to make sure that the Drawable
    currently associated to the GL context is set to None, to avoid a
    BadDrawable error or, if we're unlucky, a segfault in the X server.

 clutter/x11/clutter-stage-x11.c |    8 +++++++-
 1 file changed, 7 insertions(+), 1 deletion(-)

commit 0b7e459d481d84683adf65b8ea6c0c5502aa97c0
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Mon May 11 12:36:14 2009 +0100

    Add more debugging notes

 clutter/clutter-actor.c         |    5 +++++
 clutter/glx/clutter-stage-glx.c |    4 +++-
 clutter/x11/clutter-stage-x11.c |   14 ++++++++------
 3 files changed, 16 insertions(+), 7 deletions(-)

commit 8b7c6955de2c09c1f3d9c0e1b349966b6a63062e
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Mon May 11 12:36:55 2009 +0100

    [backend] Unset the current stage if it is unrealized
    
    This commit reverts part of commit 5bcde25c - specifically the
    part that forced a realization of the stage if we are ensuring
    the GL context with it. This makes Clutter behave like it did
    prior to commit 5bcde25c: if we are asked to ensure the GL context
    with an unrealized stage we simply pass NULL to the backend
    implementation.

 clutter/clutter-backend.c |   27 +++++++++++++++------------
 1 file changed, 15 insertions(+), 12 deletions(-)

commit d19f6feb45cfedfedda997967954ea892c4cfb92
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Mon May 11 12:43:37 2009 +0100

    [stage] Chain up ::show before showing the implementation
    
    When showing a Stage for the first time we end up realizing the stage
    implementation before realizing the wrapper. This leads to segmentation
    faults or errors coming from the backend because we're fumbling the
    state and realization sequence.

 clutter/clutter-stage.c |    8 ++++----
 1 file changed, 4 insertions(+), 4 deletions(-)

commit 9582fddb24fba071ea77aa2396aa5288639c3217
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Mon May 11 12:39:46 2009 +0100

    [x11] Do not needlessly check XVisualInfo
    
    Since we are destroying any previously set VisualInfo we keep we know
    for sure that stage->xvisinfo is going to be None; hence, no reason to
    check this condition.

 clutter/glx/clutter-stage-glx.c |   16 +++++++---------
 1 file changed, 7 insertions(+), 9 deletions(-)

commit 0acb98e987f456d67db11f85ccca909d67922362
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Mon May 11 12:43:56 2009 +0100

    [actor] Conditionally verify the map state
    
    The verify_map_state() internal method is conditionally compiled
    if we have CLUTTER_ENABLE_DEBUG set; for this reason, all calls to
    that method should be made conditional.

 clutter/clutter-actor.c |    3 ++-
 1 file changed, 2 insertions(+), 1 deletion(-)

commit d00cac635325e5e279fb9dce87bfc36954d314b7
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Sun May 10 00:41:17 2009 +0100

    [build] Unbreak compilation
    
    When building Clutter with introspection enabled everything stops
    at Cogl GIR generation because it depends on the installed library
    to work. Since we still require some changes in the API to be able
    to build the GIR and the typelib for Cogl we should disable the
    generation of the GIR as well.

 clutter/cogl/Makefile.am |    4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

commit 5bcde25cbbfcfefc850605fb0ddf8e818d2413fa
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Fri May 8 17:17:48 2009 +0100

    Tentative fix for multi-stage support on GLX
    
    The fix for bug 1138 broke multi-stage support on GLX, causing
    X11 to segfault with the following stack trace:
    
    Backtrace:
    0: /usr/X11R6/bin/X(xf86SigHandler+0x7e) [0x80c91fe]
    1: [0xb7eea400]
    2: /usr/lib/xorg/modules/extensions//libglx.so [0xb7ae880c]
    3: /usr/lib/xorg/modules/extensions//libglx.so [0xb7aec0d6]
    4: /usr/X11R6/bin/X [0x8154c24]
    5: /usr/X11R6/bin/X(Dispatch+0x314) [0x808de54]
    6: /usr/X11R6/bin/X(main+0x4b5) [0x8074795]
    7: /lib/i686/cmov/libc.so.6(__libc_start_main+0xe5) [0xb7c75775]
    8: /usr/X11R6/bin/X(FontFileCompleteXLFD+0x21d) [0x8073a81]
    
    which I can only track down to clutter_backend_glx_ensure_current()
    being passed a NULL stage -- something that happens when a stage
    is not correct realized. That should lead to a glXMakeCurrent(None)
    and not to a segmentation fault, though.

 clutter/clutter-backend.c         |   14 +++++++++++---
 clutter/clutter-stage.c           |   18 +++++++++++++-----
 clutter/glx/clutter-backend-glx.c |    7 +++++--
 3 files changed, 29 insertions(+), 10 deletions(-)

commit 91126558d35c58a94f674ad93d9561e4c5ab3bff
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Fri May 8 17:14:49 2009 +0100

    [actor] Relax some of the invariants checks
    
    When destroying a top-level actor we can actually relax the verification
    of the map state, since it might be fully asynchronous and we might not
    re-enter inside the mainloop in time to receive the unmap notification.

 clutter/clutter-actor.c |   23 ++++++++++++++++-------
 1 file changed, 16 insertions(+), 7 deletions(-)

commit 692c50ba672b55d809e12b97184e7ee21d9f3fda
Author: Rob Bradford <rob@linux.intel.com>
Date:   Fri May 8 10:57:56 2009 +0100

    [list-model] Return NULL for first row in a fully filtered model
    
    If the filter means that the there should be no rows left in the model,
    clutter_model_get_iter_at_row (model, 0) should return NULL.
    
    Howevever the currene implementation misbehaves and returns a bad iterator.
    This change resolves the issue by tracking if we actually found any
    non-filtered rows in our pass through the sequence.
    
    OH Bugzilla: 1591

 clutter/clutter-list-model.c |   14 +++++++++++++-
 1 file changed, 13 insertions(+), 1 deletion(-)

commit 9f3927c460cbc4d50eae2b78826cc5347cb37c16
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu May 7 19:14:48 2009 +0100

    [stage] Chain up to the correct vfunc when picking
    
    The stage is chaining up to the ClutterGroup::paint instead of
    the ClutterGroup::pick method. This works anyway because we
    detect the stage by default, but it's not a reliable solution
    in case we decide to change the picking further on.

 clutter/clutter-stage.c |    3 +--
 1 file changed, 1 insertion(+), 2 deletions(-)

commit 533c9c536530bd43931793010f76714580f6b166
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu May 7 19:14:29 2009 +0100

    [debug] Show the actor name/type on queue_redraw()

 clutter/clutter-actor.c |    3 +++
 1 file changed, 3 insertions(+)

commit 86bc31bd55fec32ed70abc19f0f2c4514d1c8e29
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu May 7 19:07:21 2009 +0100

    [clock] Rework the master clock
    
    The master clock is currently advanced using a frame source driven
    by the default frame rate. This breaks the sync to vblank because
    the vblanking rate could be different than 60 Hz -- or it might be
    completely disabled (e.g. with CLUTTER_VBLANK=none).
    
    We should be using the main loop to check if we have timelines
    playing, and if so queue a redraw on the stages we own.
    
    We should also prepare the subsequent frame at the end of the redraw
    process, so if there are new redraw we will have the scene already
    in place.
    
    This makes Clutter redraw at the maximum frame rate, which is
    limited by the vblanking frequency.

 clutter/clutter-main.c         |   14 ++-
 clutter/clutter-master-clock.c |  247 +++++++++++++++++++++++++---------------
 clutter/clutter-private.h      |    2 +
 clutter/clutter-stage.c        |   10 +-
 4 files changed, 173 insertions(+), 100 deletions(-)

commit ab9c7671f57a03ab34dac97bbd3a787b5f0ab65d
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu May 7 18:47:50 2009 +0100

    [group] Implement pick
    
    Currently, picking in ClutterGroup pollutes the CLUTTER_DEBUG=paint
    logs since it just calls the paint function. Reimplementing the pick
    doesn't make us lose anything -- it might even be slightly faster
    since we don't have to do a (typed) cast and a class dereference.

 clutter/clutter-group.c |   21 ++++++++++++++-------
 1 file changed, 14 insertions(+), 7 deletions(-)

commit 081813fd61400dec7183cb5d151dff3bbbbc8b34
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu May 7 18:39:07 2009 +0100

    [animation] Do not leak timelines
    
    The timeline created when calling set_timeline(NULL) is referenced
    even though we implicitly own it. When the Animation is destroyed,
    the timeline is then leaked.
    
    Thanks to: Richard Heatley <richard.heatley@starleaf.com>
    
    Fixes bug:
    
      http://bugzilla.openedhand.com/show_bug.cgi?id=1548

 clutter/clutter-animation.c |   20 ++++++++++++--------
 1 file changed, 12 insertions(+), 8 deletions(-)

commit e41452fc0c465c92a5d26c28b4c744ae73829d58
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu May 7 19:16:20 2009 +0100

    [tests] Check em to unit conversion
    
    We should be able to position elements of the stage using em as
    a unit, and converting values into pixels.

 tests/interactive/test-text-field.c |   16 ++++++++++++----
 1 file changed, 12 insertions(+), 4 deletions(-)

commit 33ef1675f5d5d750833a5d2eb9373afe44adb0c5
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu May 7 18:46:36 2009 +0100

    [script] Allow parsing units in em
    
    When creating an actor, using "em" as a unit should result
    in an implicit conversion, like for "mm" and "pt".

 clutter/clutter-actor.c |    6 ++++++
 1 file changed, 6 insertions(+)

commit f2c25fd4f7d8a22dcb91461ebb86d1c74565c89b
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu May 7 14:16:01 2009 +0100

    Allow specifying the font for the em conversion
    
    Currently, the conversion from em to units is done by using the
    default font name inside the backend. For actors using their own
    font/text layout we need a way to specify the font name along
    with the quantity we wish to transform.

 clutter/clutter-backend.c |   89 ++++++++++++++++++++++++++++++---------------
 clutter/clutter-private.h |    3 +-
 clutter/clutter-units.c   |   47 ++++++++++++++++++++++--
 clutter/clutter-units.h   |   13 ++++---
 4 files changed, 114 insertions(+), 38 deletions(-)

commit 8ec1c3e2fbb25c32f6d14f697995c438ea4fb755
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu May 7 11:18:51 2009 +0100

    Fix remaining ::focus-in signal emission
    
    Commit 515350a7 renamed ::focus-in and ::focus-out to ::key-focus-in
    and ::key-focus-out respectively. One signal emission for ::focus-out
    escaped the renaming in ClutterStage.

 clutter/clutter-stage.c |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit 2ae9d84a2a917993ea2efb4f6980ed325a711371
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Wed May 6 18:32:17 2009 +0100

    [x11] Use -1 as the default screen guard
    
    Currently, the default screen guard value is 0, which is a valid
    screen number on X11, and it might not be the default.
    
    Patch suggested by: Owen W. Taylor <otaylor@redhat.com>

 clutter/x11/clutter-backend-x11.c |    4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

commit 8ca46d728ddd1c86869b0e04494b3a73d99e2133
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Wed May 6 11:18:31 2009 +0100

    [build] Build Cogl introspection data
    
    Currently, the introspection data for Cogl is built right into
    Clutter's own typelib. This makes functions like:
    
      cogl_path_round_rectangle()
    
    Appear as:
    
      Clutter.cogl_path_round_rectangle()
    
    It should be possible, instead, to have a Cogl namespace and:
    
      Cogl.path_round_rectangle()
    
    This means building introspection data for Cogl alone. Unfortunately,
    there are three types defined in Cogl that confuse the introspection
    scanner, and make it impossible to build a typelib:
    
      COGLint
      COGLuint
      COGLenum
    
    These three types should go away before 1.0, substituted by int,
    unsigned int and proper enumeration types. For this reason, we can
    just set up the GIR build and wait until the last moment to create
    the typelib. Once that has been done, we will be able to safely
    remove the Cogl API from the Clutter GIR and typelib and let
    people import Cogl if they want to use the Cogl API via introspection.

 clutter/cogl/Makefile.am |   57 ++++++++++++++++++++++++++++++++++++++++++++++
 1 file changed, 57 insertions(+)

commit 43fa38fcf5178bf91b8b49fc1ddf0b36b07f4b59
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Wed May 6 10:55:17 2009 +0100

    [build] Clean up the makefile
    
    Split out the files into their own variables to clean up the
    Makefile template; also use top_srcdir with the header files
    instead of top_builddir.

 clutter/cogl/gl/Makefile.am |  102 +++++++++++++++++++++----------------------
 1 file changed, 51 insertions(+), 51 deletions(-)

commit c065524b9f15aa73f9d73044b41a62644fc76a91
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Wed May 6 10:35:28 2009 +0100

    Fix inclusion guards and headers
    
    The C++ inclusion guards G_BEGIN_DECLS and G_END_DECLS are
    defined by GLib; so we need to include glib.h before using
    them.

 clutter/cogl/cogl-bitmap.h          |    4 ++--
 clutter/cogl/cogl-shader.h          |    2 +-
 clutter/cogl/cogl-texture.h         |    4 ++--
 clutter/cogl/gl/cogl-defines.h.in   |    1 +
 clutter/cogl/gles/cogl-defines.h.in |    1 +
 5 files changed, 7 insertions(+), 5 deletions(-)

commit 4cb3fa872825d2903e8c50733eb171b729a1272a
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Wed May 6 17:57:34 2009 +0100

    [docs] Update documentation
    
    Remove the units-based API and add the missing symbols.
    
    Also, do not let gtk-doc check the master clock header, since
    it's private.

 doc/reference/clutter/Makefile.am          |    1 +
 doc/reference/clutter/clutter-sections.txt |   37 +++++++---------------------
 2 files changed, 10 insertions(+), 28 deletions(-)

commit 515350a77fb42317f5a0643702733e0dbaffc2aa
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Wed May 6 17:56:40 2009 +0100

    [actor] Rename focus-in and focus-out signals
    
    For consistency, and since those signals are key-related, the
    ::focus-in signal is not ::key-focus-in and the ::focus-out
    signal is now ::key-focus-out.

 clutter/clutter-actor.c |   22 +++++++++++-----------
 clutter/clutter-actor.h |    8 ++++----
 clutter/clutter-stage.c |    6 +++---
 3 files changed, 18 insertions(+), 18 deletions(-)

commit d0ad5a8abb732ae9b80d036116b6c2c1e5bef985
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Wed May 6 17:18:12 2009 +0100

    [text] Expose position_to_coords()
    
    The clutter_text_position_to_coords() is useful for ClutterText
    subclasses.
    
    See bug:
    
      http://bugzilla.openedhand.com/show_bug.cgi?id=1521
    
    Based on a patch by: Raymond Liu <raymond.liu@intel.com>

 clutter/clutter-text.c                     |   16 ++++++++++++----
 clutter/clutter-text.h                     |    5 +++++
 doc/reference/clutter/clutter-sections.txt |    1 +
 3 files changed, 18 insertions(+), 4 deletions(-)

commit a28b9f31eb9f4c4a1d4520350f268549e4d37c5a
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Wed May 6 17:08:25 2009 +0100

    [text] Add ClutterText::delete_selection()
    
    Add a method for deleting the current selection inside a Text actor.
    
    This is useful for subclasses.
    
    See bug:
    
      http://bugzilla.openedhand.com/show_bug.cgi?id=1521
    
    Based on a patch by: Raymond Liu <raymond.liu@intel.com>

 clutter/clutter-text.c                     |   47 +++++++++++++++++++---------
 clutter/clutter-text.h                     |    1 +
 doc/reference/clutter/clutter-sections.txt |    1 +
 3 files changed, 34 insertions(+), 15 deletions(-)

commit ab1dcb803333a9a063d91312a1710c28ece951cd
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Wed May 6 17:01:44 2009 +0100

    [animation] Remove InitiallyUnowned from Animation
    
    ClutterAnimation currently inherits the initial floating reference
    semantics from GInitiallyUnowned. An Animation is, though, meant to
    be used as a top-level object, like a Timeline or a Behaviour, and
    not "owned" by another object. For this reason, the initial floating
    reference does not make any sense.

 clutter/clutter-animation.c |   18 ++++++++----------
 clutter/clutter-animation.h |    4 ++--
 2 files changed, 10 insertions(+), 12 deletions(-)

commit d6d208da7de44b1a266957ad69acff6ee0f2fd4d
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Wed May 6 16:44:47 2009 +0100

    Remove Units from the public API
    
    With the recent change to internal floating point values, ClutterUnit
    has become a redundant type, defined to be a float. All integer entry
    points are being internally converted to floating point values to be
    passed to the GL pipeline with the least amount of conversion.
    
    ClutterUnit is thus exposed as just a "pixel with fractionary bits",
    and not -- as users might think -- as generic, resolution and device
    independent units. not that it was the case, but a definitive amount
    of people was convinced it did provide this "feature", and was flummoxed
    about the mere existence of this type.
    
    So, having ClutterUnit exposed in the public API doubles the entry
    points and has the following disadvantages:
    
      - we have to maintain twice the amount of entry points in ClutterActor
      - we still do an integer-to-float implicit conversion
      - we introduce a weird impedance between pixels and "pixels with
        fractionary bits"
      - language bindings will have to choose what to bind, and resort
        to manually overriding the API
        + *except* for language bindings based on GObject-Introspection, as
          they cannot do manual overrides, thus will replicate the entire
          set of entry points
    
    For these reason, we should coalesces every Actor entry point for
    pixels and for ClutterUnit into a single entry point taking a float,
    like:
    
      void clutter_actor_set_x (ClutterActor *self,
                                gfloat        x);
      void clutter_actor_get_size (ClutterActor *self,
                                   gfloat       *width,
                                   gfloat       *height);
      gfloat clutter_actor_get_height (ClutterActor *self);
    
    etc.
    
    The issues I have identified are:
    
      - we'll have a two cases of compiler warnings:
        - printf() format of the return values from %d to %f
        - clutter_actor_get_size() taking floats instead of unsigned ints
      - we'll have a problem with varargs when passing an integer instead
        of a floating point value, except on 64bit platforms where the
        size of a float is the same as the size of an int
    
    To be clear: the *intent* of the API should not change -- we still use
    pixels everywhere -- but:
    
      - we remove ambiguity in the API with regard to pixels and units
      - we remove entry points we get to maintain for the whole 1.0
        version of the API
      - we make things simpler to bind for both manual language bindings
        and automatic (gobject-introspection based) ones
      - we have the simplest API possible while still exposing the
        capabilities of the underlying GL implementation

 clutter/clutter-actor.c                        | 2539 +++++++++---------------
 clutter/clutter-actor.h                        |  223 +--
 clutter/clutter-animation.c                    |    3 +
 clutter/clutter-backend.c                      |   11 +-
 clutter/clutter-behaviour.c                    |    5 +-
 clutter/clutter-cairo-texture.c                |   16 +-
 clutter/clutter-clone.c                        |   16 +-
 clutter/clutter-deprecated.h                   |   20 +
 clutter/clutter-event.c                        |    9 +-
 clutter/clutter-event.h                        |   24 +-
 clutter/clutter-group.c                        |   40 +-
 clutter/clutter-main.c                         |   22 +-
 clutter/clutter-private.h                      |   10 +-
 clutter/clutter-stage.c                        |   34 +-
 clutter/clutter-text.c                         |   50 +-
 clutter/clutter-texture.c                      |   63 +-
 clutter/clutter-types.h                        |    8 +-
 clutter/eglnative/clutter-stage-egl.c          |   12 +-
 clutter/fruity/clutter-stage-fruity.c          |   12 +-
 clutter/osx/clutter-stage-osx.c                |   12 +-
 clutter/sdl/clutter-stage-sdl.c                |   12 +-
 clutter/win32/clutter-stage-win32.c            |   12 +-
 clutter/x11/clutter-stage-x11.c                |   14 +-
 tests/conform/test-anchors.c                   |   15 +-
 tests/conform/test-timeline-dup-frames.c       |    1 -
 tests/conform/test-timeline-interpolate.c      |    1 -
 tests/conform/test-timeline-rewind.c           |    1 -
 tests/conform/test-timeline-smoothness.c       |    1 -
 tests/interactive/test-actor-clone.c           |    4 +-
 tests/interactive/test-actors.c                |    4 +-
 tests/interactive/test-animation.c             |   12 +-
 tests/interactive/test-clutter-cairo-flowers.c |   10 +-
 tests/interactive/test-depth.c                 |   24 +-
 tests/interactive/test-easing.c                |   12 +-
 tests/interactive/test-fullscreen.c            |    6 +-
 tests/interactive/test-layout.c                |   16 +-
 tests/interactive/test-paint-wrapper.c         |    6 +-
 tests/interactive/test-project.c               |   46 +-
 tests/interactive/test-stage-read-pixels.c     |   12 +-
 tests/interactive/test-unproject.c             |   21 +-
 40 files changed, 1320 insertions(+), 2039 deletions(-)

commit c2abdd5e820134c6281e38339ef141b1e1ed8bf0
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Wed May 6 16:43:52 2009 +0100

    [docs] Add Animation get_type() function
    
    We need to reference clutter_animation_get_type() if we want the
    properties, signals and object hierarchy to show up in the API
    reference

 doc/reference/clutter/clutter.types |    1 +
 1 file changed, 1 insertion(+)

commit 7afdfb080b2f6ecb94ea5d10a9709be71e2ddb9f
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Wed May 6 16:42:57 2009 +0100

    [docs] Document the destructor for Timeline
    
    The rest of the API reference lists the destructor for the class
    inside the constructor's return value -- except Timeline.

 clutter/clutter-timeline.c |    6 ++++--
 1 file changed, 4 insertions(+), 2 deletions(-)

commit 41bb88548605948787d53475fce68194ad441db3
Author: Rob Bradford <rob@linux.intel.com>
Date:   Tue May 5 20:15:01 2009 +0100

    [model] Add a private row mutator to ClutterModelIter
    
    When calling clutter_model_iter_next () / clutter_model_iter_prev () we need
    to update the row for the iterator. In order to improve the peformance of
    iterating this change adds a private row mutator and switches ClutterListModel
    to use it.

 clutter/clutter-list-model.c    |    4 ++--
 clutter/clutter-model-private.h |    3 +++
 clutter/clutter-model.c         |   10 ++++++++++
 3 files changed, 15 insertions(+), 2 deletions(-)

commit b2fbc2c95c8b3f0bebb6f1f4a8579dd303163078
Author: Rob Bradford <rob@linux.intel.com>
Date:   Tue May 5 19:39:26 2009 +0100

    [list-model] Use an internal iterator for comparisons
    
    In order to carry out various comparisons for e.g. identifying the first
    iterator in the model we need a ClutterModelIter. This change switches from
    creating a new iterator each time to reusing an existing iterator.

 clutter/clutter-list-model.c |   45 +++++++++++++++++++++++-------------------
 1 file changed, 25 insertions(+), 20 deletions(-)

commit 72562cda5847946d9f1d4124290b6c06c7921f2b
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Tue May 5 15:37:41 2009 +0100

    [actor] Add ActorFlags accessor methods
    
    The flags field of ClutterActor should have accessor methods for,
    language bindings.
    
    Also, the set_flags() and unset_flags() methods should actively
    emit notifications for the changed properties.

 clutter/clutter-actor.c |  148 +++++++++++++++++++++++++++++++++++++++++++++--
 clutter/clutter-actor.h |   17 ++++--
 2 files changed, 156 insertions(+), 9 deletions(-)

commit fc991e9b67d659fff143f953fe2996c27f406c8a
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Tue May 5 15:36:29 2009 +0100

    [actor] Add the :realized property
    
    The :realized property is the only missing property for an actor flag.

 clutter/clutter-actor.c |   46 ++++++++++++++++++++++++++++++++++------------
 1 file changed, 34 insertions(+), 12 deletions(-)

commit 353187ce49f681b590ffc02a19fb378e96d42dc3
Author: Robert Bragg <robert@linux.intel.com>
Date:   Fri May 1 09:53:20 2009 +0100

    [cogl-material] Adds a cogl_material_set_color4f convenience function
    
    This is simply a wrapper around cogl_color_set_from_4f and
    cogl_material_set_color. We already had a prototype for this, it was
    an oversight that it wasn't already implemented.

 clutter/cogl/cogl-material.h        |    4 ++--
 clutter/cogl/common/cogl-material.c |   12 ++++++++++++
 2 files changed, 14 insertions(+), 2 deletions(-)

commit a5cdfdfd87b2fa559460ac117f4ed27474a6f47f
Author: Robert Bragg <robert@linux.intel.com>
Date:   Thu Apr 30 22:19:43 2009 +0100

    [cogl-offscreen] Cleans up the cogl offscreen API and adds documentation
    
    There were several functions I believe no one is currently using that were
    only implemented in the GL backend (cogl_offscreen_blit_region and
    cogl_offscreen_blit) that have simply been removed so we have a chance to
    think about design later with a real use case.
    
    There was one nonsense function (cogl_offscreen_new_multisample) that
    sounded exciting but in all cases it just returned COGL_INVALID_HANDLE
    (though at least for GL it checked for multisampling support first!?)
    it has also been removed.
    
    The MASK draw buffer type has been removed. If we want to expose color
    masking later then I think it at least would be nicer to have the mask be a
    property that can be set on any draw buffer.
    
    The cogl_draw_buffer and cogl_{push,pop}_draw_buffer function prototypes
    have been moved up into cogl.h since they are for managing global Cogl state
    and not for modifying or creating the actual offscreen buffers.
    
    This also documents the API so for example desiphering the semantics of
    cogl_offscreen_new_to_texture() should be a bit easier now.

 README                                  |   54 ++++++++-------
 clutter/clutter-texture.c               |    4 +-
 clutter/cogl/cogl-offscreen.h           |   97 +++++++--------------------
 clutter/cogl/cogl-types.h               |    4 +-
 clutter/cogl/cogl.h.in                  |   29 ++++++++
 clutter/cogl/common/cogl-util.c         |    1 -
 clutter/cogl/gl/cogl-fbo.c              |  109 ++-----------------------------
 clutter/cogl/gles/cogl-fbo.c            |   91 ++------------------------
 clutter/cogl/gles/cogl-texture.c        |    5 --
 doc/reference/cogl/cogl-sections.txt    |    4 +-
 tests/interactive/test-cogl-offscreen.c |    4 +-
 11 files changed, 104 insertions(+), 298 deletions(-)

commit e47b19822510344e4cae854e99a5ef0a76304980
Author: Havoc Pennington <hp@pobox.com>
Date:   Thu Feb 19 22:37:08 2009 -0500

    add cogl_push_draw_buffer() and cogl_pop_draw_buffer()
    
    These are necessary if nesting redirections to an fbo,
    otherwise there's no way to know how to restore
    previous state.
    
    glPushAttrib(GL_COLOR_BUFFER_BIT) would save draw buffer
    state, but also saves a lot of other stuff, and
    cogl_draw_buffer() relies on knowing about all draw
    buffer state changes. So we have to implement a
    draw buffer stack ourselves.
    
    Signed-off-by: Robert Bragg <robert@linux.intel.com>

 clutter/cogl/cogl-offscreen.h    |   14 +++++++
 clutter/cogl/gl/cogl-context.c   |    7 +++-
 clutter/cogl/gl/cogl-context.h   |    8 +++-
 clutter/cogl/gl/cogl-fbo.c       |   75 ++++++++++++++++++++++++++++++++++++--
 clutter/cogl/gles/cogl-context.c |    7 +++-
 clutter/cogl/gles/cogl-context.h |    8 +++-
 clutter/cogl/gles/cogl-fbo.c     |   75 ++++++++++++++++++++++++++++++++++++--
 7 files changed, 184 insertions(+), 10 deletions(-)

commit d5fc61102fccf49a9156b2a2bdd2954207d87c38
Author: Robert Bragg <robert@linux.intel.com>
Date:   Thu Apr 30 18:00:22 2009 +0100

    [cogl] Only expose CoglBitmap as a CoglHandle
    
    It was inconsistent that we exposed the CoglBitmap struct instead of an
    opaque CoglHandle.

 clutter/clutter-texture.c                  |    8 +--
 clutter/cogl/cogl-bitmap.h                 |   78 +++++++++++++++++++++
 clutter/cogl/cogl-texture.h                |   45 +------------
 clutter/cogl/cogl-types.h                  |    7 --
 clutter/cogl/cogl.h.in                     |    1 +
 clutter/cogl/common/Makefile.am            |    2 +-
 clutter/cogl/common/cogl-bitmap-fallback.c |    2 +-
 clutter/cogl/common/cogl-bitmap-pixbuf.c   |    2 +-
 clutter/cogl/common/cogl-bitmap-private.h  |  101 ++++++++++++++++++++++++++++
 clutter/cogl/common/cogl-bitmap.c          |   25 ++++---
 clutter/cogl/common/cogl-bitmap.h          |   98 ---------------------------
 clutter/cogl/gl/Makefile.am                |    2 +
 clutter/cogl/gl/cogl-texture-private.h     |    2 +-
 clutter/cogl/gl/cogl-texture.c             |   13 ++--
 clutter/cogl/gles/Makefile.am              |    2 +
 clutter/cogl/gles/cogl-texture-private.h   |    2 +-
 clutter/cogl/gles/cogl-texture.c           |   12 ++--
 doc/reference/cogl/cogl-sections.txt       |   13 ++--
 18 files changed, 235 insertions(+), 180 deletions(-)

commit ee57192f47e38a62828e0f2c1a1f966b7aa4fba3
Author: Robert Bragg <robert@linux.intel.com>
Date:   Wed Apr 29 19:49:09 2009 +0100

    [cogl-material] make _cogl_material_layer_free check for an invalid texture handle
    
    It is valid in some situations to have a material layer with an invalid texture
    handle (e.g. if you setup a texture combine mode before setting the texture)
    and so _cogl_material_layer_free needs to check for a valid handle before
    attempting to unref it.

 clutter/cogl/common/cogl-material.c |    3 ++-
 1 file changed, 2 insertions(+), 1 deletion(-)

commit f85377372cc1317f8301a78423e76c668e281f3b
Author: Robert Bragg <robert@linux.intel.com>
Date:   Mon Apr 27 15:48:12 2009 +0100

    [cogl] Updates all file headers and removes lots of trailing white space
    
    Adds missing notices, and ensures all the notices are consistent. The Cogl
    blurb also now reads:
    
     * Cogl
     *
     * An object oriented GL/GLES Abstraction/Utility Layer

 clutter/cogl/cogl-color.h                        |   12 ++-
 clutter/cogl/cogl-debug.h                        |   23 ++++
 clutter/cogl/cogl-deprecated.h                   |   23 ++++
 clutter/cogl/cogl-fixed.h                        |   14 ++-
 clutter/cogl/cogl-material.h                     |   23 ++++
 clutter/cogl/cogl-matrix.h                       |   26 +++++
 clutter/cogl/cogl-offscreen.h                    |   14 ++-
 clutter/cogl/cogl-path.h                         |   12 ++-
 clutter/cogl/cogl-shader.h                       |   12 ++-
 clutter/cogl/cogl-texture.h                      |   12 ++-
 clutter/cogl/cogl-types.h                        |   21 ++--
 clutter/cogl/cogl-vertex-buffer.h                |   17 +--
 clutter/cogl/cogl.h.in                           |    9 +-
 clutter/cogl/common/cogl-bitmap-fallback.c       |   52 +++++----
 clutter/cogl/common/cogl-bitmap-pixbuf.c         |   38 ++++---
 clutter/cogl/common/cogl-bitmap.c                |   40 ++++---
 clutter/cogl/common/cogl-clip-stack.c            |    8 +-
 clutter/cogl/common/cogl-clip-stack.h            |    8 +-
 clutter/cogl/common/cogl-color.c                 |   23 ++++
 clutter/cogl/common/cogl-current-matrix.c        |   11 +-
 clutter/cogl/common/cogl-current-matrix.h        |   11 +-
 clutter/cogl/common/cogl-debug.c                 |   23 ++++
 clutter/cogl/common/cogl-fixed.c                 |   23 ++++
 clutter/cogl/common/cogl-handle.h                |    8 +-
 clutter/cogl/common/cogl-internal.h              |    5 +-
 clutter/cogl/common/cogl-material-private.h      |   26 +++++
 clutter/cogl/common/cogl-material.c              |   25 +++++
 clutter/cogl/common/cogl-matrix-stack.c          |   11 +-
 clutter/cogl/common/cogl-matrix-stack.h          |   11 +-
 clutter/cogl/common/cogl-matrix.c                |   26 +++++
 clutter/cogl/common/cogl-primitives.c            |  122 +++++++++++-----------
 clutter/cogl/common/cogl-primitives.h            |    8 +-
 clutter/cogl/common/cogl-util.c                  |   16 ++-
 clutter/cogl/common/cogl-util.h                  |   10 +-
 clutter/cogl/common/cogl-vertex-buffer-private.h |   15 +--
 clutter/cogl/common/cogl-vertex-buffer.c         |   17 +--
 clutter/cogl/common/cogl.c                       |    5 +-
 clutter/cogl/gl/cogl-context.c                   |    8 +-
 clutter/cogl/gl/cogl-context.h                   |    8 +-
 clutter/cogl/gl/cogl-defines.h.in                |   22 ++--
 clutter/cogl/gl/cogl-fbo.c                       |   84 ++++++++-------
 clutter/cogl/gl/cogl-fbo.h                       |    8 +-
 clutter/cogl/gl/cogl-internal.h                  |    8 +-
 clutter/cogl/gl/cogl-primitives.c                |    8 +-
 clutter/cogl/gl/cogl-program.c                   |   16 ++-
 clutter/cogl/gl/cogl-program.h                   |    8 +-
 clutter/cogl/gl/cogl-shader-private.h            |    8 +-
 clutter/cogl/gl/cogl-shader.c                    |   10 +-
 clutter/cogl/gl/cogl-texture-private.h           |    8 +-
 clutter/cogl/gl/cogl-texture.c                   |   13 ++-
 clutter/cogl/gl/cogl.c                           |    4 +-
 clutter/cogl/gles/cogl-context.c                 |    8 +-
 clutter/cogl/gles/cogl-context.h                 |    8 +-
 clutter/cogl/gles/cogl-fbo.c                     |    8 +-
 clutter/cogl/gles/cogl-fbo.h                     |    8 +-
 clutter/cogl/gles/cogl-gles2-wrapper.c           |   10 +-
 clutter/cogl/gles/cogl-gles2-wrapper.h           |    8 +-
 clutter/cogl/gles/cogl-internal.h                |    8 +-
 clutter/cogl/gles/cogl-primitives.c              |    8 +-
 clutter/cogl/gles/cogl-program.c                 |   12 +--
 clutter/cogl/gles/cogl-program.h                 |    8 +-
 clutter/cogl/gles/cogl-shader-private.h          |    8 +-
 clutter/cogl/gles/cogl-shader.c                  |   10 +-
 clutter/cogl/gles/cogl-texture-private.h         |    8 +-
 clutter/cogl/gles/cogl-texture.c                 |    8 +-
 clutter/cogl/gles/cogl-util.c                    |   10 +-
 clutter/cogl/gles/cogl-util.h                    |   10 +-
 clutter/cogl/gles/cogl.c                         |    4 +-
 clutter/cogl/gles/stringify.sh                   |   30 +++++-
 69 files changed, 684 insertions(+), 463 deletions(-)

commit 741c4bb5e92c5f7f86188a89b9697b842783d714
Author: Robert Bragg <robert@linux.intel.com>
Date:   Fri Apr 24 18:09:52 2009 +0100

    [cogl] Adds a bitfield argument to cogl_clear for specifying which buffers to clear
    
    Redundant clearing of depth and stencil buffers every render can be very
    expensive, so cogl now gives control over which auxiliary buffers are
    cleared.
    
    Note: For now clutter continues to clear the color, depth and stencil buffer
    each paint.

 README                     |    5 +++--
 clutter/clutter-main.c     |    5 ++++-
 clutter/clutter-stage.c    |    5 ++++-
 clutter/clutter-texture.c  |    8 +++++++-
 clutter/cogl/cogl.h.in     |   21 ++++++++++++++++++---
 clutter/cogl/common/cogl.c |   42 +++++++++++++++++++++++-------------------
 6 files changed, 59 insertions(+), 27 deletions(-)

commit fa9efe4828834a62b694232d61124f4b0703d922
Author: Neil Roberts <neil@linux.intel.com>
Date:   Thu Apr 30 18:47:59 2009 +0100

    Accumulate small deltas
    
    The clutter frame source tries to average out the frame deltas so that
    if one frame takes 1 interval plus a little bit of extra time then the
    next frame will be 1 interval minus that little bit of extra
    time. Therefore the deltas can sometimes be less than the frame
    interval. ClutterTimeline should accumulate these small differences
    otherwise it will end up missing out frames so the total duration of
    the timeline will be a lot longer.
    
    For example this was causing test-actors to appear to run very slow.

 clutter/clutter-timeline.c |    4 +++-
 1 file changed, 3 insertions(+), 1 deletion(-)

commit cf28c023a051eef96c9aa9c8ebffff75f470470a
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Fri May 1 15:08:42 2009 +0100

    [tests] Manually advance the timelines
    
    The units in the Timeline test suite just rely on the timeline
    being a timeout automatically advanced by the main loop. This
    is not the case anymore, since the merge of the master-clock.
    
    To make the test units work again we need to "emulate" the master
    clock without effectively having a stage to redraw; we do this
    by creating a frame source and manually advancing the timelines
    we create for test purposes, using the advance_msecs() "protected"
    method.

 tests/conform/test-timeline-dup-frames.c  |   40 +++++++++++++++++--
 tests/conform/test-timeline-interpolate.c |   52 ++++++++++++++++++++-----
 tests/conform/test-timeline-rewind.c      |   46 ++++++++++++++++++----
 tests/conform/test-timeline-smoothness.c  |   41 ++++++++++++++++++--
 tests/conform/test-timeline.c             |   59 ++++++++++++++++++++++++++++-
 5 files changed, 214 insertions(+), 24 deletions(-)

commit 5be29cf9bc6ee5789f4f8473aee8ec72a77034c9
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Fri May 1 15:05:51 2009 +0100

    [timeline] Expose the msec advancement
    
    The method of ClutterTimeline that advances the timeline by a
    delta (in millisecond) is going to be useful for testing the
    timeline's behaviour -- and unbreak the timeline test suite that
    was broken by the MasterClock merge.

 clutter/clutter-master-clock.c |    2 +-
 clutter/clutter-private.h      |    3 ---
 clutter/clutter-timeline.c     |   16 +++++++---------
 clutter/clutter-timeline.h     |    4 ++++
 4 files changed, 12 insertions(+), 13 deletions(-)

commit d7a1a168ba1039cd4711bda60015667dbf1fcb27
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Fri May 1 12:42:37 2009 +0100

    [tests] Verify that Clone can paint hidden sources
    
    With the change in commit 87e4e2 painting of hidden source actors
    in ClutterClone was fixed. This commit changes the test-actor-clone
    to visually verify this.

 tests/interactive/test-actor-clone.c |    5 +++++
 1 file changed, 5 insertions(+)

commit 71473466fa2cc4783934b2cdbcb709d50a0e37b8
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Fri May 1 12:42:30 2009 +0100

    [gitignore] Ignore the new invariants units

 .gitignore |    3 +++
 1 file changed, 3 insertions(+)

commit 1a87e4e2520a57d26a4e83e7f69f26d2cfab3d4c
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Fri May 1 12:33:42 2009 +0100

    [clone] Allow painting hidden source actors
    
    With the introduction of the map/unmap flags and the split of the
    visible state from the mapped state we require that every part of
    a scene graph branch is mapped in order to be painted. This breaks
    the ability of a ClutterClone to paint an hidden source actor.
    
    In order to fix this we need to introduce an override flag, similar
    in spirit to the current modelview and paint opacity overrides that
    Clone is already using.
    
    The override flag, when set, will force a temporary map on a
    Clone source (and its children).

 clutter/clutter-actor.c   |  129 ++++++++++++++++++++++++++++++++++-----------
 clutter/clutter-clone.c   |   10 ++++
 clutter/clutter-private.h |    3 ++
 3 files changed, 112 insertions(+), 30 deletions(-)

commit 5d2d8297e26780d95f46c77d5865c1cb77959d07
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Fri May 1 12:31:06 2009 +0100

    [actor] Use foreach_with_internals()
    
    ClutterContainer provides a foreach_with_internals() vfunc for
    iterating over all of a container's children, be them added using
    the Container API or be them internal to the container itself.
    
    We should be using the foreach_with_internals() function instead
    of the plain foreach().

 clutter/clutter-actor.c |   55 +++++++++++++++++++++++------------------------
 1 file changed, 27 insertions(+), 28 deletions(-)

commit 20cd885c3d6b8fce611c156a491ca93ea7ba13c6
Author: Neil Roberts <neil@linux.intel.com>
Date:   Thu Apr 30 15:00:01 2009 +0100

    [ClutterTexture] Check before unrefing the fbo_handle
    
    When replacing the fbo_handle with a new handle it first unrefs the
    old handle. This was previously a call to cogl_offscreen_unref which
    silently ignored attempts to unref COGL_INVALID_HANDLE. However the
    new cogl_handle_unref does check for this so we should make sure the
    handle is valid to avoid the warning.

 clutter/clutter-texture.c |    3 ++-
 1 file changed, 2 insertions(+), 1 deletion(-)

commit 4f692cc3ee9089c568952e758406954bc5cf72dd
Author: Neil Roberts <neil@linux.intel.com>
Date:   Thu Apr 30 14:32:19 2009 +0100

    [ClutterTexture] Attach the FBO texture to a layer in the material
    
    Bug 1565 - test-fbo case failed in many platform
    
    clutter_texture_new_from_actor was broken because it created the FBO
    texture but then never attached it to the material so it was never
    used for rendering. The old behaviour in Clutter 0.8 was to assign the
    texture directly to priv->tex. In 0.9 priv->tex is replaced with
    priv->material which has a reference to the tex in layer 0. So putting
    the FBO texture directly in layer 0 more closely matches the original
    behaviour.

 clutter/clutter-texture.c |   47 ++++++++++++++++++++++++++-------------------
 1 file changed, 27 insertions(+), 20 deletions(-)

commit 8e6e09c8ef646f20bbcde7fdff02069d0d20167e
Author: Øyvind Kolås <pippin@linux.intel.com>
Date:   Thu Apr 30 11:54:09 2009 +0100

    [events] Added handling of missing type to clutter_event_get_state
    
    clutter_event_get_state wasn't returning the state for
    CLUTTER_BUTTON_RELEASE, the information was there it just needed to
    be returned correctly.

 clutter/clutter-event.c |    1 +
 1 file changed, 1 insertion(+)

commit bb156970defbd7479d512ab5b5aeb78fd1fefd75
Author: Neil Roberts <neil@linux.intel.com>
Date:   Wed Mar 25 14:18:00 2009 +0000

    Render pango layouts with vertex buffers
    
    When rendering a pango layout CoglPangoRenderer now records the
    operations into a list called a CoglPangoDisplayList. The entries in
    the list are either glyph renderings from a texture, rectangles or
    trapezoids. Multiple consecutive glyph renderings from the same glyph
    cache texture are combined into a single entry. Note the
    CoglPangoDisplayList has nothing to do with a GL display list.
    
    After the display list is built it is attached to the PangoLayout with
    g_object_set_qdata so that next time the layout is rendered it can
    bypass rebuilding it.
    
    The glyph rendering entries are drawn via a VBO. The VBO is attached
    to the display list so it can be used multiple times. This makes the
    common case of rendering a PangoLayout contained in a single texture
    subsequent times usually boil down to a single call to glDrawArrays
    with an already uploaded VBO.
    
    The VBOs are accessed via the cogl_vertex_buffer API so if VBOs are
    not available in GL it will resort to a fallback.
    
    Note this will fall apart if the pango layout is altered after the
    first render. I can't find a way to detect when the layout is
    altered. However this won't affect ClutterText because it creates a
    new PangoLayout whenever any properties are changed.

 clutter/pango/Makefile.am               |    2 +
 clutter/pango/cogl-pango-display-list.c |  330 +++++++++++++++++++++++++++++++
 clutter/pango/cogl-pango-display-list.h |   68 +++++++
 clutter/pango/cogl-pango-render.c       |  145 ++++++++------
 4 files changed, 482 insertions(+), 63 deletions(-)

commit 48ac45f060a6b2df7a2adfecd6019ce18ae3db3b
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Wed Apr 29 15:41:12 2009 +0100

    [gitignore] Update with the new Model test

 .gitignore |    1 +
 1 file changed, 1 insertion(+)

commit d2cd636fb69e313e3105a21f6194b98b4a5cba30
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Wed Apr 29 15:40:13 2009 +0100

    [docs] Add ClutterModel::get_filter_set()

 doc/reference/clutter/clutter-sections.txt |    1 +
 1 file changed, 1 insertion(+)

commit f3e33bd25a0f9710166d5e72524163966f3c2982
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Wed Apr 29 15:39:23 2009 +0100

    [tests] Exercise the Model filtering
    
    Add a test unit that exercises the ClutterModel iteration API
    when there is a filter in place.

 tests/conform/test-conform-main.c |    1 +
 tests/conform/test-model.c        |  138 +++++++++++++++++++++++++++++++++++--
 2 files changed, 133 insertions(+), 6 deletions(-)

commit 01d172293ce3c6dd8576319657ab316c479e6acc
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Wed Apr 29 15:26:05 2009 +0100

    [model] Rework Model behaviour with a filter
    
    Currently ClutterModel::get_iter_at_row() ignores whether we have
    a filter in place. This also extends to the get_n_rows() method.
    
    The more consistent, more intuitive and surely more correct way to
    handle a Model with a filter in place is to take into account the
    presence of the filter itself -- that is:
    
      - get_n_rows() should take into account the filter and return the
        number of *filtered* rows
    
      - get_iter_at_row() should also take the filter into account and
        get the first non-filtered row
    
    These two changes make the ClutterModel with a filter function
    behave like a subset of the original Model without a filter in
    place.
    
    For instance, given a model with three rows:
    
      - [row 0]     <does not match filter>
      - [row 1]     <matches filter>
      - [row 2]     <matches filter>
      - [row 3]     <does not match filter>
    
    The get_n_rows() method will return "2", since only two rows will
    match the filter; the get_first_iter() method will ask for the
    zero-eth row, which will return an iterator pointing to the contents
    of row 1 (but the :row property of the iterator will be set to 0);
    the get_last_iter() method will ask for the last row, which will
    return an iterator pointing to the contents of row 2 (but the :row
    property of the iterator will be set to 1).
    
    This changes will hopefully make the Model API more consistent
    in its usage whether there is a filter in place or not.

 clutter/clutter-list-model.c |  100 ++++++++++++++++++++-------------
 clutter/clutter-model.c      |  125 +++++++++++++++++++++++++-----------------
 clutter/clutter-model.h      |    2 +-
 3 files changed, 138 insertions(+), 89 deletions(-)

commit 44fefa2afec991d9b60ae5694e511617b1369d1f
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Wed Apr 29 15:14:40 2009 +0100

    [model] Add :filter-set
    
    Currently, there is no way for implementations of the ClutterModel
    abstract class to know whether there is a filter in place. Since
    subclasses might implement some optimization in case there is no
    filter present, we need a simple (and public) API to ask the model
    itself.

 clutter/clutter-model.c |   67 ++++++++++++++++++++++++++++++++++++++++++++++-
 clutter/clutter-model.h |    1 +
 2 files changed, 67 insertions(+), 1 deletion(-)

commit 9fdc9ca583e1b3e0dd81d7322732156d3eb121b7
Author: Neil Roberts <neil@linux.intel.com>
Date:   Tue Apr 21 14:15:19 2009 +0100

    [ClutterText] Fix actors with a width but no wrapping and the wrap modes
    
    Setting the wrap mode on the PangoLayout seems to have disappeared
    during the text-actor-layout-height branch merge so this brings it
    back. The test for this in test-text-cache no longer needs to be
    disabled.
    
    We also shouldn't set the width on the layout if there is no wrapping
    or ellipsizing because otherwise it implicitly enables wrapping. This
    only matters if the actor gets allocated smaller than its natural
    size.

 clutter/clutter-text.c          |   10 +++++++---
 tests/conform/test-text-cache.c |    2 --
 2 files changed, 7 insertions(+), 5 deletions(-)

commit e260296cb5a8acef0ba2c9a10b6dec1dca787081
Author: Owen W. Taylor <otaylor@redhat.com>
Date:   Fri Feb 27 14:43:47 2009 -0500

    [clone] Redraw when the source changes
    
    Bug 1484 - Redraw ClutterClone when the source changes, even for
               !visible sources
    
    Connect to ::queue-redraw on the clone source and queue a redraw.
    This allows redrawing the Clone when the source changes, even in
    case of a non visible source actor.
    
    http://bugzilla.openedhand.com/show_bug.cgi?id=1484
    
    Signed-off-by: Emmanuele Bassi <ebassi@linux.intel.com>

 clutter/clutter-clone.c |   62 ++++++++++++++++++++++++++++++++---------------
 1 file changed, 42 insertions(+), 20 deletions(-)

commit 678f99677fb9f6c1d443da1c27753c5cbe768118
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Sat Mar 21 20:39:32 2009 +0000

    Use a single master "clock" to drive timelines
    
    Currently, all timelines install a timeout inside the TimeoutPool
    they share. Every time the main loop spins, all the timeouts are
    updated. This, in turn, will usually lead to redraws being queued
    on the stages.
    
    This behaviour leads to the potential starvation of timelines and
    to excessive redraws.
    
    One lesson learned from the games developers is that the scenegraph
    should be prepared in its entirety before the GL paint sequence is
    initiated. This means making sure that every ::new-frame signal
    handler is called before clutter_redraw() is invoked.
    
    In order to do so a TimeoutPool is not enough: we need a master
    clock. The clock will be responsible for advancing all the active
    timelines created inside a scene, but only when the stage is
    being redrawn.
    
    The sequence is:
    
      + queue_redraw() is invoked on an actor and bubbles up
        to the stage
    
      + if no redraw() has already been scheduled, install an
        idle handler with a known priority
    
      + inside the idle handler:
    
        - advance the master clock, which will in turn advance
          every playing timeline by the amount of milliseconds
          elapsed since the last redraw; this will make every
          playing timeline emit the ::new-frame signal
    
        - queue a relayout
    
        - call the redraw() method of the backend
    
    This way we trade multiple timeouts with a single frame source
    that only runs if a timeline is playing and queues redraws on
    the various stages.

 clutter/Makefile.am            |    2 +
 clutter/clutter-main.c         |    7 +-
 clutter/clutter-master-clock.c |  364 ++++++++++++++++++++++++++++++++++++++++
 clutter/clutter-master-clock.h |   48 ++++++
 clutter/clutter-private.h      |    5 +
 clutter/clutter-stage.c        |   51 ++++--
 clutter/clutter-timeline.c     |  247 +++++++++------------------
 7 files changed, 537 insertions(+), 187 deletions(-)

commit 51f4e9680b599d040d9200cb0bd19a024999c22d
Author: Johan Bilien <jobi@litl.com>
Date:   Wed Apr 8 10:33:39 2009 +0100

    Relinquish the focus when unmapped while owning it
    
    Bug 1547 - when an actor is unmapped while owning the focus, it should
               release it
    
    When an actor is unmapped while owning the focus, the should release it.
    
    Signed-off-by: Emmanuele Bassi <ebassi@linux.intel.com>

 clutter/clutter-actor.c |   14 ++++++++++++++
 1 file changed, 14 insertions(+)

commit 125bded81455df73b37ed459f360ced0135db65a
Author: Havoc Pennington <hp@pobox.com>
Date:   Thu Apr 2 09:16:43 2009 -0400

    Enforce invariants on mapped, realized, visibility states
    
    Bug 1138 - No trackable "mapped" state
    
    * Add a VISIBLE flag tracking application programmer's
      expected showing-state for the actor, allowing us to
      always ensure we keep what the app wants while tracking
      internal implementation state separately.
    
    * Make MAPPED reflect whether the actor will be painted;
      add notification on a ClutterActor::mapped property.
      Keep MAPPED state updated as the actor is shown,
      ancestors are shown, actor is reparented, etc.
    
    * Require a stage and realized parents to realize; this means
      at realization time the correct window system and GL resources
      are known. But unparented actors can no longer be realized.
    
    * Allow children to be unrealized even if parent is realized.
      Otherwise in effect either all actors or no actors are realized,
      i.e. it becomes a stage-global flag.
    
    * Allow clutter_actor_realize() to "fail" if not inside a toplevel
    
    * Rework clutter_actor_unrealize() so internally we have
      a flavor that does not mess with visibility flag
    
    * Add _clutter_actor_rerealize() to encapsulate a somewhat
      tricky operation we were doing in a couple of places
    
    * Do not realize/unrealize children in ClutterGroup,
      ClutterActor already does it
    
    * Do not realize impl by hand in clutter_stage_show(),
      since showing impl already does that
    
    * Do not unrealize in various dispose() methods, since
      ClutterActor dispose implementation already does it
      and chaining up is mandatory
    
    * ClutterTexture uses COGL while unrealizable (before it's
      added to a stage). Previously this breakage was affecting
      ClutterActor because we had to allow realize outside
      a stage. Move the breakage to ClutterTexture, by making
      ClutterTexture just use COGL while not realized.
    
    * Unrealize before we set parent to NULL in clutter_actor_unparent().
      This means unrealize() implementations can get to the stage.
      Because actors need the stage in order to detach from stage.
    
    * Update clutter-actor-invariants.txt to reflect latest changes
    
    * Remove explicit hide/unrealize from ClutterActor::dispose since
      unparent already forces those
      Instead just assert that unparent() occurred and did the right thing.
    
    * Check whether parent implements unrealize before chaining up
      Needed because ClutterGroup no longer has to implement unrealize.
    
    * Perform unrealize in the default handler for the signal.
      This allows non-containers that have children to work properly,
      and allows containers to override how it's done.
    
    * Add map/unmap virtual methods and set MAPPED flag on self and
      children in there. This allows subclasses to hook map/unmap.
      These are not signals, because notify::mapped is better for
      anything it's legitimate for a non-subclass to do.
    
    Signed-off-by: Emmanuele Bassi <ebassi@linux.intel.com>

 clutter/clutter-actor.c               |  813 +++++++++++++++++++++++++++++----
 clutter/clutter-actor.h               |   12 +-
 clutter/clutter-group.c               |   18 -
 clutter/clutter-private.h             |    4 +
 clutter/clutter-stage.c               |   60 +--
 clutter/clutter-texture.c             |   81 ++--
 clutter/eglnative/clutter-stage-egl.c |    5 +-
 clutter/eglx/clutter-stage-egl.c      |    6 +-
 clutter/fruity/clutter-fruity.c       |    4 +
 clutter/fruity/clutter-stage-fruity.c |    5 +-
 clutter/glx/clutter-stage-glx.c       |   12 +-
 clutter/sdl/clutter-stage-sdl.c       |    2 -
 clutter/win32/clutter-stage-win32.c   |   15 +-
 clutter/x11/clutter-stage-x11.c       |   69 +--
 doc/clutter-actor-invariants.txt      |  180 ++++++--
 tests/conform/test-actor-invariants.c |  129 +++++-
 tests/conform/test-conform-main.c     |    3 +
 17 files changed, 1142 insertions(+), 276 deletions(-)

commit b73ee6992c68559f04f8d3e42d337b1c39a57933
Author: Johan Bilien <jobi@via.ecp.fr>
Date:   Fri Apr 24 15:07:49 2009 +0100

    Unnecessary glColorMask on alpha drops performance
    
    Bug 1228 - Unnecessary glColorMask on alpha drops performance
    
    With DRI2, alpha is allowed in the window's framebuffer
    
    Signed-off-by: Emmanuele Bassi <ebassi@linux.intel.com>

 clutter/cogl/gl/cogl-fbo.c |    8 +-------
 1 file changed, 1 insertion(+), 7 deletions(-)

commit 08ba42a5ab4d42a76b4c1ff30bf37d6e3177de11
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Fri Apr 24 15:05:02 2009 +0100

    Allow passing the pick mode to get_actor_at_pos()
    
    Bug 1513 - Allow passing in ClutterPickMode to
               clutter_stage_get_actor_at_pos()
    
    At the moment, clutter_stage_get_actor_at_pos() uses CLUTTER_PICK_ALL
    internally to find an actor. It would be useful to allow passing in
    ClutterPickMode to clutter_stage_get_actor_at_pos(), so that the caller
    can specify CLUTTER_PICK_REACTIVE as a criteria.

 clutter/clutter-private.h                  |    6 ------
 clutter/clutter-stage.c                    |   16 +++++++++++-----
 clutter/clutter-stage.h                    |   17 +++++++++++++++++
 doc/reference/clutter/clutter-sections.txt |    1 +
 tests/conform/test-pick.c                  |    1 +
 tests/interactive/test-actor-clone.c       |    4 +++-
 tests/interactive/test-actors.c            |    4 +++-
 tests/interactive/test-paint-wrapper.c     |    2 +-
 tests/interactive/test-project.c           |    4 +++-
 tests/interactive/test-unproject.c         |    4 +++-
 10 files changed, 43 insertions(+), 16 deletions(-)

commit 60645727036d9b0945b9ce71606d6067a54dd1e7
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Fri Apr 24 14:59:18 2009 +0100

    [x11] Use XWithdrawWindow()
    
    Bug 1516 - Does not withdraw toplevels correctly
    
    clutter_stage_x11_hide() needs to use XWithdrawWindow(), not
    XUnmapWindow().
    
    As it stands now, if the window is already unmapped (say the WM has
    minimized it), then the WM will not know that Clutter has closed the
    window and will keep the window managed, showing it in the task list
    and so forth.

 clutter/x11/clutter-stage-x11.c |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit 4f663384c77788e5d8b64c02175d7c8c5a0415de
Author: Havoc Pennington <hp@pobox.com>
Date:   Mon Mar 23 10:15:00 2009 -0400

    Add ClutterContainer::foreach_with_internals()
    
    Bug 1517 - clutter_container_foreach_with_internals()
    
    This allows us to iterate over all children (for things like maintaining
    map/realize invariants) or only children that apps added and care about.
    
    Signed-off-by: Emmanuele Bassi <ebassi@linux.intel.com>

 clutter/clutter-container.c |   40 +++++++++++++++++++++++++++++++++++++++-
 clutter/clutter-container.h |   34 ++++++++++++++++++++--------------
 2 files changed, 59 insertions(+), 15 deletions(-)

commit 27bea43a4d7b792159622ad67f1ddbb0919f3d94
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu Apr 23 11:38:58 2009 +0100

    [docs] Increase verbosity for commit messages
    
    Apparently, not everyone read the HACKING file, especially the
    section about commit messages. This lead to some confusion with
    regards to the acceptable (i.e. mandatory) format for commit
    messages in Clutter. Let's clarify it a little bit before I start
    enforcing it and reverting commits.

 HACKING |   48 ++++++++++++++++++++++++++++++++++++------------
 1 file changed, 36 insertions(+), 12 deletions(-)

commit d6ccecd79e40f5d5887b81f22bc969216d09c8d5
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu Apr 23 11:35:10 2009 +0100

    [alpha] Sanitize easing equations
    
    Bug 1561 - Bad code in clutter-alpha.c
    
    The implementation of the easing modes equations followed closely
    the JavaScript and ActionScript counterparts. Obviously, JS and AS
    are not C-compatible, so later versions of gcc (4.4.0 for instance)
    would complain about uninitialized variables and such. The code is
    also obfuscated and hard to debug/understand.
    
    For these reasons, the implementation should be unobfuscated and
    sanitized.

 clutter/clutter-alpha.c |  157 ++++++++++++++++++++++++++++++++---------------
 1 file changed, 108 insertions(+), 49 deletions(-)

commit 1d2ac51ea34cae9e94e6d5f831db13f0ac3613d8
Author: Robert Bragg <robert@linux.intel.com>
Date:   Fri Apr 17 19:05:21 2009 +0100

    [x11-texture-pixmap] Fixes a reported lockup due to an undesireable X server grab
    
    A lockup was reported by fargoilas on #clutter and removing the server grab in
    clutter_x11_texture_pixmap_sync_window fixed the problem.
    
    We were doing an x server grab to guarantee that if the XGetWindowAttributes
    request reported that our redirected window was viewable then we would also
    be able to get a valid pixmap name.  (the composite protocol says it's an
    error to request a name for a window if it's not viewable) Without the grab
    there would be a race condition.
    
    Instead we now handle error conditions gracefully.

 clutter/x11/clutter-x11-texture-pixmap.c |   50 +++++++++++++++++-------------
 1 file changed, 29 insertions(+), 21 deletions(-)

commit ffefbe466100f72eed7ce760512253f0b90786fe
Author: Emmanuele Bassi <ebassi@gnome.org>
Date:   Thu Apr 2 10:28:37 2009 +0100

    [text] Avoid a Pango warning with empty markup
    
    When the markup string is empty Pango complains about invalid
    characters.

 clutter/clutter-text.c |   12 +++++++++---
 1 file changed, 9 insertions(+), 3 deletions(-)

commit bced9c65e73e94d206c1c98e824dee9c83783010
Author: Neil Roberts <neil@linux.intel.com>
Date:   Fri Mar 27 21:55:40 2009 +0000

    [test-pick] Improve to include a covering actor
    
    Three tests are now performed on the picked squares. First there is no
    covering actor which is the same as the original test. Then there is a
    hidden covering actor which should not affect the results. Finally
    there is a covering actor with a clip set on it so that only actors
    at the borders of the stage should be pickable.

 tests/conform/test-pick.c |  115 +++++++++++++++++++++++++++++++++------------
 1 file changed, 84 insertions(+), 31 deletions(-)

commit 77dc4fd66bdd649ba3705a59b26c75dc5e891bd3
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Tue Apr 21 12:09:59 2009 +0100

    [tests] Disable a subtest of the Text cache unit
    
    The wrap mode sub-test inside the ClutterText layout cache test
    unit has been broken by the recent changes inside the Text actor.
    
    The sub-test itself might require tweaking.

 tests/conform/test-text-cache.c |    6 +++++-
 1 file changed, 5 insertions(+), 1 deletion(-)

commit 1c42e6334e535dbd9015c20810a6560195803f1c
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Tue Apr 21 12:06:14 2009 +0100

    [text] Emit ::cursor-event only on changes
    
    The documentation for the ::cursor-event says that the signal
    is emitted only when the cursor position changes. Right now it
    is being emitted every time we ensure the cursor position during
    the Text paint sequence.
    
    The clutter_text_ensure_cursor_position() function should check
    whether the stored cursor position has changed since the last
    paint, and emit the ::cursor-event signal only when there has
    been a change.

 clutter/clutter-text.c |   23 ++++++++++++++++++-----
 1 file changed, 18 insertions(+), 5 deletions(-)

commit 4518cf140cbe77e5f4ac111a76f78dd34dffd18c
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Tue Apr 21 12:03:41 2009 +0100

    [tests] Visually verify ellipsization
    
    Verify that the non-editable, single line entries are still
    correctly ellipsized when a maximum width is set.

 tests/interactive/test-text-field.c |   13 +++++++++----
 1 file changed, 9 insertions(+), 4 deletions(-)

commit 368f61fa650bbf148fcfe029778d79a7046cc882
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Tue Apr 21 12:01:52 2009 +0100

    [text] Return the correct minimum height
    
    The correct minimum height in case of ellipsis is still 1px.

 clutter/clutter-text.c |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit 5c8263ecb7e3e942c355a62d36934b6935ebb813
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Tue Apr 21 11:59:38 2009 +0100

    [text] Limit the Layout width
    
    We only want to eschew the pango_layout_set_width() on editable,
    single-line Text actors because they can "scroll" the PangoLayout.
    
    This fixes the ellipsization on entries.

 clutter/clutter-text.c |    8 ++++----
 1 file changed, 4 insertions(+), 4 deletions(-)

commit e4d3b0536f955a4e5317d0f195c814a2e6d4e1f9
Author: Robert Bragg <robert@linux.intel.com>
Date:   Mon Apr 20 12:36:43 2009 +0100

    [gl/cogl.c] #include <gmodule.h> for OS X builds
    
    In unifying the {gl,gles}/cogl.c code recently, moving most of the code into
    common/cogl.c the gmodule.h include was also mistakenly moved.
    
    Thanks to Felix Rabe for reporting this issue.
    
    Note: I haven't tested this fix myself, as I'm not set up to be able to
    build for OS X

 clutter/cogl/common/cogl.c |    1 -
 clutter/cogl/gl/cogl.c     |    1 +
 2 files changed, 1 insertion(+), 1 deletion(-)

commit 46c20f1523d6317a49b3df5843f217cced8d3f6d
Author: Robert Bragg <robert@linux.intel.com>
Date:   Wed Apr 15 19:25:55 2009 +0100

    [cogl vertex buffers] Adds fallbacks for drivers without VBO support
    
    Buffer objects aren't currently available for glx indirect contexts, so we
    now have a fallback that simply allocates fake client side vbos to store the
    attributes.

 clutter/cogl/common/cogl-vertex-buffer-private.h |    5 +-
 clutter/cogl/common/cogl-vertex-buffer.c         |  149 +++++++++++++++++-----
 clutter/cogl/gles/cogl.c                         |    2 +
 3 files changed, 121 insertions(+), 35 deletions(-)

commit ac21e7b182d08cdbdcb5f4e0f2fd44a23e7e8d93
Author: Robert Bragg <robert@linux.intel.com>
Date:   Fri Apr 17 15:10:55 2009 +0100

    [cogl debug] --cogl-debug=rectangles now outlines all cogl rectangles
    
    This makes the #if 0'd debug code that was in _cogl_journal_flush_quad_batch
    - which we have repeatedly found usefull for debugging various geometry
    issues in Clutter apps - a runtime debug option.
    
    The outline colors rotate in order from red to green to blue which can also
    help confirm the order that your geometry really drawn.
    
    The outlines are not affected by the current material state, so if you e.g.
    have a blending bug where geometry mysteriously disappears this can confirm
    if the underlying rectangles are actually being emitted but blending is
    causing them to be invisible.

 clutter/cogl/cogl-debug.h             |   15 ++++++++-------
 clutter/cogl/common/cogl-debug.c      |    3 ++-
 clutter/cogl/common/cogl-primitives.c |    7 +++----
 3 files changed, 13 insertions(+), 12 deletions(-)

commit 169d472d17113416ea7e6c4eea4abda92c54e934
Author: Robert Bragg <robert@linux.intel.com>
Date:   Fri Apr 17 14:53:24 2009 +0100

    Use $(MAINTAINER_CFLAGS) in clutter/{x11,glx}/Makefile.am
    
    These makefile weren't resulting in the addition of the maintainer flags while
    building clutter.

 clutter/glx/Makefile.am |    1 +
 clutter/x11/Makefile.am |    1 +
 2 files changed, 2 insertions(+)

commit 5c50be1bdc3bf5d4f060324c23f5a0ca906dee42
Author: Bastian Winkler <buz@netbuz.org>
Date:   Thu Apr 16 13:06:58 2009 +0200

    Prevent a possible zero division
    
    A zero division might occur in clutter_path_get_position if the length
    of a curved node is zero.
    
    Signed-off-by: Neil Roberts <neil@linux.intel.com>

 clutter/clutter-path.c |   13 +++++++++----
 1 file changed, 9 insertions(+), 4 deletions(-)

commit 56ac4baf17e5917c738257d8beab7a583c793fcb
Author: Chris Lord <chris@linux.intel.com>
Date:   Thu Apr 16 16:34:15 2009 +0100

    [ClutterText] Return 1 for min width when editable
    
    Editable ClutterText will scroll when allocated less width than is
    necessary to lay out the entire layout on a single line, so return 1 for
    the minimum width in this case.
    
    Approved by Emmanuele Bassi, fixes bug #1555.

 clutter/clutter-text.c |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit 425fa78a27b9182f60d64ed08f1b470e96539908
Merge: d4b47af fbd9c59
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Wed Apr 15 18:08:14 2009 +0100

    Merge branch 'text-actor-layout-height'
    
    * text-actor-layout-height:
      [clutter-text] Fix ellipsizing
      Support pango_layout_set_height() in ClutterText
    
    Conflicts:
    	clutter/clutter-text.c

commit d4b47af153a31eeac12dc5d2ba7f62fdcde833b1
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Wed Apr 15 17:27:04 2009 +0100

    [stage] Warn if perspective's z_far - z_near is 0
    
    Since we have to do (z_far - z_near) and use it in a division we
    should check that the user is not passing a value that would
    cause a division by zero.

 clutter/clutter-stage.c |    1 +
 1 file changed, 1 insertion(+)

commit 709bb69970ff2b8c2caa27aa0f4b43a9ce763901
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Wed Apr 15 17:25:50 2009 +0100

    Add debug annotations for the layout process
    
    If we need to check that the layout sequence is correct in
    terms of order of execution and with respect to caching, then
    having a CLUTTER_DEBUG_LAYOUT debug flag would make things
    easier.

 clutter/clutter-actor.c |   38 ++++++++++++++++++++++++++++++--------
 clutter/clutter-debug.h |    3 ++-
 clutter/clutter-main.c  |    3 ++-
 3 files changed, 34 insertions(+), 10 deletions(-)

commit f8256e4b23af2ab8f3849ab3fae2747f01a6324b
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Wed Apr 15 17:23:45 2009 +0100

    [text] Do not ellipsize non-editable layouts
    
    If a ClutterText is set as non-editable then its PangoLayout
    will occupy as much width as its contents and ignore the
    ellipsization setting.

 clutter/clutter-text.c |    4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

commit fbd9c59c7cb7901ec208d05416454a68c7329cfd
Author: Neil Roberts <neil@linux.intel.com>
Date:   Wed Apr 15 14:46:45 2009 +0100

    [clutter-text] Fix ellipsizing
    
    Ellipsizing was effectively broken for two reasons. There was a typo
    in the code to set the width so it always ended up being some massive
    value. If no height should be set on the layout it was being set to
    G_MAXINT. Setting a height greater than 0 enables wrapping which so
    ellipsizing is not performed. It should be left at the default of -1
    instead.

 clutter/clutter-text.c |    4 +---
 1 file changed, 1 insertion(+), 3 deletions(-)

commit 5af99660cb7fdb76ab2a55288bce7342f5e04761
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Wed Apr 15 12:18:55 2009 +0100

    [json] Avoid leaks on error code paths
    
    Bug 1476 - JSON Parser memory leak
    
    Static analysis of the code showed that the in-tree copy of
    the JsonParser object leaks objects and arrays on parse errors.
    
    Thanks to Gordon Williams <gordon.williams@collabora.co.uk>

 clutter/json/json-parser.c |   14 +++++++++++++-
 1 file changed, 13 insertions(+), 1 deletion(-)

commit 269598a2cfa147b4d8361789356aba8318bde434
Author: Øyvind Kolås <pippin@linux.intel.com>
Date:   Wed Apr 8 18:18:31 2009 +0100

    [group] avoid double evaluation of arguments in clutter_group_add
    
    clutter_group_add would evaluate the actor argument twice, which is
    bad if this is a function call creating a new actor and not a variable.

 clutter/clutter-group.h |    4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

commit a9f24351e9a4b354a23f86b7aff7096a33195543
Author: Neil Roberts <neil@linux.intel.com>
Date:   Tue Apr 7 15:24:48 2009 +0100

    Fix fullscreening when the stage is unrealized and on dual-head
    
    If the stage is unrealized (such as will be the case if the stage was
    created with clutter_stage_new) then it would set the size of the
    stage display but it was not setting the fullscreen_on_map flag so it
    never got the _NET_WM_STATE_FULLSCREEN property. Now it always sets
    the flag regardless of whether the window is created yet.
    
    There was also problems with dual-headed displays because in that case
    DisplayWidth/Height will return the size of the combined display but
    Metacity (and presumably other WMs) will sensibly try fit the window
    to only one of the monitors. However we were setting the size hints so
    that the minimum size is that of the combined display. Metacity tries
    to honour this by setting the minimum size but then it no longer
    positions the window at the top left of the screen.
    
    The patch makes it avoid setting the minimum size when the stage is
    fullscreen by checking the fullscreen_on_map flag. This also means we
    can remove the static was_resizable flag which would presumably have
    caused problems for multi-stage.

 clutter/x11/clutter-stage-x11.c |   57 +++++++++++++++++++++------------------
 1 file changed, 31 insertions(+), 26 deletions(-)

commit 1edc19d1d33453bee85fb2b4bdb21a18c0089535
Author: Neil Roberts <neil@linux.intel.com>
Date:   Mon Apr 6 15:22:31 2009 +0100

    [clutter-text] Add a separate property for the selection color
    
    Adds a new property so that the selection color can be different from
    the cursor color. If no selection color is specified it will use the
    cursor color as before. If no cursor color is specified either it will
    use the text color.

 clutter/clutter-text.c                     |  193 ++++++++++++++++++++++------
 clutter/clutter-text.h                     |    4 +
 doc/reference/clutter/clutter-sections.txt |    2 +
 3 files changed, 160 insertions(+), 39 deletions(-)

commit 3fdacf97624a0bdbe6360c5561a7d7adcfcb8645
Author: Neil Roberts <neil@linux.intel.com>
Date:   Mon Apr 6 12:43:16 2009 +0100

    [cogl-handle] Fix the broken debug macros
    
    The debug macros for tracking reference counting of CoglHandles had
    some typos introduced in c3d9f0 which meant it failed to compile when
    COGL_DEBUG is 1.

 clutter/cogl/common/cogl-handle.h |    4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

commit e464acff7ab83b29291992cca1e3043b8c65823e
Author: Robert Bragg <robert@linux.intel.com>
Date:   Sat Apr 4 19:02:01 2009 +0100

    [cogl] cogl_is_*(): Don't dereference an invalid handle; just return FALSE
    
    An invalid handle is implicitly not of any type.

 clutter/cogl/common/cogl-handle.h |    3 +++
 1 file changed, 3 insertions(+)

commit fff5585b5f4d4f885090a3bfae5c4757d6d7447f
Author: Neil Roberts <neil@linux.intel.com>
Date:   Mon Apr 6 11:14:43 2009 +0100

    [cogl-pango-render] Fix returning to default color after a color attribute
    
    Since the Cogl material branch merge when changing the color of a part
    using pango attributes (such as using <span color="red" /> markup)
    then it wouldn't return to the default color for the rest of the
    layout. pango_renderer_get_color returns NULL if there is no color
    override in which case it needs to revert to the color specified as
    the argument to cogl_pango_render_layout. The 'color' member of
    CoglPangoRenderer has been reinstated to store that default color and
    now cogl_pango_render_set_color_for_part is the only place that sets
    the material color.

 clutter/pango/cogl-pango-render.c |   31 ++++++++++++++-----------------
 1 file changed, 14 insertions(+), 17 deletions(-)

commit a1cc1f57aca703e85a4c475a2c097a9dacff066a
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Sun Apr 5 20:32:15 2009 +0100

    [animation] Do not connect to ::completed multiple times
    
    The clutter_actor_animate*() family of functions should only connect
    to the Animation::completed signal once, during the construction of
    the Animation object attached to the Actor. Otherwise, the completed
    signal handler will be run multiple times, and will try to unref()
    the Animation for each call -- leading to a segmentation fault.

 clutter/clutter-animation.c |   36 ++++++++++++++++++++++++++++--------
 1 file changed, 28 insertions(+), 8 deletions(-)

commit 6bf883da6cbc53b1bbff82f8a4b29227758158cf
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Fri Apr 3 14:19:20 2009 +0100

    [animation] Add the ::started signal
    
    The Animation class is missing a ::started signal matching the
    ::completed one. A ::started signal is useful for debugging,
    initial state set up, and checks.

 clutter/clutter-animation.c |   61 ++++++++++++++++++++++++++++++++++++++++---
 clutter/clutter-animation.h |    2 ++
 2 files changed, 60 insertions(+), 3 deletions(-)

commit 17627959902edb7a61daccb991a329f8a89ee109
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Fri Apr 3 13:36:30 2009 +0100

    [group] Fix compilation
    
    A case of rebase FAIL. The sorting of the children was still
    done using the now removed group function call instead of the
    Container one.

 clutter/clutter-group.c |    4 +---
 1 file changed, 1 insertion(+), 3 deletions(-)

commit df738d0a8c601a9d8afde7273717ebd926d90eda
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Fri Apr 3 12:39:35 2009 +0100

    [animation] Do not unref on ::complete by default
    
    Bug 1535 - Complete animation always unrefs ClutterAnimation (even
               after g_object_ref_sink)
    
    Animations created through clutter_animation_new() should not
    automagically unref themselves by default on ::complete. We
    only want that behaviour for Animations created by the
    clutter_actor_animate* family of functions, since those provide
    the automagic memory management.

 clutter/clutter-animation.c |   51 ++++++++++++++++++++++++-------------------
 1 file changed, 29 insertions(+), 22 deletions(-)

commit bd8d3f6bd87558438420b488df252f5b04a3316e
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Wed Apr 1 11:22:42 2009 +0100

    [group] Remove long deprecated API
    
    ClutterGroup still ships with API deprecated since 0.4. We did
    promise to keep it around for a minor release cycle -- not for 3.
    
    Since we plan on shipping 1.0 without the extra baggage of the
    deprecated entry points, here's the chance to remove the accumulated
    cruft.
    
    All the removed methods and signals have a ClutterContainer
    counterpart.

 clutter/clutter-group.c                    |  212 +---------------------------
 clutter/clutter-group.h                    |   23 ---
 doc/reference/clutter/clutter-sections.txt |    6 -
 3 files changed, 6 insertions(+), 235 deletions(-)

commit 9d0ce68c2fafbe484129c09f82dc20f955b99310
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Wed Apr 1 11:08:28 2009 +0100

    [shader] Remove deprecated set_uniform_1f()
    
    Since we're planning to release 1.0 without any of the deprecated
    API baggage, we can simply remove the set_uniform_1f() method from
    ClutterShader public API and add it to the deprecated header.

 clutter/clutter-deprecated.h               |    2 ++
 clutter/clutter-shader.c                   |   25 -------------------------
 clutter/clutter-shader.h                   |    6 ------
 doc/reference/clutter/clutter-sections.txt |    1 -
 4 files changed, 2 insertions(+), 32 deletions(-)

commit c3d9f0bed4680dd0aa10b3a52ade23d9f0597212
Author: Robert Bragg <robert@linux.intel.com>
Date:   Wed Apr 1 17:16:44 2009 +0100

    [cogl-handle] Optimize how we define cogl handles
    
    The cogl_is_* functions were showing up quite high on profiles due to
    iterating through arrays of cogl handles.
    
    This does away with all the handle arrays and implements a simple struct
    inheritance scheme. All cogl objects now add a CoglHandleObject _parent;
    member to their main structures. The base object includes 2 members a.t.m; a
    ref_count, and a klass pointer. The klass in turn gives you a type and
    virtual function for freeing objects of that type.
    
    Each handle type has a _cogl_##handle_type##_get_type () function
    automatically defined which returns a GQuark of the handle type, so now
    implementing the cogl_is_* funcs is just a case of comparing with
    obj->klass->type.
    
    Another outcome of the re-work is that cogl_handle_{ref,unref} are also much
    more efficient, and no longer need extending for each handle type added to
    cogl. The cogl_##handle_type##_{ref,unref} functions are now deprecated and
    are no longer used internally to Clutter or Cogl. Potentially we can remove
    them completely before 1.0.

 clutter/clutter-shader.c                         |    6 +-
 clutter/clutter-texture.c                        |   30 ++--
 clutter/cogl/common/cogl-handle.h                |  171 +++++++++++-----------
 clutter/cogl/common/cogl-material-private.h      |    5 +-
 clutter/cogl/common/cogl-material.c              |   31 ++--
 clutter/cogl/common/cogl-util.c                  |   45 ++----
 clutter/cogl/common/cogl-vertex-buffer-private.h |    7 +-
 clutter/cogl/common/cogl-vertex-buffer.c         |    7 +-
 clutter/cogl/gl/cogl-context.c                   |   25 +---
 clutter/cogl/gl/cogl-context.h                   |   13 --
 clutter/cogl/gl/cogl-fbo.c                       |    5 +-
 clutter/cogl/gl/cogl-fbo.h                       |    6 +-
 clutter/cogl/gl/cogl-program.c                   |    5 +-
 clutter/cogl/gl/cogl-program.h                   |    4 +-
 clutter/cogl/gl/cogl-shader-private.h            |    4 +-
 clutter/cogl/gl/cogl-shader.c                    |    5 +-
 clutter/cogl/gl/cogl-texture-private.h           |    3 +-
 clutter/cogl/gl/cogl-texture.c                   |   16 +-
 clutter/cogl/gles/cogl-context.c                 |   25 +---
 clutter/cogl/gles/cogl-context.h                 |   13 --
 clutter/cogl/gles/cogl-fbo.c                     |    5 +-
 clutter/cogl/gles/cogl-fbo.h                     |    6 +-
 clutter/cogl/gles/cogl-program.c                 |    9 +-
 clutter/cogl/gles/cogl-program.h                 |    3 +-
 clutter/cogl/gles/cogl-shader-private.h          |    4 +-
 clutter/cogl/gles/cogl-shader.c                  |    5 +-
 clutter/cogl/gles/cogl-texture-private.h         |    3 +-
 clutter/cogl/gles/cogl-texture.c                 |   16 +-
 clutter/pango/cogl-pango-glyph-cache.c           |   10 +-
 tests/conform/test-backface-culling.c            |    2 +-
 tests/conform/test-npot-texture.c                |    2 +-
 tests/conform/test-vertex-buffer-contiguous.c    |    6 +-
 tests/conform/test-vertex-buffer-interleved.c    |    2 +-
 tests/conform/test-vertex-buffer-mutability.c    |    2 +-
 tests/interactive/test-clip.c                    |    2 +-
 tests/interactive/test-cogl-multitexture.c       |    8 +-
 tests/interactive/test-cogl-offscreen.c          |    4 +-
 tests/interactive/test-cogl-tex-convert.c        |    2 +-
 tests/interactive/test-cogl-tex-foreign.c        |    2 +-
 tests/interactive/test-cogl-tex-getset.c         |    2 +-
 tests/interactive/test-cogl-tex-polygon.c        |    4 +-
 tests/interactive/test-cogl-tex-tile.c           |    2 +-
 tests/interactive/test-cogl-vertex-buffer.c      |    2 +-
 43 files changed, 209 insertions(+), 320 deletions(-)

commit 04ebd6be44d7641abc73a80f61606178f1861e66
Author: Robert Bragg <robert@linux.intel.com>
Date:   Thu Apr 2 11:50:44 2009 +0100

    [cogl] handle_automatic_blend_enable(): consider layers with invalid textures
    
    A layer object may be instantiated when setting a combine mode, but before a
    texture is associated. (e.g. this is done by the pango renderer) if this is the
    case we shouldn't call cogl_texture_get_format() with an invalid cogl handle.
    
    This patch skips over layers without a texture handle when determining if any
    textures have an alpha channel.

 clutter/cogl/common/cogl-material.c |    6 ++++++
 1 file changed, 6 insertions(+)

commit 8a1b4f8326ff60164029c85d40482e369eeaafa8
Author: Robert Bragg <robert@linux.intel.com>
Date:   Mon Mar 30 17:07:31 2009 +0100

    Unifies 90% of the code in {gl,gles}/cogl.c in common/cogl.c
    
    This code keeps on diverging and we get bugs and fixes in one version but
    not the other. This should make things a bit more maintainable.

 clutter/cogl/common/Makefile.am     |    1 +
 clutter/cogl/common/cogl-internal.h |   95 ++++++
 clutter/cogl/common/cogl.c          |  640 +++++++++++++++++++++++++++++++++++
 clutter/cogl/gl/cogl.c              |  608 +--------------------------------
 clutter/cogl/gles/cogl-internal.h   |    3 +
 clutter/cogl/gles/cogl.c            |  584 +-------------------------------
 6 files changed, 749 insertions(+), 1182 deletions(-)

commit 50c1fc6291650c80d2182162621dc5e2d5976d57
Author: Robert Bragg <robert@linux.intel.com>
Date:   Mon Mar 30 16:41:02 2009 +0100

    Removes cogl_blend_func prototype from cogl-internal.h
    
    cogl_blend_func was removed a while ago so this was just a left over from then

 clutter/cogl/gl/cogl-internal.h   |    4 ----
 clutter/cogl/gles/cogl-internal.h |    4 ----
 2 files changed, 8 deletions(-)

commit 34467e5c6a764450e0bb0d76dc4131665523fb4c
Author: Bastian Winkler <buz@netbuz.org>
Date:   Mon Mar 30 17:38:42 2009 +0200

    [docs] Fix some inconsistency in Animation
    
    For some examples of clutter_actor_animate the parameters of @mode and
    @duration are swapped.
    
    Signed-off-by: Emmanuele Bassi <ebassi@linux.intel.com>

 clutter/clutter-animation.c |   10 +++++-----
 1 file changed, 5 insertions(+), 5 deletions(-)

commit 077e3192fd77223ea8123f84a75787f1138566f5
Author: Havoc Pennington <hp@pobox.com>
Date:   Mon Mar 30 17:32:54 2009 +0100

    [texture] Queue a relayout when changing :keep-aspect-ratio
    
    Bug 1528 - queue relayout when setting ClutterTexture:keep-aspect-ratio
    
    Signed-off-by: Emmanuele Bassi <ebassi@linux.intel.com>

 clutter/clutter-texture.c |    1 +
 1 file changed, 1 insertion(+)

commit a362a4a8894e0630af54acc43be05a928306278e
Author: Raymond Liu <raymond.liu@intel.com>
Date:   Mon Mar 30 16:57:11 2009 +0100

    [text] Use the base class binding pool
    
    Bug 1518 - [Patch] Widget derivied from ClutterText will crash on
               key_press_event
    
    In clutter_text_key_press() we are using G_OBJECT_TYPE_NAME to find
    out the actor's type name. However, if some widget is derived from
    ClutterText, when the key press handler is called, G_OBJECT_TYPE_NAME
    will return the name of the derived widget.
    
    The default implementation should get the binding pool for the base
    class.
    
    Signed-off-by: Emmanuele Bassi <ebassi@linux.intel.com>

 clutter/clutter-text.c |    6 +++++-
 1 file changed, 5 insertions(+), 1 deletion(-)

commit 02ea81ce02f6fedee77623f1387e0381e0a78d9c
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Mon Mar 30 16:46:57 2009 +0100

    [text] Different selection modes with multiple clicks
    
    ClutterText should offer multiple selection modes depending on the
    number of pointer clicks.
    
    Following the GTK+ conventions:
    
      - double click selects the current word
      - triple click selects the current line

 clutter/clutter-text.c |  230 +++++++++++++++++++++++++++++++++++++-----------
 1 file changed, 178 insertions(+), 52 deletions(-)

commit f6d938a0dbf8e67ba20eef180fc2fae9e84b27f9
Author: Øyvind Kolås <pippin@linux.intel.com>
Date:   Mon Mar 30 12:10:41 2009 +0100

    [animation] add varargs support for signal::completed
    
    Added support for registering a handler for the completed signal
    directly amongst the varargs making it easier to attach code
    to be executed when animations complete.

 clutter/clutter-animation.c |   72 ++++++++++++++++++++++++++++++-------------
 1 file changed, 51 insertions(+), 21 deletions(-)

commit a1a8193179dec84b29fac146e5cf34d43a66f093
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Mon Mar 30 07:54:42 2009 +0100

    [text] Check text length in ::button-press-event
    
    Bug 1529 - Selection bound out of sync with an empty Text actor
    
    When the user clicks on a Text actor the cursor position and the
    selection bound are set using bytes_to_offset(); if the Text is
    empty, this means placing them both to 0. Setting the selection
    bound to 0 means that when the user inserts a character by typing
    it into the Text, the selection will be [0,1]; this will select
    the first character, which will then be overwritten when typing
    a new character.
    
    The Text actor should, instead, check if there are no contents
    and set the cursor position and the selection bound to -1.
    
    The clutter_text_set_selection_bound() method should also validate
    the value passed, in case it's bigger than the text lenght, or
    smaller than -1.

 clutter/clutter-text.c |   46 ++++++++++++++++++++++++++++++++++------------
 1 file changed, 34 insertions(+), 12 deletions(-)

commit 0de0e869a990e2d5516c058d45143bba20e45de5
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Fri Mar 27 14:28:08 2009 +0000

    [docs] Fix typo in the AnimationMode name

 clutter/clutter-alpha.c |    4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

commit cc21a4aa5f66e3fb1253587def2d7368cfd1db07
Author: Chris Lord <chris@linux.intel.com>
Date:   Thu Mar 26 20:28:04 2009 +0000

    [ClutterTimeline] Fix clutter_timeline_set_delay
    
    When setting a delay, timeout_add was being used with msecs. timeout_add
    takes fps since the fix to bug #1495. Delay now uses g_timeout_add
    instead.

 clutter/clutter-timeline.c |   10 +++++-----
 1 file changed, 5 insertions(+), 5 deletions(-)

commit 231343f1513d31248ada221ddc0020d73930b889
Author: Damien Lespiau <damien.lespiau@gmail.com>
Date:   Wed Mar 25 20:58:22 2009 +0000

    [gitignore] Ignore two newly introduced tests

 tests/.gitignore |    2 ++
 1 file changed, 2 insertions(+)

commit 68ab2c602426ee0eeaca602e6154a98dc5d7e0bf
Author: Neil Roberts <neil@linux.intel.com>
Date:   Wed Mar 25 14:53:58 2009 +0000

    [doc] Fix two small typos in cogl-vertex-buffer
    
    The symbol name for cogl_vertex_buffer_draw_elements was wrong so it
    ended up with no documentation. The name for the vertex attribute was
    incorrect in cogl_vertex_buffer_add.

 clutter/cogl/cogl-vertex-buffer.h |    4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

commit 3d81f0c08e0efa9c79af93db58944a53e09c7d70
Author: Robert Bragg <robert@linux.intel.com>
Date:   Mon Mar 23 12:46:20 2009 +0000

    [build] Fixes a cogl-vertex-buffer.c warning when building for GLES
    
    GLES 1 doesn't support GLSL so it never needs to use the generic_index
    variable for generic attributes which was flagging a warning.

 clutter/cogl/common/cogl-vertex-buffer.c |    5 ++++-
 1 file changed, 4 insertions(+), 1 deletion(-)

commit 891ed5356416a2d39e465a86932998379b6009d7
Author: Robert Bragg <robert@linux.intel.com>
Date:   Mon Mar 23 12:29:15 2009 +0000

    [cogl] Move rect and poly drawing code from cogl-texture.c to cogl-primitives.c
    
    None of this code directly related to implementing CoglTextures, and the
    code was needlessly duplicated between the GL and GLES backends. This moves
    the cogl_rectangle* and cogl_polygon* code into common/cogl-primitives.c
    makes which makes lot of sense since the two copies keep needlessly
    diverging introducing or fixing bugs in one but not the other. For instance
    I came accross one such bug regarding the enabling of texture units when
    unifying the code.

 clutter/cogl/common/cogl-primitives.c    | 1256 ++++++++++++++++++++++++++++-
 clutter/cogl/gl/cogl-texture-private.h   |   34 +
 clutter/cogl/gl/cogl-texture.c           | 1261 +-----------------------------
 clutter/cogl/gles/cogl-texture-private.h |   34 +
 clutter/cogl/gles/cogl-texture.c         | 1244 +----------------------------
 5 files changed, 1331 insertions(+), 2498 deletions(-)

commit b30bb575a1c63312d114927634d9066f7c1445a9
Author: Robert Bragg <robert@linux.intel.com>
Date:   Mon Mar 23 11:39:40 2009 +0000

    [cogl_rectangles] A minor doc fix, and missing newline between functions
    
    The gtk-doc had a copy and paste error, saying the float array should be 8
    elements per rectangle instead of 4. There was also no newline in the gles
    code before the new function.

 clutter/cogl/cogl-texture.h      |    2 +-
 clutter/cogl/gles/cogl-texture.c |    1 +
 2 files changed, 2 insertions(+), 1 deletion(-)

commit 13e5bd9e8be7e7b88924a97ea02eee4187a29238
Author: Johan Bilien <jobi@litl.com>
Date:   Fri Mar 20 19:22:23 2009 +0000

    Allow using array of vertices even without textures
    
    It's often nice to be able to draw a batch of vertices, even if these
    have no texture coordinates. This add a cogl_rectangles, similar to
    cogl_rectangles_with_texture_coords, only without.

 clutter/cogl/cogl-texture.h      |   21 +++++++++++++++++++++
 clutter/cogl/gl/cogl-texture.c   |   20 ++++++++++++++++++++
 clutter/cogl/gles/cogl-texture.c |   19 +++++++++++++++++++
 3 files changed, 60 insertions(+)

commit 5a06f1d1d009e446109b0778e7f9f9a1f8a11194
Author: Robert Bragg <robert@linux.intel.com>
Date:   Thu Mar 19 16:46:07 2009 +0000

    Removes a hack in gles/cogl.c that was already fixed in gl/cogl.c
    
    It removes the need to cast a CoglMatrix to a float * for transforming
    a vertex manually instead of using cogl_matrix_transform_point.

 clutter/cogl/gles/cogl.c |   43 ++++++++++++-------------------------------
 1 file changed, 12 insertions(+), 31 deletions(-)

commit d6937b797e59cd02f663155dfea2d31355997c38
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu Mar 19 11:40:13 2009 +0000

    [doc] Update the should_pick_paint() documentation
    
    The should_pick_paint() method of ClutterActor is not clearly
    documented.

 clutter/clutter-actor.c |    4 +++-
 1 file changed, 3 insertions(+), 1 deletion(-)

commit 0a48a52ba16fa367046badf8f7bf6beb865ea63b
Author: Neil Roberts <neil@linux.intel.com>
Date:   Thu Mar 19 17:54:17 2009 +0000

    [glx-texture-pixmap] Don't enable the texture target when binding the texture
    
    There's no need to enable the texture target unless it is going to be
    used for rendering. Enabling it directly with glEnable calls confuses
    Cogl's state caching.
    
    This is a replacement for the patch in bug 1483 which was reverted.

 clutter/glx/clutter-glx-texture-pixmap.c |    2 --
 1 file changed, 2 deletions(-)

commit c4dcbb6bdba91fbc20b7654fe98fd92a5adbb44c
Author: Neil Roberts <neil@linux.intel.com>
Date:   Thu Mar 19 17:48:15 2009 +0000

    Revert "Use COGL to establish GL state for ClutterGLXTexturePixmap"
    
    This reverts commit f9d996a4603bef1f52e32e99f9f69a32b7c823ba.
    
    The change from calling glBindTexture to using the material API with
    cogl_material_flush_gl_state does not always work because it doesn't
    necessarily leave the active texture unit as GL_TEXTURE0. For example,
    if the previously rendered texture was multi-layered then the last
    thing cogl_material_flush_gl_state will do is select GL_TEXTURE1 just
    to disable it.

 clutter/glx/clutter-glx-texture-pixmap.c |   26 +++++++++++++++++---------
 1 file changed, 17 insertions(+), 9 deletions(-)

commit e94e5ad65b34dfad507de6eb63225798434f31ff
Author: Øyvind Kolås <pippin@linux.intel.com>
Date:   Thu Mar 19 14:42:50 2009 +0000

    [actor] use an epsilon whens sanity checking sizes
    
    Clutter was complaining about netural width smaller than minimum widths
    (differences around 0.0005) by using an epsilon value of 1e-4 for these
    floating point comparisons, these warnings have now been silenced.

 clutter/clutter-actor.c |    6 ++++--
 1 file changed, 4 insertions(+), 2 deletions(-)

commit 7d8da0e8303a5bf57002181ae1b76e6c8546f237
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Wed Mar 18 17:07:50 2009 +0000

    [docs] Remove unused arguments
    
    The documentation for some X11TexturePixmap method does not reflect
    the actual API.

 clutter/x11/clutter-x11-texture-pixmap.c |    6 ------
 1 file changed, 6 deletions(-)

commit 6114c6c1db2643edf1679de814ce3d6cd4c5e0b9
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Wed Mar 18 17:06:56 2009 +0000

    [docs] Pick up backend-specific API
    
    The various backend API outside from clutter-x11.h and clutter-win32.h
    is documented but not picked up by gtk-doc.

 doc/reference/clutter/Makefile.am          |   15 ++++++-
 doc/reference/clutter/clutter-docs.xml     |    3 ++
 doc/reference/clutter/clutter-sections.txt |   59 ++++++++++++++++++++++++++++
 3 files changed, 76 insertions(+), 1 deletion(-)

commit ccca24ab7653477f5607ccacb46e1941d1fcfb5b
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Tue Mar 17 14:12:01 2009 +0000

    Remove usage of the grave accent as quotation mark
    
    See:
    
      http://www.cl.cam.ac.uk/~mgk25/ucs/quotes.html
    
    This should make Thomas happy.

 clutter/clutter-actor.c               |   18 +++++------
 clutter/clutter-animation.c           |   44 +++++++++++++--------------
 clutter/clutter-behaviour.c           |    2 +-
 clutter/clutter-color.c               |    2 +-
 clutter/clutter-container.c           |   54 ++++++++++++++++-----------------
 clutter/clutter-model.c               |   14 ++++-----
 clutter/clutter-score.c               |    2 +-
 clutter/clutter-script.c              |   30 +++++++++---------
 clutter/clutter-shader-types.c        |   12 ++++----
 clutter/clutter-text.c                |    8 ++---
 clutter/clutter-texture.c             |    2 +-
 clutter/clutter-timeline.c            |   12 ++++----
 clutter/clutter-units.c               |    2 +-
 clutter/cogl/common/cogl-util.c       |    2 +-
 clutter/eglnative/clutter-stage-egl.c |    2 +-
 clutter/eglx/clutter-backend-egl.c    |    2 +-
 clutter/fruity/clutter-stage-fruity.c |    2 +-
 clutter/glx/clutter-backend-glx.c     |    2 +-
 clutter/json/json-object.c            |    2 +-
 clutter/json/json-parser.c            |   13 ++------
 clutter/win32/clutter-backend-win32.c |    2 +-
 clutter/x11/clutter-backend-x11.c     |    6 ++--
 tests/conform/test-timeline.c         |    2 +-
 tests/interactive/test-score.c        |    4 +--
 tests/interactive/test-script.c       |    4 +--
 25 files changed, 118 insertions(+), 127 deletions(-)

commit 39e2b43b22975d75352fc7af4e4e6f573e99eb9e
Author: Robert Bragg <robert@linux.intel.com>
Date:   Tue Mar 17 00:12:27 2009 +0000

    [cogl] Apply the fix from 2c1c836417 (Flush matrix before clip planes) to GLES
    
    glClipPlane() is affected by modelview matrix so we need to flush before
    calling it.

 clutter/cogl/gles/cogl.c |    2 ++
 1 file changed, 2 insertions(+)

commit b5a35a0f0b058784da2e5da083ee16232f06a6e0
Author: Robert Bragg <robert@linux.intel.com>
Date:   Tue Mar 17 00:26:38 2009 +0000

    [test-cogl-vertex-buffer] Use clutter_color_from_hls instead of hsl_to_rgb
    
    There is no need for a custom hsl to rgb converter since Clutter implements
    this logic; originally it wasn't quite as optimal, but that has now been
    fixed.

 tests/interactive/test-cogl-vertex-buffer.c |   64 +--------------------------
 1 file changed, 2 insertions(+), 62 deletions(-)

commit bb93a987622532f2900261bbc0f570ba1fd24ecf
Author: Robert Bragg <robert@linux.intel.com>
Date:   Tue Mar 17 00:01:56 2009 +0000

    [clutter-color] Use a different hls->rgb algorithm + use floating point
    
    Using test-cogl-vertex-buffer as a test case which is CPU bound due to
    hls -> rgb conversions this alternative algorithm looked to be ~10%
    faster when tested on an X61s Lenovo.

 clutter/clutter-color.c                     |  312 ++++++++-------------------
 tests/interactive/test-cogl-vertex-buffer.c |    8 +
 2 files changed, 96 insertions(+), 224 deletions(-)

commit 567a96c96a47b2ca932781ef22b694475d4caae8
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Mon Mar 16 18:20:58 2009 +0000

    [docs] More information on animation queueing
    
    Queuing an animation on an actor cannot be done from within the
    ::completed signal handler, because we guarantee that the Animation
    instance is valid and attached to the actor it animates for the
    whole duration of the signal emission chain.
    
    In order to queue animations you have to install an idle handler
    on the main loop, and call clutter_actor_animate() inside it.
    
    The documentation should be more clear about this caveat in the
    memory management of ClutterAnimations created by the animate()
    family of functions.

 clutter/clutter-animation.c |   43 +++++++++++++++++++++++++++++++++++++++++++
 1 file changed, 43 insertions(+)

commit 9694107f9002fcd2f6ec6900bccf1d28b16b21a5
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Mon Mar 16 17:09:57 2009 +0000

    Post-release bump to 0.9.3

 configure.ac |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit 35191f09ef0fa8fad6f386513dcd691ab6b6746f
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Mon Mar 16 16:28:45 2009 +0000

    [release] Release 0.9.2

 NEWS         |  259 ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 configure.ac |    2 +-
 2 files changed, 260 insertions(+), 1 deletion(-)

commit f061e274166f50af5de1abe07dd114214ac822ba
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Mon Mar 16 16:14:12 2009 +0000

    Update release notes

 README |   23 +++++++++++++++++++----
 1 file changed, 19 insertions(+), 4 deletions(-)

commit e7c5b15e6026ce125e8cfd0b146a852a6a86707f
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Mon Mar 16 16:55:48 2009 +0000

    [docs] Ignore the TimeoutInterval internal API
    
    The TimeoutInterval API is internal, and thus should not be part
    of the API reference.

 doc/reference/clutter/Makefile.am |    1 +
 1 file changed, 1 insertion(+)

commit e8785fef0728e13ea3638825db246111fc39477d
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Mon Mar 16 16:54:58 2009 +0000

    [docs] Fix naming of the interval parameter
    
    The interval parameter is now expressed in frames per second and not
    in milliseconds.

 clutter/clutter-timeout-pool.c |    6 +++---
 1 file changed, 3 insertions(+), 3 deletions(-)

commit d5ee6fc26439054beada960803b73a6dfdbfd044
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Mon Mar 16 16:09:05 2009 +0000

    Fix release date of 0.9.0

 NEWS |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit ca3bfe2ceaacc7c37d90492fd9429635b51caddd
Author: Robert Bragg <robert@linux.intel.com>
Date:   Mon Mar 16 14:58:00 2009 +0000

    [cogl] Don't endlessly print the same warning regarding layer fallbacks
    
    There are various constraints for when we can support multi-texturing and
    when they can't be met we try and print a clear warning explaining why the
    operation isn't supported, but we shouldn't endlessly repeat the warning for
    every primitive of every frame. This patch fixes that.

 clutter/cogl/gl/cogl-texture.c   |   94 +++++++++++++++++++++++---------------
 clutter/cogl/gles/cogl-texture.c |   90 +++++++++++++++++++++---------------
 2 files changed, 109 insertions(+), 75 deletions(-)

commit c5bd63648d3dccbb554a1b899ab974fe91ef9249
Author: Robert Bragg <robert@linux.intel.com>
Date:   Mon Mar 16 12:47:45 2009 +0000

    [tests] Adds an interactive cogl vertex buffer unit test
    
    The test is a sanity check that dynamic updating of vertex data via the cogl
    vertex buffer api works and has reasonable performance. (though it can't be
    considered a well designed benchmark since it wastes casual amounts of CPU
    time simply choosing pretty colors.)
    
    The code also aims to demonstrate one way of creating, updating and efficiently
    drawing a quad mesh structure via the vertex buffer api which could be applied
    to lots of different use cases.

 tests/interactive/Makefile.am               |    3 +-
 tests/interactive/test-cogl-vertex-buffer.c |  428 +++++++++++++++++++++++++++
 2 files changed, 430 insertions(+), 1 deletion(-)

commit 71d65b629bb8f0a36b24753d6205663daa5acb09
Author: Robert Bragg <robert@linux.intel.com>
Date:   Mon Mar 9 10:26:31 2009 +0000

    [cogl-vertex-buffer] fix cogl_vertex_buffer_draw_elements prototype
    
    This function was renamed a while ago in the .c file from
    cogl_vertex_buffer_draw_range_elements  but the corresponding .h and
    doc/reference/cogl changes weren't made.

 clutter/cogl/cogl-vertex-buffer.h    |   14 +++++++-------
 doc/reference/cogl/cogl-sections.txt |    2 +-
 2 files changed, 8 insertions(+), 8 deletions(-)

commit 14e6323554d46b5fc25b391fed703efab4266b3b
Author: Robert Bragg <robert@linux.intel.com>
Date:   Sat Feb 28 17:39:38 2009 +0000

    [cogl-vertex-buffer] Allow querying back the number of vertices a buffer represents
    
    This may be convenient e.g. at draw time if you are simply drawing all vertices

 clutter/cogl/cogl-vertex-buffer.h        |    9 +++++++++
 clutter/cogl/common/cogl-vertex-buffer.c |   13 +++++++++++++
 doc/reference/cogl/cogl-sections.txt     |    1 +
 3 files changed, 23 insertions(+)

commit 075ae9c4a74b5e7af248c27ef57d2d0b4948a74a
Author: Robert Bragg <robert@linux.intel.com>
Date:   Sat Feb 28 17:36:25 2009 +0000

    [cogl-vertex-buffer] Add a flush of attribute changes in the *_draw() functions
    
    For convenience it is now valid to avoid a seperate call to
    cogl_vertex_buffer_submit() and assume that the _draw() calls will do this
    for you (though of course if you do this you still need to ensure the
    attribute pointers remain valid until your draw call.)

 clutter/cogl/cogl-vertex-buffer.h        |   38 +++++++++++++++++++-----------
 clutter/cogl/common/cogl-vertex-buffer.c |   25 +++++++++++++++-----
 2 files changed, 43 insertions(+), 20 deletions(-)

commit a93a93d007b7c3ccc407482aaf521bd6b5d6607e
Author: Neil Roberts <neil@linux.intel.com>
Date:   Mon Mar 9 17:12:27 2009 +0000

    Count timeline frames using the FPS instead of an integer interval
    
    Bug 1495 - Timelines run 4% short
    
    Previously the timelines were timed by calculating the interval
    between each frame stored as an integer number of milliseconds so some
    precision is lost. For example, requesting 60 frames per second gets
    converted to 16 ms per frame which is actually 62.5 frames per
    second. This makes the timeline shorter by 4%.
    
    This patch merges the common code for timing from the timeout pools
    and frame sources into an internal clutter-timeout-interval file. This
    stores the interval directly as the FPS and counts the number of
    frames that have been reached instead of the elapsed time.

 clutter/Makefile.am                |    2 +
 clutter/clutter-frame-source.c     |   81 +++++++----------------
 clutter/clutter-frame-source.h     |    4 +-
 clutter/clutter-main.c             |   12 ++--
 clutter/clutter-main.h             |    4 +-
 clutter/clutter-timeline.c         |   18 +++---
 clutter/clutter-timeout-interval.c |  126 ++++++++++++++++++++++++++++++++++++
 clutter/clutter-timeout-interval.h |   56 ++++++++++++++++
 clutter/clutter-timeout-pool.c     |   99 ++++++----------------------
 clutter/clutter-timeout-pool.h     |    2 +-
 10 files changed, 244 insertions(+), 160 deletions(-)

commit 2c1c8364170558a79d9d9af8a149b64dfd83c2b0
Author: Havoc Pennington <hp@pobox.com>
Date:   Mon Mar 16 15:09:33 2009 +0000

    [cogl] Flush matrix before clip planes
    
    glClipPlane() is affected by modelview matrix so we need to flush
    before calling it.
    
    Signed-off-by: Emmanuele Bassi <ebassi@linux.intel.com>

 clutter/cogl/gl/cogl.c |    2 ++
 1 file changed, 2 insertions(+)

commit 9229fb6114e57a2690fa7ea18cbcdc78b7210d85
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Mon Mar 16 15:00:55 2009 +0000

    [docs] Bring down the undocumented symbols to 2%
    
    The usual pre-release documentation blitzing. Most of the remaining
    symbols are either COGL or X11 specific, or dummy interface typedefs.

 clutter/clutter-backend.c                  |    2 +-
 clutter/clutter-behaviour-depth.h          |   16 +++++++++
 clutter/clutter-behaviour-opacity.h        |   18 +++++++++-
 clutter/clutter-behaviour-path.h           |   12 ++++++-
 clutter/clutter-child-meta.h               |    7 ++++
 clutter/clutter-clone.c                    |    2 +-
 clutter/clutter-clone.h                    |   15 ++++++++
 clutter/clutter-group.h                    |   19 ++++++++--
 clutter/clutter-media.h                    |    9 +++++
 clutter/clutter-rectangle.h                |   15 ++++++++
 clutter/clutter-score.h                    |   21 +++++++++++
 clutter/clutter-script.h                   |   26 ++++++++++++++
 clutter/clutter-shader.h                   |   22 ++++++++++++
 clutter/clutter-stage.h                    |   20 ++++++++++-
 clutter/clutter-texture.h                  |   27 ++++++++++++++
 clutter/clutter-timeline.h                 |   20 +++++++++++
 clutter/clutter-units.h                    |   53 +++++++++++++++++++++++++++-
 doc/reference/clutter/clutter-sections.txt |    6 ++--
 18 files changed, 299 insertions(+), 11 deletions(-)

commit 216373047bb2b1e6e807e73694f246159a3271fe
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Mon Mar 16 14:16:18 2009 +0000

    [animation] Enhance consistency of the Animation API
    
    The Animation API should follow this pattern:
    
      - functions with an Interval as part of the arguments should have
        "interval" inside their name, e.g.:
    
          clutter_animation_bind_interval
          clutter_animation_update_interval
    
      - functions dealing with property names should have "property"
        inside their name, e.g.:
    
          clutter_animation_has_property
          clutter_animation_unbind_property
    
        - unless -
    
      - functions dealing with a property and its value should not
        have any modifier, e.g.:
    
          clutter_animation_bind
    
    The change from update_property() to update_interval() frees up
    clutter_animation_update(), to be added at a later date.

 clutter/clutter-animation.c                |   27 +++++++++++++++++++++++++--
 clutter/clutter-animation.h                |    4 ++--
 doc/reference/clutter/clutter-sections.txt |    4 ++--
 3 files changed, 29 insertions(+), 6 deletions(-)

commit bb795dec56790dd3c6f018bc4071fde915af6466
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Mon Mar 16 14:02:09 2009 +0000

    [docs] Update after Animation API changes
    
    Rename the bind/unbind_property functions, and add the bind_interval,
    completed method.
    
    Also, add clutter_actor_get_animation().

 doc/reference/clutter/clutter-sections.txt |    7 +++++--
 1 file changed, 5 insertions(+), 2 deletions(-)

commit 0942fac573aa3a311c94324935004082c2b04a92
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Mon Mar 16 14:01:43 2009 +0000

    [docs] Add description of queue_redraw

 clutter/clutter-actor.h |    1 +
 1 file changed, 1 insertion(+)

commit ff620402523a0dd33ae01d13f7490dc8e63caf3c
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Mon Mar 16 12:17:03 2009 +0000

    [tests] Remove unused variables
    
    The size of the pixmap is passed by the ::size-changed signal, so
    we can remove the unused w, h variables and avoid a compiler warning.

 tests/interactive/test-texture-async.c |    1 -
 1 file changed, 1 deletion(-)

commit 961aac3fb36f73d4a48720d93b8928a3e24b5b84
Author: Havoc Pennington <hp@pobox.com>
Date:   Tue Feb 17 12:22:02 2009 -0500

    [actor] Add ::queue-redraw signal
    
    Bug 1454 - move queue_redraw virtualization to ClutterActor
    
    The ClutterActor::queue-redraw signal allows parent containers to
    track whether their children need a redraw.
    
    Signed-off-by: Emmanuele Bassi <ebassi@linux.intel.com>

 clutter/clutter-actor.c |  124 +++++++++++++++++++++++++++++++++++++++++------
 clutter/clutter-actor.h |    3 ++
 clutter/clutter-stage.c |   63 ++++--------------------
 clutter/clutter-stage.h |    2 -
 4 files changed, 121 insertions(+), 71 deletions(-)

commit 570610512364223937543c010a6133c0d2b3dab1
Author: Havoc Pennington <hp@pobox.com>
Date:   Mon Mar 16 11:58:58 2009 +0000

    [actor] Add :clip-to-allocation property
    
    A common use of setting clip is to keep an actor inside its allocation;
    right now to do this you have to set up a callback on notify::allocation.
    
    There's no overhead added by sticking another bit in ClutterActor
    clip-to-allocation that will clip painting to the allocation if set.
    
    Signed-off-by: Emmanuele Bassi <ebassi@linux.intel.com>

 clutter/clutter-actor.c |   44 ++++++++++++++++++++++++++++++++++++++++++++
 1 file changed, 44 insertions(+)

commit 0cb0a841cc56c7912b59973dddc9e157fba7e0f5
Author: Colin Walters <walters@verbum.org>
Date:   Thu Mar 5 23:10:00 2009 -0500

    [animation] Enhance the bind API
    
    Bug 1419 - Add clutter_animation_bind, rename clutter_animation_bind_interval
    
    This is a different approach from the clutter_actor_animatev
    vector variant.  The single call should be even easier on
    automatic bindings, since calls can be chained like:
    
      new Clutter.Animation({object: myactor}).bind("x", 42).bind("y", 43);
    
    Note clutter_animation_bind_property which took a ClutterInterval
    is renamed to clutter_animation_bind_interval for clarity, and to
    discourage use since there are friendlier APIs about.
    
    Signed-off-by: Emmanuele Bassi <ebassi@linux.intel.com>

 clutter/clutter-animation.c |  129 +++++++++++++++++++++++++++++++++----------
 clutter/clutter-animation.h |    7 ++-
 2 files changed, 104 insertions(+), 32 deletions(-)

commit 156589fe3f4eeb215d0bf567aff71da94e5ee721
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Mon Mar 16 11:31:27 2009 +0000

    [animation] Add Animation getter
    
    If we are animating an actor using the clutter_actor_animate*() family
    of functions we might want to expose a getter for the Animation instance
    we are using, to avoid excessing bookkeeping.

 clutter/clutter-animation.c |   19 +++++++++++++++++++
 clutter/clutter-animation.h |    2 ++
 2 files changed, 21 insertions(+)

commit 44d0733665eca0b6517332a176743783ec2ccb79
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Mon Mar 16 11:30:10 2009 +0000

    [animation] Add an emitter for ::completed
    
    The ::completed signal requires an emitter in case we want to stop
    the animation and safely dispose it inside application code without
    breaking invariants.

 clutter/clutter-animation.c |   18 ++++++++++++++++++
 clutter/clutter-animation.h |    1 +
 2 files changed, 19 insertions(+)

commit a5c88e62f2207f18897732c76654f4699d2a897c
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Mon Mar 16 11:28:29 2009 +0000

    [docs] Clarify Animation memory management
    
    The memory management of the ClutterAnimation instances should be
    heavily documented, given its "automagical" nature, so that other
    people might understand it and avoid breaking it in the future.

 clutter/clutter-animation.c |    8 +++++++-
 1 file changed, 7 insertions(+), 1 deletion(-)

commit 0674fded7f25fdbf019debe7d91d28b441d3acaf
Merge: 7f2ef2f 56568db
Author: Øyvind Kolås <pippin@linux.intel.com>
Date:   Mon Mar 16 00:40:27 2009 +0000

    Merge branch 'async-texture-thread-pool'

commit 56568db3b0b9eebf7f000407e1334a5b4d85e889
Author: Øyvind Kolås <pippin@linux.intel.com>
Date:   Thu Mar 12 11:48:44 2009 +0000

    [clutter-texture] fixed gtk-doc formatting, and init threads in test.
    
    Fixed markup to actually work with gtk-doc, also do a g_thread_init
    in the test.

 clutter/clutter-texture.c              |   14 ++++++++------
 tests/interactive/test-texture-async.c |    4 +++-
 2 files changed, 11 insertions(+), 7 deletions(-)

commit 7f2ef2f1e014201bb5d3614bc857e6122fbfe08f
Author: Neil Roberts <neil@linux.intel.com>
Date:   Fri Mar 13 15:43:19 2009 +0000

    [cogl-path] Minor fix to gtk-doc
    
    Fix the parameters in cogl_path_curve_to and cogl_path_rel_curve_to to
    match the actual names otherwise they won't appear correctly in the
    docs.

 clutter/cogl/cogl-path.h |    8 ++++----
 1 file changed, 4 insertions(+), 4 deletions(-)

commit 89060a9bb37503ada773c9026a152690da48531e
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Fri Mar 13 15:28:20 2009 +0000

    [cogl] Avoid shadowing math.h symbols
    
    As usual, y1 and y2 end up shadowing symbols exported by math.h.

 clutter/cogl/cogl-path.h              |  108 ++++++++++++++++-----------------
 clutter/cogl/common/cogl-primitives.c |   30 ++++-----
 2 files changed, 69 insertions(+), 69 deletions(-)

commit e1742af36806b838111b5f6f85422940c64a87b8
Author: Owen W. Taylor <otaylor@redhat.com>
Date:   Thu Mar 12 15:33:36 2009 -0400

    Avoid drawing twice if relayout queues a draw
    
    It's reasonably normal for a relayout of the stage to cause the stage
    to be queued for drawing; for this reason we should do the relayout before
    we clear stage->update_idle. (But want to clear update_idle() before actually
    doing the redraw to handle the corner case where the draw queues another
    redraw.)

 clutter/clutter-stage.c |    7 +++++++
 1 file changed, 7 insertions(+)

commit 72f96468047e76fe8cb40b77cbfd0225c1d05b80
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Fri Mar 13 14:14:00 2009 +0000

    Do not cause more size requisitions than necessary
    
    Bug 1499 - clutter_actor_notify_if_geometry_changed causes sync
               layout cycles
    
    Whenever clutter_actor_set_{width,height,x,y,size...} is used, extra
    synchronous size requests are triggered in
    clutter_actor_notify_if_geometry_changed.
    
    If the get_preferred_width() and get_preferred_height() implementations
    are particularly costly (e.g. ClutterText) this will result in a performance
    impact.
    
    To avoid excessive allocation or requisition cycles we use the
    cached values and flags. If we don't have an allocation, we assume
    that we need to notify all the properties; if we don't have a size
    requisition we notify only width and height; finally, if we do have
    a valid allocation we notify only on the changed values.

 clutter/clutter-actor.c |   56 ++++++++++++++++++++++++++++++++++++-----------
 1 file changed, 43 insertions(+), 13 deletions(-)

commit 786161c75f0bf5e3612f2f3df42eb3704ac7c27a
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu Mar 12 21:11:50 2009 +0000

    [deprecated] Add Effect deprecation
    
    The ClutterEffect API has been deprecated during 0.9, so it should be
    added to the deprecation macros.

 clutter/clutter-deprecated.h |    9 +++++++++
 1 file changed, 9 insertions(+)

commit ed2fe41b32ea6c9d645f89f385e088ca9857aa6e
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu Mar 12 16:20:42 2009 +0000

    Add more deprecation notices
    
    Most of the deprecated API does not have an entry inside
    clutter-deprecated.h, thus making porting a tad more difficult.

 clutter/clutter-deprecated.h |   80 +++++++++++++++++++++++++++++++++++++++++-
 clutter/clutter.h            |    3 +-
 2 files changed, 81 insertions(+), 2 deletions(-)

commit cde05288b7e59061eea622c9028a3968334f4483
Author: Neil Roberts <neil@linux.intel.com>
Date:   Fri Mar 13 12:20:26 2009 +0000

    Change cogl_path_rectangle and cogl_path_round_rectangle to take x1,y1,x2,y2
    
    This matches the changes to cogl_rectangle to improve consistency.

 README                                   |    5 +++--
 clutter/cogl/cogl-path.h                 |   34 +++++++++++++++---------------
 clutter/cogl/common/cogl-primitives.c    |   30 +++++++++++++-------------
 clutter/pango/cogl-pango-render.c        |    8 +++----
 tests/interactive/test-clip.c            |   10 ++++-----
 tests/interactive/test-cogl-primitives.c |    4 ++--
 6 files changed, 46 insertions(+), 45 deletions(-)

commit 5d4c09369e2efd729d44399557c2dce45bb51b62
Author: Neil Roberts <neil@linux.intel.com>
Date:   Fri Mar 13 12:02:33 2009 +0000

    [README] Small typo fix

 README |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit 2edccc760dae07a66badfe081f2e64865dfe5c3c
Merge: c418b23 ca28440
Author: Robert Bragg <robert@linux.intel.com>
Date:   Thu Mar 12 18:59:20 2009 +0000

    Merge branch 'cogl-client-matrix-stacks'
    
    * cogl-client-matrix-stacks:
      Maintain the Cogl assumption that the modelview matrix is normally current
      Finish GLES{1,2} support for client side matrix stacks
      Explicitly make the modelview-matrix current in cogl_{rotate,transform,etc}
      Avoid casting CoglMatrix to a GLfloat * when calling glGetFloatv
      Removes need for casting const float * in _cogl_set_clip_planes
      Virtualize GL matrix operations and use a client-side matrix when GL is indirect

commit ca2844013e7c2d0bea48b4f2f2539306aace235f
Author: Robert Bragg <robert@linux.intel.com>
Date:   Thu Mar 12 14:16:48 2009 +0000

    Maintain the Cogl assumption that the modelview matrix is normally current
    
    _cogl_add_path_to_stencil_buffer and _cogl_add_stencil_clip were leaving
    the projection matrix current when calling cogl_rectangle which was
    upsetting _cogl_current_matrix_state_flush.

 clutter/cogl/gl/cogl-primitives.c   |   14 ++++++++++++--
 clutter/cogl/gl/cogl.c              |   16 ++++++++++++++--
 clutter/cogl/gles/cogl-primitives.c |   14 ++++++++++++--
 clutter/cogl/gles/cogl.c            |   16 ++++++++++++++--
 4 files changed, 52 insertions(+), 8 deletions(-)

commit 0580dbe015768d63a856b91718652717b4c6b2f9
Author: Robert Bragg <robert@linux.intel.com>
Date:   Thu Mar 12 13:34:36 2009 +0000

    Finish GLES{1,2} support for client side matrix stacks
    
    Adds glFrustum wrappers (GLES only accepts floats not doubles, and GLES2
    needs to use our internal cogl_wrap_glFrustumf)
    
    Adds GL_TEXTURE_MATRIX getter code in cogl_wrap_glGetFloatv
    
    Adds a GL_TEXTURE_MATRIX define for GLES2

 clutter/cogl/common/cogl-current-matrix.c |   13 +++++++++++++
 clutter/cogl/gles/cogl-gles2-wrapper.c    |   10 ++++++++++
 clutter/cogl/gles/cogl-gles2-wrapper.h    |    1 +
 3 files changed, 24 insertions(+)

commit 3a9b18ef51005d9bea7d35347569c35c6573bf64
Author: Robert Bragg <robert@linux.intel.com>
Date:   Thu Mar 12 13:32:10 2009 +0000

    Use Cogl enum when making modelview-matrix current in cogl_{rotate,transform,etc}
    
    My previous patch incorrectly used the GL enum with the _cogl_set_current_matrix
    API.

 clutter/cogl/common/cogl-current-matrix.c |   10 +++++-----
 1 file changed, 5 insertions(+), 5 deletions(-)

commit 2f34d14cb46d8ccaff94b1bbf03c9bcf72c5f970
Author: Robert Bragg <robert@linux.intel.com>
Date:   Fri Mar 6 03:43:24 2009 +0000

    Explicitly make the modelview-matrix current in cogl_{rotate,transform,etc}
    
    Its not intended that users should use these with any other matrix mode, and
    internally we now have the _cogl_current_matrix API if we need to play with
    other modes.

 clutter/cogl/common/cogl-current-matrix.c |    5 +++++
 1 file changed, 5 insertions(+)

commit 0d88ecb45928d9decb3ab7fc52493a24cd81334c
Author: Robert Bragg <robert@linux.intel.com>
Date:   Fri Mar 6 03:29:51 2009 +0000

    Avoid casting CoglMatrix to a GLfloat * when calling glGetFloatv
    
    If we later add internal flags to CoglMatrix then this code wouldn't
    initialize those flags. The ways it's now done adds a redundant copy, but
    if that turns out to be something worth optimizing we can look again at
    using a cast but adding another way for initializing internal flags.

 clutter/cogl/common/cogl-current-matrix.c |   11 ++++++++---
 1 file changed, 8 insertions(+), 3 deletions(-)

commit 61b867442b0ed067dcb17cf52816e2f406509b78
Author: Robert Bragg <robert@linux.intel.com>
Date:   Fri Mar 6 03:29:35 2009 +0000

    80 char fix

 clutter/cogl/common/cogl-current-matrix.c |    3 ++-
 1 file changed, 2 insertions(+), 1 deletion(-)

commit 20a2f76e1fb27b18c5157d50f12cf9833163c4dc
Author: Robert Bragg <robert@linux.intel.com>
Date:   Fri Mar 6 02:39:24 2009 +0000

    Removes need for casting (const float *) to (GLfloat *) in _cogl_set_clip_planes
    
    This removes cogl.c:apply_matrix(), and makes cogl.c:project_vertex() use
    cogl_matrix_transform_point instead.

 clutter/cogl/gl/cogl.c |   43 ++++++++++++-------------------------------
 1 file changed, 12 insertions(+), 31 deletions(-)

commit 08932584b557aa041f8a0ab7417eecaf2e83865c
Author: Havoc Pennington <hp@pobox.com>
Date:   Tue Feb 24 13:51:25 2009 -0500

    Virtualize GL matrix operations and use a client-side matrix when GL is indirect
    
    This is useful because sometimes we need to get the current matrix, which
    is too expensive when indirect rendering.
    
    In addition, this virtualization makes it easier to clean up the API in
    the future.

 clutter/cogl/cogl-matrix.h                |   21 ++
 clutter/cogl/cogl.h.in                    |   18 ++
 clutter/cogl/common/Makefile.am           |    4 +
 clutter/cogl/common/cogl-current-matrix.c |  452 +++++++++++++++++++++++++++++
 clutter/cogl/common/cogl-current-matrix.h |   91 ++++++
 clutter/cogl/common/cogl-material.c       |    6 +-
 clutter/cogl/common/cogl-matrix-stack.c   |  327 +++++++++++++++++++++
 clutter/cogl/common/cogl-matrix-stack.h   |   67 +++++
 clutter/cogl/common/cogl-matrix.c         |   42 +++
 clutter/cogl/common/cogl-util.c           |   23 ++
 clutter/cogl/common/cogl-vertex-buffer.c  |    4 +
 clutter/cogl/gl/cogl-context.c            |   37 +++
 clutter/cogl/gl/cogl-context.h            |    8 +
 clutter/cogl/gl/cogl-fbo.c                |   42 +--
 clutter/cogl/gl/cogl-primitives.c         |   20 +-
 clutter/cogl/gl/cogl-texture.c            |    5 +-
 clutter/cogl/gl/cogl.c                    |  233 +++------------
 clutter/cogl/gles/cogl-context.c          |   37 +++
 clutter/cogl/gles/cogl-context.h          |    8 +
 clutter/cogl/gles/cogl-fbo.c              |   36 +--
 clutter/cogl/gles/cogl-primitives.c       |   20 +-
 clutter/cogl/gles/cogl-texture.c          |   33 ++-
 clutter/cogl/gles/cogl.c                  |  235 +++------------
 clutter/glx/clutter-stage-glx.c           |    3 +
 24 files changed, 1318 insertions(+), 454 deletions(-)

commit 5895048f65c7ec8028575f60b7b4a7d58a87077e
Author: Øyvind Kolås <pippin@linux.intel.com>
Date:   Thu Mar 12 11:48:44 2009 +0000

    [clutter-texture] updated documentation.
    
    Rewrote documentation, with the smallest amount of documentation for
    load-data-async which is considered a special case of load-async.

 clutter/clutter-texture.c |   50 +++++++++++++++++++++++----------------------
 1 file changed, 26 insertions(+), 24 deletions(-)

commit 25d54a650de130c463d562f07de8b5083e2e8495
Merge: c418b23 93d8f62
Author: Øyvind Kolås <pippin@linux.intel.com>
Date:   Thu Mar 12 11:18:11 2009 +0000

    Merge commit 'origin/async-texture-thread-pool' into async-size

commit 93d8f62f6bf9ade7e3049d8c30b5a1e38bf17561
Author: Øyvind Kolås <pippin@linux.intel.com>
Date:   Thu Mar 12 10:38:39 2009 +0000

    [clutter-texture] remove load-size-async property
    
    Only have load-data-async and load-async properties, both are construct
    only and the latter adds the former load-size-async behavior on top of
    load-data-async.

 clutter/clutter-texture.c              |   51 +++++++-------------------------
 tests/interactive/test-texture-async.c |   23 ++++----------
 2 files changed, 16 insertions(+), 58 deletions(-)

commit d3b68298ace856938efd7fe8293194582fc7f50c
Author: Øyvind Kolås <pippin@linux.intel.com>
Date:   Thu Mar 12 10:14:40 2009 +0000

    [clutter-texture] add option to not block on size for loaded images
    
    Added a construct time property to indicate that we do not want
    to block on loading images.

 clutter/clutter-texture.c              |   86 ++++++++++++++++-----------
 tests/interactive/test-texture-async.c |   99 ++++++++++++++++++++++----------
 2 files changed, 122 insertions(+), 63 deletions(-)

commit 5d3d9713899919d4cc7e42c5b08a9835b15e5c9c
Author: Øyvind Kolås <pippin@linux.intel.com>
Date:   Wed Mar 11 18:26:30 2009 +0000

    [tests] Added test-texture-async

 clutter/clutter-texture.c              |   74 ++++++++++++++++++++++++++++---
 tests/interactive/Makefile.am          |    1 +
 tests/interactive/test-texture-async.c |   76 ++++++++++++++++++++++++++++++++
 3 files changed, 144 insertions(+), 7 deletions(-)

commit c418b23baf635b9d94cdc50f62dc4380e0f5e41c
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu Mar 12 09:29:39 2009 +0000

    [docs] Add a bindings coding practices
    
    When writing language bindings for Clutter some rules should be
    observed to guarantee the same levels of quality across different
    bindings.

 HACKING |   18 ++++++++++++++++++
 1 file changed, 18 insertions(+)

commit d036d088aad5aa9ac159d4346a7d923b9c823080
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu Mar 12 09:27:39 2009 +0000

    [docs] Reword some of the coding practices
    
    Update with the new fixed point and units rules. Also, fix the
    grammar and clarify what to do with non-static private functions.

 HACKING |   35 +++++++++++++++++++++++------------
 1 file changed, 23 insertions(+), 12 deletions(-)

commit 77579bbc5fc693c4c8d4d076ace4362c57b2762d
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Wed Mar 11 22:12:36 2009 +0000

    [tests] Animate the color during easing
    
    The easing modes test should also tweak the color to show the
    progress of the animation.

 tests/interactive/test-easing.c |    7 +++++++
 1 file changed, 7 insertions(+)

commit 2c95b378a598c81ea29ffe129fedb9fc54281f9c
Author: Geoff Gustafson <geoff@linux.intel.com>
Date:   Tue Mar 10 14:25:37 2009 -0700

    [animation] Broken fixed:: properties
    
    This commit yesterday:
    
    89e3e3a4cc06c10c2573f3d115c5b03ee4890524
    [animation] Add vector variants for ::animate()
    
    broke the "fixed::" attribute on properties in clutter_actor_animate(),
    because the fixed:: part is still on the string when it checks to see if
    it's a valid property the class knows about.
    
    Signed-off-by: Emmanuele Bassi <ebassi@linux.intel.com>

 clutter/clutter-animation.c |    6 ++++++
 1 file changed, 6 insertions(+)

commit 168499742ab329f4bff1d6e13d97cf6b972a3f34
Author: Damien Lespiau <damien.lespiau@gmail.com>
Date:   Wed Mar 11 18:39:10 2009 +0000

    Update shave
    
    This update fixes a few issues:
      - the use of shave with mingw32 bash on windows,
      - fix the unmangling of libtool names
      - fix build on solaris
      - add an --enable/disable-shave configure option (while still
        defaulting to enabled)

 build/autotools/shave-libtool.in |    5 +--
 build/autotools/shave.in         |   28 ++++++++-----
 build/autotools/shave.m4         |   85 +++++++++++++++++++++++++++-----------
 configure.ac                     |    2 +-
 4 files changed, 81 insertions(+), 39 deletions(-)

commit d88bc30b87b640fb4c11ebbb68d146810c379fde
Author: Owen W. Taylor <otaylor@fishsoup.net>
Date:   Fri Feb 27 11:56:39 2009 -0500

    Allow NULL for clutter_text_set_text()
    
    As a convenience, if NULL is passed for the text argument of
    clutter_text_set_text() (and for consistency,
    clutter_text_set_markup()), treat that the same as "".

 clutter/clutter-text.c |   14 +++++---------
 1 file changed, 5 insertions(+), 9 deletions(-)

commit 0d874312d32f7c887286ddc28dcb8bbad6c4d33d
Author: Gordon Williams <gordon.williams@collabora.co.uk>
Date:   Wed Mar 11 18:16:21 2009 +0000

    [group] Output the group name when debugging paint
    
    Bug 1480 - Clutter groups don't output their name when
               CLUTTER_DEBUG=paint
    
    This is a really useful thing to do debugging-wise - as you can see
    istantly when (and if) clutter objects are being drawn - as often
    there's quite a hierarchy of objects in groups.
    
    Signed-off-by: Emmanuele Bassi <ebassi@linux.intel.com>

 clutter/clutter-group.c |    8 ++++++--
 1 file changed, 6 insertions(+), 2 deletions(-)

commit 02b2b664d8e00679dda08c1a83f6b8ebd5147086
Author: Owen W. Taylor <otaylor@fishsoup.net>
Date:   Thu Feb 26 14:42:19 2009 -0500

    Add (out) annotations for ClutterActor
    
    Add missing (out) annotations to the doc comments for ClutterActor methods
    with multiple return values.
    
    Fix the definition of clutter_actor_get_allocation_vertices() to be
    consistent with the declaration and have verts[4] rather than verts[].x
    
    http://bugzilla.openedhand.com/show_bug.cgi?id=1481

 clutter/clutter-actor.c |   92 +++++++++++++++++++++++------------------------
 1 file changed, 46 insertions(+), 46 deletions(-)

commit 75e5b805ab6ed4ab82e75b4306045065e0620b9f
Author: Raymond Liu <raymond.liu@intel.com>
Date:   Mon Mar 9 14:10:45 2009 +0800

    [text] Insertion of multi-byte characters broken
    
    Bug 1501 - clutter_text_insert_text not working right with non-onebyte
               character
    
    In clutter_text_insert_text(), the position is expressed in characters, not
    in bytes.
    
    Actually, it turns out to be working on bytes, so when there are already
    multi-byte character in the text buffer, insert text at the position after
    the multi-byte character will not work right.
    
    Also, the position is not updated after the insert work is done.
    
    Signed-off-by: Emmanuele Bassi <ebassi@linux.intel.com>

 clutter/clutter-text.c |   11 ++++++++++-
 1 file changed, 10 insertions(+), 1 deletion(-)

commit 039e282a40c4f1a0f0d58fd0d46d713ffb8ea36b
Author: Raymond Liu <raymond.liu@intel.com>
Date:   Wed Mar 11 14:35:26 2009 +0800

    [text] Crash when multi-byte utf8 text exceeds max_length
    
    Bug 1500 - [Patch] clutter_text crash with non one-byte utf8 text exceed
               max_length
    
    In clutter_text_set_text_internal(), when text length in character is greater
    than max_length, and there are multi-byte character in it, then the new text
    string buffer is not malloc()'ed with right length. This will cause the app to
    crash with segmention fault.
    
    Signed-off-by: Emmanuele Bassi <ebassi@linux.intel.com>

 clutter/clutter-text.c |    3 ++-
 1 file changed, 2 insertions(+), 1 deletion(-)

commit a83a5d55935a7dfd54de52368b4a1cd6768a257a
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Wed Mar 11 14:01:55 2009 +0000

    [docs] Document the commit message format
    
    Clutter uses the standard git format for commit messages:
    
            short description
            <newline>
            long description...
    
    And everyone asking for their patches or trees to be merged upstream
    should conform to the same commit messages format, just like they
    should conform to the coding style.

 HACKING |   15 +++++++++++++++
 1 file changed, 15 insertions(+)

commit 7a5cea44dd547ea15a51dd2ee49bc15d41e84546
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Wed Mar 11 13:55:01 2009 +0000

    [docs] Calling g_object_ref() will not dispose an object
    
    The right way to dispose a PangoContext is to call g_object_unref(),
    not g_object_ref().

 clutter/clutter-actor.c |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit e430903acd4b7f7da8cbb5e0f6f95e1eff0b9bba
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Wed Mar 11 13:53:27 2009 +0000

    [color] Fixed HLS to RGB conversion
    
    The fixed-point values are converted to integers, which obviously
    messes up the conversion. Instead, they should be converted to
    floating point values before normalizing to bytes for the assignment
    to ClutterColor components.

 clutter/clutter-color.c |   30 +++++++++++++++---------------
 1 file changed, 15 insertions(+), 15 deletions(-)

commit 5e9894fbace4379b8c2c1b30c826858009187689
Author: Neil Roberts <neil@linux.intel.com>
Date:   Tue Mar 10 18:28:56 2009 +0000

    Remove use of $(builddir)
    
    $(builddir) isn't always defined in earlier versions of Automake
    (although I can't track down exactly which version it appeared
    in). According to the autoconf docs it is "rigorously equal to `.'" so
    we might as well not use it.

 clutter/Makefile.am |    6 +++---
 1 file changed, 3 insertions(+), 3 deletions(-)

commit a41361269fb32bd386285d553154c48a84295eb5
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Tue Mar 10 18:05:08 2009 +0000

    [cogl] Initialize all members of CoglContext
    
    Some members of CoglContext still escape initialization.

 clutter/cogl/gl/cogl-context.c   |    1 +
 clutter/cogl/gles/cogl-context.c |    1 +
 2 files changed, 2 insertions(+)

commit d3245c66244970d04922572c47d68efc9ad19122
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Tue Mar 10 17:53:51 2009 +0000

    [cogl] Initialize boolean flag in CoglContext
    
    The private CoglContext is created using g_malloc() and not
    zeroed; this means we have to initialize the values we are
    going to check, to avoid hitting garbage.
    
    Thanks to Tommi Komulainen.

 clutter/cogl/gl/cogl-context.c   |    2 ++
 clutter/cogl/gles/cogl-context.c |    2 ++
 2 files changed, 4 insertions(+)

commit 57c3e84289fd3a705a01c74c6924ed0b100da4de
Author: Neil Roberts <neil@linux.intel.com>
Date:   Tue Mar 10 14:40:33 2009 +0000

    Fix out of tree builds
    
    Commit a383929 added the $(srcdir) prefix to all of the source files
    but some files are generated by the configure script and other make
    rules so they actually live in $(builddir). Out-of-tree builds
    therefore broke.

 clutter/Makefile.am |   10 +++++-----
 1 file changed, 5 insertions(+), 5 deletions(-)

commit e744066e7d82813d9d70d032068c7e6d51fc9f14
Author: Øyvind Kolås <pippin@linux.intel.com>
Date:   Tue Mar 10 13:00:57 2009 +0000

    Change the default size of thread pool from 3 to 1
    
    Concurrently decoding three image files can stall animations even on a
    dual core system, reducing to 1 concurrent image decoding thread.

 clutter/clutter-texture.c |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit 89e3e3a4cc06c10c2573f3d115c5b03ee4890524
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Mon Mar 9 21:11:40 2009 +0000

    [animation] Add vector variants for ::animate()
    
    Bug 1438 - Implicit Animation API could use animatev variants
    
    The clutter_actor_animate* family of functions use va_lists to
    handle the property/value pairs for the final state of the
    animation.
    
    Language bindings have problems with variadic arguments functions,
    and usually prefer vector-based API which allow a greater level
    of control and conversion from native data types.
    
    For each variadic arguments function in the clutter_actor_animate*
    family there should be a vector-based version that takes:
    
      - the number of property/value pairs
      - a constant array of constant strings
      - an array of GValues
    
    Most of the internal implementation can be refactored from the
    current one, thus both the var_args and the vector entry points
    share a common implementation of the code; then, both versions
    of the API are just loops over a list of arguments.
    
    Based on a patch by: Robert Carr <carrr@rpi.edu>

 clutter/clutter-animation.c                |  418 +++++++++++++++++++++++-----
 clutter/clutter-animation.h                |   18 ++
 doc/reference/clutter/clutter-sections.txt |    3 +
 3 files changed, 374 insertions(+), 65 deletions(-)

commit c46106f6dd550b684cd53676e6173c8a8d03255e
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Mon Mar 9 18:28:15 2009 +0000

    [docs] Update API reference
    
    The API reference was still listing some symbols that have been
    removed.

 clutter/clutter-types.h                    |    2 --
 doc/reference/clutter/clutter-sections.txt |    6 ++----
 2 files changed, 2 insertions(+), 6 deletions(-)

commit f1b237b2ec7c9aafcd55c481602870c589ee3c8e
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Mon Mar 9 17:56:48 2009 +0000

    [docs] Remove ClutterFixed from the documentation
    
    Now that ClutterFixed has finally gone the way of the Dodo, we
    can safely remove it from the API reference as well.

 clutter/clutter-behaviour-ellipse.c        |   29 ++++++-----
 clutter/clutter-fixed.c                    |   37 +-------------
 doc/reference/clutter/clutter-docs.xml     |    1 -
 doc/reference/clutter/clutter-sections.txt |   74 +++++-----------------------
 4 files changed, 29 insertions(+), 112 deletions(-)

commit bb83bf282d7b4f6b05ae71b3b1cf8febb228914b
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Mon Mar 9 17:47:21 2009 +0000

    [cogl] Fix hardcoded paths in the pc file
    
    The commit 24ce193836 fixed the Clutter pkg-config file. Since
    COGL now ships its own, we need to fix that as well.

 clutter/cogl/cogl.pc.in |    6 +++---
 1 file changed, 3 insertions(+), 3 deletions(-)

commit 9b83a6f291663577426a26d5adae8712566dba2d
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Mon Mar 9 17:36:22 2009 +0000

    [fixed] Remove ClutterFixed API
    
    Since the switch from fixed point to floating point, and the introduction
    of CoglFixed, ClutterFixed has been typedef'd into a float. This makes
    ClutterFixed the worst fixed point API ever.
    
    Now that Clutter has been migrated to CoglFixed and gfloat whenever needed,
    ClutterFixed can be safely removed.
    
    The only thing that Clutter should still provide is ClutterParamSpecFixed,
    for installing fixed point properties into GObject classes.
    
    The ClutterFixed symbols have been entirely removed from the API.

 clutter/clutter-fixed.c |  174 +++---------------------------
 clutter/clutter-fixed.h |  269 ++---------------------------------------------
 2 files changed, 28 insertions(+), 415 deletions(-)

commit d1f3190f5b9b93b6da32c0afa8c2544b5c1c8415
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Mon Mar 9 17:35:08 2009 +0000

    [units] Add more conversion functions
    
    A GValue containing a ClutterUnit should be transformable into a
    GValue holding an integer, a floating point value or a fixed point
    value.
    
    This means adding more transformation functions when registering
    the ClutterUnit GType.

 clutter/clutter-units.c |   73 ++++++++++++++++++++++++++++++++++++++++++++++-
 clutter/clutter-units.h |   23 ++++++++-------
 2 files changed, 85 insertions(+), 11 deletions(-)

commit 6bee140e7458e92e3cf3b884cc06f2dc4c4a99a5
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Mon Mar 9 17:34:23 2009 +0000

    [tests] Use floats, not ClutterFixed
    
    The COGL API expects floats, not ClutterFixed, so we need
    to use the right type when calling it.

 tests/interactive/test-clip.c              |   58 +++++++++++++-------------
 tests/interactive/test-cogl-multitexture.c |   27 ++++++------
 tests/interactive/test-cogl-offscreen.c    |   19 +++------
 tests/interactive/test-cogl-primitives.c   |   61 ++++++++--------------------
 tests/interactive/test-cogl-tex-convert.c  |   23 +++--------
 tests/interactive/test-cogl-tex-foreign.c  |   11 +----
 tests/interactive/test-cogl-tex-getset.c   |   11 +----
 tests/interactive/test-cogl-tex-polygon.c  |   57 ++++++++++++--------------
 tests/interactive/test-cogl-tex-tile.c     |   27 +++++-------
 tests/interactive/test-text-field.c        |    6 +--
 10 files changed, 112 insertions(+), 188 deletions(-)

commit f82c9e7dba8d060506c36af185de6be387eddeaa
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Mon Mar 9 17:32:15 2009 +0000

    [text] Convert units to the right type
    
    The COGL API expects a floating point value, so Units should be
    converted to floats, not to ClutterFixed.

 clutter/clutter-text.c |    4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

commit 97d0a4845ab971c032d55d4268c92bf311e51c47
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Mon Mar 9 17:31:44 2009 +0000

    [texture] Fix ClutterFixed usage
    
    Do not use ClutterFixed and its macros inside the Texture.

 clutter/clutter-texture.c |   18 ++++++++----------
 1 file changed, 8 insertions(+), 10 deletions(-)

commit 52811b240feba30ad1640294655a9f3086fe07d6
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Mon Mar 9 17:24:44 2009 +0000

    [stage] Coalesce fog and perspective API
    
    The fog and perspective API is currently split in two parts:
    
      - the floating point version, using values
    
      - the fixed point version, using structures
    
    The relative properties are using the structure types, since they
    are meant to set multiple values at the same time. Instead of
    using bare values, the whole API should be coalesced into two
    simple calls using structures to match the GObject properties.
    
    Thus:
    
      clutter_stage_set_fog (ClutterStage*, const ClutterFog*)
      clutter_stage_get_fog (ClutterStage*, ClutterFog*)
    
      clutter_stage_set_perspective (ClutterStage*, const ClutterPerspective*)
      clutter_stage_get_perspective (ClutterStage*, ClutterPerspective*)
    
    Which supercedes the fixed point and floating point variants.
    
    More importantly, both ClutterFog and ClutterPerspective should
    using floating point values, since that's what get passed to
    COGL anyway.
    
    ClutterFog should also drop the "density" member, since ClutterStage
    only allows linear fog; non-linear fog distribution can be achieved
    using a signal handler and calling cogl_set_fog() directly; this keeps
    the API compact yet extensible.
    
    Finally, there is no ClutterStage:fog so it should be added.

 clutter/clutter-main.c                   |    2 +-
 clutter/clutter-stage.c                  |  355 +++++++++++-------------------
 clutter/clutter-stage.h                  |   43 +---
 clutter/clutter-texture.c                |   45 ++--
 tests/interactive/test-depth.c           |    3 +-
 tests/interactive/test-texture-quality.c |    3 +-
 6 files changed, 172 insertions(+), 279 deletions(-)

commit 628e54fa9ff1af99ca505d135bcc6f87bcd8ff11
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Mon Mar 9 17:08:41 2009 +0000

    [interval] Update fixed-point handling
    
    Do not use ClutterFixed when dealing with fixed point values. Use
    CoglFixed instead.

 clutter/clutter-interval.c |    8 ++++----
 1 file changed, 4 insertions(+), 4 deletions(-)

commit fc40d75956e130a39c50cdaccc7af739a4591ac9
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Mon Mar 9 17:07:47 2009 +0000

    [tests] Test CoglFixed, not ClutterFixed
    
    We really want to test the CoglFixed implementation, not the
    to-be-deprecated ClutterFixed one.

 tests/conform/test-clutter-fixed.c |   10 +++++-----
 1 file changed, 5 insertions(+), 5 deletions(-)

commit 99110335056b5dce43822a6c64c3a457cca915bc
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Mon Mar 9 17:06:22 2009 +0000

    [cogl-fixed] Implement the CoglFixed fundamental GType
    
    The type machinery for CoglFixed should be implemented by COGL
    itself, now that COGL exports the GType of its types.
    
    This allows moving most of what ClutterFixed did directly to
    CoglFixed where it belongs.

 clutter/cogl/cogl-types.h       |   44 ++++++++-
 clutter/cogl/cogl.h.in          |   33 -------
 clutter/cogl/common/cogl-util.c |  186 +++++++++++++++++++++++++++++++++++++--
 3 files changed, 223 insertions(+), 40 deletions(-)

commit 720341b3018dfa2698642c4266a399c035a9ff24
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Mon Mar 9 17:05:13 2009 +0000

    Move ClutterTimeline to CoglFixed
    
    The ClutterTimeline::get_progressx() method should return a
    CoglFixed, now that ClutterFixed is being deprecated.

 clutter/clutter-timeline.c |   25 ++++++++++---------------
 clutter/clutter-timeline.h |   29 +++++++----------------------
 2 files changed, 17 insertions(+), 37 deletions(-)

commit 849e916d6fc568286223cab015ee1d3c0a1cb592
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Mon Mar 9 17:03:37 2009 +0000

    Move ClutterBehaviourRotate to CoglFixed
    
    Remove the wrong usage of ClutterFixed and use CoglFixed instead
    in the API and the implementation.

 clutter/clutter-behaviour-rotate.c |  234 +++++++++++++++++++-----------------
 clutter/clutter-behaviour-rotate.h |   54 ++++++---
 2 files changed, 160 insertions(+), 128 deletions(-)

commit 764dc3bac4683d972f04ed7f4e815d40513d189b
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Mon Mar 9 17:03:00 2009 +0000

    Move ClutterBehaviourEllipse to CoglFixed
    
    Remove the wrong usage of ClutterFixed, and use CoglFixed instead
    in the API and the implementation.

 clutter/clutter-behaviour-ellipse.c |  482 +++++++++++++++++------------------
 clutter/clutter-behaviour-ellipse.h |   55 ++--
 2 files changed, 265 insertions(+), 272 deletions(-)

commit 045ad21921edf047ec43825a3c1b5b0dba79b6c7
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu Mar 5 20:17:11 2009 +0000

    Move BehaviourScale to CoglFixed
    
    ClutterFixed as a type is going away, superceded by CoglFixed. The
    fixed point entry points in the API should be ported to the
    CoglFixed type so that they are useful again.

 clutter/clutter-behaviour-scale.c |  278 ++++++++++++++++++-------------------
 clutter/clutter-behaviour-scale.h |   81 ++++++-----
 2 files changed, 177 insertions(+), 182 deletions(-)

commit 7bf385a06700f152018626021cd2f2367572b3a2
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu Mar 5 20:15:00 2009 +0000

    [cogl-fixed] Add a double-to-fixed conversion macro
    
    Since the conversion of a floating point value to a fixed point
    value is already done in double precision we can safely expose
    a macro that converts a double precision floating point value to
    a CoglFixed one.

 clutter/cogl/cogl-fixed.h |   15 +++++++++++++--
 1 file changed, 13 insertions(+), 2 deletions(-)

commit 4e98fc5e7931688da11be60a36c583c529ad8335
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Tue Mar 3 22:51:17 2009 +0000

    [docs] Note that grabs are evil
    
    Grabs are an entirely evil way to override the whole event delivery
    machinery that Clutter has in place.
    
    A pointer grab can be effectively replaced by a much more reliable
    ::captured-event signal handler, for instance.
    
    Sometimes, grabs are a necessary evil -- and that is why Clutter
    exposes them in the API; that should not fool anyone into thinking
    that they should be used unless strictly necessary.

 clutter/clutter-main.c |   25 +++++++++++++++++++------
 1 file changed, 19 insertions(+), 6 deletions(-)

commit c0adf4582ca41f046bfb67458ac1ca5d6d416f33
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu Feb 26 15:35:20 2009 +0000

    [docs] Clarify clutter_actor_animate() behaviour
    
    When calling clutter_actor_animate() on an actor that is being
    currently animated the default behaviour is to update the duration
    of the animation; the easing mode; update all the common properties;
    and finally add the new properties.
    
    This:
    
      clutter_actor_animate (actor, 500, CLUTTER_LINEAR,
                             "width", 100,
                             "height", 100,
                             NULL);
    
      clutter_actor_animate (actor, 250, CLUTTER_EASE_IN_CUBIC,
                             "x", 100,
                             "y", 100,
                             "height", 200,
                             NULL);
    
    Is logically equivalent to:
    
      clutter_actor_animate (actor, 250, CLUTTER_EASE_IN_CUBIC,
                             "x", 100,
                             "y", 100,
                             "width", 100,
                             "height", 200,
                             NULL);
    
    The documentation of the function should be slightly more verbose
    in describing the default behaviour.

 clutter/clutter-animation.c |   26 +++++++++++++++++++++++++-
 1 file changed, 25 insertions(+), 1 deletion(-)

commit a3839296c4311bb15091c52e59c214a6f4d33bd2
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Sat Feb 28 19:13:18 2009 +0000

    [build] Various fixes for distcheck
    
    The generation of the GObject introspection data has broken
    the distcheck phase.
    
    The location of the header and source files should always be
    depending on the $(top_srcdir) and $(srcdir) variables,
    respectively; the special handling of the COGL API inside the
    GIR generation should also take those two variables into
    account.

 clutter/Makefile.am      |  137 ++++++++++++++++++++++++----------------------
 clutter/json/Makefile.am |   22 ++++----
 2 files changed, 82 insertions(+), 77 deletions(-)

commit 4a3a3e1cf344b992b2f978e5f2676cb0957b504a
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Sat Feb 28 17:54:27 2009 +0000

    Add pkg-config file for COGL
    
    COGL should ship its own pkg-config file, obviously still pointing
    to Clutter's compiler flags and linking options, for COGL-specific
    variables that might be queried at configure time.
    
    For instance, it's easier (and less verbose) to do:
    
      PKG_CHECK_EXISTS([cogl-gl-1.0],
                       [has_gl_backend=yes],
                       [has_gl_backend=no])
    
    Than doing:
    
      AC_MSG_CHECKING([for GL support in COGL])
      cogl_backend=`$PKG_CONFIG --variable=cogl clutter-0.9`
      if test x$cogl_backend = xgl; then
        has_gl_backend=yes
        AC_MSG_RESULT([found])
      else
        has_gl_backend=no
        AC_MSG_RESULT([not found])
      fi

 .gitignore               |    1 +
 clutter/cogl/Makefile.am |   17 ++++++++++++++++-
 clutter/cogl/cogl.pc.in  |   15 +++++++++++++++
 configure.ac             |    1 +
 4 files changed, 33 insertions(+), 1 deletion(-)

commit b030756dca23594e612fcfc3aac1ba3115f5893c
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Sat Feb 28 17:19:05 2009 +0000

    [shader] Unify code paths
    
    ClutterShader contains a lot of duplication, as the vertex and fragment
    shader code paths are mostly the same.
    
    The code should be simplified by adding new internal functions that can
    be called with a value from the already present ClutterShaderType
    enumeration.
    
    In the future it'll also be possible to deprecate the current split API
    and expose the generic accessors instead.

 clutter/clutter-shader.c |  343 ++++++++++++++++++++++++++--------------------
 po/POTFILES.in           |    2 +
 2 files changed, 200 insertions(+), 145 deletions(-)

commit 7d674db9d2c960a55e332b7ec631a01db317f013
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Sat Feb 28 16:16:09 2009 +0000

    Clean up of the ClutterColor API
    
    The ClutterColor API has some inconsistencies:
    
      - the string deserialization function does not match the rest of
        the conversion function naming policy; the naming should be:
    
            clutter_color_parse()   ->      clutter_color_from_string()
    
        and the first parameter should be the ClutterColor that will
        be set from the string, not the string itself (a GDK-ism).
    
      - the fixed point API should not be exposed, especially in the
        form of ClutterFixed values
    
      - the non-fixed point HLS conversion functions do not make any
        sense. The values returned should be:
    
          hue        := range [ 0, 360 ]
          luminance  := range [ 0,   1 ]
          saturation := range [ 0,   1 ]
    
        like the current fixed point API does. Returning a value in
        the [ 0, 255 ] range is completely useless
    
      - the clutter_color_equal() should be converted for its use inside
        a GHashTable; a clutter_color_hash() should be added as well
    
      - the second parameter of the clutter_color_shade() function should
        be the shading factor, not the result (another GDK-ism). this way
        the function call can be translated from this:
    
          color.shade(out result, factor)
    
        to the more natural:
    
          color.shade(factor, out result)
    
    This somewhat large commit fixes all these issues and updates the
    internal users of the API.

 clutter/clutter-color.c                    |  592 +++++++++++++++-------------
 clutter/clutter-color.h                    |   99 +++--
 clutter/clutter-deprecated.h               |    2 +
 clutter/clutter-script.c                   |    2 +-
 doc/reference/clutter/clutter-sections.txt |   16 +-
 tests/interactive/test-behave.c            |    2 +-
 tests/interactive/test-layout.c            |    2 +-
 7 files changed, 374 insertions(+), 341 deletions(-)

commit 8a1eca72877471af08da8c1874e4b718e5640628
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Sat Feb 28 16:03:11 2009 +0000

    [cogl] Add a PANGO debug flag for CoglPango use
    
    The CoglPango code falls under the COGL "jurisdiction"; this means
    that it cannot include Clutter headers unless strictly necessary.
    
    The CoglPangoRenderer code was using the CLUTTER_NOTE() macro. Now
    that COGL has it's own COGL_NOTE() similar macro, CoglPango should
    use that and avoid including clutter-debug.h (which pulls in
    clutter-private.h which in turn pulls in clutter-actor.h).
    
    A new flag, COGL_DEBUG_PANGO, has been added to the COGL debug
    flags.

 clutter/cogl/cogl-debug.h         |    3 ++-
 clutter/cogl/common/cogl-debug.c  |    3 ++-
 clutter/pango/cogl-pango-render.c |    5 ++---
 3 files changed, 6 insertions(+), 5 deletions(-)

commit 3a4538e4f25a406d65b5956d379a696067d4cdd2
Author: Colin Walters <walters@verbum.org>
Date:   Mon Mar 9 14:17:18 2009 -0400

    Typo in clutter-win32.pc.in introduced by commit 24ce19383

 clutter/win32/clutter-win32.pc.in |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit ee6145c795abf1814297a3e3a5b01620e06b58c1
Author: Neil Roberts <neil@linux.intel.com>
Date:   Mon Mar 9 18:40:58 2009 +0000

    Set the mapped flag on the stage in the SDL and eglnative backends
    
    Bug 1493 - GL ES does not work since Jan 9 in PowerVR SGX 535, Intel
    
    The mapped flag needs to be set on the stage otherwise
    clutter_actor_queue_redraw will never queue a redraw and never draw
    anything.
    
    In these two backends there is not really a way to hide the stage so
    they both set the mapped flag immediatly when clutter_actor_show is
    called.

 clutter/eglnative/clutter-stage-egl.c |    4 ++++
 clutter/sdl/clutter-stage-sdl.c       |    4 ++++
 2 files changed, 8 insertions(+)

commit f9d996a4603bef1f52e32e99f9f69a32b7c823ba
Author: Owen W. Taylor <otaylor@redhat.com>
Date:   Fri Feb 27 13:39:53 2009 -0500

    Use COGL to establish GL state for ClutterGLXTexturePixmap
    
    Using glEnable() directly confuses COGL and can result in problems
    like subsequent pick operations not working correctly. Get the
    material for the ClutterTexture and call cogl_material_flush_gl_state()
    instead.
    
    http://bugzilla.openedhand.com/show_bug.cgi?id=1483

 clutter/glx/clutter-glx-texture-pixmap.c |   26 +++++++++-----------------
 1 file changed, 9 insertions(+), 17 deletions(-)

commit 65c5188c7e6edf4b77887234035ae6a30fca9cb1
Author: Neil Roberts <neil@linux.intel.com>
Date:   Mon Mar 9 12:28:22 2009 +0000

    [eglnative] Add -I flags for the clutter dir in the src and build dirs
    
    These are required to include the Cogl header files.

 clutter/eglnative/Makefile.am |    2 ++
 1 file changed, 2 insertions(+)

commit 67523ddc6e6714629cd3582b6bb4d9dc42740ba5
Author: Neil Roberts <neil@linux.intel.com>
Date:   Mon Mar 9 10:59:52 2009 +0000

    Fix warning in clutter-backend-sdl
    
    Removed direct use of SDL_GetError as a format string for g_set_error
    to fix a compiler warning.

 clutter/sdl/clutter-backend-sdl.c |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit 24ce19383600df952dc5b3eb6055b8851b9cbd21
Author: Colin Walters <walters@verbum.org>
Date:   Fri Mar 6 00:19:12 2009 -0500

    Bug 1491 - Fix hardcoded lib path in .pc files
    
    We should instead use @libdir@ from configure to be correct
    on multilib systems.

 clutter.pc.in                     |    6 +++---
 clutter/win32/clutter-win32.pc.in |    6 +++---
 clutter/x11/clutter-x11.pc.in     |    6 +++---
 3 files changed, 9 insertions(+), 9 deletions(-)

commit 9df3fb993c222d35171fe6067257fc17e3c3979e
Author: Øyvind Kolås <pippin@linux.intel.com>
Date:   Fri Feb 27 17:59:16 2009 +0000

    Add a warning for recursive emit_event
    
    When event delivery is invoked by synthetic events through
    clutter_do_event from inside an event handler clutter was silently
    ignoring it, this warning will hopefully help resolving some issues.

 clutter/clutter-main.c |    5 ++++-
 1 file changed, 4 insertions(+), 1 deletion(-)

commit af0726480c29ac8c327ce302a55ef4eaed757594
Author: Robert Bragg <robert@linux.intel.com>
Date:   Wed Feb 25 16:23:09 2009 +0000

    [cogl-matrix] Documents that CoglMatrix members should be considered read only
    
    In the future if we want to annotate matrices with internal flags, and add
    caching of the inverse matrix then we need to ensure that all matrix
    modifications are done by cogl_matrix API so we'd know when to dirty the
    cache or update the flags.
    
    This just adds documentation to that effect, and assuming the most likley
    case where someone would try and directly write to matrix members would
    probably be to load a constant matrix other than the identity matrix; I
    renamed cogl_matrix_init_from_gl_matrix to cogl_matrix_init_from_array to
    make it seem more general purpose.

 clutter/cogl/cogl-matrix.h           |   23 +++++++++++++++--------
 clutter/cogl/common/cogl-matrix.c    |    6 +++---
 clutter/cogl/gl/cogl.c               |    6 +++---
 clutter/cogl/gles/cogl.c             |    6 +++---
 doc/reference/cogl/cogl-sections.txt |    2 ++
 5 files changed, 26 insertions(+), 17 deletions(-)

commit 0a218a64e2730e55953deedefbaa6f62ebbf5c4a
Author: Robert Bragg <robert@linux.intel.com>
Date:   Tue Feb 24 11:33:58 2009 +0000

    [cogl-matrix] Adds padding to CoglMatrix
    
    This adds enough padding to allow us to potentially add a cache of the inverse
    matrix in the future and private flags to annotate matrices.

 clutter/cogl/cogl-matrix.h |    4 ++++
 1 file changed, 4 insertions(+)

commit b39223d8cbdb104df4a1f5791c3d4f8acd5b31d1
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu Feb 26 15:32:48 2009 +0000

    [backend] Constify font options
    
    The font options accessors in ClutterBackend only deal with const
    cairo_font_options_t values, since:
    
      - set_font_options() will copy the font options
      - get_font_options() will return a pointer to the internal
        font options
    
    Not using const in these cases makes the API confusing and might lead
    to erroneous calls to cairo_font_options_destroy().

 clutter/clutter-backend.c |   17 +++++++++++------
 clutter/clutter-backend.h |   30 +++++++++++++++---------------
 clutter/clutter-main.c    |   23 +++++++++++++----------
 3 files changed, 39 insertions(+), 31 deletions(-)

commit 83542959869374376361ae0a05b93a9aaafe472a
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Fri Jan 9 15:02:50 2009 +0000

    Intern the ClutterScriptable type name
    
    Like we do for other types, use the I_() macro to intern the
    type name during the GType registration for ClutterScriptable.

 clutter/clutter-scriptable.c |   13 ++++++++-----
 1 file changed, 8 insertions(+), 5 deletions(-)

commit 28a3cbf38e299f56f52bd9f0cff9f91e96275d23
Author: Bastian Winkler <buz@netbuz.org>
Date:   Tue Feb 24 20:07:31 2009 +0100

    Remove redundant declaration in clutter-text.h
    
    clutter-text.h declares clutter_text_get_layout twice.
    
    Signed-off-by: Emmanuele Bassi <ebassi@linux.intel.com>

 clutter/clutter-text.h |    1 -
 1 file changed, 1 deletion(-)

commit 0fc9452b034808c51980cabd99573d67d9963936
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu Feb 26 12:46:36 2009 +0000

    [build] Do not shave typelib generation
    
    Bug 1478 - typelib creation shaved out of existence
    
    Add a 'GEN' output rule for the typelib files created when
    introspection is enabled.

 clutter/Makefile.am |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit 259443b1453e5094cf7016141df39ceba65cd5cb
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu Feb 26 11:55:53 2009 +0000

    [build] Put the X11 pc dependencies in another variable
    
    If X11 comes with pkg-config files (like it should) we should not add
    those dependencies to the generic BACKEND_PC_FILES variable: that
    variable is meant only for backend-specific dependencies handled by
    pkg-config -- and Clutter supports non-X11 backends as well.
    
    The X11_PC_FILES variable will only contain X11-related dependencies,
    and will be set as part of BACKEND_PC_FILES only inside the GLX and
    EGLX backends sections.

 configure.ac |   15 ++++++++++-----
 1 file changed, 10 insertions(+), 5 deletions(-)

commit 402e2e0d82024f79c0b9b5f76056b331abec0caa
Author: Owen W. Taylor <otaylor@fishsoup.net>
Date:   Wed Feb 25 15:46:09 2009 -0500

    Fix x/y confusion for GL_TEXTURE_RECTANGLE_ARB
    
    When "denormalizing" for texture rectangles, multiple X coordinates
    by the X size and Y coordinates by the Y size.
    
    http://bugzilla.openedhand.com/show_bug.cgi?id=1479

 clutter/cogl/gl/cogl-texture.c |    4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

commit ce83007c1d140e91250d933ba9e533a00ffb9e84
Author: Neil Roberts <neil@linux.intel.com>
Date:   Thu Feb 26 10:56:42 2009 +0000

    [cogl-pango-glyph-cache] Fix compiler warning on 64-bit
    
    gcc warns about casting a pointer to a guint because it is a different
    size on 64-bit machines. However the pointer is only used as a hash so
    it doesn't matter if we lose the most significant bits. The patch
    makes it use GPOINTER_TO_UINT instead which first casts it to a gulong
    and avoids the warning.

 clutter/pango/cogl-pango-glyph-cache.c |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit 1626d6132e9bab267463b5f532567e22006771db
Author: Neil Roberts <neil@linux.intel.com>
Date:   Wed Feb 25 17:10:54 2009 +0000

    [clutter-texture] Use a GThreadPool for loading async textures
    
    Instead of creating a separate thread for each texture load, the loads
    are now queued in a thread pool which will use at most 3 textures at a
    time. This avoids the potentially large overhead of creating and
    destroying a thread for every image while still avoiding throttling
    the CPU if a large number of textures are loaded at the same time.
    
    If the load is cancelled the old code needed to join the thread which
    effectively meant it had to wait for the load to finish. With this
    model the threads are owned by the thread pool so there is no need to
    wait for them to finish. Instead, each thread is given its own thread
    data which we can use to mark the thread as aborted. Once the load is
    finished the thread will check whether it is aborted before setting
    the texture data. That way the ClutterTexture can just disown threads
    that it needs to cancel.

 clutter/clutter-texture.c |  295 ++++++++++++++++++++++++++++-----------------
 1 file changed, 184 insertions(+), 111 deletions(-)

commit 3425331cc167f029bc4b86a66d95d3e498f52514
Author: Neil Roberts <neil@linux.intel.com>
Date:   Tue Feb 24 16:44:30 2009 +0000

    [tests/tools] Don't install libdisable-npots.so
    
    The libdisable-npots library is just used as a helper as part of
    make test so it should not be installed.
    
    If noinst_* is used then automake will generate a static library but
    this won't work with LD_PRELOAD so we then need an extra custom rule
    to link that into a shared library. The custom rule uses the $(LINK)
    Makefile var which gets put in the Makefile because of the static
    library. We pass libtool a stub -rpath option which causes it to
    generate a shared library.

 tests/tools/Makefile.am |   22 ++++++++++++++++------
 1 file changed, 16 insertions(+), 6 deletions(-)

commit bff6ce414af6cc3e5d12d9eaed36ff64e5e16fc0
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Tue Feb 24 16:16:25 2009 +0000

    [media] Add sub-second resolution for the duration
    
    The duration in ClutterMedia is currently expressed in integer multiples
    of a second. This does not offer enough granularity for media playback
    that has fractionary durations -- 2.3 seconds; 1 minute, 23.4 seconds;
    1 hour, 23 minutes, 4.5 seconds; etc.
    
    The duration value should be expressed in seconds with a sub-second
    granularity; for this reason, a double should be used insted of an
    unsigned integer.
    
    The semantics haven't changed: the :duration property still exposes
    seconds.

 clutter/clutter-media.c |   14 +++++++-------
 clutter/clutter-media.h |    2 +-
 2 files changed, 8 insertions(+), 8 deletions(-)

commit dd3c760cc5ef26378ac71d9b33ed961ebc542ab8
Author: Bastian Winkler <buz@netbuz.org>
Date:   Tue Feb 24 15:58:40 2009 +0000

    [media] Fix the interface cast macro
    
    Bug 1474 - ClutterMedia interface
    
    The GET_INTERFACE() macro is still using the old type name of
    the ClutterMedia interface structure in the cast.
    
    Signed-off-by: Emmanuele Bassi <ebassi@linux.intel.com>

 clutter/clutter-media.h |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit eaf202c886293035e875c7e940fa97ee970dd046
Author: Jonathan Matthew <notverysmart@gmail.com>
Date:   Tue Feb 24 09:25:53 2009 +0000

    Declare the EnumValues for PixelFormat static
    
    Bug 1473 - CoglPixelFormat enum data must be declared static
    
    When registering an enumeration GType, the GEnumValue or GFlagsValue
    arrays must be declared static; otherwise, you get a segmentation
    fault when calling the function again.
    
    Signed-off-by: Emmanuele Bassi <ebassi@linux.intel.com>

 clutter/cogl/common/cogl-util.c |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit 3409a941a4161562e6020e47c482a6b01b7eff11
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Mon Feb 23 15:22:08 2009 +0000

    Use a dynamic array for the actors when delivering events
    
    Instead of using a fixed size array for storing the scenegraph sub-node
    during event delivery we should use a GPtrArray. The benefits are:
    
      - a smaller allocation
      - no undocumented yet binding constraint on the scenegraph size

 clutter/clutter-main.c |   35 +++++++++++++++--------------------
 1 file changed, 15 insertions(+), 20 deletions(-)

commit 64db7896dbd4286d94367fbf173bb18f1c793a70
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Mon Feb 23 15:19:11 2009 +0000

    Remove stray fixed point macro usage
    
    The CoglPango renderer is using a CLUTTER_FIXED macro, but the
    whole code has been Clutter-free for a while, now.

 clutter/pango/cogl-pango-render.c |    8 ++++----
 1 file changed, 4 insertions(+), 4 deletions(-)

commit 62ac234ca9b109c98773d2029357c110cf000aab
Author: Robert Bragg <robert@linux.intel.com>
Date:   Mon Feb 23 16:33:42 2009 +0000

    [test-vertex-buffer-contiguous] Improves the texturing test
    
    The test now explicitly reads back from the framebuffer to sanity check that
    texturing is happening as expected, and it now uses a fixed 2x2 texture instead
    of redhand.png since redhand.png doesn't have a power of two size which can
    cause the vertex buffer code to complain on hardware not supporting npot
    textures.

 tests/conform/Makefile.am                     |    7 ------
 tests/conform/test-vertex-buffer-contiguous.c |   29 +++++++++++++++++++++++--
 2 files changed, 27 insertions(+), 9 deletions(-)

commit 0bc1f36ead2909ac89e163f3592654c6ac78a112
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Mon Feb 23 13:44:03 2009 +0000

    [docs] Document envvars and command line switches
    
    Clutter uses checks on various environment variables and installs
    various command line switches. The API reference should list them
    and document them both.

 doc/reference/clutter/Makefile.am         |    6 +-
 doc/reference/clutter/clutter-docs.xml    |    2 +-
 doc/reference/clutter/running-clutter.xml |  172 +++++++++++++++++++++++++++++
 3 files changed, 177 insertions(+), 3 deletions(-)

commit 7d181636ed29d60eacd3e5a27a7a2dc06cb867c8
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Mon Feb 23 13:17:06 2009 +0000

    Make fuzzy picking a command line switch
    
    The CLUTTER_FUZZY_PICK environment variable is the last one used
    by Clutter without a corresponding command line switch.

 clutter/clutter-main.c |   21 ++++++++++++++++-----
 1 file changed, 16 insertions(+), 5 deletions(-)

commit 42fa1e035b25f195a5da8e6ac7148079db4c8080
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Mon Feb 23 13:08:59 2009 +0000

    Make disable text mipmapping a command line switch
    
    The environment variable to disable mipmapping should also be
    a command line switch, and be handled like the rest of Clutter's
    environment variables/command line switches.

 clutter/clutter-main.c |   16 +++++++++++++---
 1 file changed, 13 insertions(+), 3 deletions(-)

commit a1f0b25d142cc4f52b9d50f86441a429e5f5b263
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Mon Feb 23 12:55:01 2009 +0000

    [actor] Remove usage of ClutterFixed
    
    The ClutterFixed type and symbols are now equivalent to the native
    float type. In order to remove ambiguity and clean up the code, any
    usage of ClutterFixed and relative macros has been removed.

 clutter/clutter-actor.c |  364 +++++++++++++++++++++--------------------------
 1 file changed, 164 insertions(+), 200 deletions(-)

commit 605dfb8fd0451dd087a13cb21032a288ce5a3ea3
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Mon Feb 23 12:47:02 2009 +0000

    Add runtime debug messages for COGL
    
    Clutter is able to show debug messages written using the CLUTTER_NOTE()
    macro at runtime, either by using an environment variable:
    
      CLUTTER_DEBUG=...
    
    or by using a command line switch:
    
      --clutter-debug=...
      --clutter-no-debug=...
    
    Both are parsed during the initialization process by using the
    GOption API.
    
    COGL would benefit from having the same support.
    
    In order to do this, we need a cogl_get_option_group() function in
    COGL that sets up a GOptionGroup for COGL and adds a pre-parse hook
    that will check the COGL_DEBUG environment variable. The OptionGroup
    will also install two command line switches:
    
      --cogl-debug
      --cogl-no-debug
    
    With the same semantics of the Clutter ones.
    
    During Clutter initialization, the COGL option group will be attached
    to the GOptionContext used to parse the command line options passed
    to a Clutter application.
    
    Every debug message written using:
    
      COGL_NOTE (SECTION, "message format", arguments);
    
    Will then be printed only if SECTION was enabled at runtime.
    
    This whole machinery, like the equivalent one in Clutter, depends on
    a compile time switch, COGL_ENABLE_DEBUG, which is enabled at the same
    time as CLUTTER_ENABLE_DEBUG. Having two different symbols allows
    greater granularity.

 clutter/clutter-main.c           |   10 +++-
 clutter/cogl/cogl-debug.h        |   45 +++++++++++++++++
 clutter/cogl/cogl.h.in           |   18 ++++++-
 clutter/cogl/common/Makefile.am  |    3 +-
 clutter/cogl/common/cogl-debug.c |   98 ++++++++++++++++++++++++++++++++++++++
 clutter/cogl/gl/Makefile.am      |    4 +-
 clutter/cogl/gles/Makefile.am    |    4 +-
 configure.ac                     |    4 +-
 8 files changed, 177 insertions(+), 9 deletions(-)

commit a4c8e7847710a3818e3839224251cafe24c4ceb6
Author: Neil Roberts <neil@linux.intel.com>
Date:   Mon Feb 23 11:36:03 2009 +0000

    Add an environment variable to disable mipmapped text
    
    Mipmapped text is enabled by default in Clutter but it can cause
    problems on some drivers so it is convenient to have an environment
    variable to disable it for all apps.

 clutter/clutter-main.c |    3 ++-
 1 file changed, 2 insertions(+), 1 deletion(-)

commit 8d04fbb05eedaf54380c12fee46ffd3fa9ae61a3
Author: Robert Bragg <robert@linux.intel.com>
Date:   Sun Feb 22 15:25:00 2009 +0000

    [Cogl] Remove a debugging assert that was triggering on false positives
    
    An assert to verify there was no error when generating a buffer object
    for the vertex buffer API was being hit when running the GLES1 conformance
    tests.

 clutter/cogl/common/cogl-vertex-buffer.c |    2 --
 1 file changed, 2 deletions(-)

commit 5e956a88b822ce9d9eecbd432a0141375bed5ab6
Author: Robert Bragg <robert@linux.intel.com>
Date:   Thu Feb 19 09:20:20 2009 +0000

    [cogl-material] Always glBindTexture when flushing material state
    
    Bug #1457 - Creating a new texture messes up the cogl material state
                cache; reported by Neil Roberts
    
    We still don't have caching of bound texture state so we always have to
    re-bind the texture when flushing the GL state of any material layers.

 clutter/cogl/common/cogl-material.c |   42 +++++++++++++++++++----------------
 1 file changed, 23 insertions(+), 19 deletions(-)

commit d13b9de2e27d3db21f4515bf579927df5b42c330
Author: Robert Bragg <robert@linux.intel.com>
Date:   Thu Feb 19 09:01:18 2009 +0000

    [Cogl] Fixes automatic handling of the GL blend enable state.
    
    Bug #1460 - Handling of flags in cogl_material_set_color
    
    Cogl automatically enables/disables blending based on whether the source color
    has an alhpa < 1.0, or if any textures with an alpha component are in use, but
    it wasn't doing it quite right.
    
    At the same time I removed some of the dirty flags which on second thought
    are nothing more than micro-optimsations that only helped clutter the code.
    
    thanks to Owen Taylor for reporting the bug

 clutter/cogl/common/cogl-material-private.h |   10 ++--
 clutter/cogl/common/cogl-material.c         |   78 ++++++++++-----------------
 clutter/cogl/gl/cogl-context.c              |    1 -
 clutter/cogl/gles/cogl-context.c            |    1 -
 4 files changed, 31 insertions(+), 59 deletions(-)

commit 34e53736edb3579822ef36f39cce42ca7dc87d70
Author: Robert Bragg <robert@linux.intel.com>
Date:   Wed Feb 18 18:54:54 2009 +0000

    [Cogl] the cogl_get_*_matrix functions now work with CoglMatrix types
    
    Since the CoglMatrix type was added for supporting texture matrices recently
    it made sense to be consistent accross the Cogl API and use the Cogl type
    over the GL style GLfloat m[16] arrays.

 README                                |    3 +
 clutter/clutter-actor.c               |  117 +++++++++++----------------------
 clutter/cogl/cogl-matrix.h            |   36 ++++++++++
 clutter/cogl/cogl.h.in                |   14 ++--
 clutter/cogl/common/cogl-clip-stack.c |   14 ++--
 clutter/cogl/common/cogl-matrix.c     |   46 ++++++++-----
 clutter/cogl/gl/cogl.c                |   27 +++++---
 clutter/cogl/gles/cogl.c              |   27 +++++---
 8 files changed, 160 insertions(+), 124 deletions(-)

commit 4af0717b0022b58797bfbd1df12917840c3fb9c3
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Sat Feb 21 13:47:02 2009 +0000

    [ignore] Update with the introspection files

 .gitignore |    4 ++++
 1 file changed, 4 insertions(+)

commit 82f83ffbfb7c8ea63d04e0b0d655bc251abf4a66
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Sat Feb 21 13:44:14 2009 +0000

    [build] Move all the compiler flags to AM_CFLAGS
    
    The INCLUDES directive should only contain pre-processor flags, since
    we're passing it also to the introspection scanner.
    
    Using AM_CFLAGS for compiler flags, like debug flags and maintainer
    flags, is more indicated.

 clutter/Makefile.am |    4 +---
 1 file changed, 1 insertion(+), 3 deletions(-)

commit f4df307ddd6e0c977c57aaba1b1e4adfa143c1b0
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Fri Feb 20 15:39:32 2009 +0000

    [backend] Update the viewport when updating the GL context
    
    Bug 1442 - multistage, same-window resize events invalidate stage
    
    When ensuring that the GL context is attached to the correct
    ClutterStage we need to set the SYNC_MATRICES flag on the stage
    itself. This is needed in case the size of the new stage does
    not match the size of the old -- thus requiring a call to
    glViewport() when the paint cycle starts.

 clutter/clutter-backend.c |   11 +++++++++++
 1 file changed, 11 insertions(+)

commit fa996734cff073a8acb7adb1d758059be25cb025
Author: Neil Roberts <neil@linux.intel.com>
Date:   Fri Feb 20 16:37:20 2009 +0000

    [cogl-gles2-wrapper] Actually call glActiveTexture
    
    cogl_wrap_glActiveTexture needs to call the GL version of
    glActiveTexture otherwise the subsequent calls to glBindTexture will
    all be using texture unit 0. This fixes test-cogl-multitexture.

 clutter/cogl/gles/cogl-gles2-wrapper.c |    2 ++
 1 file changed, 2 insertions(+)

commit b0df99fbad39b56bbe65b61063d30c3013debd0f
Author: Neil Roberts <neil@linux.intel.com>
Date:   Fri Feb 20 15:56:57 2009 +0000

    [cogl-gles2-wrapper] Convert texture unit settings to be a static sized array
    
    Previously the texture unit settings were stored in growable GArrays
    and every time a new texture unit was encountered it would expand the
    arrays. However the array wasn't copied when stored in a
    CoglGles2WrapperSettings struct so all settings had the same
    array. This meant that it wouldn't detect that a different program is
    needed if a texture unit is disabled or enabled.
    
    The texture unit settings arrays are all now a fixed size and the
    enabledness of each unit is stored in a bit mask. Therefore the
    settings can just be copied around by assignment as before.
    
    This puts a limit on the number of texture units accessible by Cogl
    but I think it is worth it to make the code simpler and more
    efficient. The material API already poses a limit on the number of
    texture units it can use.

 clutter/cogl/gles/cogl-gles2-wrapper.c |  444 +++++++++++++++-----------------
 clutter/cogl/gles/cogl-gles2-wrapper.h |   36 +--
 2 files changed, 229 insertions(+), 251 deletions(-)

commit 21aa09748c95912de5f32fdaa84183c3e8b0f412
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Fri Feb 20 14:39:51 2009 +0000

    Add build machinery for gobject-introspection data
    
    configure.ac: Check for gobject-introspection
    
    build/introspection.m4: Include the file that defines the
    GOBJECT_CHECK_INTROSPECTION m4 macro in case we want to disable
    the introspection data generation.
    
    clutter/json/Makefile.am: Build the .gir for "ClutterJson"
      (json-glib as part of the Clutter library)
    
    clutter/Makefile.am: Build the .gir for clutter, compile the
      Clutter and ClutterJson girs into typelibs, and install them.
      Also move GCC_FLAGS from $(INCLUDES) to $(AM_CFLAGS) since it includes
      non-preprocessor flag like -Wall.
    
    See also:
    
      http://bugzilla.openedhand.com/show_bug.cgi?id=1450
    
    Based on a patch by: Owen W. Taylor <otaylor@fishsoup.net>
    
    Signed-off-by: Emmanuele Bassi <ebassi@linux.intel.com>

 build/autotools/Makefile.am      |    1 +
 build/autotools/introspection.m4 |   88 ++++++++++++++++++++++++++++++++++++++
 clutter/Makefile.am              |   61 +++++++++++++++++++++++++-
 clutter/json/Makefile.am         |   24 +++++++++++
 configure.ac                     |    4 ++
 5 files changed, 177 insertions(+), 1 deletion(-)

commit c5afd98416f9c9299eaedf21a4e16f06f1b52418
Author: Owen W. Taylor <otaylor@fishsoup.net>
Date:   Mon Feb 16 19:25:20 2009 -0500

    Add gobject-introspection annotations
    
    Add annotations such as (transfer-none) (out) (element-type ClutterActor),
    and so forth to the doc comments as appropriate.
    
    The annotations added here are a combination of the annotations previously
    in gir-repository for Clutter and annotations found in a review of all
    return values with that were being parsed with a transfer of "full".
    
    http://bugzilla.openedhand.com/show_bug.cgi?id=1452
    
    Signed-off-by: Emmanuele Bassi <ebassi@linux.intel.com>

 clutter/clutter-actor.c          |   32 ++++++++++++++++----------------
 clutter/clutter-alpha.c          |    2 +-
 clutter/clutter-animation.c      |   24 +++++++++++++-----------
 clutter/clutter-backend.c        |   10 +++++-----
 clutter/clutter-behaviour-path.c |    2 +-
 clutter/clutter-behaviour.c      |    8 ++++----
 clutter/clutter-binding-pool.c   |    8 ++++----
 clutter/clutter-child-meta.c     |    4 ++--
 clutter/clutter-clone.c          |    2 +-
 clutter/clutter-color.c          |   20 ++++++++++----------
 clutter/clutter-container.c      |   23 ++++++++++++-----------
 clutter/clutter-event.c          |    6 +++---
 clutter/clutter-group.c          |    2 +-
 clutter/clutter-interval.c       |    8 ++++----
 clutter/clutter-main.c           |   32 ++++++++++++++++++--------------
 clutter/clutter-model.c          |   32 ++++++++++++++++----------------
 clutter/clutter-path.c           |    2 +-
 clutter/clutter-score.c          |   13 +++++++------
 clutter/clutter-script.c         |    8 ++++----
 clutter/clutter-shader-types.c   |    8 ++++----
 clutter/clutter-stage-manager.c  |   12 ++++++------
 clutter/clutter-stage.c          |    6 +++---
 clutter/clutter-text.c           |    7 +++----
 clutter/clutter-timeline.c       |    6 +++---
 clutter/json/json-array.c        |    8 ++++----
 clutter/json/json-node.c         |    6 +++---
 clutter/json/json-object.c       |   11 ++++++-----
 clutter/json/json-parser.c       |    4 ++--
 28 files changed, 157 insertions(+), 149 deletions(-)

commit 1d68dcab1f341e17e88c62d555d7f072aa66d875
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Fri Feb 20 12:01:32 2009 +0000

    [docs] Rename cogl-docs from sgml to xml
    
    The cogl-docs.sgml file has always been XML, so it's only fitting that
    we actually call it cogl-docs.xml.

 doc/reference/cogl/Makefile.am    |    2 +-
 doc/reference/cogl/cogl-docs.sgml |  106 -------------------------------------
 doc/reference/cogl/cogl-docs.xml  |  106 +++++++++++++++++++++++++++++++++++++
 3 files changed, 107 insertions(+), 107 deletions(-)

commit 255faf602f7aa2a0c9add3e4200dc21c2d77494b
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Fri Feb 20 12:00:41 2009 +0000

    [docs] Add the 1.0 symbols index
    
    Add the index of symbols available since 1.0 to the Clutter
    API reference.

 doc/reference/clutter/clutter-docs.xml |    4 ++++
 1 file changed, 4 insertions(+)

commit 6b2c8f68e0298ae9382de1b31720bbb5c7cd58ac
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Fri Feb 20 11:58:04 2009 +0000

    [docs] Use the --name-space option
    
    Now that we depend on gtk-doc 1.11 we can use the --name-space
    command line option for the mkdb utility.

 doc/reference/clutter/Makefile.am |    2 +-
 doc/reference/cogl/Makefile.am    |    2 +-
 2 files changed, 2 insertions(+), 2 deletions(-)

commit 38faebf7e9993bc392bb8ebe0ede09ffce5b23ee
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Fri Feb 20 11:55:54 2009 +0000

    [docs] Require gtk-doc 1.11
    
    The new stable release of gtk-doc provides the --name-space
    option for the mkdb utility. This option allows to specify a
    namespace for the symbols that will get stripped, so that we
    don't get a symbols index containing only "C".

 configure.ac |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit 3bfbcedec8c0426406d52d073131feeeed560f32
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Fri Feb 20 11:39:47 2009 +0000

    Do not use GL types in Clutter headers
    
    Bug 1451 - clutter_value_get_shader_matrix() return value
    
    The return value of the get_shader_matrix() function should be
    gfloat, not GLfloat.

 clutter/clutter-shader-types.h |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit 181610604738918d5e0aff91a353047c3a60607d
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Fri Feb 20 11:36:54 2009 +0000

    [timeline] Set the n_markers out paramater
    
    Bug 1464 - clutter_timeline_list_markers should set n_markers=0 when
               there are no markers
    
    If no markers are registered and we bail out we should also set the
    n_markers out parameter to 0 so that code checking the number of
    markers will still work.

 clutter/clutter-timeline.c |    3 +++
 1 file changed, 3 insertions(+)

commit effbbe2e1e4205927f7f4f588eeea52f3940a5ce
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Fri Feb 20 11:17:52 2009 +0000

    [path] Do not accept NULL descriptions
    
    Bug 1465 - clutter_path_parse_description should check p==NULL
    
    When accepting a stringified path description, ClutterPath methods
    and the parser should not accept NULL or empty strings.

 clutter/clutter-path.c |   10 ++++++++--
 1 file changed, 8 insertions(+), 2 deletions(-)

commit 96317854c8ed385b2091ede209915e90e8a0044c
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Tue Feb 10 18:05:21 2009 +0000

    [behaviour] Do not notify empty behaviours
    
    If a behaviour does not have actors associated to it then it should
    not invoke the ::alpha_notify() implementation.

 clutter/clutter-behaviour.c |    4 ++++
 1 file changed, 4 insertions(+)

commit 97431b46700fbbe966f33fae13f9728d77cb2687
Author: Neil Roberts <neil@linux.intel.com>
Date:   Fri Feb 20 11:07:23 2009 +0000

    Replaced ClutterFixed constants in color_{darken,lighten} with float
    
    Bug 1463 - clutter_color_lighten(darken) unexpected because of
               ClutterFixed=>float
    
    These two functions contained ClutterFixed constants represented as
    integers which are no longer valid since the cogl-float branch
    merge. They are now converted to ClutterFixed from float constants
    using CLUTTER_FLOAT_TO_FIXED (which is now a no-op).
    
    Thanks to Zhang Wei for reporting.

 clutter/clutter-color.c |    6 ++----
 1 file changed, 2 insertions(+), 4 deletions(-)

commit f4222c3cfce7ff1214aeac27a77b33c22549f8e6
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu Feb 19 17:24:06 2009 +0000

    [build] Do not overwrite BUILT_SOURCES
    
    The conformance test suite Makefile template already defines the
    BUILT_SOURCES variable, so we need to append redhand.png to it.

 tests/conform/Makefile.am |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit 5643a47cb6ee85a3f4ec93e58582ddf6a6e34d24
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu Feb 19 17:15:04 2009 +0000

    [build] Fix the ChangeLog generation rule
    
    The ChangeLog should only be generated by dist-hook and as a temporary
    file to avoid overwriting the stub we use to direct people to the
    commit log when cloning the repository.
    
    When generated, the ChangeLog should be copied inside the distdir so
    that the autotools will not freak out.

 Makefile.am |   61 +++++++++++++++++++++++------------------------------------
 1 file changed, 24 insertions(+), 37 deletions(-)

commit 01cf52c44c630d92b7b896b8365dafbc5ee49743
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu Feb 19 17:07:09 2009 +0000

    [build] Update the EXTRA_DIST list
    
    Remove the files we don't ship or have, to avoid distcheck failing.

 build/autotools/Makefile.am |   19 ++++++++-----------
 1 file changed, 8 insertions(+), 11 deletions(-)

commit d0ae6b421cb3f2b6f69901c80da5c4b71f09efe5
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu Feb 19 17:06:25 2009 +0000

    [docs] Update build for COGL API reference
    
    We need to initialize the type system for gtk-doc-scan, now that
    COGL exposes GTypes.

 doc/reference/cogl/Makefile.am |    4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

commit 5123608e2296b90f68d4634b2b518101c574e43d
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu Feb 19 17:02:12 2009 +0000

    [build] Reference the headers with their full path
    
    Do not assume locality of the files, but use their whole path.

 clutter/x11/Makefile.am |    4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

commit b72b6e88f70a1839bb5eeb50a3b98f3335830696
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu Feb 19 17:00:22 2009 +0000

    [build] Show pkg-config file being generated
    
    The current Makefile hides the console messages for the pkg-config
    files generated from the clutter.pc file. We should show them,
    instead.

 Makefile.am |    4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

commit c229de8dde3e448a5c9619bde720f23665a17f4d
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu Feb 19 16:51:37 2009 +0000

    [tests] Add TEST_CONFORM_TODO macro
    
    The TEST_CONFORM_TODO macro is a simple placeholder macro that
    adds the test function to the "/todo" namespace and skips the
    test.
    
    It can be used for tests that are known to fail because of bugs
    that haven't been fixed yet, or because of features not yet
    implemented.

 tests/conform/test-conform-main.c |    8 ++++++++
 1 file changed, 8 insertions(+)

commit 1ead85f6f63ac52bbef1a37cbe1aa934e8e6ddcb
Author: Neil Roberts <neil@linux.intel.com>
Date:   Thu Feb 19 17:14:00 2009 +0000

    [tests/conform] Copy in redhand.png
    
    test-vertex-buffer-configuous now needs redhand.png so it should be
    copied in to the build directory. This is copied from similar code in
    the tests/interactive Makefile.

 tests/conform/Makefile.am |    7 +++++++
 1 file changed, 7 insertions(+)

commit 84ecb5081f2e30d43880832a7d632a694400f9f6
Author: Øyvind Kolås <pippin@linux.intel.com>
Date:   Thu Feb 19 15:44:16 2009 +0000

    Bail early in clutter_texture_paint if opacity == 0
    
    This causes clutter to skip all the GL work of state changes and
    texturing if the opacity was 0. This is done in ClutterTexture and not
    ClutterActor to ensure that pre and post paint signals work correctly.
    Other expensive actors should be doing the same thing.

 clutter/clutter-texture.c |   12 ++++++++++--
 1 file changed, 10 insertions(+), 2 deletions(-)

commit ef7df4b736b56c2f503b5e2d7c069efa0cacd79a
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu Feb 19 15:01:33 2009 +0000

    [docs] Update the sections file
    
    The newly added symbols should also be added to the section file.
    
    The CairoTexture section was referenced twice.

 doc/reference/clutter/clutter-sections.txt |   42 ++++++----------------------
 1 file changed, 9 insertions(+), 33 deletions(-)

commit 3009d029ba6ee1514e2ba521ebf9b28f5477de65
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu Feb 19 15:00:23 2009 +0000

    Remove type functions for removed types
    
    The CoglHandle wrapper GTypes have been removed in commit a0800b44
    so we can safely remove the declarations.

 clutter/clutter-texture.h |    2 --
 1 file changed, 2 deletions(-)

commit cf48935cf5a954e627f8f84eb5c47d8edc3c8e54
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu Feb 19 14:57:43 2009 +0000

    [build] Pass the -s switch to cmp
    
    The call to "cmp" to compare a built file with its current version
    should use the -s (silent) command line switch. This avoids a ugly
    message on the console when building Clutter the first time.

 clutter/Makefile.am     |    2 +-
 clutter/x11/Makefile.am |    6 +++---
 2 files changed, 4 insertions(+), 4 deletions(-)

commit 4aecece48d94b32ec482487a55d5d30042c83c99
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu Feb 19 14:56:07 2009 +0000

    [docs] Add a missing "return" annotation
    
    The documentation for the get_anchor_point_gravity() method is
    missing the "Return value:" section.

 clutter/clutter-actor.c |    2 ++
 1 file changed, 2 insertions(+)

commit 9bdbe8a06a66a44b06bf6b04ea24604cda0f342e
Merge: c18e756 3794324
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu Feb 19 14:42:40 2009 +0000

    Merge branch 'build-enhancements'
    
    * build-enhancements:
      [build] Fix dist for the newly introduced m4 macro directory
      [build] Fix interaction between shave, gtk-doc and libtool 1.x
      [build] Add dolt
      [build] Beautify autotools' output
      [gitignore] update gitignore files for tests/

commit c18e7562672061e2c7a7e7035108fa9f515ec830
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu Feb 19 13:44:29 2009 +0000

    [docs] Clarify the set_cogl_texture() documentation
    
    When setting the COGL texture handle for a ClutterTexture the
    texture will be set as the first layer of the material used
    by the ClutterTexture. The documentation should clarify this
    point.

 clutter/clutter-texture.c |   13 +++++++++----
 1 file changed, 9 insertions(+), 4 deletions(-)

commit a0800b44ad81861539264ddd0ff3297b29980d46
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu Feb 19 12:05:20 2009 +0000

    [texture] Use COGL_TYPE_HANDLE for the handle properties
    
    The :texture and :material properties of ClutterTexture use a
    Clutter-provided GType shielding from CoglHandle. Since CoglHandle
    now has a GType we can use COGL_TYPE_HANDLE instead.
    
    This commit also removes the conditional compilation of the
    :material property, as it makes little sense now that the
    Materials API has landed.

 clutter/clutter-texture.c |   51 ++++++---------------------------------------
 clutter/clutter-texture.h |    3 ---
 2 files changed, 6 insertions(+), 48 deletions(-)

commit 3c073d82c79c6d2c109d14c1b44d8c4c707c2bb6
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu Feb 19 12:02:42 2009 +0000

    [cogl] Provide GTypes for COGL types
    
    COGL types should be registered inside the GType system, for
    bindings and type checking inside properties and signals.
    
    CoglHandle is a boxed type with a ref+unref semantics; slightly evil
    from a bindings perspective (we cannot associate custom data to it),
    but better than nothing.
    
    The rest of the exposed types are enumerations or bitmasks.

 clutter/cogl/cogl-types.h       |   21 ++++-
 clutter/cogl/common/cogl-util.c |  175 +++++++++++++++++++++++++++++++++++++++
 2 files changed, 194 insertions(+), 2 deletions(-)

commit 63ae25972e5393dd0252db3702fa9d675fe41e25
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu Feb 19 11:55:54 2009 +0000

    [cogl] Add cogl_is_material to cogl-material.h
    
    The COGL_DEFINE_HANDLE macro generates a cogl_is_<type> function
    as well, to check whether a CoglHandle opaque pointer is of type
    <type>.
    
    The handle for CoglMaterial does not export cogl_is_material() in
    its installed header.

 clutter/cogl/cogl-material.h         |   11 ++++++++++-
 doc/reference/cogl/cogl-sections.txt |    1 +
 2 files changed, 11 insertions(+), 1 deletion(-)

commit 3794324e8b6deef5821e4534beda57acfa901a4a
Author: Damien Lespiau <damien.lespiau@gmail.com>
Date:   Thu Feb 19 10:59:50 2009 +0000

    [build] Fix dist for the newly introduced m4 macro directory

 Makefile.am                 |    4 ++--
 build/autotools/Makefile.am |    1 +
 2 files changed, 3 insertions(+), 2 deletions(-)

commit 9787660351c60bb684180b44a998ea847a1bdca1
Author: Damien Lespiau <damien.lespiau@gmail.com>
Date:   Thu Feb 19 10:47:38 2009 +0000

    [build] Fix interaction between shave, gtk-doc and libtool 1.x
    
    gtk-doc.make does not specify --tag=CC when invoking libtool, letting
    it decide which tag to use.  Something that fails with libtool 1.x and
    when having CC set to funny things.

 autogen.sh |    8 ++++++++
 1 file changed, 8 insertions(+)

commit 5bdcfd288cbd20a88e4ee2a37602d51abc67baf3
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Wed Feb 18 18:45:58 2009 +0000

    Initialize a variable to avoid warnings
    
    The gl_mode variable was not initialized, and the compiler complained
    when using the anal-retentive compiler flags.

 clutter/cogl/gl/cogl.c |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit a86b9834d3c3dd7e83378a120ff53cb179b4e1fc
Author: Neil Roberts <neil@linux.intel.com>
Date:   Wed Feb 18 17:57:17 2009 +0000

    [ClutterBehaviourRotate] Fix up some breakage from the cogl-float branch merge
    
    The rotation angle calculated in clutter_behaviour_rotate_alpha_notify
    gets applied to each actor using clutter_behaviour_actors_foreach. The
    angle is a ClutterFixed value. Before the cogl float branch merge it
    was stuffed into a gpointer using GPOINTER_TO_UINT. The pointer was
    then converted back to a uint and cast to a ClutterFixed which worked
    out fine even for negative numbers.
    
    After the cogl-float merge the angle is effectively a gfloat. This
    gets cast to a uint and stored in a pointer and converted back to a
    float via a uint at the other end. However this fails for negative
    numbers because a uint -> float conversion can't take advantage of
    overflow to preserve the sign so you end up with a large number.
    
    It also had the side effect that it only rotated in whole degrees.
    
    This commit fixes the problem by just passing the ClutterFixed value
    inside a closure struct instead of trying to stuff it into a pointer.

 clutter/clutter-behaviour-rotate.c |   24 ++++++++++++++----------
 1 file changed, 14 insertions(+), 10 deletions(-)

commit 21768fb95751961cfa60abbc8a71d8e235798f10
Author: Damien Lespiau <damien.lespiau@gmail.com>
Date:   Tue Feb 17 15:05:03 2009 +0000

    [build] Add dolt
    
    From the homepage (http://dolt.freedesktop.org): Dolt provides a drop-in
    replacement for libtool that significantly decreases compile times on
    the platforms it supports.

 .gitignore              |    2 +
 build/autotools/dolt.m4 |  178 +++++++++++++++++++++++++++++++++++++++++++++++
 configure.ac            |    1 +
 3 files changed, 181 insertions(+)

commit 8eec75efded2269a2b067175b2bdade03a022905
Author: Damien Lespiau <damien.lespiau@gmail.com>
Date:   Tue Feb 17 14:56:35 2009 +0000

    [build] Beautify autotools' output
    
    Use shave (http://git.lespiau.name/cgit/shave) to make compilation more
    human friendly.

 Makefile.am                      |    2 ++
 build/Makefile.am                |    1 +
 build/autotools/.gitignore       |    8 +++++
 build/autotools/Makefile.am      |   11 ++++++
 build/autotools/shave-libtool.in |   70 ++++++++++++++++++++++++++++++++++++++
 build/autotools/shave.in         |   70 ++++++++++++++++++++++++++++++++++++++
 build/autotools/shave.m4         |   36 ++++++++++++++++++++
 clutter/Makefile.am              |   13 ++++---
 configure.ac                     |    7 ++++
 tests/conform/Makefile.am        |    2 +-
 10 files changed, 214 insertions(+), 6 deletions(-)

commit 468b6210b4c9b1a952553e7c6447c1db8a4b7037
Author: Damien Lespiau <damien.lespiau@gmail.com>
Date:   Tue Feb 17 14:02:55 2009 +0000

    [gitignore] update gitignore files for tests/

 .gitignore       |    1 +
 tests/.gitignore |   49 +++++++++++++++++++++++++++++++++++++++++++++++++
 2 files changed, 50 insertions(+)

commit deed85035fc153287f73de46fdbac0c537a93a27
Author: Neil Roberts <neil@linux.intel.com>
Date:   Wed Feb 18 17:26:10 2009 +0000

    Allow rotation angle properties to be negative
    
    Bug 1167 - clutter_effect_rotate improperly clamps negative angles
    
    The rotation angle properties had a minimum value of 0.0 but the
    rotation works fine with a negative value so the limitation is
    unnecessary. This makes rotation using the ClutterAnimation API more
    flexible because it was previously not possible to rotate
    counter-clockwise from the 0.0 position.

 clutter/clutter-actor.c |    6 +++---
 1 file changed, 3 insertions(+), 3 deletions(-)

commit 99248fa90f0b1418129e02bba8bd9bd5bdf18aea
Author: Neil Roberts <neil@linux.intel.com>
Date:   Wed Feb 18 16:41:01 2009 +0000

    Override the opacity when painting a clone instead of combining
    
    When rendering a clone before this commit the clone's opacity was
    combined with the opacity of the source but this is not usually the
    desired effect. Instead the clone's opacity (combined with its
    parents) should completely override the opacity of the source.

 clutter/clutter-actor.c |    6 +++---
 1 file changed, 3 insertions(+), 3 deletions(-)

commit c0672b66834a8457976c451b42e99982a9357563
Author: Tomas Frydrych <tf@linux.intel.com>
Date:   Wed Feb 18 16:54:18 2009 +0000

    [x11] Only update cached last event time if we have a real timestamp.
    
    Ignore the timestamp if it is set to CurrentTime (e.g., when the last event
    did not carry a timestamp).

 clutter/x11/clutter-event-x11.c |    3 ++-
 1 file changed, 2 insertions(+), 1 deletion(-)

commit d2fe1fda3154a5dcfb72d154ec9b1211a2199444
Author: Robert Bragg <robert@linux.intel.com>
Date:   Wed Feb 18 16:06:11 2009 +0000

    [cogl-color.c] #include fix for the cogl_set_source_color prototype
    
    cogl.h wasn't being included so we got a compiler warning

 clutter/cogl/common/cogl-color.c |    1 +
 1 file changed, 1 insertion(+)

commit 03018f0c2a88f56ac02058a46fe226df0d33bdbf
Author: Robert Bragg <robert@linux.intel.com>
Date:   Thu Feb 12 13:23:20 2009 +0000

    [Cogl] Renames cogl_paint_init to cogl_clear and adds a cogl_disable_fog function
    
    cogl_paint_init was a bit too miscellaneous; it mainly cleared the color, depth
    and stencil buffers but arbitrarily it also disabled fogging and lighting.
    
    It no longer disables lighting, since we know Cogl never enables lighting and
    disabling of fog is now handled with a seperate function.
    
    Since I noticed cogl_set_fog was taking a density argument documented as
    "Ignored" I've also added a mode argument to cogl_set_fog which exposes the
    exponential fog modes which can make use of the density.

 README                               |    7 +
 clutter/clutter-main.c               |    3 +-
 clutter/clutter-stage.c              |    5 +-
 clutter/clutter-texture.c            |    5 +-
 clutter/cogl/cogl.h.in               |  245 +++++++++++++++++++++-------------
 clutter/cogl/gl/cogl.c               |   27 +++-
 clutter/cogl/gles/cogl.c             |   32 ++++-
 doc/reference/cogl/cogl-sections.txt |   29 ++--
 8 files changed, 234 insertions(+), 119 deletions(-)

commit 2b5a72dde5d6e33bed7935755a10905bcc2b0c23
Author: Robert Bragg <robert@linux.intel.com>
Date:   Thu Feb 12 11:08:00 2009 +0000

    [Cogl] cogl_clip_{set*,unset} renamed to cogl_clip_{push*,pop}
    
    This is so they self document the stacking semantics of the cogl clip API

 README                                |    3 +++
 clutter/clutter-actor.c               |   10 +++++-----
 clutter/clutter-text.c                |    8 ++++----
 clutter/cogl/cogl.h.in                |   28 ++++++++++++++--------------
 clutter/cogl/common/cogl-clip-stack.c |   22 +++++++++++-----------
 doc/reference/cogl/cogl-sections.txt  |    8 ++++----
 tests/interactive/test-clip.c         |   12 ++++++------
 7 files changed, 47 insertions(+), 44 deletions(-)

commit 57ffcdf014d3a1be3fc2ee6b85aa03b9a813dbdc
Author: Øyvind Kolås <pippin@linux.intel.com>
Date:   Tue Feb 17 12:00:08 2009 +0000

    Added a mutex for clutter asynchronous textures threads.
    
    Bug #1453 - Asynchronous texture loading can starve cpu.
    
    Add a mutex that is held in the loader threads during the image
    decoding. We were spawning and starting a thread for each asynchronously
    loaded texture. This can cause cpu / memory starvation when many pixbuf
    loaders allocate their temporary memory at the same time.
    
    Also added -fno-strict-aliasing to MAINTAINER_CFLAGS in configure.ac
    to avoid incorrect warnings caused by the static mutex code.

 clutter/clutter-texture.c |   18 +++++++++++++++++-
 configure.ac              |    2 +-
 2 files changed, 18 insertions(+), 2 deletions(-)

commit 2fe0228f92e5511df64dd010eb5ae5685a551631
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Wed Feb 18 09:45:26 2009 +0000

    [x11] Add backend-specific get_current_event_time()
    
    The clutter_get_current_event_time() function will return the event
    timestamp coming from a Clutter event. Clutter might synthesize or
    throttle events, so the function cannot be used when dealing with
    backend-specific use cases.
    
    The X11 backend is the only backend supported by Clutter that makes
    use of timestamps, so it's altogether fitting that it should come
    with a specific function to deal with the timestamps of the X events.

 clutter/x11/clutter-backend-x11.c |    2 ++
 clutter/x11/clutter-backend-x11.h |    1 +
 clutter/x11/clutter-event-x11.c   |   67 ++++++++++++++++++++++++++++++++++++-
 clutter/x11/clutter-x11.h         |    2 ++
 4 files changed, 71 insertions(+), 1 deletion(-)

commit 747233a8ace1a35233038fc55b0a8594fb1f4fea
Author: Neil Roberts <neil@linux.intel.com>
Date:   Mon Feb 16 16:34:31 2009 +0000

    [clutter-main] Fix the input device passed to set_motion_last_actor
    
    In generate_enter_leave_events it passes the device pointer from the
    event to set_motion_last_actor but it was reading it directly from
    event->motion.device. However the function is also used to process
    button events so it would read from the wrong location in this case.
    
    The device location in the union happened to be in the same place as
    the click_count field of ClutterButtonEvent so it only mattered if the
    click_count is non-zero. The X11 backend doesn't set this but
    Clutter-GTK does so it was causing a crash.

 clutter/clutter-main.c |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit 1fcddb3b100d2d9d4e907f982988b4a15385d652
Author: Neil Roberts <neil@linux.intel.com>
Date:   Mon Feb 16 12:46:00 2009 +0000

    [win32] Track mouse leave messages
    
    Bug 1178 - No enter / leave events on actors when pointer leaves the
               stage window
    
    This patch causes the Win32 backend to emit CLUTTER_LEAVE events when
    a WM_MOUSELEAVE event is received in the same way that f505536 does
    for the X11 backend.
    
    Windows will only send WM_MOUSELEAVE events if they are previously
    requested using TrackMouseEvent so this needs to be called whenever
    the mouse enters the window. There is no WM_MOUSELEAVE event but we
    can detect when the mouse enters because we get a WM_MOUSEMOVE event.

 clutter/win32/clutter-event-win32.c |   25 +++++++++++++++++++++++++
 clutter/win32/clutter-stage-win32.h |    1 +
 2 files changed, 26 insertions(+)

commit 9e10dc402f4402f65d9ecfc0714b4a00c8bccf8e
Author: Neil Roberts <neil@linux.intel.com>
Date:   Mon Feb 16 12:42:08 2009 +0000

    Call glActiveTexture and glClientActiveTexture through cogl_get_proc_address
    
    All GL functions that are defined in a version later than 1.1 need to
    be called through cogl_get_proc_address because the Windows GL DLL
    does not export them to directly link against.

 clutter/cogl/common/cogl-material.c      |    5 +++++
 clutter/cogl/common/cogl-vertex-buffer.c |    2 ++
 clutter/cogl/gl/cogl-context.c           |    2 ++
 clutter/cogl/gl/cogl-context.h           |    3 +++
 clutter/cogl/gl/cogl-defines.h.in        |    8 ++++++++
 clutter/cogl/gl/cogl-texture.c           |    2 ++
 clutter/cogl/gl/cogl.c                   |   12 +++++++++---
 clutter/cogl/gles/cogl-texture.c         |    2 ++
 8 files changed, 33 insertions(+), 3 deletions(-)

commit 5d6a11e1bfad43d20b3a2cc4d8dbda09200c6cb8
Author: Neil Roberts <neil@linux.intel.com>
Date:   Thu Feb 12 17:21:18 2009 +0000

    Emit CLUTTER_LEAVE events when the pointer leaves the stage
    
    Bug 1178 - No enter / leave events on actors when pointer leaves the
               stage window
    
    The patch is mostly thanks to Johan Bilien with small modifications
    based on suggestions by Owen Taylor.
    
    The X11 backend now listens for enter and leave notifications. Leave
    notifications get translated directly to a CLUTTER_LEAVE
    event. Clutter can detect these special events because the source
    actor is NULL in which case it sets the source actor to the last known
    actor and then sets the last known actor to NULL.
    
    Enter notifications just get translated to CLUTTER_MOTION events which
    will cause Clutter to generate an enter event through the usual code
    path.

 clutter/clutter-main.c           |   68 +++++++++++++++++++++++++++-----------
 clutter/eglx/clutter-stage-egl.c |    2 ++
 clutter/glx/clutter-stage-glx.c  |    2 ++
 clutter/x11/clutter-event-x11.c  |   18 ++++++++++
 4 files changed, 70 insertions(+), 20 deletions(-)

commit 0c7e4172ab17ed2bfff625efce135c57e8fc3505
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Mon Feb 16 11:02:20 2009 +0000

    [animation] Do not bind construct-only properties
    
    ClutterAnimation should not try to bind construct-only properties,
    since it only manipulates existing instances.

 clutter/clutter-animation.c |    8 ++++++++
 1 file changed, 8 insertions(+)

commit 8f59f25beb3cfe8c7775e044050ff865f21991f3
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Sat Feb 14 13:11:13 2009 +0000

    [actor] Revert part of commit 402e022c
    
    An unintended chunk of commit 402e022c got committed before I looked
    at the diff.

 clutter/clutter-actor.c |    6 +++---
 1 file changed, 3 insertions(+), 3 deletions(-)

commit 839d1e00b18528dd3da3694a5ca3b987cc0bee33
Author: Christian Persch <chpe@gnome.org>
Date:   Sat Feb 14 12:55:20 2009 +0000

    Bug 1429 - Redundant declaration in clutter-x11.h
    
    clutter-x11.h declares clutter_x11_set_display twice, which means code using
    clutter doesn't compile cleanly with -Wredundant-decls.
    
    Signed-off-by: Emmanuele Bassi <ebassi@linux.intel.com>

 clutter/x11/clutter-x11.h |    2 --
 1 file changed, 2 deletions(-)

commit cd0fdbb7d50d2fae6b6d8b9099aa4a43105538e3
Author: Owen W. Taylor <otaylor@fishsoup.net>
Date:   Fri Feb 13 14:14:43 2009 -0500

    Honor ACLOCAL_FLAGS in autogen.sh
    
    autoreconf doesn't pay attention to the ACLOCAL_FLAGS variable that
    jhbuild (for example) sets. Pass those flags into autoreconf by
    setting ACLOCAL appropriately.

 autogen.sh |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit 46ce2ee737541554b75801c8797c41d3aed85661
Author: Shane Bryan <shane.bryan@linux.intel.com>
Date:   Tue Feb 3 17:04:58 2009 -0800

    Bug 1434 - _NET_WM_NAME not set before realize
    
    Moved clutter_stage_set_title() before call to clutter_actor_realize()
    to ensure _NET_WM_NAME is set early enough for use by interested WM's,
    
    Signed-off-by: Shane Bryan <shane.bryan@linux.intel.com>
    Signed-off-by: Emmanuele Bassi <ebassi@linux.intel.com>

 clutter/clutter-main.c |    4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

commit 888d900cb3086e046dd102c115c9ab4443289c48
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Sat Feb 14 11:47:53 2009 +0000

    [ignore] Add the newly created conformance units

 .gitignore |    3 +++
 1 file changed, 3 insertions(+)

commit e16e9b8bfcb2c47e4a440e2c4c1e9f0223dcf59e
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Sat Feb 14 11:45:27 2009 +0000

    [tests] Add conformance tests for ClutterModel
    
    ClutterModel has an interactive test but lacks a conformance
    unit for automatic testing.
    
    This is the beginning of that unit, which covers the population
    and iteration over a ListModel.

 tests/conform/Makefile.am         |    1 +
 tests/conform/test-conform-main.c |    3 +
 tests/conform/test-model.c        |  211 +++++++++++++++++++++++++++++++++++++
 3 files changed, 215 insertions(+)

commit 28dd557d8fea0041ca15c9297be60632806c9102
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Sat Feb 14 11:41:55 2009 +0000

    [tests] Add TEST_CONFORM_SKIP() macro
    
    Sometimes a test unit should not be executed depending on a
    condition. It would be good to have a macro doing this, along
    with TEST_CONFORM_SIMPLE().
    
    Additionally, the skipped unit should be added to a specific
    namespace, so that any coverage report will be able to catch it.
    
    For this reason, here's TEST_CONFORM_SKIP() which follows the
    syntax:
    
      TEST_CONFORM_SKIP (condition, namespace, function);
    
    If condition evaluates to FALSE the test is skipped and the
    unit added to the "/skipped" namespace.

 tests/conform/test-conform-main.c |   36 +++++++++++++++++++++++++++---------
 1 file changed, 27 insertions(+), 9 deletions(-)

commit 9da564b391fc860492c08ff4a779c4d6163e28d2
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Sat Feb 14 11:38:16 2009 +0000

    Bug 1440 - Add clutter_get_current_event_time()
    
    The clutter_get_current_event_time() is a global function for
    retrieving the timestamp of the current event being propagated
    by Clutter. Such function avoids the need to propagate the
    timestamp from within user code.

 clutter/clutter-event.c   |   22 ++++++++++++++++++++++
 clutter/clutter-event.h   |    2 ++
 clutter/clutter-main.c    |    2 ++
 clutter/clutter-private.h |    2 ++
 4 files changed, 28 insertions(+)

commit 0ac6d6637e4c0c4c41cc320a8ac59a4e9ca5836c
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Sat Feb 14 11:31:00 2009 +0000

    [list-model] Make ClutterListModel subclassable
    
    ClutterListModel has been added as a terminal class in case we
    decided to change API or implementation.
    
    Apparently, it's a lot more resilient than we expected -- or far
    too few are using it and reporting bugs. Once common issue, though,
    is that it cannot be subclassed, hence it's fairly limited in its
    usage.
    
    In the hope that more developers will start using it, here's a
    patch that makes ListModel a fully subclassable object.
    
    May whatever god you believe in have mercy on your eventual soul.

 clutter/clutter-list-model.c |   63 ++++++++++++++++++++----------------------
 clutter/clutter-list-model.h |   41 ++++++++++++++++++++++++---
 2 files changed, 67 insertions(+), 37 deletions(-)

commit f17437124ecc4d8cd41c098d10fa8b630e9bea9d
Author: Robert Staudinger <robsta@openedhand.com>
Date:   Thu Feb 12 12:42:58 2009 +0000

    [build] Add cogl.h to the built sources list
    
    The main COGL header file is generated at configure time. If something
    changes in the template, though, the file will not be regenerated.
    
    Adding cogl.h to the BUILT_SOURCES list will allow the regeneration to
    happen.

 clutter/cogl/Makefile.am |    2 ++
 1 file changed, 2 insertions(+)

commit 402e022c36a4b38864cddf6bd8299f75268c5519
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Wed Feb 11 17:56:22 2009 +0000

    [actor] Check out parameters before setting them
    
    The clutter_actor_get_rotation() out parameters may be NULL, so
    we need to check before dereferencing them.

 clutter/clutter-actor.c |   17 +++++++++++------
 1 file changed, 11 insertions(+), 6 deletions(-)

commit 82db27874b3feda0c3b35400699d83e7668987cc
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Wed Feb 11 17:54:52 2009 +0000

    [event] Extend KeyEvent for multi-input support
    
    Key events can come from different input devices, so they need a
    ClutterInputDevice member like the pointer-related events. This
    field is reserved for future use.

 clutter/clutter-event.h |    2 ++
 1 file changed, 2 insertions(+)

commit 55909581020cb66c9f97f8f3485c4b46fb6ccb2b
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Wed Feb 11 17:52:50 2009 +0000

    [texture] Check if the material is valid
    
    The CoglMaterial handle might be invalid when we are disposing
    the ClutterTexture, so we need to check before calling any
    cogl_material_* API on it.

 clutter/clutter-texture.c |    3 ++-
 1 file changed, 2 insertions(+), 1 deletion(-)

commit 29bff6890add38daaf83ab3d3695286d54c98e2f
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Fri Feb 6 13:50:16 2009 +0000

    [texture] Consolidate the quality to filter conversions
    
    To convert from a TextureQuality to a COGL filter enumeration
    we need to perform two function calls. Since we need both filters
    when calling cogl_texture_set_filters() we can safely consolidate
    the two conversion functions into one. This also allows using a
    shorter function name, thus reducing the lenght of the lines
    involved and, more importantly preventing Emmanuele from crying.

 clutter/clutter-texture.c |  100 ++++++++++++++++++++++++++-------------------
 1 file changed, 59 insertions(+), 41 deletions(-)

commit 41ef2ef58788eb3ef6c7cb25c706dfbfa8d14b71
Author: Robert Bragg <robert@linux.intel.com>
Date:   Wed Feb 11 12:58:18 2009 +0000

    [tests] Some improvements for test-pixmap
    
    The test no longer requires an XID argument to run; instead it creates its
    own X Window. The test now also aims to demonstrate whether mipmapping is
    working, and clearly informs you if fallbacks are being used for GLX tfp.

 tests/interactive/test-pixmap.c |  163 +++++++++++++++++++++++++++------------
 1 file changed, 115 insertions(+), 48 deletions(-)

commit b4f9c8204de6fbcf20c2dcb5074e035fb8859668
Author: Robert Bragg <bob@o-hand.com>
Date:   Fri Feb 6 11:16:42 2009 +0000

    [docs] Various gtk-doc updates for Cogl
    
    This hides a number of internal structs and enums from the docs, and moves
    some functions to more appropriate sections as well as misc description
    updates (mostly for the vertex buffer api)

 clutter/cogl/cogl-color.h            |   55 ------------
 clutter/cogl/cogl-material.h         |  109 ++++++++++++------------
 clutter/cogl/cogl-matrix.h           |    8 +-
 clutter/cogl/cogl-vertex-buffer.h    |  154 +++++++++++++++++-----------------
 clutter/cogl/cogl.h.in               |   94 +++++++++++++++++++++
 doc/reference/cogl/cogl-docs.sgml    |   10 +--
 doc/reference/cogl/cogl-sections.txt |  104 +++++++++++------------
 7 files changed, 283 insertions(+), 251 deletions(-)

commit d01e3cd802619fb2bcccc5503c49f3d22165dd29
Author: Robert Bragg <robert@linux.intel.com>
Date:   Fri Feb 6 16:10:28 2009 +0000

    [cogl-vertex-buffer] Some fixes for texturing and color arrays
    
    Fixes some blending issues when using color arrays since we were
    conflicting with the cogl_enable state + fixes a texture layer
    validation bug.
    
    Adds a basic textured triangle to test-vertex-buffer-contiguous.

 clutter/cogl/common/cogl-vertex-buffer.c      |   19 +++++------
 tests/conform/test-vertex-buffer-contiguous.c |   42 +++++++++++++++++++++++--
 2 files changed, 47 insertions(+), 14 deletions(-)

commit 4a110afe08f9e141ae1ac596f030592aaac65769
Author: Robert Bragg <robert@linux.intel.com>
Date:   Fri Feb 6 16:05:08 2009 +0000

    [cogl-material] Fixes some dirty flag checks
    
    Flushing material layers wasn't clearing the right dirty flag and
    some of the tests used to avoid re-submitting GL state weren't
    complete.

 clutter/cogl/common/cogl-material.c |   98 ++++++++++++++++++++++-------------
 1 file changed, 63 insertions(+), 35 deletions(-)

commit fa55c096d87796ce904ece831547f0cdb2799ff1
Author: Robert Bragg <robert@linux.intel.com>
Date:   Wed Feb 4 09:21:37 2009 +0000

    [Cogl] Renames cogl_fog_set to cogl_set_fog for consistency
    
    More things follow the <object>_set_<property> convention.

 clutter/clutter-stage.c  |    2 +-
 clutter/cogl/cogl.h.in   |   10 +++++-----
 clutter/cogl/gl/cogl.c   |    8 ++++----
 clutter/cogl/gles/cogl.c |    8 ++++----
 4 files changed, 14 insertions(+), 14 deletions(-)

commit 51edcc525115e431bb22d996af1e01a1cf8de4ac
Author: Neil Roberts <neil@linux.intel.com>
Date:   Mon Feb 9 12:47:41 2009 +0000

    Added a test for non-power-of-two sized textures
    
    The test simply creates an odd sized texture with different colors at
    each of the four corners. It then renders the texture and verifies
    that the colors are the expected values. This should help ensure that
    the sliced texture rendering code is working properly.

 tests/conform/Makefile.am         |    1 +
 tests/conform/test-conform-main.c |    1 +
 tests/conform/test-npot-texture.c |  210 +++++++++++++++++++++++++++++++++++++
 3 files changed, 212 insertions(+)

commit 0be6f42070c3aa0ba6bcb02aa65e63c6572d83d0
Author: Neil Roberts <neil@linux.intel.com>
Date:   Thu Feb 5 23:01:59 2009 +0000

    [cogl-texture] Fix uninitialised priv var in texture_finalize
    
    Fix my failure to initialise the priv var which was some causing
    crashes.

 clutter/clutter-texture.c |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit a2168686b918b8f66210650296d299603db3eab8
Author: Neil Roberts <neil@linux.intel.com>
Date:   Thu Feb 5 20:24:18 2009 +0000

    [cogl-texture] Move the destruction of the material to _finalize
    
    Otherwise if the dipose method is called twice the material will
    already be destroyed when texture_free_gl_resources is called so it
    will issue a warning about an invalid handle.

 clutter/clutter-texture.c |   16 +++++++++++++---
 1 file changed, 13 insertions(+), 3 deletions(-)

commit 05c7e5a97c0c059ed2f1fd20f55beae22eaf83c1
Author: Neil Roberts <neil@linux.intel.com>
Date:   Thu Feb 5 19:48:00 2009 +0000

    [cogl-texture] Fix offset to next quad when flushing the log
    
    When the quad log contains multiple textures (such as when a sliced
    texture is drawn) it dispatches the log with multiple calls to
    flush_quad_batch and walks a pointer along the list of vertices.
    However this pointer was being incremented by only one vertex so the
    next quad would be drawn with three of the vertices from the last
    quad.

 clutter/cogl/gl/cogl-texture.c   |    4 ++--
 clutter/cogl/gles/cogl-texture.c |    4 ++--
 2 files changed, 4 insertions(+), 4 deletions(-)

commit a4de12dbe8165c3acd453804af36d46e4405b1ba
Author: Neil Roberts <neil@linux.intel.com>
Date:   Thu Feb 5 20:00:05 2009 +0000

    [clutter-texture] Fix the no_slice property
    
    The 'no_slice' property means the texture should never be sliced. We
    want cogl to create a texture with any amount of waste so we pass
    max_waste as -1. However this got broken in commit 168d55 so that the
    meaning got negated (no_slice enabled slicing).

 clutter/clutter-texture.c |    4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

commit 6bc7f4c723de90c41afa622dc3451ad7697786e0
Author: Chris Lord <chris@linux.intel.com>
Date:   Thu Feb 5 11:04:34 2009 +0000

    [actor] Force a relayout on set_parent()
    
    The current code that handles the invariant that the new parent
    of an actor needing a layout should also be queued for relayout
    is hitting the short-circuiting we do in the queue_relayout()
    method.
    
    In order to fix this we can forcibly set the actor to need a
    width/height request and an allocation; then we queue a relayout
    on the parent.
    
    Signed-off-by: Emmanuele Bassi <ebassi@linux.intel.com>

 clutter/clutter-actor.c |   10 +++++++++-
 1 file changed, 9 insertions(+), 1 deletion(-)

commit 9cf02bfdb9a65500688fde1c4485f6cc968c385f
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Mon Feb 2 23:55:30 2009 +0000

    [text] Rename :alignment to :line-alignment
    
    The :alignment property is prone to generate confusion: developers
    will set it thinking that the contents of a ClutterText will
    automagically align themselves.
    
    Instead of using the generic term :alignment, and following the
    GTK+ convention, we should use a more specific term, conveying the
    actual effect of the property: alignment of the lines with respect
    to each other, and not to the overall allocated area.
    
    See bug 1428:
    
      http://bugzilla.openedhand.com/show_bug.cgi?id=1428

 clutter/clutter-text.c                     |   40 +++++++++++++++-------------
 clutter/clutter-text.h                     |    4 +--
 doc/reference/clutter/clutter-sections.txt |    4 +--
 tests/conform/test-text-cache.c            |    3 ++-
 tests/interactive/test-rotate.c            |    7 +++--
 5 files changed, 32 insertions(+), 26 deletions(-)

commit e3496429372b565724b20a3df50720ff434e543e
Author: Neil Roberts <neil@linux.intel.com>
Date:   Thu Feb 5 18:27:04 2009 +0000

    [clutter-texture] Unref the Cogl material on dispose
    
    The material is created in the _init function and is owned by the
    ClutterTexture so it will be leaked if not freed.

 clutter/clutter-texture.c |    6 ++++++
 1 file changed, 6 insertions(+)

commit ee0bf5e26d73b47627f0655dd3c8a4c2377b3256
Author: Neil Roberts <neil@linux.intel.com>
Date:   Thu Feb 5 18:26:08 2009 +0000

    [clutter-texture] Release the temporary ref taken when setting a texture
    
    When setting the cogl texture, the ClutterTexture takes a reference to
    the Cogl handle but the material takes an additional reference when it
    is set as the layer. Nothing was unrefing the temporary reference so
    the textures were being leaked.

 clutter/clutter-texture.c |    4 ++++
 1 file changed, 4 insertions(+)

commit 8feb99722c9c0308f5be4ec9f78106c30c909a79
Author: Neil Roberts <neil@linux.intel.com>
Date:   Wed Feb 4 00:14:16 2009 +0000

    [clutter-clone] Override the parent opacity to self not self->parent
    
    The opacity of the source actor when painted from the clone should be
    combined with the opacity of the clone as well as the clone's parents,
    instead of just the parents.

 clutter/clutter-clone.c |   10 ++++------
 1 file changed, 4 insertions(+), 6 deletions(-)

commit 8e44874a934d1bae5d90c31b230e3741b863d662
Author: Neil Roberts <neil@linux.intel.com>
Date:   Mon Feb 2 22:02:47 2009 +0000

    [cogl-gles2-wrapper] Remove the FIXME to adjust the fragment color
    
    Removed some debugging code which sets the r and g values to 1 in the
    fragment shader.

 clutter/cogl/gles/cogl-gles2-wrapper.c |    3 ---
 1 file changed, 3 deletions(-)

commit 49359407b0b1e4c56d2af56cbb62e8d855c58812
Author: Neil Roberts <neil@linux.intel.com>
Date:   Mon Feb 2 22:01:47 2009 +0000

    [cogl-texture] Fix the count for the number of enabled arrays
    
    The quad drawing code keeps track of the number of texture units that
    have the tex coord array enabled so that in the next call it can
    disabled any that are no longer enabled. However it was using 'i+1' as
    the count but 'i' is already set to 'n_layers' from the previous for
    loop.
    
    Therefore it was disabling an extra texture unit. This doesn't
    normally matter but it was causing GLES 2 to pointlessly realize an
    extra unit.

 clutter/cogl/gles/cogl-texture.c |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit e88de5f5fd97823c8bb6fe1452421a455212da86
Author: Neil Roberts <neil@linux.intel.com>
Date:   Thu Jan 29 13:40:37 2009 +0000

    Fix building GLES 2 after the material branch merge
    
    - In cogl-material.h it directly sets the values of the
      CoglMaterialLayerCombineFunc to some GL_* constants. However these
      aren't defined in GLES 2 beacuse it has no fixed function texture
      combining. Instead the CGL_* versions are now used. cogl-defines.h
      now sets these to either the GL_* version if it is available,
      otherwise it directly uses the number.
    
    - Under GLES 2 cogl-material.c needs to access the CoglTexture struct
      so it needs to include cogl-texture-private.h
    
    - There are now #define's in cogl-gles2-wrapper.h to remap the GL
      function names to the wrapper names. These are disabled in
      cogl-gles2-wrapper.c by defining COGL_GLES2_WRAPPER_NO_REMAP.
    
    - Added missing wrappers for glLoadMatrixf and glMaterialfv.
    
    - Renamed the TexEnvf wrapper to TexEnvi because the latter is used
      instead from the material API.

 clutter/cogl/cogl-material.h             |   22 ++--
 clutter/cogl/common/cogl-material.c      |    3 +-
 clutter/cogl/common/cogl-vertex-buffer.c |    9 +-
 clutter/cogl/gl/cogl-defines.h.in        |    3 +
 clutter/cogl/gles/cogl-defines.h.in      |  199 +++++++++++++++++++++++++++---
 clutter/cogl/gles/cogl-gles2-wrapper.c   |   32 ++++-
 clutter/cogl/gles/cogl-gles2-wrapper.h   |  106 ++++++++++------
 7 files changed, 297 insertions(+), 77 deletions(-)

commit edbe9a0377981d279d129f825e61f51f16d198de
Author: Neil Roberts <neil@linux.intel.com>
Date:   Mon Feb 2 14:51:52 2009 +0000

    [cogl-material] Always bind the new texture handle
    
    Cogl previously tried to cache the currently bound texture when
    drawing through the material API to avoid excessive GL calls. However,
    a few other places in Cogl and Clutter rebind the texture as well so
    this can cause problems.
    
    This was causing shaped windows to fail in Mutter because
    ClutterGLXTexturePixmap was binding a different texture to update it
    while the second texture unit was still active which meant the mask
    texture would not be selected when the shaped window was drawn
    subsequent times.
    
    Ideally we would fix this by providing a wrapper around glBindTexture
    which would affect the cached value. The cache would also have to be
    cleared if a selected texture was deleted.

 clutter/cogl/common/cogl-material.c |   20 +++++++++++---------
 1 file changed, 11 insertions(+), 9 deletions(-)

commit 2747aa7be235de77b33433821f1756b9c923a2ae
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Mon Feb 2 12:04:34 2009 +0000

    [text] Use create_pango_layout()
    
    Since we added clutter_actor_get_pango_layout() it would be a
    good idea to use it in the ClutterText actor to cut down the
    PangoContext-related calls.

 clutter/clutter-text.c |    5 +----
 1 file changed, 1 insertion(+), 4 deletions(-)

commit 6e12722a9b7135abdd43f3777476780c74080163
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Mon Feb 2 11:59:39 2009 +0000

    [clone] Allow cloning unparented actors
    
    If the source of a ClutterClone does not have a parent actor the
    clone will be unable to paint it because it's missing an allocation.
    
    A simple way to fix it is to make the ClutterClone act like a
    "foster parent": when it is allocated it will check if the source
    actor has a parent and if not it will allocate the source with
    its preferred size.

 clutter/clutter-clone.c |   52 ++++++++++++++++++++++++++++++++++++++---------
 1 file changed, 42 insertions(+), 10 deletions(-)

commit b053d513214e764a44b82b312c948199f6a1f03f
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Mon Feb 2 11:08:37 2009 +0000

    [docs] Add clutter_text_set_markup()
    
    The clutter_text_set_markup() has been added to the public API, and
    should be listed in the ClutterText section of the API reference.

 doc/reference/clutter/clutter-sections.txt |    1 +
 1 file changed, 1 insertion(+)

commit 801e535e947e32fea5fe2859e94c58f7b7c8af4f
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Mon Feb 2 09:01:41 2009 +0000

    Add Actor::create_pango_layout()
    
    Final bit of integration between ClutterActor and Pango: a simple
    method for creating a PangoLayout, pre-filled with text and ready
    to be rendered using cogl_pango_render_layout().
    
    This should make writing new Actors rendering custom text in their
    paint() implementation easy and reliable.

 clutter/clutter-actor.c                    |   38 ++++++++++++++++++++++++++++
 clutter/clutter-actor.h                    |    2 ++
 doc/reference/clutter/clutter-sections.txt |    1 +
 3 files changed, 41 insertions(+)

commit 52d04b575094e2ad742af132e32e79497afa89de
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu Jan 29 13:29:43 2009 +0000

    [tests] Update the text-field interactive test
    
    We should also display the results of calling set_markup() or
    set_use_markup() on ClutterText actors.

 tests/interactive/test-text-field.c |   11 +++++++----
 1 file changed, 7 insertions(+), 4 deletions(-)

commit 488de99fc6be704d2817ffbfc380f876cb028e05
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu Jan 29 13:18:57 2009 +0000

    [text] Merge the attributes with markup enabled
    
    ClutterText should merge the PangoAttributes set by using
    clutter_text_set_attributes() with the attributes generated by
    parsing Pango markup.
    
    For this to work we must parse the markup and merge the attributes
    we get out of pango_parse_markup() with the attributes set by
    the user.
    
    Setting the markup or the attributes on an editable text should
    not work for the time being.

 clutter/clutter-text.c |  267 ++++++++++++++++++++++++++++++++++--------------
 clutter/clutter-text.h |    2 +
 2 files changed, 195 insertions(+), 74 deletions(-)

commit e8ef5153b162a05d18d8763003c7ad3cced5132a
Author: Tomas Frydrych <tf@o-hand.com>
Date:   Thu Jan 29 12:25:18 2009 +0000

    Fix clutter_x11_texture_pixmap_get/set_property() following change of PROP_WINDOW type.
      PROP_WINDOW is now gulong, so we need to use appropriate GValue accessors.

 clutter/x11/clutter-x11-texture-pixmap.c |    4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

commit c1de33fafeab620a146346c38b5b1637276d90c4
Author: Tomas Frydrych <tf@o-hand.com>
Date:   Tue Jan 27 16:37:55 2009 +0000

    Fixed handling of enter and leave events in clutter_x11_handle_event()
      When processing a motion event, we need to spin the event loop two extra
      times to ensure that any enter/leave events that might have been synthesized
      are pumped through (otherwise they end up being pushed down the queue and
      never processed).

 clutter/x11/clutter-event-x11.c |   13 +++++++++++--
 1 file changed, 11 insertions(+), 2 deletions(-)

commit 7233ca48a8686a972d6eaed41aa70452d0447273
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Fri Jan 30 14:18:46 2009 +0000

    Post-release bump to 0.9.1

 configure.ac |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit 81cfccd29094bb7dff69b60dcdd0bbfeb92f6b40
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Fri Jan 30 12:39:29 2009 +0000

    Update README

 README |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit f77428991c36b05e7e289c6f69df4bb2da3d5e0a
Author: Robert Bragg <robert@linux.intel.com>
Date:   Thu Jan 29 16:24:24 2009 +0000

    Some updates for the 1.0 release notes regarding Cogl
    
    Documents that the cogl_rectangle arguments changed from x1, y1, width, height
    to x1, y1, x2, y2; notes that cogl_scale now accepts a z-scale; adds a note
    about the new vertex buffer API and fixes a s/CoglMesh/CoglMatrix/ typo.

 README |   11 ++++++++++-
 1 file changed, 10 insertions(+), 1 deletion(-)

commit bec9b32e73eb521ba7dc06af825b1643bfc5b6c4
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu Jan 29 16:15:05 2009 +0000

    [build] Fix distcheck of ChangeLog
    
    Relax the copy failure condition.

 Makefile.am |    6 ++++--
 1 file changed, 4 insertions(+), 2 deletions(-)

commit bb6202a1a177c2537954f9db577c2712f7cd47ee
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu Jan 29 16:00:15 2009 +0000

    Add cogl-material-private.h to the source files
    
    The material-private.h file was not added to the dist files and
    caused a build failure.

 clutter/cogl/common/Makefile.am |    3 ++-
 1 file changed, 2 insertions(+), 1 deletion(-)

commit 2b02dfce840810f8651fc77fbf1260d8d0fa3984
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu Jan 29 15:44:11 2009 +0000

    [gitignore] Update ignore file

 .gitignore |    7 +++++++
 1 file changed, 7 insertions(+)

commit cf80105ab0e913c1642481f36d328ec31684eed0
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu Jan 29 15:38:28 2009 +0000

    [build] Add automatic ChangeLog generation on dist
    
    Since we moved to Git from Subversion we've abandoned the ChangeLog
    file in favour of a more detailed commit log.
    
    In order to maintain a ChangeLog for users of the tarballs, we need
    to generate a ChangeLog file out of the commit log when distchecking
    a Clutter release.
    
    For this reason, we use a simple Perl script that is invoked by the
    dist-hook and generates a ChangeLog file starting from the previous
    stable release.

 Makefile.am            |   31 ++++++++++
 build/gen-changelog.pl |  148 ++++++++++++++++++++++++++++++++++++++++++++++++
 2 files changed, 179 insertions(+)

commit 86aba661bd2b7eb4506aeeb9cd0d884db6118267
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu Jan 29 13:31:11 2009 +0000

    Fix a variable masking warning
    
    The usual issue with math.h defined symbols.

 clutter/cogl/common/cogl-primitives.c |   15 +++++++--------
 1 file changed, 7 insertions(+), 8 deletions(-)

commit 945d2616e3e417ff0550911b5a7d04d4817aa7a3
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Wed Jan 28 17:01:26 2009 +0000

    Move the old ChangeLog into its own file
    
    The old ChangeLog is there to track the project history when it
    was in SVN -- also because the commit messages we imported from
    Subversion were not that great.
    
    Unfortunately, we need a ChangeLog for autotools to work in
    GNU mode; for this reason, we can use a dummy ChangeLog redirecting
    to git log.
    
    The ChangeLog will be generated on release from the commit
    messages, for users of the tarballs.

 ChangeLog     |15747 +--------------------------------------------------------
 ChangeLog.SVN |15737 ++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 Makefile.am   |    7 +-
 3 files changed, 15746 insertions(+), 15745 deletions(-)

commit f1bae778cea59a652af34948ed4addba212f8e89
Author: Neil Roberts <neil@linux.intel.com>
Date:   Thu Jan 29 12:21:56 2009 +0000

    [cogl] Add an NULL terminator to the call to material_flush_gl_state
    
    This fixes a compiler warning and a potential crash.

 clutter/cogl/gl/cogl.c   |    2 +-
 clutter/cogl/gles/cogl.c |    2 +-
 2 files changed, 2 insertions(+), 2 deletions(-)

commit 6516dd3033f3b8e85a7b53e5576b11323b8a4579
Author: Robert Bragg <robert@linux.intel.com>
Date:   Wed Jan 28 14:09:51 2009 +0000

    Another Cogl gl vs gles normalizaion pass
    
    This tries to make a number of files more comparable with the intention of
    moving some code into cogl/common/
    
    Files normalized:
     cogl.c
     cogl-context.c
     cogl-context.h
     cogl-texture.c

 clutter/cogl/gl/cogl-context.h   |   13 +-
 clutter/cogl/gl/cogl-texture.c   |   33 ++++--
 clutter/cogl/gl/cogl.c           |   43 +++++--
 clutter/cogl/gles/cogl-context.c |    8 +-
 clutter/cogl/gles/cogl-texture.c |  244 +++++++++++++++++++++-----------------
 clutter/cogl/gles/cogl.c         |   26 +++-
 6 files changed, 233 insertions(+), 134 deletions(-)

commit 081f2056bc1c1b98337b6a18a37cfe4e76fd3cd4
Author: Robert Bragg <robert@linux.intel.com>
Date:   Tue Jan 27 11:07:22 2009 +0000

    Removes cogl_color_set_from_4d as it may mislead people.
    
    Someone not sure which cogl_color_set_from_* version is "best" may use
    set_from_4d because taking doubles implies higher precision. Currently
    it doesn't have any advantage.

 clutter/cogl/cogl-color.h        |   17 -----------------
 clutter/cogl/common/cogl-color.c |   15 ---------------
 2 files changed, 32 deletions(-)

commit ef4052c18d54e6ee6cf96c2c1b3d7db81b98dc1e
Author: Robert Bragg <robert@linux.intel.com>
Date:   Wed Jan 28 14:47:03 2009 +0000

    Changes cogl_rectangle to take x1, y1, x2, y2 args not x1, y1, width, height
    
    This makes it consistent with cogl_rectangle_with_{multi,}texture_coords.
    Notably the reason cogl_rectangle_with_{multi,}texture_coords wasn't changed
    instead is that the former approach lets you describe back facing rectangles.
    (though technically you could pass negative width/height values to achieve
     this; it doesn't seem as neat.)

 clutter/clutter-rectangle.c             |   12 ++++----
 clutter/clutter-text.c                  |    9 +++---
 clutter/cogl/cogl-path.h                |   16 +++++------
 clutter/cogl/common/cogl-primitives.c   |   13 ++++-----
 clutter/cogl/gl/cogl-primitives.c       |   10 ++++---
 clutter/cogl/gles/cogl-primitives.c     |   10 ++++---
 clutter/cogl/gles/cogl.c                |    8 ++++--
 clutter/pango/cogl-pango-render.c       |    2 +-
 tests/conform/test-backface-culling.c   |    6 ++--
 tests/conform/test-binding-pool.c       |    4 +--
 tests/interactive/test-binding-pool.c   |    4 +--
 tests/interactive/test-cogl-offscreen.c |   48 +++++++++++++++----------------
 tests/interactive/test-paint-wrapper.c  |    2 +-
 13 files changed, 75 insertions(+), 69 deletions(-)

commit 6048a0544a3eaf8e83c6be9889b624525476cec6
Author: Robert Bragg <robert@linux.intel.com>
Date:   Wed Jan 28 13:46:39 2009 +0000

    Adds some debug code to _cogl_journal_flush_quad_batch
    
    The code is #if 0 guarded, but when uncommented it outlines all drawn
    rectangles with an un-blended red, green or blue border. This may e.g. help
    with debugging texture slicing issues or blending issues, plus it looks quite
    cool.

 clutter/cogl/gl/cogl-texture.c |   27 +++++++++++++++++++++++++++
 1 file changed, 27 insertions(+)

commit 0530405899d0399f97ff744eb88cb8674a423821
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Wed Jan 28 16:44:22 2009 +0000

    [clutter-docs] Update the animation tutorial
    
    The Alpha API and usage has been changed by the recent overhaul
    of the ClutterAlpha class; hence, we need to update the relative
    documentation in the animation tutorial.

 .../clutter/clutter-animation-tutorial.xml         |   84 +++-----------------
 1 file changed, 13 insertions(+), 71 deletions(-)

commit b09ee495a5f0914b347b053533c6ebd3d6922012
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Wed Jan 28 16:43:05 2009 +0000

    [cogl-docs] Add the Materials section
    
    The COGL Materials API was not linked from the COGL reference
    index.

 doc/reference/cogl/cogl-docs.sgml |    1 +
 1 file changed, 1 insertion(+)

commit 7f6870fb4b6ddcdad2977582a6f533c928bdf0ff
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Wed Jan 28 15:19:24 2009 +0000

    Update the pkg-config requires list
    
    Clutter depends on various libraries, some of them backend-specific
    like the X11 libraries.
    
    Whenever possible, we should add those requirements to the pkg-config
    file. For this reason, we have a variable inside the configure.ac
    template file which should be filled with the backend-specific modules
    we check for during configure time, and then added to the standard
    list of dependencies that we write inside the clutter.pc file.

 configure.ac |   14 ++++++++++++--
 1 file changed, 12 insertions(+), 2 deletions(-)

commit e30c5b33b90ee27a95d46d156a41e5d14c6c69ed
Author: Neil Roberts <neil@linux.intel.com>
Date:   Wed Jan 28 16:24:02 2009 +0000

    Undeprecate clutter_actor_set_scale_with_gravity
    
    The scale center has returned so this function is available again but
    it was still deprecated so you couldn't use it.

 clutter/clutter-deprecated.h |    3 +--
 1 file changed, 1 insertion(+), 2 deletions(-)

commit 3e68b23ea8f290a70ba67dff4ed304fe1eb72bb6
Merge: 811dd7e 1cd3134
Author: Neil Roberts <neil@linux.intel.com>
Date:   Wed Jan 28 09:08:19 2009 +0000

    Merge branch 'scale-center'
    
    Bug 1349 - Using the anchor point to set the scale center is messy
    
    The branch adds an extra center point for scaling which can be used
    for example to set a scale about the center without affecting the
    position of the actor.
    
    The scale center can be specified as a unit offset from the origin or
    as a gravity. If specified as a gravity it will be stored as a
    fraction of the actor's size so that the position will track when the
    actor changes size.
    
    The anchor point and rotation centers have been modified so they can
    be set with a gravity in the same way. However, only the Z rotation
    exposes a property to set using a gravity because the other two
    require a Z coordinate which doesn't make sense to interpret as a
    fraction of the actor's width or height.
    
    Conflicts:
    
    	clutter/clutter-actor.c

commit 1cd313477b2818b9117a1f0bbeeb113553ac447e
Author: Neil Roberts <neil@linux.intel.com>
Date:   Wed Jan 28 15:25:38 2009 +0000

    [clutter-actor] Use G_STMT_START/END instead of do { } while (0)
    
    In the TRANSFORM_ABOUT_ANCHOR_COORD macro it now uses G_STMT_START and
    G_STMT_END instead of directly using do/while because it's more
    readable.

 clutter/clutter-actor.c |    5 +++--
 1 file changed, 3 insertions(+), 2 deletions(-)

commit 811dd7eedc9338110510f02967270ffb5b4d09b7
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Wed Jan 28 14:36:45 2009 +0000

    Update NEWS file

 NEWS |  138 +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-
 1 file changed, 137 insertions(+), 1 deletion(-)

commit 8b0de3491e2a857891f8fbc155886a8922ca5dff
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Wed Jan 28 14:07:23 2009 +0000

    Update the release notes for 1.0
    
    Add items about the ClutterBehaviourBspline and ClutterEffect
    API removals.

 README |    7 +++++++
 1 file changed, 7 insertions(+)

commit d7c275f5e55ac90e0ca89b637eabc9d8edce4d77
Author: Neil Roberts <neil@linux.intel.com>
Date:   Wed Jan 28 12:57:06 2009 +0000

    [cogl-texture] Fix order of tex coords when compensating for waste
    
    When drawing a texture with waste in _cogl_multitexture_unsliced_quad
    it scales the texture coordinates so that the waste is not
    included. However the formula was the wrong way around so it was
    calculating as if the texture coordinates are ordered x1,x2,y1,y2 but
    it is actually x1,y1,x2,y2.

 clutter/cogl/gl/cogl-texture.c   |    4 ++--
 clutter/cogl/gles/cogl-texture.c |    4 ++--
 2 files changed, 4 insertions(+), 4 deletions(-)

commit 561c441241a2d6510075f07d154a8bbaa89a0596
Author: Neil Roberts <neil@linux.intel.com>
Date:   Wed Jan 28 12:06:39 2009 +0000

    [text-backface-culling] Fix width/height parameters to cogl_rectangle
    
    During the upgrade to cogl material, test-backface-culling was
    switched to use cogl_rectangle instead of cogl_texture_rectangle to
    draw the textures. However, cogl_rectangle takes a width and height
    instead of the the top-left and bottom-right vertices so the
    rectangles were being drawn in the wrong place.

 tests/conform/test-backface-culling.c |    7 +++----
 1 file changed, 3 insertions(+), 4 deletions(-)

commit e72042648c2d481e7be3f395f080e798cea82c46
Author: Neil Roberts <neil@linux.intel.com>
Date:   Wed Jan 28 12:00:01 2009 +0000

    [cogl-texture] Reset size of vertex log after drawing a polygon
    
    Otherwise trying to render a rectangle after a polygon doesn't work
    because it expects the array to be empty when it starts logging
    vertices.

 clutter/cogl/gl/cogl-texture.c   |    4 ++++
 clutter/cogl/gles/cogl-texture.c |    4 ++++
 2 files changed, 8 insertions(+)

commit eda1d08f76f0636b9a273f3c673214f9c5def11d
Author: Neil Roberts <neil@linux.intel.com>
Date:   Wed Jan 28 11:29:49 2009 +0000

    Fix rectangles_with_multitexture_coords for sliced without tex coords
    
    When the texture is sliced it drops back to a fallback function and
    passes it the texture coordinates from the rectangle. However if no
    tex coords are given it would crash. Now it passes the default
    0.0->1.0 tex coords instead.

 clutter/cogl/gl/cogl-texture.c   |   23 +++++++++++++++--------
 clutter/cogl/gles/cogl-texture.c |   23 +++++++++++++++--------
 2 files changed, 30 insertions(+), 16 deletions(-)

commit 7df19876522dcbfc2c158ec6dacf0f7d98ca3365
Author: Neil Roberts <neil@linux.intel.com>
Date:   Wed Jan 28 11:09:47 2009 +0000

    Fix _cogl_texture_unsliced_quad when no texture coordinates are given
    
    If no texture coordinates are given then texture_unsliced_quad tries
    to generate its own coordinates. However it also tries to read the
    texture coordinates to check if they are in [0.0,1.0] range so it will
    crash before it reaches that.

 clutter/cogl/gl/cogl-texture.c   |   11 +++++++----
 clutter/cogl/gles/cogl-texture.c |   11 +++++++----
 2 files changed, 14 insertions(+), 8 deletions(-)

commit 9b7fa2cb048f7318a701db8664982423202d0e11
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Wed Jan 28 11:56:12 2009 +0000

    Reuse the layers list
    
    Instead of getting the layers list twice from the Material, we
    can reuse the list when we need to retrieve the first layer.

 clutter/cogl/gl/cogl-texture.c |    4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

commit b3e02869cd00c0f5a163cdaffe6b9837bb1e9982
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Wed Jan 28 11:55:19 2009 +0000

    Remove gtk-doc annotation
    
    The _cogl_material_flush_layers_gl_state() function is static,
    so it should not have a gtk-doc annotation.

 clutter/cogl/common/cogl-material.c |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit b08a0115128cb68cfb92813d2325a490802e606a
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Tue Jan 27 20:06:58 2009 +0000

    Fix typo in the :clone getter method
    
    The :clone property getter method, clutter_clone_get_source(), was
    defined using the wrong name of clutter_clone_get_clone_source().

 clutter/clutter-clone.c |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit bba85d47f93a004c355f4f53166b809940a0ebab
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Tue Jan 27 17:44:49 2009 +0000

    Update the release notes for 1.0
    
    Add entries for the removal of:
    
      - ClutterLabel
      - ClutterEntry
      - ClutterCloneTexture

 README |    8 ++++++++
 1 file changed, 8 insertions(+)

commit 2722909b7668f5f566b1907f3c8fc1447adc192c
Author: Neil Roberts <neil@linux.intel.com>
Date:   Wed Jan 28 10:52:55 2009 +0000

    Fix building GLES after _cogl_texture_handle_from_pointer got removed
    
    Commit a688b1db removed the function and replaced it with a direct
    cast. This was also being used in the GL ES so the build broke.

 clutter/cogl/gles/cogl-texture.c |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit 6b9da72ab053eb96bed20655d8894c614a3077f1
Author: Neil Roberts <neil@linux.intel.com>
Date:   Tue Jan 27 16:55:25 2009 +0000

    Directly set backend font options in clutter_set_font_flags
    
    Instead of having a separate set of font options that override the
    backend options when clutter_set_font_flags is called, it now just
    directly sets the backend font options. So now the font flags are just
    a convenience wrapper around the backend font options.
    
    This also makes the ClutterText labels automatically update when the
    font flags are changed because they will respond to the 'font-changed'
    signal from the backend.

 clutter/clutter-main.c    |   28 +++++++++-------------------
 clutter/clutter-private.h |    3 ---
 2 files changed, 9 insertions(+), 22 deletions(-)

commit 89b0b00dd14cde4f2a7d6bfab5bbdc78bc21f315
Author: Neil Roberts <neil@linux.intel.com>
Date:   Tue Jan 27 16:47:20 2009 +0000

    Listen for the font-changed signal on the backend in ClutterText
    
    Whenever a ClutterText is created it now connects to the font-changed
    signal. When it is emitted the layout cache is dirtied and a relayout
    is queued. That way changes to the font options or resolution will
    cause an immediate update to the labels in the scene.

 clutter/clutter-text.c |   26 ++++++++++++++++++++++++++
 1 file changed, 26 insertions(+)

commit 1b578fb9c7c19defdbec670fec86956c4987972f
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Tue Jan 27 16:53:01 2009 +0000

    [docs] Documentation fixes
    
    Update the COGL API reference to avoid a lot of warnings coming
    from gtk-doc.

 clutter/cogl/common/cogl-matrix.c    |   12 +++++++-----
 doc/reference/cogl/cogl-sections.txt |   35 ++++++++++++++++++++++++++--------
 2 files changed, 34 insertions(+), 13 deletions(-)

commit f9588b24876b40fd48687cfdb3497af50987b4da
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Tue Jan 27 16:41:51 2009 +0000

    [docs] Update Clutter API reference symbols
    
    Add the new symbols from the ClutterClone and COGL material API
    to the API reference.

 doc/reference/clutter/clutter-sections.txt |    4 ++++
 doc/reference/clutter/clutter.types        |    2 +-
 2 files changed, 5 insertions(+), 1 deletion(-)

commit 865f04decd4baa5b2876a9a917fea12ede1e31c2
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Tue Jan 27 16:40:51 2009 +0000

    Removed unused conditional
    
    USE_COGL_MATERIAL is a left-over from the development branch.

 clutter/clutter-texture.h |    8 --------
 1 file changed, 8 deletions(-)

commit 3cfc7fb1ca428c73ff2434f178cb8cc4e01728d4
Merge: a688b1d 86e95a7
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Tue Jan 27 16:12:30 2009 +0000

    Merge branch 'generic-actor-clone'
    
    * generic-actor-clone:
      Remove CloneTexture from the API
      [tests] Clean up the Clone interactive test
      Rename ActorClone to Clone/2
      Rename ActorClone to Clone/1
      Improves the unit test to verify more awkward scaling and some corresponding fixes
      Implements a generic ClutterActorClone that doesn't need fbos.

commit a688b1db01adf935867ea9f7907d785a771cbce8
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Tue Jan 27 16:02:04 2009 +0000

    Fallout from cogl-material merge
    
    When enabling the maintainer CFLAGS the compiler got very angry
    at the code that has been merged.

 clutter/clutter-clone-texture.c            |    3 +--
 clutter/cogl/common/cogl-handle.h          |    6 ------
 clutter/cogl/common/cogl-material.c        |   13 ++++++-------
 clutter/cogl/gl/cogl-context.c             |    8 ++++----
 clutter/cogl/gl/cogl-texture.c             |    8 +++-----
 tests/interactive/test-cogl-multitexture.c |    1 -
 6 files changed, 14 insertions(+), 25 deletions(-)

commit 840941fdfe62dc9d086e64ae98c304f87224b9c3
Author: Robert Bragg <robert@linux.intel.com>
Date:   Tue Jan 27 11:01:23 2009 +0000

    Adds padding to CoglColor to future proof it a bit
    
    This adds enough padding to allow us to change to an internal float storage
    for the color components if needs be in the future.

 clutter/cogl/cogl-types.h |    6 ++++++
 1 file changed, 6 insertions(+)

commit 70d7d16f13d35392e1f46d87dc245713fd4e68f3
Author: Robert Bragg <robert@linux.intel.com>
Date:   Mon Jan 26 22:52:38 2009 +0000

    Support scaling on the z axis with cogl_scale
    
    This simply adds a z argument to cogl_scale and updates clutter-actor.c
    to pass 1.0 for the z scale.

 README                   |    2 ++
 clutter/clutter-actor.c  |    2 +-
 clutter/cogl/cogl.h.in   |    8 +++++---
 clutter/cogl/gl/cogl.c   |    4 ++--
 clutter/cogl/gles/cogl.c |    4 ++--
 5 files changed, 12 insertions(+), 8 deletions(-)

commit e9a45c77449fab4ab911a136004155429f6d5bbf
Merge: 418fb99 9266e11
Author: Robert Bragg <robert@linux.intel.com>
Date:   Tue Jan 27 15:19:34 2009 +0000

    Merge branch 'cogl-material'
    
    Conflicts:
    
    	clutter/cogl/gl/cogl-texture.c
    	clutter/cogl/gles/cogl-primitives.c
    
    * cogl-material:
     clutter-{clone-,}texture weren't updating their material opacity.
     Updates GLES1 support for CoglMaterial
     Normalizes gl vs gles code in preperation for synching material changes
     Removes cogl_blend_func and cogl_alpha_func
     Fully integrates CoglMaterial throughout the rest of Cogl
     [cogl-material] Restore the GL_TEXTURE_ENV_MODE after material_rectangle
     [cogl-material] Make the user_tex_coords parameter of _rectangle const
     [test-cogl-material] Remove return value from material_rectangle_paint
     Add cogl-material.h and cogl-matrix.h to libclutterinclude_HEADERS
     [cogl-material] improvements for cogl_material_rectangle
     [cogl-material] Adds a cogl_material_set_color function
     [cogl-material] Some improvements for how we sync CoglMaterial state with OpenGL
     [cogl-material] Converts clutter-texture/clutter-clone-texture to the material API
     [doc] Hooks up cogl-material reference documentation
     Updates previous GLES multi-texturing code to use CoglMaterial
     Adds a CoglMaterial abstraction, which includes support for multi-texturing
     [doc] Hooks up cogl-matrix reference documentation
     Adds CoglMatrix utility code
     [tests] Adds an interactive unit test for multi-texturing
     [multi-texturing] This adds a new cogl_multi_texture API for GL,GLES1 + GLES2

commit 86e95a779a87b0d02337c55548152883b6f944aa
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Tue Jan 27 15:18:45 2009 +0000

    Remove CloneTexture from the API
    
    ClutterClone supercedes ClutterCloneTexture, since it can clone
    every kind of actor -- including composite ones.
    
    This is another "brain surgery with a shotgun" kind of commit: it
    removes CloneTexture and updates every test case using CloneTexture
    to ClutterClone. The API fallout is minimal, luckily for us.

 clutter/Makefile.am                        |    2 -
 clutter/clutter-clone-texture.c            |  455 ----------------------------
 clutter/clutter-clone-texture.h            |   76 -----
 clutter/clutter-clone.c                    |   14 +-
 clutter/clutter.h                          |    1 -
 doc/reference/clutter/clutter-docs.xml     |    9 +-
 doc/reference/clutter/clutter-sections.txt |   30 +-
 tests/interactive/test-actors.c            |  151 ++++-----
 tests/interactive/test-depth.c             |   19 +-
 tests/interactive/test-fbo.c               |    2 +-
 tests/interactive/test-layout.c            |    3 +-
 tests/interactive/test-paint-wrapper.c     |    4 +-
 12 files changed, 122 insertions(+), 644 deletions(-)

commit 9266e110ded6b7308596eea2dd194736adf72641
Author: Robert Bragg <robert@linux.intel.com>
Date:   Tue Jan 27 15:17:16 2009 +0000

    Removes test-simple from tests/interactive/Makefile.am
    
    The addition was accidental

 tests/interactive/Makefile.am |    3 +--
 1 file changed, 1 insertion(+), 2 deletions(-)

commit 418fb995c86e4d3c6e76398bac95e980e42d8125
Author: Neil Roberts <neil@linux.intel.com>
Date:   Tue Jan 27 14:25:50 2009 +0000

    Replace clutter_set_use_mipmapped_text with clutter_set_font_flags
    
    The hope is that this function makes it easier to extend the font
    settings with more flags without having to add a function for every
    setting.
    
    A new flag for enabling hinting has been added. If set, this changes
    the font options on the global PangoContext and any newly created
    PangoContexts. The options are only set if the flag is changed from
    the default so it won't override any detailed setting chosen by the
    backend.

 clutter/clutter-deprecated.h               |    3 +
 clutter/clutter-main.c                     |   91 ++++++++++++++++++++++------
 clutter/clutter-main.h                     |    4 +-
 clutter/clutter-private.h                  |    3 +
 clutter/clutter-types.h                    |   16 +++++
 doc/reference/clutter/clutter-sections.txt |    5 +-
 6 files changed, 99 insertions(+), 23 deletions(-)

commit cd5c1bd98b41572ddadda2cde0d59bf189eb54c9
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Tue Jan 27 14:36:12 2009 +0000

    [tests] Clean up the Clone interactive test
    
    Do not assume the default stage, and store more data inside the
    "application" structure that gets passed around instead of relying
    on macros.

 tests/interactive/test-actor-clone.c |  121 ++++++++++++++++++----------------
 1 file changed, 64 insertions(+), 57 deletions(-)

commit 28f9749e8eb26e2e9215fedd7d4bd28490e1a80d
Author: Robert Bragg <robert@linux.intel.com>
Date:   Mon Jan 26 15:25:55 2009 +0000

    clutter-{clone-,}texture weren't updating their material opacity.
    
    cogl_set_source_color4ub was previously used to set a transparent
    white source color according to the actors opacity, but since
    cogl_set_source_color now always implies you want a solid fill we
    we use cogl_material_set_color4ub to achieve the same result.

 clutter/clutter-clone-texture.c |   24 ++++---------
 clutter/clutter-texture.c       |   75 +++++----------------------------------
 2 files changed, 15 insertions(+), 84 deletions(-)

commit 4a7fa6d0fa30b6510e997ed3e2fd0ec7ec1a6354
Author: Robert Bragg <robert@linux.intel.com>
Date:   Mon Jan 26 11:07:35 2009 +0000

    Updates GLES1 support for CoglMaterial
    
    This updates cogl/gles in line with the integration of CoglMaterial throughout
    Cogl that has been done for cogl/gl.
    
    Note: This is still buggy, but at least it builds again and test-actors works.
    Some GLES2 specific changes were made, but these haven't been tested yet.

 clutter/cogl/common/cogl-material.c      |   35 +-
 clutter/cogl/gl/cogl-texture.c           |   25 +-
 clutter/cogl/gles/cogl-context.c         |  128 ++-
 clutter/cogl/gles/cogl-context.h         |   92 +-
 clutter/cogl/gles/cogl-gles2-wrapper.h   |    5 +
 clutter/cogl/gles/cogl-internal.h        |   11 +-
 clutter/cogl/gles/cogl-primitives.c      |   75 +-
 clutter/cogl/gles/cogl-texture-private.h |   39 +-
 clutter/cogl/gles/cogl-texture.c         | 1642 +++++++++++++++++++-----------
 clutter/cogl/gles/cogl.c                 |   49 +-
 10 files changed, 1312 insertions(+), 789 deletions(-)

commit 60e81f0fda48d192d7ee701e80f0709fa509ca03
Author: Robert Bragg <robert@linux.intel.com>
Date:   Sat Jan 24 16:55:04 2009 +0000

    Normalizes gl vs gles code in preperation for synching material changes
    
    This changes all GLES code to use the OpenGL function names instead of
    the cogl_wrap_* names. For GLES2 we now define the OpenGL name to point
    to the wrapper, as opposed to defining the wrapper to point to the
    OpenGL name for GLES1.
    
    I've also done a quick pass through gl/cogl.c and gles/cogl.c to make
    them more easily comparable. (most of the code is now identical)

 clutter/cogl/gl/cogl-primitives.c   |   43 ++-
 clutter/cogl/gl/cogl.c              |  144 ++++-----
 clutter/cogl/gles/cogl-context.c    |    2 +-
 clutter/cogl/gles/cogl-fbo.c        |   32 +-
 clutter/cogl/gles/cogl-primitives.c |   34 +-
 clutter/cogl/gles/cogl-texture.c    |  585 +++++++++++++++++------------------
 clutter/cogl/gles/cogl.c            |  286 +++++++++--------
 7 files changed, 561 insertions(+), 565 deletions(-)

commit 427fff032eaedaf4489633d6a775413343b878a6
Author: Robert Bragg <robert@linux.intel.com>
Date:   Sat Jan 24 15:09:43 2009 +0000

    Removes cogl_blend_func and cogl_alpha_func
    
    The GL blend function and alpha function are now controlled by the material
    code, and even internally Cogl should now be using the material API when
    it needs control of these.

 README                              |    3 +++
 clutter/cogl/cogl.h.in              |   13 -------------
 clutter/cogl/common/cogl-material.c |    8 ++++++++
 clutter/cogl/gl/cogl-context.c      |    3 ---
 clutter/cogl/gl/cogl-context.h      |    2 --
 clutter/cogl/gl/cogl.c              |   24 ------------------------
 clutter/cogl/gles/cogl.c            |   24 ------------------------
 7 files changed, 11 insertions(+), 66 deletions(-)

commit 5985eef44cce8177bf8a93c6ffaf2b78cc634ece
Author: Robert Bragg <robert@linux.intel.com>
Date:   Fri Jan 23 16:15:40 2009 +0000

    Fully integrates CoglMaterial throughout the rest of Cogl
    
    This glues CoglMaterial in as the fundamental way that Cogl describes how to
    fill in geometry.
    
    It adds cogl_set_source (), which is used to set the material which will be
    used by all subsequent drawing functions
    
    It adds cogl_set_source_texture as a convenience for setting up a default
    material with a single texture layer, and cogl_set_source_color is now also
    a convenience for setting up a material with a solid fill.
    
    "drawing functions" include, cogl_rectangle, cogl_texture_rectangle,
    cogl_texture_multiple_rectangles, cogl_texture_polygon (though the
    cogl_texture_* funcs have been renamed; see below for details),
    cogl_path_fill/stroke and cogl_vertex_buffer_draw*.
    
    cogl_texture_rectangle, cogl_texture_multiple_rectangles and
    cogl_texture_polygon no longer take a texture handle; instead the current
    source material is referenced. The functions have also been renamed to:
    cogl_rectangle_with_texture_coords, cogl_rectangles_with_texture_coords
    and cogl_polygon respectivly.
    
    Most code that previously did:
      cogl_texture_rectangle (tex_handle, x, y,...);
    needs to be changed to now do:
      cogl_set_source_texture (tex_handle);
      cogl_rectangle_with_texture_coords (x, y,....);
    
    In the less likely case where you were blending your source texture with a color
    like:
      cogl_set_source_color4ub (r,g,b,a); /* where r,g,b,a isn't just white */
      cogl_texture_rectangle (tex_handle, x, y,...);
    you will need your own material to do that:
      mat = cogl_material_new ();
      cogl_material_set_color4ub (r,g,b,a);
      cogl_material_set_layer (mat, 0, tex_handle));
      cogl_set_source_material (mat);
    
    Code that uses the texture coordinates, 0, 0, 1, 1 don't need to use
    cog_rectangle_with_texure_coords since these are the coordinates that
    cogl_rectangle will use.
    
    For cogl_texture_polygon; as well as dropping the texture handle, the
    n_vertices and vertices arguments were transposed for consistency. So
    code previously written as:
      cogl_texture_polygon (tex_handle, 3, verts, TRUE);
    need to be written as:
      cogl_set_source_texture (tex_handle);
      cogl_polygon (verts, 3, TRUE);
    
    All of the unit tests have been updated to now use the material API and
    test-cogl-material has been renamed to test-cogl-multitexture since any
    textured quad is now technically a test of CoglMaterial but this test
    specifically creates a material with multiple texture layers.
    
    Note: The GLES backend has not been updated yet; that will be done in a
    following commit.

 README                                      |   49 +
 clutter/clutter-clone-texture.c             |   23 +-
 clutter/clutter-main.c                      |   27 +-
 clutter/clutter-texture.c                   |   22 +-
 clutter/cogl/cogl-material.h                |  169 +++-
 clutter/cogl/cogl-path.h                    |    3 +-
 clutter/cogl/cogl-texture.h                 |  185 ++--
 clutter/cogl/cogl.h.in                      |    2 +-
 clutter/cogl/common/cogl-material-private.h |   31 +-
 clutter/cogl/common/cogl-material.c         |  619 +++++++++---
 clutter/cogl/common/cogl-primitives.c       |   13 +-
 clutter/cogl/common/cogl-vertex-buffer.c    |   80 +-
 clutter/cogl/gl/cogl-context.c              |   89 +-
 clutter/cogl/gl/cogl-context.h              |   44 +-
 clutter/cogl/gl/cogl-internal.h             |   11 +-
 clutter/cogl/gl/cogl-primitives.c           |   50 +-
 clutter/cogl/gl/cogl-texture-private.h      |   39 +-
 clutter/cogl/gl/cogl-texture.c              | 1374 +++++++++++++++++----------
 clutter/cogl/gl/cogl.c                      |  128 ++-
 clutter/pango/cogl-pango-render.c           |  114 ++-
 tests/conform/test-backface-culling.c       |   42 +-
 tests/interactive/Makefile.am               |    5 +-
 tests/interactive/test-clip.c               |   12 +-
 tests/interactive/test-cogl-material.c      |  162 ----
 tests/interactive/test-cogl-multitexture.c  |  160 ++++
 tests/interactive/test-cogl-offscreen.c     |   38 +-
 tests/interactive/test-cogl-tex-convert.c   |   50 +-
 tests/interactive/test-cogl-tex-foreign.c   |   14 +-
 tests/interactive/test-cogl-tex-getset.c    |   14 +-
 tests/interactive/test-cogl-tex-polygon.c   |   18 +-
 tests/interactive/test-cogl-tex-tile.c      |   13 +-
 31 files changed, 2341 insertions(+), 1259 deletions(-)

commit 86e4e89bf1125f3090c63daaf423bc67c64d727f
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Mon Jan 26 11:03:12 2009 +0000

    Rename ActorClone to Clone/2
    
    Step two: rename the object and its methods.
    
    While we're at it, adhere more strictly to the coding style
    practises; rename :clone-source to :source; add a setter method
    for the :source property; take a reference on the source actor
    to avoid it disappearing while we're still accessing it.

 clutter/clutter-clone.c              |  258 ++++++++++++++++++++--------------
 clutter/clutter-clone.h              |   43 +++---
 tests/interactive/test-actor-clone.c |    4 +-
 3 files changed, 174 insertions(+), 131 deletions(-)

commit 00a4549eb1533478dd9a49eb44c3f910f666fe44
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Tue Jan 27 13:22:47 2009 +0000

    [tests] Remove an unused variable
    
    This fixes a compiler warning.

 tests/conform/test-timeline.c |    1 -
 1 file changed, 1 deletion(-)

commit 2138b1cbb2a5ab5d224cebc452bbc0726242d1f4
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Tue Jan 27 11:25:06 2009 +0000

    Bug 1388 - Clarify signal emission for advance_to_marker()
    
    Like clutter_timeline_advance(), calling advance_to_marker() will
    not emit ::new-frame for the frame where the marker is set on; it
    will also not emit ::marker-reached for the marker we are advancing
    the timeline to.

 clutter/clutter-timeline.c |    5 +++++
 1 file changed, 5 insertions(+)

commit 8608d103f82f14ead4cd2c92d2ce2eef9363ed54
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Tue Jan 27 11:18:09 2009 +0000

    Bug 1387 - Clarify new-frame signal emission with advance()
    
    When calling clutter_timeline_advance(), a timeline will not emit
    the ::new-frame signal for the frame we are advancing to, as this
    would break the invariants of the timeline behaviour.
    
    The documentation should make this clear.

 clutter/clutter-timeline.c |    7 ++++++-
 1 file changed, 6 insertions(+), 1 deletion(-)

commit 43bd4e5d3fcbe1a22bcae45d461f83f2ee0a9758
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Tue Jan 27 10:35:50 2009 +0000

    [timeline] Check the fps property range in the ctor
    
    The clutter_timeline_new() constructor is not checking the full
    range of the passed :fps property. The ParamSpec of the property
    and the setter method perform this check, so the ctor should as
    well.

 clutter/clutter-timeline.c |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit f753847851fafd76d9c91f05489aa9e5372f33d7
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Tue Jan 27 10:33:44 2009 +0000

    [timeline] Move a complex condition into its own function
    
    The "is-timeline-complete" condition is pretty long, spanning
    four lines and four logical sub-conditions. It is possible to
    neatly move it into an is_complete() function and make the
    code more readable.

 clutter/clutter-timeline.c |   21 ++++++++++++---------
 1 file changed, 12 insertions(+), 9 deletions(-)

commit 092db1098ce872b16765d25f4ad3a4215baa8996
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Tue Jan 27 10:32:15 2009 +0000

    [timeline] Intern signal names
    
    The signal names are static string and thus should be interned
    so that Glib can do a simple pointer comparison whenever needed,
    instead of a strcmp().

 clutter/clutter-timeline.c |   10 +++++-----
 1 file changed, 5 insertions(+), 5 deletions(-)

commit 7863ca4a5549cf2fccc5ded8854b0b8156b5d323
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Tue Jan 27 10:31:53 2009 +0000

    [timeline] Whitespace fixes

 clutter/clutter-timeline.c |   29 +++++++++++++++++++++--------
 1 file changed, 21 insertions(+), 8 deletions(-)

commit 2be9cdc267f7e7d7190f8e1056e7c717f9358626
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Tue Jan 27 10:27:33 2009 +0000

    [timeline] Documentation and comment fixes
    
    The long description of the ClutterTimeline class is very C
    developer-oriented. Since many language bindings will refer to
    the C API reference we should probably be more verbose and
    language agnostic -- at least in the class description.
    
    The methods documentation also requires a little pass to increase
    the consistency of the terminology, the grammar and the syntax.
    
    Finally, comments never killed anyone.

 clutter/clutter-timeline.c |   75 +++++++++++++++++++++++---------------------
 1 file changed, 39 insertions(+), 36 deletions(-)

commit 06162370643aa80505e7e3964545a1c8e1a023e0
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Fri Jan 23 17:56:25 2009 +0000

    [tests] Assert as soon as possible
    
    In order to give a usable location of the errors in the test
    suite, we need to assert() as soon as possible.

 tests/conform/test-timeline.c |   23 ++++++-----------------
 1 file changed, 6 insertions(+), 17 deletions(-)

commit 763de185e9abb9c4aee967a858b567e6c7435b26
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Fri Jan 23 17:17:36 2009 +0000

    [timeline] Create markers hash tables on demand
    
    Since not every timeline will have markers it's unfair to make
    all of them crete two empty hash tables (with a preallocated
    fixed size).
    
    This commit moves the responsibility of creating the hash tables
    to the marker API itself, and adds the relative checks.

 clutter/clutter-timeline.c |   60 +++++++++++++++++++++++++++++++++++---------
 1 file changed, 48 insertions(+), 12 deletions(-)

commit 1e071ed859a1a2aeaf7c3e01f9d9f8d34fb00628
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Fri Jan 23 17:14:39 2009 +0000

    [timeline] Limit timelines to 1000 frames per second
    
    Since we are using milliseconds granularity to integrate timelines
    with the GLib main loop, we cannot allow values of the :fps
    property bigger than 1000. This means validating the fps value both
    in the GParamSpec and the clutter_timeline_set_speed() accessor
    function.
    
    This should also fix floating point exceptions when trying to
    perform "n_frames = milliseconds / (1000 / fps)".
    
    See bug 1354:
    
      http://bugzilla.openedhand.com/show_bug.cgi?id=1354

 clutter/clutter-timeline.c |  119 ++++++++++++++++++++++++--------------------
 1 file changed, 64 insertions(+), 55 deletions(-)

commit 81f642d4b775b2a1020197c94332077848c5c60b
Author: Havoc Pennington <hp@pobox.com>
Date:   Mon Jan 26 16:24:17 2009 +0000

    Bug 1414 - avoid relayout of ClutterTexture if not syncing size
    
    If a ClutterTexture does not sync size, it should be possible to
    change the texture size without causing a relayout.
    
    Signed-off-by: Emmanuele Bassi <ebassi@linux.intel.com>

 clutter/clutter-texture.c |    3 ++-
 1 file changed, 2 insertions(+), 1 deletion(-)

commit 9ccae46bc1e5af4fe51bc1d5b2f29e475585303d
Author: Havoc Pennington <hp@pobox.com>
Date:   Mon Jan 26 16:22:39 2009 +0000

    Bug 1415 - short-circuit setting same clip again
    
    There is some GL work and a repaint anytime the clip is set
    or unset, so avoid that if it isn't really changed.
    
    Signed-off-by: Emmanuele Bassi <ebassi@linux.intel.com>

 clutter/clutter-actor.c |   10 ++++++++++
 1 file changed, 10 insertions(+)

commit 54f4ed775c72387acd6959f5c68453846a90dd68
Author: Neil Roberts <neil@linux.intel.com>
Date:   Wed Jan 21 12:47:29 2009 +0000

    Set the SYNC_MATRICES flag when a stage is first realized
    
    The stage will usually be painted before the first ConfigureNotify
    arrives so we need to set the SYNC_MATRICES flag to ensure that the
    viewport will be correct for that paint. Unfortunately this means that
    the viewport will be set again once the ConfigureNotify is received
    but compared to rendering an initial invalid scene I think it is the
    lesser of two evils.

 clutter/clutter-stage.c |    5 +++++
 1 file changed, 5 insertions(+)

commit 9197646d25d55e0cc826dee49254bf99ebf6c063
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Mon Jan 26 10:32:53 2009 +0000

    Rename ActorClone to Clone/1
    
    Step one of the ActorClone -> Clone renaming: rename the files.

 clutter/Makefile.am           |    4 +-
 clutter/clutter-actor-clone.c |  274 -----------------------------------------
 clutter/clutter-actor-clone.h |   76 ------------
 clutter/clutter-clone.c       |  274 +++++++++++++++++++++++++++++++++++++++++
 clutter/clutter-clone.h       |   76 ++++++++++++
 clutter/clutter.h             |    2 +-
 6 files changed, 353 insertions(+), 353 deletions(-)

commit cdb360107b08302597d538f0c35c4a55114f2f54
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Fri Jan 23 16:50:17 2009 +0000

    Whitespace fixes for BehaviourEllipse
    
    Simple fallout from the automated conversion scripts that
    switched from ClutterFixed to float.

 clutter/clutter-behaviour-ellipse.c |   63 ++++++++++++++++++-----------------
 1 file changed, 32 insertions(+), 31 deletions(-)

commit 171a7647b916ee0c12d1494ba47921f3cd783c53
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Fri Jan 23 16:22:02 2009 +0000

    Bug 1395 - apply and get_nth_actor are inconsistent
    
    When calling clutter_behaviour_apply() the new actor is prepended
    to the list of actors to which a behaviour is applied; this breaks
    the rest of methods working on the actors list, e.g.:
    
      # adding actors
      apply(actor_0);
      apply(actor_1);
      apply(actor_2);
    
      # expected: [ actor_0, actor_1, actor_2 ]
      [ actor_2, actor_1, actor_0 ] = get_actors();
    
      # expected: actor_2
      actor_0 = get_nth_actor(2);
    
    This commit fixes the inconsistency in the returned values.

 clutter/clutter-behaviour.c |    4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

commit ba068f6bc9f15aafc6d1af3526fc101634b978ac
Author: Neil Roberts <neil@linux.intel.com>
Date:   Sat Jan 24 00:25:24 2009 +0000

    Fix the Cogl primitives for the GLES backend
    
    The Cogl primitives broke for GLES 1.1 and 2 after the cogl-float
    branch merge.
    
    CoglPathNode was still being declared as GLfixed for the GLES backend
    but it was being filled with float values so they were all ending up
    as numbers < 1.
    
    glDrawArrays was being called with GL_FIXED so this has been changed
    to GL_FLOAT.
    
    The scanline rasterizer had a leftover hardcoded ClutterFixed constant
    to add a small amount to the height of each line.
    
    struct _CoglFloatVec2 has been removed because it is no longer used
    anywhere.

 clutter/cogl/common/cogl-primitives.h |   21 ---------------------
 clutter/cogl/gles/cogl-primitives.c   |   14 +++++++-------
 2 files changed, 7 insertions(+), 28 deletions(-)

commit 8e437e838fe3e62354ae133d3e90af6d9984c4f7
Author: Neil Roberts <neil@linux.intel.com>
Date:   Fri Jan 23 23:55:44 2009 +0000

    Simplify test-cogl-primitives
    
    This removes a lot of code from test-cogl-primitives to make it easier
    to follow. The TestCoglBox custom actor has gone and instead a blank
    ClutterGroup is created with a paint signal handler.
    
    Instead of rendering constantly and updating when a GTimer elapses a
    second, a ClutterTimeline is used with 1 fps and a new redraw is
    queued every frame.
    
    The custom main loop is replaced with a regular call to clutter_main.
    This fixes the close button of the stage window so you can quit
    without having to press Ctrl+C.

 tests/interactive/test-cogl-primitives.c |  167 ++++--------------------------
 1 file changed, 18 insertions(+), 149 deletions(-)

commit 343b0ed67ef4a70e42b3eb2a93b15f42bf08e981
Author: Neil Roberts <neil@linux.intel.com>
Date:   Fri Jan 23 23:41:26 2009 +0000

    [test-cogl-primitives] Remove trailing whitespace

 tests/interactive/test-cogl-primitives.c |   50 +++++++++++++++---------------
 1 file changed, 25 insertions(+), 25 deletions(-)

commit 4d7caa4bd5267e0cc6b674d6cb76597ebc812694
Author: Neil Roberts <neil@linux.intel.com>
Date:   Fri Jan 23 22:57:36 2009 +0000

    [clutter-timeline] Remove the code for backwards timelines in get_progress
    
    The special check to invert the progress when the timeline direction
    is backwards is not necessary because the actual frame number will be
    decreasing in that case. Inverting just makes it progress forwards
    again.
    
    This is more apparent since the float-alpha-value branch merge because
    the clutter_linear function directly returns the value from
    get_progress. For example in test-depth, the animations loop instead
    of oscillating back and forth.

 clutter/clutter-timeline.c |    3 ---
 1 file changed, 3 deletions(-)

commit 9ea6ab76fb09891dd1c1380c4e163aaf656c507c
Author: Neil Roberts <neil@linux.intel.com>
Date:   Fri Jan 23 17:25:43 2009 +0000

    Fix gtk-doc reference since the anchor point changes
    
    The documentation has been updated to reflect the fact that the anchor
    point will move when the actor changes size if it was specified using
    a gravity value. The new functions for setting the scale center and z
    rotation gravity are also documented.

 clutter/clutter-actor.c                    |  154 +++++++++++++++++++++++++---
 doc/reference/clutter/clutter-sections.txt |   15 +--
 2 files changed, 148 insertions(+), 21 deletions(-)

commit 5acff562b40291402ef9a9c7977690824027804e
Author: Neil Roberts <neil@linux.intel.com>
Date:   Fri Jan 23 15:57:20 2009 +0000

    [test-anchors] Add tests for the rotation centers
    
    The rotation centers are now tested in a similar way to the anchor
    point and scale centers.
    
    The notification handling code has been simplified a bit to handle the
    increased amount of properties.

 tests/conform/test-anchors.c |  378 ++++++++++++++++++++++++++++++++++++------
 1 file changed, 326 insertions(+), 52 deletions(-)

commit d5e5d35316046a192064d5a9cef20542a100cb7d
Author: Neil Roberts <neil@linux.intel.com>
Date:   Fri Jan 23 15:55:41 2009 +0000

    Convert the rotation centers to be AnchorCoords
    
    Currently only the Z axis rotation center can be set using a gravity
    but the other rotations also store their center as an AnchorCoord for
    consistency. Specifying the center as a gravity makes less sense for
    the other axes because the actors have no size along the Z axis.
    
    The rotation angles are now stored as gdoubles and the fixed point *x
    entry points have been removed.
    
    The Z rotation can now be set with a gravity center using the
    following new function:
    
    void clutter_actor_set_z_rotation_from_gravity (ClutterActor   *self,
                                                    gdouble         angle,
                                                    ClutterGravity  gravity);

 clutter/clutter-actor.c            |  443 +++++++++++++++---------------------
 clutter/clutter-actor.h            |   15 +-
 clutter/clutter-behaviour-rotate.c |   10 +-
 3 files changed, 196 insertions(+), 272 deletions(-)

commit a8a986a1a2d4a32d8ce502f5cf8af6a98d8bd28e
Author: Neil Roberts <neil@linux.intel.com>
Date:   Fri Jan 23 11:12:54 2009 +0000

    [test-anchors] Add tests for the scale center
    
    A separate set of tests for the scale center have been added that work
    in a similar way to the anchor point tests.

 tests/conform/test-anchors.c |  205 ++++++++++++++++++++++++++++++++++++++----
 1 file changed, 188 insertions(+), 17 deletions(-)

commit e10d255b83071014219a54e2f3d5c31444df340f
Author: Neil Roberts <neil@linux.intel.com>
Date:   Fri Jan 23 11:11:24 2009 +0000

    Add a scale center property to ClutterActor
    
    This sets the center point from which the scaling will occur. This can
    be used insetad of the anchor point to avoid moving the actor. Like
    the anchor point, it can be specified as either a coordinate in units
    or a gravity enum.
    
    To set the center you can use two new variants of set_scale:
    
    clutter_actor_set_scale_full (ClutterActor *self,
                                  gdouble       scale_x,
                                  gdouble       scale_y,
                                  int           center_x,
                                  int           center_y);
    
    or
    
    clutter_actor_set_scale_with_gravity (ClutterActor   *self,
                                          gdouble         scale_x,
                                          gdouble         scale_y,
                                          ClutterGravity  gravity);
    
    The ClutterFixed variants of the set_scale functions have been removed
    and the scale value is now always stored as a double.

 clutter/clutter-actor.c           |  279 +++++++++++++++++++++++++++++--------
 clutter/clutter-actor.h           |   27 +++-
 clutter/clutter-behaviour-scale.c |    4 +-
 3 files changed, 245 insertions(+), 65 deletions(-)

commit 7818eb704d6fdf7714be010d2b7be7e34420bb63
Author: Neil Roberts <neil@linux.intel.com>
Date:   Thu Jan 22 13:14:02 2009 +0000

    Add a conformance test for the anchor point
    
    This verifies that the anchor point can be set from a gravity and then
    it moves when the anchor point changes size.

 tests/conform/Makefile.am         |    1 +
 tests/conform/test-anchors.c      |  253 +++++++++++++++++++++++++++++++++++++
 tests/conform/test-conform-main.c |    2 +
 3 files changed, 256 insertions(+)

commit a24b9a32e56b76ab04727bb1f9e29ec3cca8dd11
Author: Neil Roberts <neil@linux.intel.com>
Date:   Thu Jan 22 13:07:33 2009 +0000

    Store when the anchor point is set from a gravity
    
    This makes it so when the anchor point is set using a gravity enum
    then the anchor point moves when the actor changes size. A new
    property is added for the anchor point gravity. If the anchor point is
    set from gravity then the position in units can also be retreived with
    the regular API.
    
    A new union type is used to store the anchor point with helper
    accessor functions. The hope is these can be reused for the scale and
    rotation center points.

 clutter/clutter-actor.c |  429 ++++++++++++++++++++++++++++++++++++-----------
 clutter/clutter-actor.h |    1 +
 2 files changed, 333 insertions(+), 97 deletions(-)

commit d64ff5c9f0a564b9ac6d0f8688c355aaa97a05f2
Author: Neil Roberts <neil@linux.intel.com>
Date:   Fri Jan 23 18:20:46 2009 +0000

    [test-text] Use g_setenv instead of setenv
    
    setenv doesn't appear to be available on Windows so it fails to
    compile.

 tests/micro-bench/test-text.c |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit 3d07e34cc54568a2e41cbd8565b6b21aa6dc5f53
Merge: 616c082 634cdea
Author: Robert Bragg <robert@linux.intel.com>
Date:   Fri Jan 23 15:23:49 2009 +0000

    Merge commit 'origin/master' into cogl-material
    
    Conflicts:
    
    	clutter/clutter-texture.c
    	clutter/cogl/cogl-texture.h
    	clutter/cogl/cogl.h.in
    	clutter/cogl/common/Makefile.am
    	clutter/cogl/gl/Makefile.am
    	clutter/cogl/gles/Makefile.am
    	clutter/cogl/gles/cogl-gles2-wrapper.c
    	clutter/cogl/gles/cogl-gles2-wrapper.h

commit 134edac82c5adc564b88884983cc1caedcc1191a
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Fri Jan 23 15:16:21 2009 +0000

    Bug 1361 - Unused ClutterStage::get_resolution() methods
    
    The clutter_stage_get_resolution() and fixed-point API are just
    shorthands for:
    
            clutter_backend_get_resolution (default_backend);
    
    And as such do not fit at all in the ClutterStage class. The only
    reason for their existence was the ClutterUnit conversion macros,
    which have now been fixed to use the default backend through a
    function call instead.
    
    Thus, we can safely remove the stage entry points.

 clutter/clutter-deprecated.h               |   14 ++-------
 clutter/clutter-stage.c                    |   46 ----------------------------
 clutter/clutter-stage.h                    |    2 --
 doc/reference/clutter/clutter-sections.txt |    2 --
 4 files changed, 2 insertions(+), 62 deletions(-)

commit ae40bd37c79db41d751e3d5300a098c53f95e5c3
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Fri Jan 23 13:29:55 2009 +0000

    Clean up the test reports
    
    Since we override the clean-generic target in order to remove
    the shell scripts we create for each conformance test unit, we
    cannot use CLEANFILES to remove the test reports.

 tests/conform/Makefile.am |    8 ++++----
 1 file changed, 4 insertions(+), 4 deletions(-)

commit 915d9ec7ca782572944a96fd52c2ff2ffdb1dac7
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Fri Jan 23 13:09:51 2009 +0000

    Split maintainer-flags from the compiler flags
    
    The maintainer compiler flags we use trigger warnings and errors
    in the autogenerated code that gtk-doc creates to scan the header
    and source files. Since we cannot control that, and we must run
    a distcheck with both --enable-gtk-doc and --enable-maintainer-flags
    turned on, we need to use less-strict compiler flags when inside
    the doc/reference subdirectories.
    
    The way to do this is to split the maintainer compiler flags into
    their own Makefile variable, called MAINTAINER_CFLAGS. The we
    can use $(MAINTAINER_CFLAGS) in the INCLUDES or _CFLAGS sections
    of each part of the source directories we wish to check with the
    anal retentiveness suited for maintainers.

 clutter/Makefile.am             |    1 +
 clutter/cogl/common/Makefile.am |    1 +
 clutter/cogl/gl/Makefile.am     |    1 +
 clutter/cogl/gles/Makefile.am   |    1 +
 clutter/pango/Makefile.am       |    1 +
 configure.ac                    |    5 +++--
 tests/conform/Makefile.am       |   17 +++++++++++------
 tests/interactive/Makefile.am   |    2 +-
 tests/micro-bench/Makefile.am   |    5 ++++-
 9 files changed, 24 insertions(+), 10 deletions(-)

commit 20973bd29f3471942098c0354be3d583d5417672
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Fri Jan 23 13:08:46 2009 +0000

    Fix compiler warnings
    
    The maintainer-flags option discovered the usual amount of
    collisions and compiler warnings we have to fix in order to
    get distcheck to pass.

 clutter/clutter-behaviour-depth.c        |    1 -
 clutter/cogl/common/cogl-primitives.c    |  100 ++++++------
 clutter/cogl/gl/cogl-texture.c           |  247 ++++++++++++++++--------------
 tests/interactive/test-cogl-primitives.c |    2 +-
 tests/interactive/test-cogl-tex-tile.c   |    1 +
 5 files changed, 182 insertions(+), 169 deletions(-)

commit 792ffa1538837624fdbf06819210d923734ac217
Merge: f19dd4b ac1a0d5
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Fri Jan 23 12:10:50 2009 +0000

    Merge branch 'float-alpha-value'
    
    * float-alpha-value:
      [script] Parse easing modes by name
      [docs] Update the easing modes documentation
      [animation] Implement new easing functions
      [animation] Move the alpha value to floating point

commit f19dd4b2b0837bfffc9c232d4006f35bc00829fe
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Fri Jan 23 11:34:13 2009 +0000

    [actor] Add the ::pick signal to the Actor class
    
    Since we allow overriding the paint() implementation through the
    ::paint signal to change the way an actor is being painted, we
    should also allow overriding the pick() implementation using a
    ::pick signal.

 clutter/clutter-actor.c |   39 ++++++++++++++++++++++++++++++++++++---
 1 file changed, 36 insertions(+), 3 deletions(-)

commit 634cdeab1fe574d5cbf41ed48951d8bb7bc2d9b0
Author: Neil Roberts <neil@linux.intel.com>
Date:   Thu Jan 22 17:42:26 2009 +0000

    Fix some failures from the fixed-to-float script in cogl-texture
    
    The script converted calls to COGL_FIXED_MUL(x,y) to (x*y). However
    this fails for cases like this:
    
     COGL_FIXED_MUL(a + b, c)
    
    which become
    
     (a + b * c)
    
    The meaning of this is of course different because multiplication has
    a higher precedence than addition.
    
    This was causing breakages in cogl_texture_quad_sw when the vertex
    coordinates are not in increasing order. This was the case in
    test-backface-culling when NPOTs are not available.

 clutter/cogl/gl/cogl-texture.c   |   20 ++++++++------------
 clutter/cogl/gles/cogl-texture.c |   20 ++++++++------------
 2 files changed, 16 insertions(+), 24 deletions(-)

commit 047161ea960037275f211d851fe84744c6cf947b
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu Jan 22 16:55:51 2009 +0000

    [gitignore] Update ignore file with the new tests

 .gitignore |    4 ++++
 1 file changed, 4 insertions(+)

commit 1b242e35501e99816cece18eb8bcd29f988ca2b1
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu Jan 22 16:54:49 2009 +0000

    [tests] Use the right value in cogl_texture_new*
    
    The correct symbol for disabling the flags when creating a new
    COGL texture is COGL_TEXTURE_NONE.

 tests/conform/test-backface-culling.c |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit e7d533f1760390014e1d66d8e20373cd3bc2b7ff
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu Jan 22 15:59:23 2009 +0000

    Improve accuracy of clutter_sinx()
    
    Improve clutter_sinx() by replacing the low precision CFX_SIN_STEP
    with a multiply/divide pair. This reduces the maximum error from
    1.8e-04 to 2.4e-05.
    
    http://bugzilla.openedhand.com/show_bug.cgi?id=1314
    
    Based on a patch by Owen W. Taylor <otaylor@fishsoup.net>

 clutter/cogl/common/cogl-fixed.c |   36 +++++++++++++++++++++++-------------
 1 file changed, 23 insertions(+), 13 deletions(-)

commit a1e493fadb2a16ec7755c16c2a32276519a06d00
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu Jan 22 15:55:43 2009 +0000

    Use the allocation to get the pick area
    
    Since a pick is really a paint operation, we can safely get
    the allocation box, instead of using get_width() and get_height().
    
    This should help cutting down the function calls. If we were
    feeling adventurous, we could even use the allocation directly
    from the private data structure.
    
    Based on a patch by Gwenole Beauchesne <gbeauchesne@splitted-desktop.org>

 clutter/clutter-actor.c |   13 ++++++++++---
 1 file changed, 10 insertions(+), 3 deletions(-)

commit e1ab6f972ea7a99ec18ac685003f7e022edcc844
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu Jan 22 14:52:34 2009 +0000

    [gles] Fix computation of camera distance
    
    Port the fix in commit f409b58e to the GLES implementation of
    COGL.

 clutter/cogl/gles/cogl.c |   21 +++++++--------------
 1 file changed, 7 insertions(+), 14 deletions(-)

commit f409b58e89b17267fedc4121f94e906b54ea7b4c
Author: Owen W. Taylor <otaylor@redhat.com>
Date:   Thu Jan 22 14:17:16 2009 +0000

    Fix computation of camera distance
    
    Compute the value of the camera distance as exactly half the xx
    component of the projection matrix. The heuristically derived
    value for 60 degrees was off by about 0.016%, causing noticeable
    blurring, and other field of view angles which didn't have the
    heuristic adjustment off by much more.
    
    Signed-off-by: Emmanuele Bassi <ebassi@linux.intel.com>

 clutter/cogl/gl/cogl.c |   58 +++++++++++++++++++++++++++++++-----------------
 1 file changed, 38 insertions(+), 20 deletions(-)

commit a74369e309f414ef812e2d741e18cd0243a6abff
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu Jan 22 13:58:50 2009 +0000

    Avoid needlessly queue redraws for invisible actors
    
    If an actor is not set as visible, or if it is in a section of
    the scenegraph that it's set as not visible (e.g. one of the
    parents is not visible) then we should not queue a redraw for
    it.
    
    Patch based on code from Michael Boccara <michael@graphtech.co.il>

 clutter/clutter-actor.c |   14 +++++++++++++-
 1 file changed, 13 insertions(+), 1 deletion(-)

commit c998462c9fc2ca9875637d78eb605929a96639e7
Author: Jason Tackaberry <tack-clutter@urandom.ca>
Date:   Thu Jan 22 13:38:32 2009 +0000

    Bug 1409 - Use G_SIGNAL_RUN_LAST with ::queue-redraw signal
    
    The intention behind ::queue-redraw is to be able to block the
    default handler by attaching a callback and calling one of the
    g_signal_stop_emission variants.
    
    However this doesn't work, because ::queue-redraw has the
    G_SIGNAL_RUN_FIRST flag instead of G_SIGNAL_RUN_LAST.

 clutter/clutter-stage.c |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit 01a5cb84302e34e784a3a41d2e78bb4934dfb7b8
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu Jan 22 13:24:20 2009 +0000

    Fix typo in the flags update
    
    Epic en_GB keyboard FAIL.

 clutter/clutter-texture.c |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit 6ca40faaec99a13f2379990f1b1b92b768a74ac7
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu Jan 22 12:11:25 2009 +0000

    [units] Fix Units in GValue and ClutterParamSpecUnit
    
    The GValue and GParamSpec integration of ClutterUnit was still
    using the old, fixed-point based logic.
    
    Storing ClutterUnits in a GValue should use floating point values,
    and ClutterParamSpecUnit should follow suit.

 clutter/clutter-units.c |   55 +++++++++++++++++++++--------------------------
 1 file changed, 24 insertions(+), 31 deletions(-)

commit 1876785d12d64c4c6efdbd96d2c54255f433c41b
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu Jan 22 11:46:23 2009 +0000

    Fix the format for a floating point value
    
    The debug annotation was still expecting an integer after
    we switched the angle to float.

 clutter/clutter-behaviour-ellipse.c |    4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

commit 355555c1bf782f08e74ceb298aac7cf3d4d4973b
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu Jan 22 11:37:52 2009 +0000

    Store the units-per-em inside the Backend
    
    Instead of recomputing the number of units needed to fit in
    an em each time clutter_units_em() is called, we can store this
    value into the default Backend along with the resolution and
    font name. The value should also be updated each time the
    resolution and font are changed, to keep it up to date.

 clutter/clutter-backend.c |  101 ++++++++++++++++++++++++++++++++++++++-------
 clutter/clutter-private.h |    2 +
 clutter/clutter-units.c   |   31 +-------------
 3 files changed, 89 insertions(+), 45 deletions(-)

commit c5aca39c69632d842c54d50eca3cac9f30e5dd3b
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Wed Jan 21 22:03:31 2009 +0000

    [docs] Specify the coordinate space of ButtonEvent
    
    The coordinates of each ButtonEvent are relative to the stage that
    received the event, so we should document this in the structure
    annotation.
    
    It should also be mentioned that the coordinates can be transformed
    into actor-relative coordinates by using transform_stage_point().

 clutter/clutter-event.h |   14 +++++++++-----
 1 file changed, 9 insertions(+), 5 deletions(-)

commit ee883f30d47992e5ad87d0d70d2f97f79442e8ad
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Wed Jan 21 17:35:47 2009 +0000

    Add units-from-em conversion
    
    An em is a unit of measurement in typography, equal to the point
    size of the current font.
    
    It should be possible to convert a value expressed in em to
    ClutterUnits by using the current font and the current DPI as
    stored by the default backend.

 clutter/clutter-units.c                    |   50 ++++++++++++++++++++++++++++
 clutter/clutter-units.h                    |   11 ++++++
 doc/reference/clutter/clutter-sections.txt |    4 +++
 3 files changed, 65 insertions(+)

commit 93a0454c09fafc1d45198bed5b7575ea3711a42c
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Wed Jan 21 17:10:36 2009 +0000

    Remove the single-stage units converters
    
    The stage-with/height-percentage converters had been broken by
    the multiple-stages support of Clutter 0.8. They are also made
    useless by the fact that Units are now floating point values.
    
    The millimeters and typographic points converters also depended
    on the default stage, but they can be reworked to use the default
    DPI coming from the default Backend instead.

 clutter/clutter-actor.c                    |   31 ++++++++++++---
 clutter/clutter-units.c                    |   52 ++++++++++++++++++++++++++
 clutter/clutter-units.h                    |   56 +++++++++++++---------------
 doc/reference/clutter/clutter-sections.txt |   17 +++------
 4 files changed, 108 insertions(+), 48 deletions(-)

commit 0be613109e5af03a37dd47348576130f028a9a8e
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Wed Jan 21 16:41:18 2009 +0000

    [docs] Remove sources of warnings in API references

 clutter/cogl/cogl-texture.h                |    2 +-
 clutter/cogl/cogl-vertex-buffer.h          |    4 +--
 doc/reference/clutter/clutter-sections.txt |   18 ++--------
 doc/reference/cogl/cogl-docs.sgml          |    2 +-
 doc/reference/cogl/cogl-sections.txt       |   50 ++++++++++++++++++----------
 5 files changed, 40 insertions(+), 36 deletions(-)

commit 74d00185fd73d4be20d525612c9ffdb32ca944e1
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Wed Jan 21 10:59:19 2009 +0000

    [docs] Add CoglTextureFlags to the API reference

 doc/reference/cogl/cogl-sections.txt |    1 +
 1 file changed, 1 insertion(+)

commit 2cb3a41dff2f3758bff7ea8d139c09dee2ea18e6
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Wed Jan 21 10:58:32 2009 +0000

    [docs] Build COGL API reference first
    
    Since the Clutter API reference needs some types from COGL's,
    we should be building COGL's API reference first.

 doc/reference/Makefile.am |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit 07689865fe3dbea4bbf013e2c7258e1a174f9596
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Sun Jan 18 15:00:18 2009 +0000

    [tests] Update the tests calling cogl_texture_new_*
    
    The tests calling any of the cogl_texture_new_* family of functions
    must be updated to the new constructor syntax.

 tests/interactive/test-clip.c             |    6 +++--
 tests/interactive/test-cogl-offscreen.c   |    6 +++--
 tests/interactive/test-cogl-tex-convert.c |   12 ++++++---
 tests/interactive/test-cogl-tex-getset.c  |    6 +++--
 tests/interactive/test-cogl-tex-polygon.c |   38 ++++++++++++++++++++---------
 tests/interactive/test-cogl-tex-tile.c    |    3 ++-
 6 files changed, 49 insertions(+), 22 deletions(-)

commit c9739e6aefd469cfe56b566bdba876f904109ed3
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Sun Jan 18 14:51:19 2009 +0000

    Change the COGL texture constructor to use flags
    
    Boolean arguments for functions are pretty evil and usually
    lead to combinatorial explosion of parameters in case multiple
    settings are added.
    
    In the case of the COGL texture constructors we have a boolean
    argument for enabling the auto-mipmapping; it is conceivable that
    we might want to add more settings for a COGL texture without
    breaking API or ABI compatibility, so the boolean argument should
    become a bitmask.
    
    The internals have not been changed: instead of checking for
    a non-zero value, we check for a bitmask being set.

 clutter/clutter-texture.c              |   72 ++++++++++-------
 clutter/cogl/cogl-texture.h            |  139 +++++++++++++++++---------------
 clutter/cogl/cogl-types.h              |   15 ++++
 clutter/cogl/gl/cogl-texture.c         |   52 ++++++------
 clutter/cogl/gles/cogl-texture.c       |   52 ++++++------
 clutter/pango/cogl-pango-glyph-cache.c |   31 ++++---
 6 files changed, 205 insertions(+), 156 deletions(-)

commit 8736db6aed2879487de5891920505268d57aa090
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Fri Jan 16 10:58:51 2009 +0000

    [docs] Update ClutterMedia section
    
    The ClutterMedia API has been changed, so we need to update
    the API reference to reflect that.

 doc/reference/clutter/clutter-sections.txt |   12 ++++++------
 1 file changed, 6 insertions(+), 6 deletions(-)

commit 5a4f9c5050521fcbb97d7f7c8897398b63f1e48e
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Fri Jan 16 10:38:36 2009 +0000

    Bug 1404 - ClutterMedia issues
    
    ClutterMedia was a rough cut at a simple media API; it needs some
    re-evaluation before 1.0 in order to keep it simple to use, and
    simple to implement.
    
    - ClutterMedia:position
    
      The position property accessors collide with the corresponding
      ClutterActor methods, which make it impossible to bind them in
      high-level languages:
    
        video_texture.set_position()
        video_texture.get_position()
    
      In order to resolve the collision, we have to go through the
      GObject properties API:
    
        video_texture.set('position', value)
        value = video_texture.get('position')
    
      A :position in seconds is also a GStreamer-ism, and should rather
      be converted to a :progress property, with a normalized value
      between 0 and 1. the current position in seconds would then simply
      be progress*duration. For non-seekable streams, 0.0 would always
      be returned. This makes it easier to use the progress inside
      animations, Timelines or ClutterPath instances.
    
    - ClutterMedia:volume should be renamed to :audio-volume and normalized
      as well, instead of being a floating point value between 0 and 100.
    
    - ClutterMedia:buffer-percent should just be :buffer-fill and normalized
      between 0.0 and 1.0

 clutter/clutter-media.c |  409 ++++++++++++++++++++++++++---------------------
 clutter/clutter-media.h |   97 ++++-------
 2 files changed, 261 insertions(+), 245 deletions(-)

commit e338245827dd81b68672955a0cc406dc43db00e5
Author: Robert Bragg <robert@linux.intel.com>
Date:   Tue Jan 20 21:12:44 2009 +0000

    Renames the mesh api to the "vertex buffer api".
    
    This better reflects the fact that the api manages sets of vertex attributes,
    and the attributes really have no implied form. It is only when you use the
    attributes to draw that they become mesh like; when you specify how they should
    be interpreted, e.g. as triangle lists or fans etc. This rename frees up the
    term "mesh", which can later be applied to a concept slightly more fitting.
    E.g. at some point it would be nice to have a higher level abstraction that
    sits on top of cogl vertex buffers that adds the concept of faces. (Somthing
    like Blender's mesh objects.) There have also been some discussions over
    particle engines, and these can be defined in terms of emitter faces; so some
    other kind of mesh abstraction might be usefull here.

 clutter/cogl/cogl-mesh.h                         |  299 ----
 clutter/cogl/cogl-vertex-buffer.h                |  308 ++++
 clutter/cogl/cogl.h.in                           |    2 +-
 clutter/cogl/common/Makefile.am                  |    3 +-
 clutter/cogl/common/cogl-mesh-private.h          |  143 --
 clutter/cogl/common/cogl-mesh.c                  | 1618 ---------------------
 clutter/cogl/common/cogl-vertex-buffer-private.h |  142 ++
 clutter/cogl/common/cogl-vertex-buffer.c         | 1633 ++++++++++++++++++++++
 clutter/cogl/gl/Makefile.am                      |    2 +-
 clutter/cogl/gl/cogl-context.c                   |    2 +-
 clutter/cogl/gl/cogl-context.h                   |    4 +-
 clutter/cogl/gles/Makefile.am                    |    2 +-
 clutter/cogl/gles/cogl-context.c                 |    2 +-
 clutter/cogl/gles/cogl-context.h                 |    4 +-
 doc/reference/cogl/cogl-docs.sgml                |    2 +-
 doc/reference/cogl/cogl-sections.txt             |   25 +-
 tests/conform/Makefile.am                        |    6 +-
 tests/conform/test-conform-main.c                |   16 +-
 tests/conform/test-mesh-contiguous.c             |  195 ---
 tests/conform/test-mesh-interleved.c             |  173 ---
 tests/conform/test-mesh-mutability.c             |  206 ---
 tests/conform/test-vertex-buffer-contiguous.c    |  195 +++
 tests/conform/test-vertex-buffer-interleved.c    |  173 +++
 tests/conform/test-vertex-buffer-mutability.c    |  206 +++
 24 files changed, 2692 insertions(+), 2669 deletions(-)

commit 4bc1e567fcb9afe146e0530eaa14e13d6af44655
Author: Robert Bragg <robert@linux.intel.com>
Date:   Tue Jan 20 18:52:15 2009 +0000

    Removes the fixed-to-float scripts and patches
    
    Now that the conversion has been applied the scripts aren't needed any more

 fixed-to-float-patches/clutter-actor.c.0.patch     |   27 -
 fixed-to-float-patches/clutter-alpha.c.0.patch     |  306 --------
 fixed-to-float-patches/clutter-alpha.h.0.patch     |   13 -
 .../clutter-behaviour-ellipse.c.0.patch            |  380 ----------
 fixed-to-float-patches/clutter-bezier.c.0.patch    |   13 -
 fixed-to-float-patches/clutter-fixed.c.0.patch     |   15 -
 fixed-to-float-patches/clutter-fixed.h.0.patch     |  333 ---------
 fixed-to-float-patches/clutter-path.c.0.patch      |   18 -
 fixed-to-float-patches/clutter-texture.c.0.patch   |   13 -
 fixed-to-float-patches/clutter-units.h.0.patch     |   91 ---
 fixed-to-float-patches/cogl-fixed.c.0.patch        |   17 -
 fixed-to-float-patches/cogl-fixed.h.0.patch        |   23 -
 fixed-to-float-patches/cogl-pango-render.c.0.patch |   24 -
 fixed-to-float-patches/cogl-primitives.c.0.patch   |   12 -
 fixed-to-float-patches/cogl.h.in.0.patch           |   26 -
 .../gl-cogl-primitives.c.0.patch                   |   12 -
 fixed-to-float-patches/gl-cogl-texture.c.0.patch   |   30 -
 fixed-to-float-patches/gl-cogl.c.0.patch           |  172 -----
 .../gles-cogl-gles2-wrapper.c.0.patch              |   90 ---
 .../gles-cogl-gles2-wrapper.h.0.patch              |   76 --
 .../gles-cogl-primitives.c.0.patch                 |   12 -
 fixed-to-float-patches/gles-cogl-texture.c.0.patch |   30 -
 fixed-to-float-patches/gles-cogl.c.0.patch         |  102 ---
 .../remove_cogl_apis_taking_fixed_params.0.patch   |  735 --------------------
 .../test-cogl-tex-tile.c.0.patch                   |   24 -
 fixed-to-float.sh                                  |  239 -------
 26 files changed, 2833 deletions(-)

commit 3014d4ff8af55fd4067eac21536512cc0cf8b89d
Merge: 6d4cd41 c29a3b4
Author: Robert Bragg <robert@linux.intel.com>
Date:   Tue Jan 20 17:22:21 2009 +0000

    Merge branch 'cogl-float'
    
    Okey; to summarise the changes...
    
    We have converted Clutter and Cogl over to using floating point internally
    instead of 16.16 fixed, but we have maintained the cogl-fixed API as a
    utility to applications in case they want to implement their own optimizations.
    
    The Clutter API has not changed (though ClutterFixed and ClutterUnit are now
    internally floats) but all Cogl entry points have been changed to accept floats
    now instead of CoglFixed.
    
    To summarise the rationale...
    
    There have been a number of issues with using fixed point though out Clutter
    and Cogl including: lack of precision, lack of range, excessive format
    conversion (GPUs tend to work nativly with IEEE floats) and maintainability.
    One of the main arguments for fixed point - performance - hasn't shown
    itself to be serious in practice so far since we seem to be more limited
    by GPU performance and making improvements regarding how we submit data to
    OpenGL[ES]/the GPU has had a more significant impact.
    
    Ref: The recent multiple rectangle queuing changes + the
    cogl-texture-agressive-batching branch which show significant performance
    gains, and that recent tests on the ipodtouch (ARM + MBX) also showed no
    loss of performance running with floats.
    
    So finally; please forgive the inevitable fallout, this is a far reaching
    change. There are still a few known issues with the fixed to float
    conversion but enough works for all our conformance tests to pass, and the
    remaining issues hopefully wont be too tricky to solve. For reference two
    tags will be available either side of this change: "cogl-fixed-end" and
    "cogl-float-start"

commit ac1a0d568ed650f37fbce906eb82a969f0d41a77
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Tue Jan 20 18:24:58 2009 +0000

    [script] Parse easing modes by name
    
    The easing modes for a ClutterAlpha can either be parsed by using
    the enumeration "nickname" (the shorthand form of the enumeration
    value) or by using the common naming policy used in other
    animation frameworks, like:
    
            easeInCubic
            easeOutElastic
            easeInOutBounce

 clutter/clutter-script.c        |  108 +++++++++++++++++++++++++++++----------
 tests/interactive/test-script.c |    6 +--
 2 files changed, 83 insertions(+), 31 deletions(-)

commit 268abcd7865bb6ae10d40a92dd2eb1de79df3de8
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Tue Jan 20 18:13:36 2009 +0000

    [docs] Update the easing modes documentation
    
    The ClutterAlpha API reference page should also list the
    easing modes Clutter provides by default, by showing the
    curves used by each entry in the AnimationMode enumeration.
    
    We can also remove the incomplete graph showing the old
    alpha functions.

 clutter/clutter-alpha.c                    |    5 +
 doc/reference/clutter/Makefile.am          |    5 +-
 doc/reference/clutter/alpha-func.png       |  Bin 30651 -> 0 bytes
 doc/reference/clutter/clutter-sections.txt |   34 +-
 doc/reference/clutter/easing-modes.png     |  Bin 0 -> 51834 bytes
 doc/reference/clutter/easing-modes.svg     |  920 ++++++++++++++++++++++++++++
 6 files changed, 934 insertions(+), 30 deletions(-)

commit ec3b1a7b90314a13a9a4bed944e10f82183edcd5
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Tue Jan 20 17:57:30 2009 +0000

    [animation] Implement new easing functions
    
    Instead of using our own homegrown alpha functions, we should
    use the easing functions also shared by other animation frameworks,
    like jQuery and Tween, in the interests of code portability.
    
    The easing functions have been defined by Robert Penner and
    are divided into three categories:
    
            In    Out     InOut
    
    Each category has a particular curve:
    
            Quadratic
            Cubic
            Quartic
            Quintic
            Sinusoidal
            Exponential
            Circular
    
    In addition, there are "physical" curves:
    
            Elastic
            Back (overshooting cubic)
            Bounce (exponentially decaying parabolic)
    
    Finally, the Linear curve is also provided as a reference.
    
    The functions are private, and are meant to be used only
    through their logical id as provided by the AnimationMode
    enumeration.
    
    The tests should be updated as well to match the new
    easing functions.

 clutter/clutter-alpha.c            |  561 +++++++++++++++++++++++++++++++++---
 clutter/clutter-types.h            |  134 +++++++--
 tests/interactive/test-animation.c |    2 +-
 tests/interactive/test-easing.c    |  115 +++++---
 4 files changed, 710 insertions(+), 102 deletions(-)

commit 7d7372af43ec23d5c89c55ba57600a47bcd07471
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Tue Jan 20 16:42:49 2009 +0000

    [animation] Move the alpha value to floating point
    
    The current Alpha value is an unsigned integer that can be used
    implicitly as a fixed point value. This makes writing an alpha
    function overshooting below and above the current range basically
    impossible without complicating an already complex code, and
    creating weird corner cases.
    
    For this reason, the Alpha value should be defined as a floating
    point normalized value, spanning a range between 0.0 and 1.0; in
    order to allow overshooting, the valid range is extended one unit
    below and one unit above, thus making it -1.0 .. 2.0.
    
    This commit updates the various users of the ClutterAlpha API
    and the tests cases.
    
    This commit also removes all the current alpha functions exposed
    in the public API.

 clutter/clutter-alpha.c                |  967 ++------------------------------
 clutter/clutter-alpha.h                |   74 +--
 clutter/clutter-animation.c            |    9 +-
 clutter/clutter-behaviour-depth.c      |    6 +-
 clutter/clutter-behaviour-ellipse.c    |    4 +-
 clutter/clutter-behaviour-opacity.c    |    5 +-
 clutter/clutter-behaviour-path.c       |    7 +-
 clutter/clutter-behaviour-rotate.c     |    4 +-
 clutter/clutter-behaviour-scale.c      |    6 +-
 clutter/clutter-behaviour.c            |    8 +-
 clutter/clutter-behaviour.h            |    2 +-
 clutter/clutter-interval.c             |    2 -
 clutter/clutter-marshal.list           |    1 +
 clutter/clutter-script.c               |   24 +-
 tests/interactive/test-actors.c        |   13 +-
 tests/interactive/test-layout.c        |    2 +-
 tests/interactive/test-paint-wrapper.c |   12 +-
 tests/interactive/test-scale.c         |   11 +-
 18 files changed, 107 insertions(+), 1050 deletions(-)

commit c29a3b4deefaf9e4a71cf4cd9b582489de9d67c4
Author: Robert Bragg <robert@linux.intel.com>
Date:   Tue Jan 20 16:20:55 2009 +0000

    [Automatic fixed-to-float.sh change] Hand coded changes for clutter-{fixed,units}
    
    To avoid clashing with all the scripted changes, clutter-fixed.h and
    clutter-units.h were manually converted to internally use floats instead of
    16.16 fixed numbers.
    
    Note: again no API changes were made in Clutter.

 clutter/clutter-fixed.h |  104 +++++++++++++----------------------------------
 clutter/clutter-units.h |   26 +++++-------
 2 files changed, 40 insertions(+), 90 deletions(-)

commit a2cf7e4a19fec5edf017aef0bba972b59c62b1cf
Author: Robert Bragg <robert@linux.intel.com>
Date:   Tue Jan 20 16:20:54 2009 +0000

    [Automatic fixed-to-float.sh change] Applies a number fixed to float patches
    
    To deal with all the corner cases that couldn't be scripted a number of patches
    were written for the remaining 10% of the effort.
    
    Note: again no API changes were made in Clutter, only in Cogl.

 clutter/clutter-actor.c                |   53 ++++++------
 clutter/clutter-alpha.c                |  139 ++++++++++++++++--------------
 clutter/clutter-alpha.h                |    2 +-
 clutter/clutter-behaviour-ellipse.c    |  144 ++++++++++++++------------------
 clutter/clutter-bezier.c               |    2 +-
 clutter/clutter-fixed.c                |    4 +-
 clutter/clutter-path.c                 |    4 +-
 clutter/clutter-texture.c              |    2 +-
 clutter/cogl/cogl-color.h              |   10 +--
 clutter/cogl/cogl-fixed.h              |   12 +++
 clutter/cogl/cogl-path.h               |   22 +----
 clutter/cogl/cogl.h.in                 |   50 +++--------
 clutter/cogl/common/cogl-color.c       |    6 +-
 clutter/cogl/common/cogl-fixed.c       |    6 ++
 clutter/cogl/common/cogl-primitives.c  |   33 ++------
 clutter/cogl/gl/cogl-primitives.c      |   63 +++++---------
 clutter/cogl/gl/cogl-texture.c         |    5 +-
 clutter/cogl/gl/cogl.c                 |  113 ++++---------------------
 clutter/cogl/gles/cogl-gles2-wrapper.c |   45 ++--------
 clutter/cogl/gles/cogl-gles2-wrapper.h |   31 ++++---
 clutter/cogl/gles/cogl-primitives.c    |   92 +++++++-------------
 clutter/cogl/gles/cogl-texture.c       |    5 +-
 clutter/cogl/gles/cogl.c               |   70 +++++-----------
 clutter/pango/cogl-pango-render.c      |    8 +-
 doc/reference/cogl/cogl-sections.txt   |    4 +-
 tests/conform/test-backface-culling.c  |    4 +-
 tests/interactive/test-cogl-tex-tile.c |   10 +--
 27 files changed, 355 insertions(+), 584 deletions(-)

commit e82f6565909e1b0da9d4effff6261b8f7312869a
Author: Robert Bragg <robert@linux.intel.com>
Date:   Tue Jan 20 16:20:54 2009 +0000

    [Automatic fixed-to-float.sh change] Applies all scripted changes
    
    This is the result of running a number of sed and perl scripts over the code to
    do 90% of the work in converting from 16.16 fixed to single precision floating
    point.
    
    Note: A pristine cogl-fixed.c has been maintained as a standalone utility API
          so that applications may still take advantage of fixed point if they
          desire for certain optimisations where lower precision may be acceptable.
    
    Note: no API changes were made in Clutter, only in Cogl.
    
    Overview of changes:
    - Within clutter/* all usage of the COGL_FIXED_ macros have been changed to use
    the CLUTTER_FIXED_ macros.
    
    - Within cogl/* all usage of the COGL_FIXED_ macros have been completly stripped
    and expanded into code that works with single precision floats instead.
    
    - Uses of cogl_fixed_* have been replaced with single precision math.h
    alternatives.
    
    - Uses of COGL_ANGLE_* and cogl_angle_* have been replaced so we use a float for
    angles and math.h replacements.

 clutter/clutter-actor.c                |  180 ++++++++++----------
 clutter/clutter-alpha.c                |   50 +++---
 clutter/clutter-backend.c              |    4 +-
 clutter/clutter-behaviour-depth.c      |    4 +-
 clutter/clutter-behaviour-ellipse.c    |   74 ++++----
 clutter/clutter-behaviour-rotate.c     |   32 ++--
 clutter/clutter-behaviour-scale.c      |   50 +++---
 clutter/clutter-clone-texture.c        |   16 +-
 clutter/clutter-color.c                |  152 ++++++++---------
 clutter/clutter-fixed.c                |   16 +-
 clutter/clutter-fixed.h                |   70 ++++----
 clutter/clutter-interval.c             |    2 +-
 clutter/clutter-stage.c                |   44 ++---
 clutter/clutter-texture.c              |   56 +++---
 clutter/clutter-timeline.c             |    8 +-
 clutter/clutter-units.h                |    8 +-
 clutter/cogl/cogl-color.h              |   50 +++---
 clutter/cogl/cogl-path.h               |  100 +++++------
 clutter/cogl/cogl-texture.h            |   20 +--
 clutter/cogl/cogl-types.h              |    4 +-
 clutter/cogl/cogl.h.in                 |   68 ++++----
 clutter/cogl/common/cogl-clip-stack.c  |   46 ++---
 clutter/cogl/common/cogl-color.c       |   40 ++---
 clutter/cogl/common/cogl-primitives.c  |  292 ++++++++++++++++----------------
 clutter/cogl/common/cogl-primitives.h  |   22 +--
 clutter/cogl/gl/cogl-context.h         |    8 +-
 clutter/cogl/gl/cogl-primitives.c      |   44 ++---
 clutter/cogl/gl/cogl-texture.c         |  226 ++++++++++++------------
 clutter/cogl/gl/cogl.c                 |  290 +++++++++++++++----------------
 clutter/cogl/gles/cogl-context.c       |    2 +-
 clutter/cogl/gles/cogl-context.h       |   10 +-
 clutter/cogl/gles/cogl-fbo.c           |   12 +-
 clutter/cogl/gles/cogl-gles2-wrapper.c |  126 +++++++-------
 clutter/cogl/gles/cogl-gles2-wrapper.h |   54 +++---
 clutter/cogl/gles/cogl-primitives.c    |   70 ++++----
 clutter/cogl/gles/cogl-texture.c       |  240 +++++++++++++-------------
 clutter/cogl/gles/cogl.c               |  256 ++++++++++++++--------------
 clutter/pango/cogl-pango-glyph-cache.c |    8 +-
 clutter/pango/cogl-pango-glyph-cache.h |    8 +-
 clutter/pango/cogl-pango-render.c      |   70 ++++----
 tests/conform/test-backface-culling.c  |   38 ++---
 tests/interactive/test-cogl-tex-tile.c |    8 +-
 tests/interactive/test-text-field.c    |    2 +-
 43 files changed, 1437 insertions(+), 1443 deletions(-)

commit abc2a359ea5981989ec7c3c793e4bb5b7c5b5d55
Author: Robert Bragg <robert@linux.intel.com>
Date:   Tue Jan 20 14:52:47 2009 +0000

    Improves the git commit messages used by fixed-to-float.sh
    
    In preperation for commiting a final conversion into master

 fixed-to-float.sh |   50 +++++++++++++++++++++++++++++++++++++++++++++++---
 1 file changed, 47 insertions(+), 3 deletions(-)

commit 8b39bfec7fb3f188a8482e44f9a9c26da19e24a6
Author: Robert Bragg <robert@linux.intel.com>
Date:   Mon Jan 19 19:11:00 2009 +0000

    Improves the unit test to verify more awkward scaling and some corresponding fixes
    
    This simplifies the mucking about with the model-view matrix that was previously
    done which improves its efficiency when scaling is necessary.
    
    Notably: There should now be no performance advantage to using
    ClutterCloneTexture as a special case clone actor since this method is just as
    efficient.
    
    The unit test was renamed to test-actor-clone.

 clutter/clutter-actor-clone.c        |   41 +----
 tests/interactive/Makefile.am        |    2 +-
 tests/interactive/test-actor-clone.c |  272 ++++++++++++++++++++++++++++++++++
 tests/interactive/test-actors2.c     |  269 ---------------------------------
 4 files changed, 277 insertions(+), 307 deletions(-)

commit df7480090da28e91df240dbba365e7b4f9e675a6
Author: Robert Bragg <robert@linux.intel.com>
Date:   Sat Jan 17 16:51:03 2009 +0000

    Implements a generic ClutterActorClone that doesn't need fbos.
    
    Many use cases for clonning an actor don't require running a shader on the
    resulting clone image and so requiring FBOs in these cases is overkill and
    in-efficient as it requires kicking and synchronizing a render for each clone.
    
    This approach basically just uses the paint function of another actor to
    implement the painting for the clone actor with some fiddling of the model-
    view matrix to scale according to the different allocation box sizes of
    each of the actors.
    
    A simple unit test called test-actors2 was added for testing.

 clutter/Makefile.am              |    2 +
 clutter/clutter-actor-clone.c    |  307 ++++++++++++++++++++++++++++++++++++++
 clutter/clutter-actor-clone.h    |   76 ++++++++++
 clutter/clutter-actor.c          |   37 ++++-
 clutter/clutter-private.h        |    6 +
 clutter/clutter.h                |    1 +
 tests/interactive/Makefile.am    |    1 +
 tests/interactive/test-actors2.c |  269 +++++++++++++++++++++++++++++++++
 8 files changed, 697 insertions(+), 2 deletions(-)

commit 6d4cd416ec3155db0778246099a431331149edd2
Author: Owen W. Taylor <otaylor@fishsoup.net>
Date:   Sat Jan 10 19:25:27 2009 -0500

    Change default tile-waste from 64 to 63
    
    It's more sensible to use 2^n-1 for a max tile-waste value rather
    than 2^n, so change the value default from 64 to 63. Example:
    191 and 192 will both be sliced to 128+64 rather than having
    191=>128+64, 192=>256.
    
    http://bugzilla.openedhand.com/show_bug.cgi?id=1402
    
    Signed-off-by: Emmanuele Bassi <ebassi@linux.intel.com>

 clutter/clutter-texture.c |    4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

commit b716d32000cfc309dd7c52a1ee6aad3cea398ec6
Author: Owen W. Taylor <otaylor@fishsoup.net>
Date:   Fri Jan 16 18:01:04 2009 -0500

    Fix properties that have X11 types to be 'long'
    
    While X11 Pixmap and Window types only have 32-bits of data, they
    are actually 'unsigned long'. Change the "window" and "pixmap"
    property of ClutterX11TexturePixmaps to be ulong.
    
    This fixes 64-bit bugs where ClutterGLXTexturePixmap passed a
    reference to Pixmap to g_object_get("pixmap", &pixmap, ...);
    
    http://bugzilla.openedhand.com/show_bug.cgi?id=1405
    
    Signed-off-by: Emmanuele Bassi <ebassi@linux.intel.com>

 clutter/x11/clutter-x11-texture-pixmap.c |   28 ++++++++++++++--------------
 1 file changed, 14 insertions(+), 14 deletions(-)

commit 10f1f6587ef944633216c1e73fe7c032d4958c96
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Fri Jan 16 22:13:44 2009 +0000

    [eglnative] Set the SYNC_MATRICES on stage realization
    
    Since the stage in the EGL native backend only has one size, and it
    is determined at realization, we can simply set the SYNC_MATRICES
    private flag and let _clutter_stage_maybe_setup_viewport() set up
    the GL viewport at the first redraw.

 clutter/eglnative/clutter-stage-egl.c |    6 ++++++
 1 file changed, 6 insertions(+)

commit ae3615cfe3efa8c36fdfcfe1b00c1cedac785829
Author: Neil Roberts <neil@linux.intel.com>
Date:   Fri Jan 16 18:29:29 2009 +0000

    [fixed-to-float.sh] Apply the automatic changes to the tests as well
    
    Some of the tests are using the Cogl API so they should be updated to
    float as well.
    
    The patches have been updated to apply cleanly.

 .../remove_cogl_apis_taking_fixed_params.0.patch   |   25 ++++++++++----------
 .../test-cogl-tex-tile.c.0.patch                   |   25 ++++++--------------
 fixed-to-float.sh                                  |   23 ++++++++++--------
 3 files changed, 32 insertions(+), 41 deletions(-)

commit 7a96ea925515916f946147fd0fee5fcac7fe6c36
Author: Neil Roberts <neil@linux.intel.com>
Date:   Fri Jan 16 17:52:26 2009 +0000

    [fixed-to-float.sh] Group some of the sed expressions into one command
    
    This has no effect other than to make the script run faster.

 fixed-to-float.sh |  121 +++++++++++++++++++++++++++++------------------------
 1 file changed, 66 insertions(+), 55 deletions(-)

commit e02024151b2529a624a92880c51f1002fcc861cc
Author: Neil Roberts <neil@linux.intel.com>
Date:   Fri Jan 16 14:55:48 2009 +0000

    [fixed-to-float-patches] Replace the cogl_color_*x functions with *f
    
    cogl_set_source_color4x and cogl_color_set_from_4x actually take float
    values now so they are renamed to *4f.

 .../remove_cogl_apis_taking_fixed_params.0.patch   |  123 ++++++++++++++++++++
 1 file changed, 123 insertions(+)

commit 7c93565902be0af99526c8c1a1ab068e0892444e
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Fri Jan 16 14:53:42 2009 +0000

    [docs] Clarify what API registers a global alpha function
    
    Both clutter_alpha_new_with_func() and clutter_alpha_set_func()
    will not register a global alpha function, so we need to update
    the documentation to explicitly say so.

 clutter/clutter-alpha.c |   13 +++++++++----
 1 file changed, 9 insertions(+), 4 deletions(-)

commit 7b93cc068db5bfeba999e633a2b23b3b4c494bd5
Author: Neil Roberts <neil@linux.intel.com>
Date:   Fri Jan 16 13:56:42 2009 +0000

    [fixed-to-float-patches] Merge the two patches to remove cogl fixed params
    
    The two patches for removing cogl apis taking fixed params have been
    merged into one patch.

 .../remove_cogl_apis_taking_fixed_params.0.patch   |   50 +++++++++++++++++--
 .../remove_cogl_apis_taking_fixed_params.1.patch   |   52 --------------------
 fixed-to-float.sh                                  |    1 -
 3 files changed, 47 insertions(+), 56 deletions(-)

commit c096f41e70a78f7eeccafeb5bd01b9b7a5732b15
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Fri Jan 16 14:16:02 2009 +0000

    [doc] Clarify the animation mode meaning
    
    The animation mode parameters and properties are now slightly
    anonymous unsigned longs, so we need to clarify in the documentation
    that the user should either pass a ClutterAnimationMode value or
    the result of registering an alpha function.

 clutter/clutter-animation.c |   10 ++++++++--
 1 file changed, 8 insertions(+), 2 deletions(-)

commit d02819949d5f16173179a3cd3ff59616726fa2b9
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Fri Jan 16 14:01:46 2009 +0000

    Remove AnimationMode from the Animation API
    
    The animation mode symbolic id might come from the AnimationMode
    enumeration or from the clutter_alpha_register_*() family of
    functions. For this reason, we should use a gulong instead of
    ClutterAnimationMode whenever we have an "animation mode" parameter
    or property.

 clutter/clutter-animation.c |   52 ++++++++++++++++++++++---------------------
 clutter/clutter-animation.h |    8 +++----
 2 files changed, 31 insertions(+), 29 deletions(-)

commit 74213e0ee35e8428783deaccab68dc9f9c8d72bb
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Fri Jan 16 13:42:06 2009 +0000

    [alpha] Allow registering alpha functions
    
    In order to unify alpha functions and animation modes in ClutterAlpha
    we should be able to register alpha functions and get a logical id
    for them; the logical id will then be available to be used by
    clutter_alpha_set_mode().
    
    The registration requires API changes in ClutterAlpha constructors
    and methods. It also provides the chance to shift ClutterAlpha
    towards the use of animations modes only, and to alpha functions
    as a convenience API for language bindings alone.

 clutter/clutter-alpha.c                    |  254 +++++++++++++++++++++-------
 clutter/clutter-alpha.h                    |   47 ++---
 clutter/clutter-types.h                    |    5 +-
 doc/reference/clutter/clutter-sections.txt |    6 +-
 tests/interactive/test-actors.c            |    3 +-
 tests/interactive/test-behave.c            |    3 +-
 tests/interactive/test-depth.c             |   32 ++--
 tests/interactive/test-layout.c            |    7 +-
 tests/interactive/test-multistage.c        |    3 +-
 tests/interactive/test-paint-wrapper.c     |    2 +-
 tests/interactive/test-rotate.c            |    3 +-
 tests/interactive/test-scale.c             |    6 +-
 tests/interactive/test-texture-quality.c   |    3 +-
 tests/interactive/test-threads.c           |    9 +-
 tests/interactive/test-viewport.c          |    3 +-
 15 files changed, 264 insertions(+), 122 deletions(-)

commit 18378fe180d2bf64631efa9a6ce99e4d770b793d
Author: Neil Roberts <neil@linux.intel.com>
Date:   Fri Jan 16 12:16:28 2009 +0000

    [fixed-to-float.sh] Use float names for the GLES2 wrappers
    
    For example cogl_wrap_glFrustumx -> cogl_wrap_glFrustumf.
    
    The wrappers get #defined to the float versions anyway but it helps
    avoid some confusion.
    
    The conversion is done using a regular expression in the upgrade
    script. Some of the patches had to be updated to apply cleanly.

 .../gles-cogl-gles2-wrapper.c.0.patch              |    2 +-
 .../gles-cogl-gles2-wrapper.h.0.patch              |   52 ++++++++++----------
 fixed-to-float-patches/gles-cogl.c.0.patch         |   15 ++----
 .../remove_cogl_apis_taking_fixed_params.0.patch   |   10 ++--
 fixed-to-float.sh                                  |    7 +++
 5 files changed, 42 insertions(+), 44 deletions(-)

commit 52d7b7be7366faa74a1ba5f8756a77a90019eaa3
Author: Neil Roberts <neil@linux.intel.com>
Date:   Fri Jan 16 10:50:53 2009 +0000

    [fixed-to-float-patches] Move the changes to gles2-wrapper.h into the patch
    
    It looks like the changes to cogl-gles2-wrapper.h were accidentally
    committed to the actual file instead of the patch in commit
    de27da0e. This commit moves the changes back into the patch so
    cogl-gles2-wrapper.h is reverted back to master.

 clutter/cogl/gles/cogl-gles2-wrapper.h             |   24 +++++------
 .../gles-cogl-gles2-wrapper.h.0.patch              |   43 ++++++++++++++++----
 2 files changed, 47 insertions(+), 20 deletions(-)

commit bef099ce40b926367f4f2ab099e3022c2809b881
Author: Neil Roberts <neil@linux.intel.com>
Date:   Thu Jan 15 18:53:52 2009 +0000

    [fixed-to-float-patches] Fix use of glClearColor and glColor under GLES 2
    
    The wrapper for glClearColor was taking fixed arguments but was given
    floating point values so it ended up always setting the clear color to
    black. Now that GLES 1.1 is using the floating point version, there is
    no need for the wrapper so both versions now just use glClearColor
    directly.
    
    A similar problem was happening for glColor but this does still need a
    wrapper because it needs to set the vertex attribute.

 .../gles-cogl-gles2-wrapper.c.0.patch              |   38 ++++++++++++++++++--
 .../gles-cogl-gles2-wrapper.h.0.patch              |   35 +++++++++++++++---
 fixed-to-float-patches/gles-cogl.c.0.patch         |   26 +++++++++++++-
 3 files changed, 91 insertions(+), 8 deletions(-)

commit 4e94500a2abffd867c7118bf4a11ae877d852499
Merge: d89ed3e 9339334
Author: Neil Roberts <neil@linux.intel.com>
Date:   Thu Jan 15 16:38:49 2009 +0000

    Merge branch 'master' into cogl-float
    
    The patches have been updated to apply cleanly.
    
    The patches for the g_warnings in clutter-actor.c have been removed
    because master now uses CLUTTER_UNITS_FORMAT so they aren't
    necessary. The clutter-units.h patch now sets CLUTTER_UNITS_FORMAT to
    'f'.

commit 9339334a4370bb8d57ce0aff0bf46ef205f93f21
Author: Neil Roberts <neil@linux.intel.com>
Date:   Thu Jan 15 18:09:54 2009 +0000

    Fix GLES backends after merging the async-textures branch
    
    The changes from the GL version of cogl-texture.c have been mirrored
    in the GLES version. This adds the cogl_texture_new_from_bitmap
    function and fixes the build errors.

 clutter/cogl/gles/cogl-texture.c |   52 ++++++++++++++++++++++----------------
 1 file changed, 30 insertions(+), 22 deletions(-)

commit d89ed3ed25f0cd04731ca57110519f58d130b750
Author: Neil Roberts <neil@linux.intel.com>
Date:   Thu Jan 15 16:35:46 2009 +0000

    [fixed-to-float.sh] Remove the mtx_transform patch from the script
    
    The patch got deleted and merged into the clutter-actor.c patch in
    commit 012b16 so it was just causing unnecessary errors.

 fixed-to-float.sh |    1 -
 1 file changed, 1 deletion(-)

commit ea1d9f55227fc2e291fc600accef5ba3abbdd58f
Author: Neil Roberts <neil@linux.intel.com>
Date:   Thu Jan 15 15:24:05 2009 +0000

    [fixed-to-float-patches] Fix some of the matrix getters and setters
    
    The GL versions of get_modelview_matrix, get_projection_matrix and
    get_viewport were using glGetDoublev and then converting them to
    floats, but it might as well just call glGetFloatv directly.
    
    The GL ES versions were using glGetFixedv but this was being replaced
    with glGetFloatv by the #define in the GLES 2 wrappers.
    
    The patch also replaces the glGetFixedv wrapper with
    glGetFloatv. Previously this was calling
    cogl_gles2_float_array_to_fixed which actually converted to
    float. That function has been removed and memcpy is used instead.

 fixed-to-float-patches/gl-cogl.c.0.patch           |   79 +++++++++++++++++++-
 .../gles-cogl-gles2-wrapper.c.0.patch              |   58 ++++++++++++++
 .../gles-cogl-gles2-wrapper.h.0.patch              |   13 +++-
 fixed-to-float-patches/gles-cogl.c.0.patch         |   29 ++++++-
 fixed-to-float.sh                                  |    1 +
 5 files changed, 176 insertions(+), 4 deletions(-)

commit 642617b7a0d74c346206b673729288d7c5454a8e
Author: Robert Bragg <robert@linux.intel.com>
Date:   Thu Jan 15 13:58:31 2009 +0000

    [test-text] queue redraws instead of calling clutter_actor_paint directly
    
    Directly calling clutter_actor_paint skips out quite a bit code such as the
    backend swap buffer call.
    
    Since we are interested in the highest fps possible, and it now goes through
    to the backend swap buffer call we now do a setenv (CLUTTER_VBLANK, none, 0)
    before calling clutter_init.

 tests/micro-bench/test-text.c |   27 ++++++++++++++++++++-------
 1 file changed, 20 insertions(+), 7 deletions(-)

commit 22183c7a8f092f0792c6f805d4b313651c999730
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Wed Jan 14 18:14:46 2009 +0000

    Bug 1380 - Return booleans from CLUTTER_ACTOR_IS_* macros
    
    If you try to use the CLUTTER_ACTOR_IS_* macros defined in ClutterActor
    like this:
    
      typedef struct { unsigned int reactive : 1; } foo_t;
    
      foo_t f; f.reactive = CLUTTER_ACTOR_IS_REACTIVE (actor);
    
    It will blow up because while the macros evaluate to 0 they can also
    evaluate to non-zero values. Since most of the boolean flags in
    Clutter and Clutter-based code are going to be stored like in the
    example above, we should change the macros and let them evaluate
    stricly either to 0 or to 1.

 clutter/clutter-actor.h |    6 +++---
 1 file changed, 3 insertions(+), 3 deletions(-)

commit 41386a5f72b389956c363fa06669f6d554d73b53
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Wed Jan 7 18:30:46 2009 +0000

    Remove the Effects API
    
    The Effects API and all related symbols have been superceded by
    the newly added Animation API and clutter_actor_animate().
    
    This commit removes the Effects implementation, the documentation
    and the interactive test/example code.

 clutter/Makefile.am                        |    2 -
 clutter/clutter-effect.c                   |  848 ----------------------------
 clutter/clutter-effect.h                   |  162 ------
 clutter/clutter.h                          |    1 -
 doc/reference/clutter/clutter-sections.txt |   33 --
 tests/interactive/Makefile.am              |    1 -
 tests/interactive/test-effects.c           |   95 ----
 7 files changed, 1142 deletions(-)

commit 5d346cca5705c5c3fc21444b8c9c758f55b0bc67
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Wed Jan 14 15:30:10 2009 +0000

    Emit ::load-finished for every texture load
    
    The ::load-finished signal is emitted only when loading a texture
    using clutter_texture_set_from_file(). Since this breaks user
    expectations and consistency, we should also emit ::load-finished
    when loading a texture from image data.

 clutter/clutter-texture.c |    2 ++
 1 file changed, 2 insertions(+)

commit 3e9e5a11da12e9b8e8cfbace8146e3b86231c5c9
Author: Robert Bragg <robert@linux.intel.com>
Date:   Wed Jan 14 15:18:05 2009 +0000

    [test-depth] cast width to gint when calculating -width/2
    
    It was a fluke that this worked out due to how clutter_actor_set_depth
    internally converts the incorrect integer result to fixed point.

 tests/interactive/test-depth.c |    6 +++---
 1 file changed, 3 insertions(+), 3 deletions(-)

commit f1b15efcdc6ac2efd15d2946c93a1cb2a3a5b063
Author: Robert Bragg <robert@linux.intel.com>
Date:   Thu Jan 8 18:54:48 2009 +0000

    [tests] Adds a flowery clutter_cairo_texture unit test
    
    This is simply a copy of flowers.c from the old clutter-cairo repo

 tests/interactive/Makefile.am                  |    3 +-
 tests/interactive/test-clutter-cairo-flowers.c |  212 ++++++++++++++++++++++++
 2 files changed, 214 insertions(+), 1 deletion(-)

commit 110489ee5838eccb216dcd9d81f23e3f3d6e0d83
Merge: d454bfc e730cd7
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Wed Jan 14 15:16:41 2009 +0000

    Merge branch 'async-textures'
    
    * async-textures:
      Whitespace fixes in ClutterTexture
      [async-loading] Do not force the texture size on async load
      [async-loading] Update asynchronous image loading
      Add API for extracting image size from a file
      Update/clean and apply the async-texture patch from bug #1144

commit d454bfcc87e594eeee601755f53b1315fc2da093
Author: Neil Roberts <neil@linux.intel.com>
Date:   Wed Jan 14 13:37:31 2009 +0000

    [ClutterStageX11] Remove the handling_configure flag
    
    Since Clutter changed to using a layout scheme the handling_configure
    flag no longer works because the allocate method is not invoked
    immediately during the call to set_size from the ConfigureNotify
    handler. However it is also no longer neccessary because the resizes
    are effectively batched up until a relayout is run so it won't cause
    an infinite loop of resize and notify events anyway.

 clutter/x11/clutter-event-x11.c |    8 --------
 clutter/x11/clutter-stage-x11.c |   16 +---------------
 clutter/x11/clutter-stage-x11.h |    1 -
 3 files changed, 1 insertion(+), 24 deletions(-)

commit 1cac3d91f9fc84bd11636f19ac220158490c531f
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Wed Jan 14 15:05:03 2009 +0000

    Add unused symbols
    
    Append the newly added ClutterBindingPool symbols and
    clutter_stage_ensure_viewport() to the API reference.

 doc/reference/clutter/clutter-sections.txt |    9 +++++++++
 1 file changed, 9 insertions(+)

commit df62a037b00ca24deceb74d3ea0d26bdc94c4194
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Wed Jan 14 15:04:28 2009 +0000

    Fix compile warning for a possible uninitialized variable

 clutter/glx/clutter-glx-texture-pixmap.c |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit 0e1bbcdc02a751f6024d4da9db3b4afba51dfa4d
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Wed Jan 14 15:03:30 2009 +0000

    Add declaration of clutter_binding_pool_get_type()
    
    The function is automagically created by G_DEFINE_TYPE(), but
    it should also be declared in the header.

 clutter/clutter-binding-pool.h |    2 ++
 1 file changed, 2 insertions(+)

commit a074106ded87717b7983976fbd91365105411f5b
Merge: c83d955 db3d2e9
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Wed Jan 14 15:00:44 2009 +0000

    Merge branch 'animation-improvements'
    
    * animation-improvements:
      [docs] Add ClutterAnimatable to the API reference
      Add license notice to ClutterAnimation files
      [docs] Update the ClutterAnimation section
      [animation] Extend ClutterAnimation support to all objects
      [animation] Use ClutterAnimatable inside Animation
      [animation] Add ClutterAnimatable
      [animation] Allow registering custom progress function
      [animation] Interval::compute_value should return a boolean
      Animate ClutterColor properties

commit c83d955af3848d75555a917ece0b7da6cd71d945
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Wed Jan 14 14:34:35 2009 +0000

    Fix compilation warning
    
    Declare the width and height variables as unsigned ints, in order
    to match the required arguments for clutter_actor_get_size().

 tests/interactive/test-depth.c |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit ffc15e0962a0b24afce1ff08eab13537fe23eadc
Author: Neil Roberts <neil@linux.intel.com>
Date:   Wed Jan 14 11:12:02 2009 +0000

    [clutter-text] Fix x-position of cursor when moving up or down
    
    ClutterText already has code to try to preserve the x position when
    moving up or down. A target x-position is stored and the cursor is
    positioned at the nearest point to that in the appropriate line when
    up or down is pressed. However the target position was never cleared
    so it would always target the x-position of the cursor from the first
    time you pressed up or down.
    
    To fix this the patch clears the target position in set_position and
    then sets it after the call in real_move_up/down. That way pressing
    up or down sets the target position and any other movement will clear
    it.
    
    To get an index for the pixel position in the line
    pango_layout_line_x_to_index is used. However when x is greater than
    the length of the line then the index before the last grapheme is
    returned which was causing it to jump to the penultimate
    character. The patch makes it add on the trailing value so that it
    will jump to the last character.

 clutter/clutter-text.c |   28 ++++++++++++++++++----------
 1 file changed, 18 insertions(+), 10 deletions(-)

commit b57c7e12d43e7891ef3125dc03e396c5a24281aa
Author: Neil Roberts <neil@linux.intel.com>
Date:   Tue Jan 13 18:42:50 2009 +0000

    [clutter-text] Fix offset_to_bytes to work when pos == 0
    
    The old function ended up returning the length of the string when pos
    was zero. This caused it to insert characters at the end when the
    cursor was at the beginning of the string.

 clutter/clutter-text.c |   25 +++++--------------------
 1 file changed, 5 insertions(+), 20 deletions(-)

commit e93c266647e0d828459911a0999f342a975158b6
Author: Neil Roberts <neil@linux.intel.com>
Date:   Tue Jan 13 17:52:38 2009 +0000

    [clutter-text] Don't allow control characters to be inserted
    
    If an unbound control key is pressed (such as Ctrl+R) it would insert
    a rectangle into the text.
    
    Also zero is considered a valid unicode character by
    g_unichar_validate so pressing a key such as shift would cause the
    current selection to be deleted. The character isn't actually inserted
    because insert_unichar disallows zeroes.

 clutter/clutter-text.c |    4 +++-
 1 file changed, 3 insertions(+), 1 deletion(-)

commit de114dead76af8e8cccf872dd87aeee838e9e7e8
Author: Neil Roberts <neil@linux.intel.com>
Date:   Thu Nov 27 16:44:39 2008 +0000

    Fix GLES 2 after the multiple-texture-rectangle branch merge
    
    The GLES 2 wrapper needs to set up some state before each
    draw. Previously this was acheived by wrapping glDrawArrays. Since the
    multiple-texture-rectangle branch merge, glDrawElements is used
    instead so we also need a wrapper for that.
    
    It was also directly calling glBindTexture. GLES 2 uses a wrapper for
    this function so that it can cope with GL_ALPHA format textures. The
    format of the current texture needs to be stored as well as the target
    and object number for this to work.

 clutter/cogl/gles/cogl-context.h       |    1 +
 clutter/cogl/gles/cogl-gles2-wrapper.c |   20 ++++++++++++++++++--
 clutter/cogl/gles/cogl-gles2-wrapper.h |    4 +++-
 clutter/cogl/gles/cogl-texture.c       |    7 ++++++-
 4 files changed, 28 insertions(+), 4 deletions(-)

commit 453697fcad0cb8e91c23b3ccebf07ed8ca10591d
Author: Neil Roberts <neil@linux.intel.com>
Date:   Mon Jan 12 18:32:49 2009 +0000

    Update gtk-doc 'Since' field for cogl_texture_multiple_rectangles
    
    The function has been backported to the 0.8 branch so it will also be
    available in Clutter 0.8.6

 clutter/cogl/cogl-texture.h |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit ccd9ba2a02cf8f06f002669ffd2ffe2d0af161ea
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Tue Jan 13 14:05:35 2009 +0000

    [gitignore] Update the ignore file

 .gitignore |   15 +++++++++++++++
 1 file changed, 15 insertions(+)

commit 616c082a7cc6cf9a46de09f2f04ed87a57162e9c
Merge: 12ea293 be462b2
Author: Robert Bragg <robert@linux.intel.com>
Date:   Tue Jan 13 13:37:38 2009 +0000

    Merge commit 'origin/master' into cogl-material
    
    Conflicts:
    
    	clutter/clutter-texture.c
    	clutter/cogl/cogl-texture.h
    	clutter/cogl/gles/cogl-context.c
    	clutter/cogl/gles/cogl-context.h

commit a9ae1c65c3fbe78d197dc202cedf3f77affb72ff
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Tue Jan 13 12:51:03 2009 +0000

    Add ClutterBindingPool:name
    
    The BindingPool constructor should only check for duplicate pools
    and then set the :name constructor-only property. If a BindingPool
    is created without a name we also make a fuss about it.
    
    It is also possible to simply dispose of a binding pool using
    g_object_unref(), as long as it has been created by using
    clutter_binding_pool_new() or directly with g_object_new(). Only
    BindingPools attached to a class are not owned by the user.

 clutter/clutter-binding-pool.c |   96 +++++++++++++++++++++++++++++++++++-----
 1 file changed, 86 insertions(+), 10 deletions(-)

commit 66afd41868a702555c917122a38dfd87db91cf7a
Author: Robert Bragg <robert@linux.intel.com>
Date:   Tue Jan 13 11:38:55 2009 +0000

    Remove cogl_blahx Cogl interfaces that used to take CoglFixed parameters.
    
    Since they are no longer actually taking fixed point parameters the 'x' suffix is
    no longer appropriate. To maintain support for sub-pixel precision the
    corresponding interfaces that were taking integer parameters now get patched
    to take float parameters instead.

 .../remove_cogl_apis_taking_fixed_params.0.patch   |  569 ++++++++++++++++++++
 .../remove_cogl_apis_taking_fixed_params.1.patch   |   52 ++
 fixed-to-float.sh                                  |    8 +-
 3 files changed, 628 insertions(+), 1 deletion(-)

commit a4c8a70c834b5b4fdfd1618ce496425dd5dbcd68
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Tue Jan 13 12:34:59 2009 +0000

    Turn ClutterBindingPool a GObject
    
    ClutterBindingPool is already "problematic" in terms of memory
    management for language bindings and gobject-introspection. It
    also lacks a GType.
    
    Turning ClutterBindingPool into a GBoxed would not make much
    sense, since it does not adhere to the copy/free semantics. It
    could be referenced/unreferenced, but in that case we can just
    as well use GObject as a base class instead of reimplemeting
    a ref-counted object and then boxing it.
    
    ClutterBindingPool is obviously a terminal class, so we just
    hide the instance and class structures.

 clutter/clutter-binding-pool.c |   62 ++++++++++++++++++++++++++++------------
 clutter/clutter-binding-pool.h |   12 ++++++++
 2 files changed, 55 insertions(+), 19 deletions(-)

commit b60c2a2df6b3cb386f6e2954e515db7c9a22a4d1
Author: Robert Bragg <robert@linux.intel.com>
Date:   Mon Jan 12 18:15:40 2009 +0000

    [gl/cogl.c] Updates the cogl_rotatex prototype to take float x,y,z params
    
    I missed this in my last commit; it just updates the prototype in gl/cogl.c
    in line with the change made in cogl.h.in

 fixed-to-float-patches/gl-cogl.c         |   92 -----------------------------
 fixed-to-float-patches/gl-cogl.c.0.patch |   95 ++++++++++++++++++++++++++++++
 2 files changed, 95 insertions(+), 92 deletions(-)

commit 010fd71059c073a95d41b023be67000d1dfc1a4c
Author: Robert Bragg <robert@linux.intel.com>
Date:   Mon Jan 12 17:07:55 2009 +0000

    [cogl.h.in.0.patch] Fixes the cogl_rotatex prototype to take float x,y,z params
    
    The cogl_rotatex was incorrectly defined to take gint x,y,z params as opposed
    to CoglFixed. This patch changes them directly to floats.

 fixed-to-float-patches/cogl.h.in.0.patch |   26 ++++++++++++++++++++++++++
 fixed-to-float.sh                        |    1 +
 2 files changed, 27 insertions(+)

commit de27da0e5be8a27a0743fd9b62e2da04ed91dc82
Author: Robert Bragg <robert@linux.intel.com>
Date:   Thu Jan 8 22:56:17 2009 +0000

    [cogl/gles] Fixes for building for GLES 1 using floats
    
    * This adds GLfixed -> GLfloat conversion
    * redefines cogl_wrap_glBlahx macros as glBlahf
    * Other misc fixes (mostly corresponding to cogl/gl equivalents)

 clutter/cogl/gles/cogl-gles2-wrapper.h             |   24 ++++----
 .../gles-cogl-gles2-wrapper.h.0.patch              |   13 +++++
 .../gles-cogl-primitives.c.0.patch                 |   12 ++++
 fixed-to-float-patches/gles-cogl-texture.c.0.patch |   30 ++++++++++
 fixed-to-float-patches/gles-cogl.c.0.patch         |   60 ++++++++++++++++++++
 fixed-to-float.sh                                  |    6 ++
 6 files changed, 133 insertions(+), 12 deletions(-)

commit f658d8b5cffeb36e7d28fca3bb3e370cd712fdd5
Author: Robert Bragg <robert@linux.intel.com>
Date:   Thu Jan 8 22:38:33 2009 +0000

    [fixed-to-float.sh] Replace uses of COGL_FIXED_FROM_INT not followed by a space
    
    Previously the script assumed a space before the open bracket, so it missed
    a few cases in clutter/cogl/gles/cogl.c

 fixed-to-float.sh |    1 +
 1 file changed, 1 insertion(+)

commit ec403b280544497f4153b756ebb1beee52e0ecc8
Author: Robert Bragg <robert@linux.intel.com>
Date:   Thu Jan 8 22:00:56 2009 +0000

    converts clutter_{sin,cos,tan,atan}x angles to radians before calling math.h func
    
    These functions are defined to take an angle in degrees, so the angle needs
    converting before calling the corresponding {sin,cos,tan,atan}f()
    
    This fixes test-cogl-tex-tile.

 fixed-to-float-patches/clutter-fixed.h.0.patch |    8 ++++----
 1 file changed, 4 insertions(+), 4 deletions(-)

commit 012b169a731fb278ac8f55122ebf572c6cca4a70
Author: Robert Bragg <robert@linux.intel.com>
Date:   Thu Jan 8 13:10:32 2009 +0000

    [fixed-to-float-patches] Updates the patches in line with the last merge
    
    Most of the patches updated weren't failing but there were a number of
    hunk offsets when applying so it tidies that up. The change in
    mtx_transform.0.patch has been moved to clutter-actor.c.0.patch.

 fixed-to-float-patches/clutter-actor.c.0.patch     |   19 +++--
 fixed-to-float-patches/clutter-alpha.c.0.patch     |   82 ++++++++++++++------
 fixed-to-float-patches/clutter-path.c.0.patch      |    4 +-
 fixed-to-float-patches/clutter-texture.c.0.patch   |   10 +--
 fixed-to-float-patches/cogl-pango-render.c.0.patch |   10 +--
 fixed-to-float-patches/mtx_transform.0.patch       |   19 -----
 6 files changed, 85 insertions(+), 59 deletions(-)

commit e730cd70b1c3cc23b01936878ac913a9fd7d7308
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Mon Jan 12 17:12:24 2009 +0000

    Whitespace fixes in ClutterTexture
    
    Small whitespace fixes patch; ClutterTexture requires much more
    love than I can provide at the moment.

 clutter/clutter-texture.c |   10 +++++-----
 1 file changed, 5 insertions(+), 5 deletions(-)

commit 5ed62aaf76b49f9539d722f8b78ca99b8304a791
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Mon Jan 12 17:09:47 2009 +0000

    [async-loading] Do not force the texture size on async load
    
    The size of the texture as retrieved by the filename should
    be set as the image size, not as the actor size, in order to
    respect the :sync-size property.
    
    When the asynchronous loading process terminates, we queue
    a relayout so that the scene is updated.

 clutter/clutter-texture.c |   13 ++++++++++++-
 1 file changed, 12 insertions(+), 1 deletion(-)

commit 168d558bcf7dcbd707364004fe968093b5bb5546
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Mon Jan 12 16:54:30 2009 +0000

    [async-loading] Update asynchronous image loading
    
    Provide a main loop-based fallback to the asynchronous loading in
    case the GLib threading support hasn't been enabled. This also
    allows us to clean up the asynchronous loading machinery and have
    it behave consistently across different scenarios.
    
    Emit the ::load-finished even if the asynchronous loading from
    disk was not enabled.
    
    Finally, block clutter_texture_set_from_file() until we have an
    image width and height, so that querying the texture actor size
    after set_from_file() will still yield the correct result even
    when asynchronous loading is set.

 clutter/clutter-texture.c |  305 ++++++++++++++++++++++++++++++++++-----------
 1 file changed, 229 insertions(+), 76 deletions(-)

commit 1c114be31a50410c1b2d0621848250102b6dd166
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Mon Jan 12 16:52:20 2009 +0000

    Add API for extracting image size from a file
    
    For the asynchronous loading we need a function call that parses
    a file, given its path, and retrieves the image width and height.
    
    This commit adds cogl_bitmap_get_size_from_file() to the CoglBitmap
    API.

 clutter/cogl/cogl-texture.h              |   17 ++++++++
 clutter/cogl/common/cogl-bitmap-pixbuf.c |   65 +++++++++++++++++++++++++-----
 clutter/cogl/common/cogl-bitmap.c        |    8 ++++
 clutter/cogl/common/cogl-bitmap.h        |    5 +++
 4 files changed, 86 insertions(+), 9 deletions(-)

commit 946c075a2aca2fdc7e63ddb90c72e65f3a9fee30
Merge: 2cea22e be462b2
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Mon Jan 12 14:43:53 2009 +0000

    Merge branch 'master' into async-textures

commit be462b2ea8d2ed908520a498908a83c5ba37a3b7
Author: Havoc Pennington <hp@pobox.com>
Date:   Mon Jan 12 14:19:48 2009 +0000

    Bug 1087 - virtualize stage_queue_redraw
    
    Add a ClutterStage::queue-redraw signal.
    
    The purpose of this signal is to allow combining the Clutter redraw
    idle with another redraw idle such as gtk's (or any other one really;
    this is desirable anytime Clutter is not the only thing drawing to
    a toplevel window).
    
    To override the default, you would connect to ::queue-redraw and then
    stop the signal emission.

 clutter/clutter-stage.c |  118 +++++++++++++++++++++++++++++++++++------------
 clutter/clutter-stage.h |    2 +
 2 files changed, 91 insertions(+), 29 deletions(-)

commit f09b221ade120c16a4696f3160509ea98adfada3
Author: Robert Bragg <robert@linux.intel.com>
Date:   Mon Jan 12 13:02:19 2009 +0000

    [ClutterGLXTexturePixmap] Use an RGB texture (not ARGB) for 24bpp pixmaps
    
    By creating an ARGB texture for 24bpp pixmaps we were exposing an undefined
    alpha channel to the blending and texture combine stages which resulted in
    nasty artefacts. (This issue was seen on i945 + DRI2)

 clutter/glx/clutter-glx-texture-pixmap.c |   30 +++++++++++++++++++++++-------
 1 file changed, 23 insertions(+), 7 deletions(-)

commit ed991fe3c5558bb2bb9058ec0bdeef2071236056
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Mon Jan 12 11:21:06 2009 +0000

    Declare G_LOG_DOMAIN for COGL
    
    In order to get properly namespaced debug and warning messages
    inside COGL code we need to define the G_LOG_DOMAIN macro.

 clutter/cogl/common/Makefile.am |    1 +
 clutter/cogl/gl/Makefile.am     |    1 +
 clutter/cogl/gles/Makefile.am   |    1 +
 3 files changed, 3 insertions(+)

commit f911a3a7a13a778b44fedb4760ea55105d6bcd46
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Mon Jan 12 11:18:11 2009 +0000

    Allow ensuring that a stage viewport is updated
    
    Since we only update the GL viewport when we receive a ConfigureNotify
    event on X11, we also need a function to allow other toolkits to tell
    a stage that the viewport should be updated.
    
    This commit adds clutter_stage_ensure_viewport(), a function that simply
    sets the private SYNC_MATRICES flag on the stage and then queues a
    redraw.
    
    This function should be called by libraries integrating Clutter with
    other toolkits, like clutter-gtk or clutter-qt.

 clutter/clutter-stage.c |   25 +++++++++++++++++++++++++
 clutter/clutter-stage.h |    1 +
 2 files changed, 26 insertions(+)

commit 4f6cc0b25f958ea720604db09b43896a985e1f50
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Mon Jan 12 11:15:41 2009 +0000

    [x11] Proper fix for the ClutterStage resize race
    
    Continuation of the fix in commit 00a3c698686f25e193d0311ad25c903f0ad71e8b.
    
    Instead of using a separate flag for the resize process, just
    delay the setting of the CLUTTER_ACTOR_SYNC_MATRICES flag on the
    stage to the point when we receive a ConfigureNotify event from
    X11.
    
    This commit will break the stage embedding into other toolkits.

 clutter/clutter-backend.c       |    3 ---
 clutter/clutter-main.c          |    3 +--
 clutter/clutter-private.h       |    3 +--
 clutter/x11/clutter-event-x11.c |   14 ++++++++++----
 clutter/x11/clutter-stage-x11.c |   27 ++++++++++-----------------
 5 files changed, 22 insertions(+), 28 deletions(-)

commit 2693ea3ddc4f7a70109a56c425280b6836ca9924
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Fri Jan 9 14:26:35 2009 +0000

    [docs] Documentation warnings
    
    Fix the various warnings issued by gtk-doc when enabling the API
    reference generation for both COGL and Clutter.

 clutter/clutter-cairo-texture.h            |   14 ++++++
 clutter/cogl/cogl-types.h                  |   72 +++++++++++++++-------------
 clutter/cogl/common/cogl-mesh.c            |    2 +
 doc/reference/clutter/clutter-docs.xml     |    2 +-
 doc/reference/clutter/clutter-sections.txt |   55 +++++++++++----------
 5 files changed, 83 insertions(+), 62 deletions(-)

commit 00a3c698686f25e193d0311ad25c903f0ad71e8b
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Fri Jan 9 12:06:46 2009 +0000

    [x11] Fix a race condition when resizing a stage
    
    There is a race condition when we resize a stage before showing
    it on X11.
    
    The race goes like this:
    
      - clutter_init() creates the default stage and realize it, which
        will cause a 640x480 Window to be created
      - call set_size(800, 600) on the stage will cause the Window to be
        resized to 800x600
      - call show() on the stage for the first time will cause COGL
        to set up an 800 by 600 GL viewport
      - the Window will be mapped, which will cause X to notify the
        window manager that the Window should be resized to 800x600
      - the window manager will approve the resize
      - X resizes the drawable to 800x600
    
    To fix the race, we need to defer COGL from setting up the viewport
    until we receive a ConfigureNotify event and the X server has resized
    the Drawable.
    
    In order to defer the call to cogl_setup_viewport() we add a new
    private flag, CLUTTER_STAGE_IN_RESIZE; the flag is checked whenever
    we need to change the viewport size along with the SYNC_MATRICES
    private flag. Thus, cogl_setup_viewport() will be called only if
    SYNC_MATRICES is set and IN_RESIZE is not set.

 clutter/clutter-main.c          |    3 ++-
 clutter/clutter-private.h       |    3 ++-
 clutter/x11/clutter-event-x11.c |    6 ++++++
 clutter/x11/clutter-stage-x11.c |   35 ++++++++++++++++++++++++-----------
 4 files changed, 34 insertions(+), 13 deletions(-)

commit efd7ad7e55357e3f656a9158c911521646898a2e
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu Jan 8 17:06:04 2009 +0000

    [text] Fix GObject properties in ClutterText
    
    Some of the read-write properties of ClutterText were missing
    an implementation in clutter_text_get_property(), as well as
    the :position and :selection-bound properties being wrongly
    converted from fixed point to integer, passing through floating
    point values.

 clutter/clutter-text.c |   28 ++++++++++++++++++++++++++--
 1 file changed, 26 insertions(+), 2 deletions(-)

commit e9ee7f049d51c5d3a273385dae0d073c373ca51c
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu Jan 8 15:45:22 2009 +0000

    Fix last improper usage of ClutterUnits
    
    ClutterUnits should not be used interchangeably as, or with
    ClutterFixed values. ClutterUnits should also not be assumed
    to be integers.
    
    This commit fixes the last few improper usages of ClutterUnit
    values, and adds a CLUTTER_UNITS_FORMAT macro for safely printing
    ClutterUnit values with printf().

 clutter/clutter-actor.c          |   44 +++++++++++++++-----------
 clutter/clutter-units.h          |    2 ++
 tests/interactive/test-project.c |   65 ++++++++++++++++++--------------------
 3 files changed, 59 insertions(+), 52 deletions(-)

commit db3d2e9568f565de9c7656c765a5068b39f9241e
Merge: 986c18d 628ccaf
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu Jan 8 13:38:51 2009 +0000

    Merge branch 'animatable-iface' into animation-improvements
    
    * animatable-iface:
      [docs] Add ClutterAnimatable to the API reference
      Add license notice to ClutterAnimation files
      [animation] Use ClutterAnimatable inside Animation
      [animation] Add ClutterAnimatable

commit 628ccaf4a855dc2477a5bb579bf49c414a80249e
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu Jan 8 13:31:27 2009 +0000

    [docs] Add ClutterAnimatable to the API reference

 doc/reference/clutter/clutter-docs.xml     |    1 +
 doc/reference/clutter/clutter-sections.txt |   79 ++++++++++++++++++----------
 doc/reference/clutter/clutter.types        |    1 +
 3 files changed, 52 insertions(+), 29 deletions(-)

commit d340de8e00b5de125ed94b2b26b9bcaa08a19675
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu Jan 8 13:18:00 2009 +0000

    Add license notice to ClutterAnimation files

 clutter/clutter-animatable.c |   24 ++++++++++++++++++++++++
 clutter/clutter-animatable.h |   24 ++++++++++++++++++++++++
 2 files changed, 48 insertions(+)

commit 986c18d260bb24261e155b096aa5e53e14c65411
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu Jan 8 13:16:20 2009 +0000

    [docs] Update the ClutterAnimation section

 doc/reference/clutter/clutter-sections.txt |    4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

commit 068ba1caf04a952f2d0eec9eb1a9f72e72a8d000
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu Jan 8 13:13:39 2009 +0000

    [animation] Extend ClutterAnimation support to all objects
    
    Instead of limiting the use of ClutterAnimation to ClutterActor
    instances, relax the constraint to include all GObject classes.
    
    ClutterAnimation is not using actor-specific API, since it is
    only using properties.
    
    The only actor-based API is the clutter_actor_animate() family
    of functions.

 clutter/clutter-animation.c |  148 +++++++++++++++++++++----------------------
 clutter/clutter-animation.h |    6 +-
 2 files changed, 74 insertions(+), 80 deletions(-)

commit 60cfa5edb241a4115e36d4d67374f3e87a4bb688
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu Jan 8 12:59:16 2009 +0000

    [animation] Use ClutterAnimatable inside Animation
    
    ClutterAnimation should check if the object is implementing the
    Animatable interface, and if so delegate to it the computation
    of the value along the interval initial and final value, depending
    on the progress.

 clutter/clutter-animation.c |   34 ++++++++++++++++++++++++++++++++--
 1 file changed, 32 insertions(+), 2 deletions(-)

commit 24808e20b3c190ef79a88f958e4ff2617b7c155f
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu Jan 8 12:56:46 2009 +0000

    [animation] Add ClutterAnimatable
    
    The ClutterAnimatable interface is meant to be used by GObject
    classes to override the value computation for an animatable
    property within the boundaries of an interval.
    
    It is composed of a single virtual function, animate_property();
    its implementation will receive the ClutterAnimation used to
    animate the object; the property name; the initial and final
    interval values; and the progress factor as retrieved by the
    Alpha object bound to the Animation instance.

 clutter/Makefile.am          |    2 +
 clutter/clutter-animatable.c |   93 ++++++++++++++++++++++++++++++++++++++++++
 clutter/clutter-animatable.h |   56 +++++++++++++++++++++++++
 clutter/clutter.h            |    1 +
 4 files changed, 152 insertions(+)

commit 378ca42d5b22355d39faf09fb16721f7a6ffbf94
Merge: c186685 e4b1859
Author: Robert Bragg <robert@linux.intel.com>
Date:   Thu Jan 8 11:48:00 2009 +0000

    Merge branch 'master' into cogl-float

commit c1866858dd43c550f95da0840b9fb4225c12f3cc
Author: Robert Bragg <robert@linux.intel.com>
Date:   Wed Jan 7 19:39:31 2009 +0000

    fixes for clutter-behaviour-ellipse.c.0.patch

 .../clutter-behaviour-ellipse.c.0.patch            |  107 ++++----------------
 1 file changed, 21 insertions(+), 86 deletions(-)

commit 0ffb6f7aa5de917e474df305c64e84581cf31fc1
Author: Robert Bragg <robert@linux.intel.com>
Date:   Wed Jan 7 16:22:45 2009 +0000

    [clutter-alpha.c.0.patch] replace ClutterAngle with float
    
    This is just an update of the patch to reflect that fixed-to-float.sh now
    replaces ClutterAngle usage with float.

 fixed-to-float-patches/clutter-alpha.c.0.patch |   26 ++++++++++++------------
 1 file changed, 13 insertions(+), 13 deletions(-)

commit 65e7bc636394f12e6f11cc6c5ba0c113c3a11bc1
Author: Robert Bragg <robert@linux.intel.com>
Date:   Wed Jan 7 15:33:24 2009 +0000

    Replaces uses of CoglAngle with floats (Though the CoglAngle type remains)
    
    The CoglAngle type can still be used for focused optimisations since the type
    and macros remain. Uses of CoglAngle within Cogl have been replaced with floats;
    COGL_ANGLE_FROM_DEG is no longer used anywhere and the replacements for
    cogl_angle_cos -> cosf (same for sin) have been fixed to convert float values
    in degrees to radians. This fixes the cogl-primitives API.

 fixed-to-float.sh |   17 ++++++++++++++---
 1 file changed, 14 insertions(+), 3 deletions(-)

commit e4b1859077797049918d97d9ba1ec7b0c3cac0b8
Author: Robert Bragg <robert@linux.intel.com>
Date:   Wed Jan 7 12:33:40 2009 +0000

    [test-clip] Use gint for hand_{width,height} when calulating -hand_* /2
    
    It was a fluke that this worked out due to how the incorrect integer
    result gets converted by CLUTTER_INT_TO_FIXED.

 tests/interactive/test-clip.c |    8 ++++----
 1 file changed, 4 insertions(+), 4 deletions(-)

commit 28b0f432b78f9db0c36d3b286cc8928d12b3b1f3
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu Jan 8 11:15:09 2009 +0000

    [animation] Allow registering custom progress function
    
    A ClutterInterval can change the way the progress is computed
    by subclassing and overriding the ::compute_value() virtual function.
    
    It should also be possible to register a custom progress function
    in the same way it is possible to register a custom transformation
    function between two GValues.
    
    This commit adds an internal, global hash table that maintains a
    GType <-> progress function association; each ClutterInterval
    will check if there is a progress function registered for the
    GType of the initial and final values of the interval and, if
    it has been found, it will call it to compute the value of the
    interval depending on the progress factor.

 clutter/clutter-interval.c |  105 ++++++++++++++++++++++++++++++++++++++++++++
 clutter/clutter-interval.h |   31 +++++++++++++
 2 files changed, 136 insertions(+)

commit cc8cd8392f109edeec073fcecab12443bbbaedd2
Author: Robert Bragg <robert@linux.intel.com>
Date:   Wed Jan 7 12:08:43 2009 +0000

    [test-depth] Use a gint for width, not guint, when calculating -width/2
    
    It was a fluke that this worked out due to how clutter_actor_set_depth
    internally converts the incorrect integer result to fixed point.

 tests/interactive/test-depth.c |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit ff48c3ef7c05de41e087645deb845b4d9bb66ae6
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Wed Jan 7 18:18:59 2009 +0000

    [animation] Interval::compute_value should return a boolean
    
    If the computation of the interval value depending on the progress
    was not successful, ClutterInterval::compute_value() should return
    this information to the caller.

 clutter/clutter-animation.c |    4 ++--
 clutter/clutter-interval.c  |   31 ++++++++++++++++++++++++-------
 clutter/clutter-interval.h  |    4 ++--
 3 files changed, 28 insertions(+), 11 deletions(-)

commit 2cea22e6a05e13c32c2f13ee1d369a5806605866
Author: Chris Lord <chris@linux.intel.com>
Date:   Wed Jan 7 17:02:43 2009 +0000

    Update/clean and apply the async-texture patch from bug #1144

 clutter/clutter-texture.c         |  152 ++++++++++++++++++++++++++++++++++++-
 clutter/clutter-texture.h         |    3 +-
 clutter/cogl/cogl-texture.h       |   42 ++++++++++
 clutter/cogl/cogl-types.h         |    7 ++
 clutter/cogl/common/cogl-bitmap.c |   31 ++++++++
 clutter/cogl/common/cogl-bitmap.h |    2 -
 clutter/cogl/gl/cogl-texture.c    |   52 +++++++------
 7 files changed, 262 insertions(+), 27 deletions(-)

commit 5d5b93bd2a11ba8e6fb5e331f1849640f1153a3b
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Wed Jan 7 16:26:03 2009 +0000

    Rename a variable masking index()
    
    The maintainer CFLAGS found another masking of the index() function
    by an helpless variable.

 clutter/clutter-text.c |    6 +++---
 1 file changed, 3 insertions(+), 3 deletions(-)

commit 805b88d4c02deda68f6adbd5f65dc6e81451b5f6
Merge: 5913bcf e21fee3
Author: Neil Roberts <neil@linux.intel.com>
Date:   Wed Jan 7 16:10:25 2009 +0000

    Merge branch multiple-texture-rectangle into master
    
    Bug 1289 - Draw multiple glyphs at once
    
    The multiple-texture-rectangle branch adds a new Cogl texture function
    called cogl_texture_multiple_rectangles which is used to draw multiple
    rectangles out of a texture using a single GL call. This is
    significantly faster than drawing the rectangles with individual calls
    on some platforms. The Pango renderer now uses this to speed up
    rendering.
    
    The conflicts are just due to the whitespace fixes in cb569a5.
    
    Conflicts:
    
    	clutter/cogl/gl/cogl-context.c
    	clutter/cogl/gl/cogl-context.h
    	clutter/cogl/gl/cogl-texture.c

commit 5913bcf7e3b1ac4317c33a01362c1fc6e6679704
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Wed Jan 7 15:54:08 2009 +0000

    [tests] Update the ClutterText interactive test
    
    Remove the unused functions and if the test fails to load the
    text from a file, show the error inside the text actor itself.

 tests/interactive/test-text.c |  134 +++++++----------------------------------
 1 file changed, 22 insertions(+), 112 deletions(-)

commit 0d9c07f82464962a189cdf1c05c1afe0e10cd9bf
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Wed Jan 7 14:53:54 2009 +0000

    [docs] Documentation fixes
    
    Remove the causes of warnings from the Clutter gtk-doc API reference
    generation process.

 clutter/clutter-binding-pool.c             |    2 +-
 doc/reference/clutter/clutter-sections.txt |   19 ++-----------------
 2 files changed, 3 insertions(+), 18 deletions(-)

commit c1c713119990f222b6d48ab52ca78c1e383ac332
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Wed Jan 7 13:48:45 2009 +0000

    [text] Do not use markup on an editable Text
    
    An editable ClutterText should not use pango_layout_set_markup(),
    as the contents of the text actor will not match the text.
    
    Only read-only text actors should parse the contents for Pango
    markup.

 clutter/clutter-text.c |    9 ++++++---
 1 file changed, 6 insertions(+), 3 deletions(-)

commit 368df450b21e6a731a61d5f30d6b997e258ef0e3
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Wed Jan 7 13:14:13 2009 +0000

    [text] Do not ensure the cursor if not needed
    
    If the Text actor is neither editable nor has its cursor set
    to visible, then we should not be ensuring the cursor position.
    
    This fixes a failure in the conformance test unit for the
    layout cache.

 clutter/clutter-text.c |    7 ++++---
 1 file changed, 4 insertions(+), 3 deletions(-)

commit c297d1ccf14c8c798773f7e179bb7d1eaa9d6521
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Wed Jan 7 12:17:09 2009 +0000

    [tests] Make test-scale use ClutterText
    
    The ClutterLabel actor has been superceded by ClutterText.
    
    This is merge fall-out from the text-actor branch.

 tests/interactive/test-scale.c |    6 +++---
 1 file changed, 3 insertions(+), 3 deletions(-)

commit 796294fd4e8fb78798f6000bc44cbcc646599481
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Wed Jan 7 12:16:08 2009 +0000

    [tests] Remove test-opacity interactive test
    
    Merge fall-out from the text-actor branch. The test-opacity test
    was moved to the conformance test suite.

 tests/interactive/Makefile.am    |    1 -
 tests/interactive/test-opacity.c |  116 --------------------------------------
 2 files changed, 117 deletions(-)

commit c54bd990975fddc4b395a8f05b0ae9080760f473
Merge: e4272fb ad7d1b5
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Wed Jan 7 12:06:33 2009 +0000

    Merge the ClutterText actor
    
    Merge branch 'text-actor'
    
    * text-actor: (108 commits)
      Re-align ClutterText header file
      [text] Fix cursor sizing
      Comments and whitespace fixes to ClutterText
      [docs] Add newly added :single-line-mode accessors
      Update the ignore file
      [tests] Add text field interactive test
      [text] Add single-line-mode to ClutterText
      [text] Fix the deletion actions
      [text] Use cached length when possible
      [tests] Add unit for the ClutterText:password-char property
      [docs] Update the Text section
      [text] Coalesce text visibility and password character
      Allow localizations to change the text direction
      Clean up the update_pango_context() function
      Pass the PangoContext, not the MainContext
      Revert the logic of the PangoContext check
      Remove the binding pool entry from the list
      Remove BindingPool::list_actions()
      Add ClutterActor::create_pango_context()
      Rename the PangoContext creation functions
      ...

commit ad7d1b54bc86fe523167366583fbf463d15db631
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Wed Jan 7 11:46:22 2009 +0000

    Re-align ClutterText header file
    
    The addition of the single line mode accessor methods caused the
    re-alignment of the entire file.

 clutter/clutter-text.h |  192 ++++++++++++++++++++++++------------------------
 1 file changed, 96 insertions(+), 96 deletions(-)

commit 328534fc95746ddd38d591efa471db142d1793c4
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Wed Jan 7 11:44:54 2009 +0000

    [text] Fix cursor sizing
    
    The cursor should be slightly smaller than the height of the actor, to
    allow for painting a border. Let's pad it by 1 pixel on the top and 1
    on the bottom.
    
    Also, we should use the cursor size everywhere and not use hardcoded
    magic numbers.

 clutter/clutter-text.c |    4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

commit f3142a70dc8e62127a22edf2ff6a8d01aac86329
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Wed Jan 7 00:43:24 2009 +0000

    Comments and whitespace fixes to ClutterText

 clutter/clutter-text.c |   20 +++++++++++---------
 1 file changed, 11 insertions(+), 9 deletions(-)

commit 7f9c384099c1ca839b34f32c0980f76fe87c19e4
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Wed Jan 7 00:30:59 2009 +0000

    [docs] Add newly added :single-line-mode accessors
    
    Add the ClutterText:single-line-mode property accessor methods
    to the API reference.

 doc/reference/clutter/clutter-sections.txt |    2 ++
 1 file changed, 2 insertions(+)

commit 1223fcbb4fd3a0e4ba05a31ca6f71633a56045ee
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Wed Jan 7 00:29:41 2009 +0000

    Update the ignore file

 .gitignore |    2 ++
 1 file changed, 2 insertions(+)

commit 71c03df967e0725aa49f2a51de9909b2fd42d971
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Wed Jan 7 00:27:50 2009 +0000

    [tests] Add text field interactive test
    
    The test-text-field is a test/example that shows how to use the
    ClutterText as a text input field in single line mode.

 tests/interactive/Makefile.am       |    3 +-
 tests/interactive/test-text-field.c |  117 +++++++++++++++++++++++++++++++++++
 2 files changed, 119 insertions(+), 1 deletion(-)

commit 43f82332dd918c7e13e7896523a2508430cfa6f0
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Wed Jan 7 00:25:24 2009 +0000

    [text] Add single-line-mode to ClutterText
    
    Allow using ClutterText as a single line text field. This is useful for
    text fields that accept just a single line of contents by default, and
    respond to the Enter key press to execute some action.
    
    The :single-line-mode property enables this behaviour inside ClutterText
    by clipping and scrolling the contents of the PangoLayout if they do
    not fit the allocated width of the Text actor.

 clutter/clutter-text.c |  175 ++++++++++++++++++++++++++++++++++++++++++++++--
 clutter/clutter-text.h |    4 ++
 2 files changed, 172 insertions(+), 7 deletions(-)

commit 8182b354b167681a89ef9c3354c1278378e4ea2c
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Tue Jan 6 20:54:20 2009 +0000

    [text] Fix the deletion actions
    
    When using the delete-prev action from the end of the text we end
    up either missing the first glyph we have to delete or falling
    through the last one in the text.
    
    This commit fixes both issues.

 clutter/clutter-text.c |   39 ++++++++++++++++-----------------------
 1 file changed, 16 insertions(+), 23 deletions(-)

commit 3d32d464e9a83ca2a89700778ece28307f4d359e
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Tue Jan 6 20:52:03 2009 +0000

    [text] Use cached length when possible
    
    Since clutter_text_set_text() measures the length of the text
    each time, we should use the cached length instead of recomputing
    the text length each time. This should save us some time when
    dealing with long, multi-byte texts.

 clutter/clutter-text.c |   10 +++++-----
 1 file changed, 5 insertions(+), 5 deletions(-)

commit 1eeb21c155882497f7b0f76b0fbdc84a13e1f4ab
Author: Robert Bragg <robert@linux.intel.com>
Date:   Tue Jan 6 16:32:42 2009 +0000

    [fixed-to-float.sh] COGL_FIXED_FROM_INT wasn't casting to a float
    
    It's necissary to replace COGL_FIXED_FROM_INT with a (float) cast otherwise
    the replacement maths may end up with integer rounding errors. This was
    causing text to not be displayed due to the texture coordinate calculation
    always rounding to (0,0)

 fixed-to-float.sh |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit e42d756a69309d1651c13bd1eb79c2c3dff86a0f
Author: Robert Bragg <robert@linux.intel.com>
Date:   Tue Jan 6 18:45:34 2009 +0000

    [clutter-alpha.c.0.patch] Normalizes sine values [0,1] before calculating alpha
    
    The previous patch broke some of the normalization done before the sine value
    gets multiplied with CLUTTER_ALPHA_MAX. This e.g. broke test-actors when sine
    values went through to -1, as the o-hands were scaled so large all you saw was
    the red 'O'.

 fixed-to-float-patches/clutter-alpha.c.0.patch |   55 +++++++++++++-----------
 1 file changed, 31 insertions(+), 24 deletions(-)

commit 12ea2933bd35d22b34973674abf6dcb43fca31f8
Author: Neil Roberts <neil@linux.intel.com>
Date:   Tue Jan 6 18:24:57 2009 +0000

    [cogl-material] Restore the GL_TEXTURE_ENV_MODE after material_rectangle
    
    The rest of Cogl expects the texture mode to be GL_MODULATE so it
    needs to be restored after calling cogl_material_rectangle. Otherwise
    cogl_texture_rectangle will fail to blend with the Cogl color properly
    and all of the labels will be black.

 clutter/cogl/gl/cogl-texture.c |    4 ++++
 1 file changed, 4 insertions(+)

commit 606d34f2aa5f4f1480f415ef241b28855dc835af
Author: Neil Roberts <neil@linux.intel.com>
Date:   Tue Jan 6 16:09:55 2009 +0000

    [cogl-material] Make the user_tex_coords parameter of _rectangle const
    
    The array is only used for input so it should be const.

 clutter/cogl/cogl-texture.h      |   12 ++++++------
 clutter/cogl/gl/cogl-texture.c   |   14 +++++++-------
 clutter/cogl/gles/cogl-texture.c |   12 ++++++------
 3 files changed, 19 insertions(+), 19 deletions(-)

commit b3b7312f33fa47c7e8d814c1f34a4d259f074b72
Author: Neil Roberts <neil@linux.intel.com>
Date:   Tue Jan 6 16:01:23 2009 +0000

    [test-cogl-material] Remove return value from material_rectangle_paint
    
    The paint signal has no return value so it isn't needed. This fixes
    a compiler warning.

 tests/interactive/test-cogl-material.c |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit f5288b1918e7d70c8630f11cb32922ddbec2f078
Author: Neil Roberts <neil@linux.intel.com>
Date:   Tue Jan 6 15:53:35 2009 +0000

    Add cogl-material.h and cogl-matrix.h to libclutterinclude_HEADERS
    
    Otherwise they won't get installed

 clutter/cogl/gl/Makefile.am   |    4 +++-
 clutter/cogl/gles/Makefile.am |    4 +++-
 2 files changed, 6 insertions(+), 2 deletions(-)

commit 87ab64d291781d468c55c8dd54dd9182b80921fd
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Tue Jan 6 15:30:31 2009 +0000

    [tests] Add unit for the ClutterText:password-char property
    
    Check that the contents of the Text actor are unaffected by the
    :password-char property; that the accessors are correct; and finally
    that the initial value for a newly constructed Text actor is valid.

 tests/conform/test-clutter-text.c |   19 +++++++++++++++++++
 tests/conform/test-conform-main.c |    1 +
 2 files changed, 20 insertions(+)

commit c4475c6bfc133eea9e44abea73c3fa2f121fded8
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Tue Jan 6 15:29:44 2009 +0000

    [docs] Update the Text section
    
    After the 979b6794 commit, the section for ClutterText needs
    updating on the renamed and removed accessors.

 doc/reference/clutter/clutter-sections.txt |    6 ++----
 1 file changed, 2 insertions(+), 4 deletions(-)

commit 979b6794bb207575fdac6fa520cca5c9adf6f86e
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Tue Jan 6 15:22:31 2009 +0000

    [text] Coalesce text visibility and password character
    
    Using two properties to set a password entry can be construed as
    both cumbersome and a gtk-ism. And rightly so on both counts.
    
    The :text-visible property has also conflicting semantics with the
    :cursor-visible one: while the latter hides the cursor, the former
    changes the display of the contents of the Text actor. It is, thus,
    not a matter of "visibility" but of "rendering".
    
    Instead of setting the :text-visible and :invisible-char properties
    to have a password text field, the Text actor should just have a
    single :password-char property holding a Unicode character. If the
    value of the :password-char is non-zero, the Text actor will use the
    Unicode character to render the contents of the text entry.
    
    This commit removes the following methods:
    
      clutter_text_set_text_visible()
      clutter_text_get_text_visible()
      clutter_text_set_invisible_char()
      clutter_text_get_invisible_char()
    
    And the following properties:
    
      ClutterText:text-visible
      ClutterText:invisible-char
    
    In favour of:
    
      clutter_text_set_password_char()
      clutter_text_get_password_char()
    
    And:
    
      ClutterText:password-char
    
    Thus making obvious what use the property and accessor methods are
    for and simplifying the process of creating a simple password text
    field to:
    
      text = clutter_text_new ();
      clutter_text_set_password_char (CLUTTER_TEXT (text), '*');

 clutter/clutter-text.c |  177 ++++++++++++------------------------------------
 clutter/clutter-text.h |    7 +-
 2 files changed, 46 insertions(+), 138 deletions(-)

commit 854cf5d49916c8b4eb7218c340db2f95dca81d24
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Tue Jan 6 12:53:30 2009 +0000

    Animate ClutterColor properties
    
    We can animate a ClutterColor-based property between an interval
    of two colors by simply applying the factor to each color component.

 clutter/clutter-interval.c         |   21 ++++++++++++++++++++-
 tests/interactive/test-animation.c |   17 ++++++++++++-----
 2 files changed, 32 insertions(+), 6 deletions(-)

commit 1892f8cb1da5727e56323a42f7c2ff9b5d596c31
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Tue Jan 6 12:35:19 2009 +0000

    Allow localizations to change the text direction
    
    The locale translators of Clutter are also the ones that should set
    the default direction of the text in a Clutter user interface.
    
    This commit adds a translatable string that defines the direction
    of the text; the translation authors will change it to the correct
    value and that will determine the default direction.
    
    The default text direction can be overridden by using the
    CLUTTER_TEXT_DIRECTION environment variable, or by using the
    --clutter-text-direction command line switch. In any other case,
    the locale will determine the text direction, as it should.

 clutter/clutter-main.c |   21 ++++++++++++++++++---
 1 file changed, 18 insertions(+), 3 deletions(-)

commit e4272fba69f9c174388eb8a1ffabd3211393461e
Author: Neil Roberts <neil@linux.intel.com>
Date:   Tue Jan 6 11:39:14 2009 +0000

    Fix off-by-one error in clutter_stage_read_pixels
    
    It was always reading one pixel lower than requested. If y was 0 then
    it would try to read below the lowest line.
    
    Thanks to Geoff Gustafson for spotting.

 clutter/clutter-stage.c |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit 8e6423a1b6e08e140a888df5398206640deea59e
Author: Takao Fujiwara <takao.fujiwara@sun.com>
Date:   Tue Jan 6 12:11:07 2009 +0000

    Bug 1397 - Allow localizing the command line help
    
    Clutter has a set of command line options that are added to every
    application by means of clutter_init() or by obtaining the Clutter
    GOptionGroup and using g_option_context_parse(). Thus, every Clutter
    application will automatically have an --help command line switch
    showing the list of options and their description.
    
    At the moment, Clutter does not enable localization of the help,
    thus making it less than useful on non-English locales.
    
    This patch enables the machinery to create a localization file and
    load it when initializing Clutter, by means of the GLib macros and
    locale.h API we already use.
    
    Signed-off-by: Emmanuele Bassi <ebassi@linux.intel.com>

 clutter/clutter-main.c            |   18 +++++++++++-------
 clutter/glx/clutter-backend-glx.c |    4 +++-
 clutter/x11/clutter-backend-x11.c |    8 +++++---
 configure.ac                      |    1 +
 po/POTFILES.in                    |   14 ++++++++++++++
 5 files changed, 34 insertions(+), 11 deletions(-)

commit e5543a658f74bcc6efb477d34953e5f2bf08d930
Author: Neil Roberts <neil@linux.intel.com>
Date:   Mon Jan 5 17:05:30 2009 +0000

    Make libdisable-npots a bit more portable
    
    Instead of including GL/gl.h directly it now includes cogl/cogl.h
    instead which should include the right GL header.
    
    Instead of using dlopen to specifically open libGL it now tries to use
    dlsym with RTLD_NEXT. This requires defining _GNU_SOURCE on GNU
    systems. If RTLD_NEXT is not available it will try passing NULL which
    is unlikely to work but it will at least catch the case where it
    returns the wrapper version of glGetString to prevent infinite
    recursion.
    
    This should hopefully make it work on OS X where the name of the
    header and library are different (although this is currently
    untested).

 tests/tools/Makefile.am     |    6 ++++++
 tests/tools/disable-npots.c |   21 ++++++++++++++-------
 2 files changed, 20 insertions(+), 7 deletions(-)

commit 11870040998e0c7e0a30da11a1b91e0c54631c5b
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Mon Jan 5 16:48:46 2009 +0000

    Clean up the update_pango_context() function
    
    Logically split the various operations with whitespace so that
    it's clear what does what.

 clutter/clutter-main.c |    5 ++++-
 1 file changed, 4 insertions(+), 1 deletion(-)

commit a5f9c7269465da32a8f0209dfce27f875e4fe05b
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Mon Jan 5 16:45:59 2009 +0000

    Pass the PangoContext, not the MainContext
    
    When updating the PangoContext with the current options (font name,
    options, resolution) pass the PangoContext instead of the Clutter
    MainContext structure pointer.

 clutter/clutter-main.c |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit c79112bd3c4febc39eeba5cabe50319f1eb7976c
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Mon Jan 5 16:44:52 2009 +0000

    Revert the logic of the PangoContext check
    
    The branch that creates the global PangoContext should only run
    if there is no global PangoContext already.

 clutter/clutter-main.c |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit 700b34148bd9e052bf521caeaff05c1373200972
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Mon Jan 5 16:29:49 2009 +0000

    Remove the binding pool entry from the list
    
    When removing a binding entry from the binding pool we should not
    only remove it from the hash table, but also from the linked list
    we use to iterate over inside the block/unblock_action() pair.

 clutter/clutter-binding-pool.c |   13 +++++++++++++
 1 file changed, 13 insertions(+)

commit c988b7b736e6d7ab7929b409f6c54c81d5862623
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Mon Jan 5 16:25:50 2009 +0000

    Remove BindingPool::list_actions()
    
    The clutter_binding_pool_list_actions() was not implemented. The
    utility of a call listing all the action names is also debatable:
    all the functions related to the key bindings take the key symbol
    and modifiers -- except the block_action() and unblock_action()
    pair.

 clutter/clutter-binding-pool.c             |    6 ------
 clutter/clutter-binding-pool.h             |    1 -
 doc/reference/clutter/clutter-sections.txt |    1 -
 3 files changed, 8 deletions(-)

commit 982a678053a518e94928e5d7a344c4c5525dec15
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Mon Jan 5 15:29:10 2009 +0000

    Add ClutterActor::create_pango_context()
    
    Sometimes an actor needs to set specific font rendering options on
    the PangoContext without changing settings for every other text-rendering
    actor.
    
    In order to do this, we need a new public method to create a Pango
    context object -- preset with all the default settings -- owned by the
    developer and not shared with the rest of Clutter.
    
    This new method is called clutter_actor_create_pango_context(); while
    it does not strictly depend on a ClutterActor, it is a good idea to
    have it inside the ClutterActor API to map the current get_pango_context()
    method and in case we start storing screen-specific data to the Actor
    itself during the 1.x API cycle.

 clutter/clutter-actor.c |   36 +++++++++++++++++++++++++++++++++---
 clutter/clutter-actor.h |   31 ++++++++++++++++---------------
 2 files changed, 49 insertions(+), 18 deletions(-)

commit d622a4dd8933b33f9328beaf1bf825451cadd025
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Mon Jan 5 15:27:33 2009 +0000

    Rename the PangoContext creation functions
    
    The _clutter_context_create_pango_context() should create a new
    context; the function returning the PangoContext stored inside the
    MainContext structure should be named _get_pango_context() instead.

 clutter/clutter-main.c    |   44 ++++++++++++++++++++++++++------------------
 clutter/clutter-private.h |    1 +
 2 files changed, 27 insertions(+), 18 deletions(-)

commit 33459f63d61c9cf984378ff395a6dffa4ae87d46
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Mon Jan 5 15:26:57 2009 +0000

    Whitespace fixes

 clutter/clutter-text.c |    6 ++----
 1 file changed, 2 insertions(+), 4 deletions(-)

commit ff73fe3e1f142517617cddf6c73c72783bb7fe92
Author: Neil Roberts <neil@linux.intel.com>
Date:   Mon Jan 5 13:14:12 2009 +0000

    Fix some animation_set_* functions so they cope if the value is the same
    
    The following functions are fixed:
    
    clutter_animation_set_actor
    clutter_animation_set_timeline
    clutter_animation_set_alpha
    
    This is related to bug 1392 which discusses the problem for
    behaviour_set_alpha.

 clutter/clutter-animation.c |   31 +++++++++++++++++++------------
 1 file changed, 19 insertions(+), 12 deletions(-)

commit 39f4848b93511d1c6b8c3a4f0eb2774a501caea0
Author: Neil Roberts <neil@linux.intel.com>
Date:   Mon Jan 5 12:05:51 2009 +0000

    Fix some *_set functions so they work if the object is the same value
    
    Bug 1392 - behaviour_set_alpha set same alpha twice lead to warning
    and destroy the input alpha
    
    The following functions are fixed:
    
    clutter_actor_set_shader
    clutter_alpha_set_timeline
    clutter_behaviour_set_alpha
    clutter_clone_texture_set_parent_texture
    
    They either now reference the new value before destroying the old
    value, or just return immediately if the values are the same.

 clutter/clutter-actor.c         |   20 +++++++-------------
 clutter/clutter-alpha.c         |    3 +++
 clutter/clutter-behaviour.c     |    4 +++-
 clutter/clutter-clone-texture.c |    3 +++
 4 files changed, 16 insertions(+), 14 deletions(-)

commit 62cfc6487fc2f3ccd4e1cfdd71bd2746ed833b61
Author: Neil Roberts <neil@linux.intel.com>
Date:   Mon Jan 5 12:52:46 2009 +0000

    Fix setting the mode on a ClutterAlpha created with animation_set_alpha(NULL)
    
    It previously attempted to set the mode on the alpha using
    clutter_animation_set_mode_internal, but this was setting the mode on
    priv->alpha. At that point in the code priv->alpha is always NULL.
    
    clutter_animation_set_mode_internal now takes a parameter to specify
    which alpha to modify.

 clutter/clutter-animation.c |    9 ++++-----
 1 file changed, 4 insertions(+), 5 deletions(-)

commit fa431f64923d233cea61aac9f1df75a43e323158
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Mon Jan 5 12:52:29 2009 +0000

    [docs] Add the new API to the BindingPool section
    
    Add the clutter_binding_pool_override_* family of functions to
    the BindingPool section of the Clutter API reference.

 doc/reference/clutter/clutter-sections.txt |    2 ++
 1 file changed, 2 insertions(+)

commit e56fe478ef9ae30584480827805e0dd6a8834e0b
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Mon Jan 5 12:49:01 2009 +0000

    Allow overriding actions inside a BindingPool
    
    As of now, a key binding installed into a BindingPool is always there
    and cannot be changed.
    
    This is problematic for sub-classes trying to override the callback
    or the action for a given key binding.
    
    This commit adds the ability to override the closure for an existing
    key binding inside a binding pool -- assumed the caller knows the
    key symbol and modifiers used to install the key binding in the first
    place.

 clutter/clutter-binding-pool.c |  125 ++++++++++++++++++++++++++++++++++++++++
 clutter/clutter-binding-pool.h |   70 ++++++++++++----------
 2 files changed, 165 insertions(+), 30 deletions(-)

commit 2ed60a5270c7bb03e8046db52b2abdf71e195cce
Author: Neil Roberts <neil@linux.intel.com>
Date:   Mon Jan 5 12:47:10 2009 +0000

    In clutter_alpha_set_mode, set priv->mode after setting the func
    
    Otherwise the call to clutter_alpha_set_func sets the mode back to
    CLUTTER_CUSTOM_MODE so clutter_alpha_get_mode won't get back the same
    value that was set.

 clutter/clutter-alpha.c |    4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

commit 55a22d57507dbafbc99fdb01820d5a7f41404e36
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Mon Jan 5 12:27:45 2009 +0000

    [text] Add select-all binding
    
    Bind Ctrl+A to the "select all" action.

 clutter/clutter-text.c |   17 +++++++++++++++++
 1 file changed, 17 insertions(+)

commit 92e8b886d2b21618277079306169a8aa31a03806
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Tue Dec 16 17:44:13 2008 +0000

    [docs] Add clutter_text_activate()
    
    Add the last unused symbol to the ClutterText section.

 doc/reference/clutter/clutter-sections.txt |    3 +++
 1 file changed, 3 insertions(+)

commit 605ec10c3242f7024b77469ff38abf6a06ef08cc
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Tue Dec 16 17:40:41 2008 +0000

    [docs] Remove ClutterLabel and ClutterEntry sections
    
    Remove the sections for the Label and the Entry actors, which
    have been replaced by ClutterText.

 doc/reference/clutter/clutter-sections.txt |   86 ----------------------------
 1 file changed, 86 deletions(-)

commit fd2d78918b49dc2b67f18b444587f32a0030bfa9
Merge: cb569a5 cf5d691
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Mon Jan 5 11:11:10 2009 +0000

    Merge branch 'units-rework'
    
    * units-rework:
      [texture] Do not mix fixed point and units values
      [tests] Fix the actor detection
      [units] Do not use fixed point and units interchangeably

commit 377f1140465228333f41acb814c77e4e70800506
Author: Robert Bragg <robert@linux.intel.com>
Date:   Tue Dec 23 23:50:02 2008 +0000

    [cogl-material] improvements for cogl_material_rectangle
    
    The API has been changed to take an explicit length for the number of
    texture coordinates passed, and it's now documented that if there are
    more layers to the current material than the number of texture coords
    passed, then default coordinates will be generated for the other
    layers.
    
    cogl_material_rectangle should now handle the case where a single
    sliced texture is supplied as a material layer by falling back to
    cogl_texture_rectangle. We are nearly at the point that
    cogl_texture_rectangle could be deprecated. A few issues remain
    though, such as not considering waste in cogl_material_rectangle.

 clutter/clutter-clone-texture.c             |    1 +
 clutter/clutter-texture.c                   |    1 +
 clutter/cogl/cogl-texture.h                 |   75 +++++++--------------
 clutter/cogl/common/cogl-material-private.h |   14 ++--
 clutter/cogl/gl/cogl-texture.c              |   95 +++++++++++++++++++++------
 tests/interactive/test-cogl-material.c      |    1 +
 6 files changed, 109 insertions(+), 78 deletions(-)

commit e77a7847146dc8a4ca215def681c431cde2ff5e0
Author: Robert Bragg <robert@linux.intel.com>
Date:   Tue Dec 23 23:35:49 2008 +0000

    [cogl-material] Adds a cogl_material_set_color function
    
    The other colors of a material; such as the ambient and diffuse color are
    only relevent when we can enable lighting. This adds a basic unlit
    color property.
    
    Later cogl_set_source_color can be integrated to either modify the color
    of the current source material, or maintain a special singlton CoglMaterial
    that is modified by calls to cogl_set_source_color and implicitly made
    current.

 clutter/cogl/cogl-material.h        |   13 +++++++++++++
 clutter/cogl/common/cogl-material.c |   30 ++++++++++++++++++++++++++++++
 2 files changed, 43 insertions(+)

commit 462c45da3c9cd4febb6849ce66868de74f614184
Author: Robert Bragg <robert@linux.intel.com>
Date:   Tue Dec 23 23:22:40 2008 +0000

    [cogl-material] Some improvements for how we sync CoglMaterial state with OpenGL
    
    This flattens the three functions: cogl_material_flush_gl_material_state,
    .._flush_gl_alpha_func and .._flush_gl_blend_func into one:
    cogl_flush_material_gl_state which doesn't takes a material handle. (the handle
    is instead taken from the context.)
    
    This has allows us to avoid re-submitting some state to OpenGL when the
    material has not been replaced.
    
    Note: Avoiding redundant state changes for material layers isn't dealt with
    in this patch.

 clutter/cogl/cogl-material.h        |   72 ++++++++++------------
 clutter/cogl/common/cogl-material.c |  116 ++++++++++++++++++-----------------
 clutter/cogl/gl/cogl-context.c      |    1 +
 clutter/cogl/gl/cogl-context.h      |    1 +
 clutter/cogl/gl/cogl-texture.c      |    5 +-
 5 files changed, 97 insertions(+), 98 deletions(-)

commit 4e57972bd6854027e509b8b80b9a8fc1204ad828
Author: Robert Bragg <robert@linux.intel.com>
Date:   Tue Dec 23 16:39:11 2008 +0000

    [cogl-material] Converts clutter-texture/clutter-clone-texture to the material API
    
    This converts clutter-texture to use the new CoglMaterial API instead of
    cogl_texture_rectangle.
    
    This change does not add multi-texturing support to Clutter, it's more about
    aiming to deprecate cogl_texture_rectangle, and moving everything over to the
    cogl_set_source(material); cogl_draw_somthing(); coding pattern.
    
    With this patch, the code can be built with/without CoglMaterial support so we
    can do comparisons of the old/new code for a transient period. (look for the
    USE_COGL_MATERIAL define)
    
    Note: The FBO paths haven't currently been tested, so they may need some
    tweaks.

 clutter/clutter-clone-texture.c |   26 +++++
 clutter/clutter-texture.c       |  226 +++++++++++++++++++++++++++++++++++----
 clutter/clutter-texture.h       |   13 +++
 3 files changed, 242 insertions(+), 23 deletions(-)

commit bb938ac4ff651d402a6ecaaf86d11623e19a346d
Merge: aee2589 cb569a5
Author: Robert Bragg <robert@linux.intel.com>
Date:   Wed Dec 24 00:59:13 2008 +0000

    Merge branch 'master' into cogl-material
    
    Conflicts:
    
    	clutter/cogl/gl/cogl-context.c
    	clutter/cogl/gl/cogl-context.h

commit cb569a54431082fe1e5e59078e0c7e045ebbd707
Author: Robert Bragg <robert@linux.intel.com>
Date:   Tue Dec 23 16:29:29 2008 +0000

    White space clean up across a number of files (only removing trailing spaces)
    
    Removed trailing white space from the following files:
    - clutter-clone-texture.c
    - clutter-texture.c
    - clutter-texture.h
    - cogl/cogl-texture.h
    - cogl/gl/cogl-context.c
    - cogl/gl/cogl-texture.c
    - cogl/gl/cogl-context.h

 clutter/clutter-clone-texture.c |   28 +--
 clutter/clutter-texture.c       |   24 +-
 clutter/clutter-texture.h       |    4 +-
 clutter/cogl/cogl-texture.h     |   24 +-
 clutter/cogl/gl/cogl-context.c  |   26 +-
 clutter/cogl/gl/cogl-context.h  |   16 +-
 clutter/cogl/gl/cogl-texture.c  |  512 +++++++++++++++++++--------------------
 7 files changed, 317 insertions(+), 317 deletions(-)

commit 7649e9de077744968f7937749f157be9e87707da
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Tue Dec 23 21:06:05 2008 +0000

    Remove a masking with index()
    
    The binding-pool test unit had a variable masking the index() function
    declared inside string.h.

 tests/conform/test-binding-pool.c |    4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

commit c9cdf1ef0a02f9c4140686141e057ca32304a61d
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Tue Dec 23 20:55:35 2008 +0000

    Fix an empty block
    
    Remove a stray ';' that prevented the get_bounds() method of the
    ClutterBehaviourRotate to correctly return the start angle value.

 clutter/clutter-behaviour-rotate.c |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit affd915b847663a871b8c17addd2b1b66afe1276
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Tue Dec 23 20:53:44 2008 +0000

    Add more maintainer CFLAGS
    
    Be even more anal-retentive when the maintainer flags are enabled.
    
    Kudos to Benjamin Otte.

 configure.ac |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit f777bc629ac90e2e0b70705823ecd3fb74f2cded
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Tue Dec 23 16:59:14 2008 +0000

    [docs] Document the newly added functions
    
    Document the ClutterBackend font name accessors, and the
    clutter_actor_get_pango_context() getter method.

 clutter/clutter-actor.c                    |   21 +++++++++++++++++++++
 clutter/clutter-backend.c                  |   24 ++++++++++++++++++++++++
 doc/reference/clutter/clutter-sections.txt |    9 ++++++---
 3 files changed, 51 insertions(+), 3 deletions(-)

commit 9389d9755d9121c1f99a5dc208ef90a10ca1b004
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Tue Dec 23 16:40:26 2008 +0000

    Add the ability to set the text direction
    
    The direction of the text depends on the locale, and it is the
    basic setting needed to enable internationalization of user
    interfaces.
    
    This commit allows setting the direction of the PangoContext instance
    used by Clutter by using the CLUTTER_TEXT_DIRECTION environment
    variable, or by passing the --clutter-text-direction command line
    argument. Valid values are:
    
            ltr     - for left-to-right locales
            rtl     - for right-to-left locales
    
    The default is LTR.
    
    Ideally, this should be a value set by the localization teams on the
    PO file, but this step requires some build system surgery to allow
    the translation of the Clutter strings.

 clutter/clutter-main.c |   68 +++++++++++++++++++++++++++++++++++++++++-------
 1 file changed, 58 insertions(+), 10 deletions(-)

commit b4a3944b2b6bde5b57f86519135b959f4607cad3
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Tue Dec 23 16:27:54 2008 +0000

    Return the default font name if no font name is set
    
    When calling clutter_backend_get_font_name(), if no default font
    name has previously been set, we just set the default and return
    a pointer to it - like we do for the font options.

 clutter/clutter-backend.c |   11 ++++++++++-
 1 file changed, 10 insertions(+), 1 deletion(-)

commit e3785f4f45d1ef8e0e65517c246cace4dade41ea
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Tue Dec 23 15:05:16 2008 +0000

    Use the default font from the Backend
    
    Instead of storing the default font name and size as a pre-processor
    macro, use the newly added ClutterBackend API to retrieve the current
    default font from the backend.

 clutter/clutter-text.c |   20 ++++++++++++--------
 1 file changed, 12 insertions(+), 8 deletions(-)

commit 72625421556c63a7f33afa262d4b60e29f48580b
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Tue Dec 23 15:03:11 2008 +0000

    Store the default font name inside ClutterBackend
    
    The default backend stores some of the global defaults, like the
    font options, text resolution, double click settings. It should also
    store the default font name, to allow various text-based actors to
    share the same settings.
    
    When the font name changes, the ::font-changed signal is emitted,
    to allow actors to pick up the change.

 clutter/clutter-backend.c |   34 ++++++++++++++++++++++++++++++++++
 clutter/clutter-backend.h |    5 +++++
 2 files changed, 39 insertions(+)

commit 977bdcf89b449845f3b9aeb02d02fe1fb4577fcb
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Tue Dec 23 14:34:16 2008 +0000

    Update the PangoContext on backend changes
    
    When the ClutterBackend notifies of changes in the resolution or
    font options, update the PangoContext stored by Clutter's main
    context. This allows changing the backend font-related settings at
    runtime.

 clutter/clutter-main.c |   32 ++++++++++++++++++++++++--------
 1 file changed, 24 insertions(+), 8 deletions(-)

commit 213d8f0e4e165554ad2c172c2b18cb29dfce9b76
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Tue Dec 23 14:27:41 2008 +0000

    Store the PangoContext inside the main context
    
    The PangoContext should be stored once, and inside the main
    Clutter context. Each actor for which clutter_actor_get_pango_context()
    has been called will hold a reference on the Pango context as well.
    
    This makes it possible to update the text rendering for Clutter
    by using only public API.

 clutter/clutter-actor.c   |    1 +
 clutter/clutter-main.c    |   15 ++++++++++-----
 clutter/clutter-private.h |    7 ++++---
 3 files changed, 15 insertions(+), 8 deletions(-)

commit 61d47ee3016c487312ef1e731af03960c9d42b42
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Tue Dec 23 14:15:10 2008 +0000

    Do not leak the PangoContext
    
    We hold a reference on the PangoContext we use for an actor, so
    we should remove the reference inside the dispose implementation.

 clutter/clutter-actor.c |    6 ++++++
 1 file changed, 6 insertions(+)

commit a865a5d4ead867072d67f1ff57ac5a70d8589159
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Tue Dec 23 14:11:27 2008 +0000

    Create the PangoContext of the Text actor
    
    Instead of creating a single, private PangoContext for every
    Text actor, use the newly added clutter_actor_get_pango_context()
    function.

 clutter/clutter-text.c |   10 +++-------
 1 file changed, 3 insertions(+), 7 deletions(-)

commit 78628edf2f6f02db3d283169d93ae2d21e63a1ec
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Tue Dec 23 14:06:55 2008 +0000

    Add a per-actor PangoContext
    
    Rendering text inside an actor is pretty much impossible without
    using internal API to create the various pieces like the PangoContext
    and the font map.
    
    Each actor should have the ability to create a PangoContext, which
    is the only object needed to generate layouts and change the various
    Pango settings.
    
    This commit adds a clutter_actor_get_pango_context() function that
    creates a PangoContext inside the ClutterActor private data and allows
    the creation of PangoLayouts when needed. If the actor already
    has a PangoContext, the same instance is returned.
    
    The PangoContext is created only on demand.

 clutter/clutter-actor.c |   25 +++++++++++++++++++++++--
 clutter/clutter-actor.h |    4 ++++
 2 files changed, 27 insertions(+), 2 deletions(-)

commit b8b8b155c45e54e8c2bd4d7e161a28b55a5088e1
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Tue Dec 23 13:55:51 2008 +0000

    Add signals for Backend options
    
    The ClutterBackend instance at the moment lacks the ability to
    notify runtime changes of the font options and the resolution.
    
    For this reason, this commit adds a ::resolution-changed and a
    ::font-changed signals to the Backend class.
    
    The ::resolution-changed signal is emitted when set_resolution()
    is called with a different DPI; ::font-changed is emitted when the
    cairo_font_options_t* changes from the default.

 clutter/clutter-backend.c |   36 ++++++++++++++++++++++++++++++++++--
 clutter/clutter-backend.h |    4 ++++
 2 files changed, 38 insertions(+), 2 deletions(-)

commit e8915fcb12cd402cadcdb5e2cfa28a5fc9765a71
Author: Robert Bragg <robert@linux.intel.com>
Date:   Fri Dec 19 21:55:35 2008 +0000

    First cut at a fixed point to floating point conversion script + patches
    
    This commit doesn't actually include any direct changes to source; you
    have to run ./fixed-to-float.sh. Note: the script will make a number of
    commits itself to your git repository a various stages of the script.
    You will need to reset these if you want to re-run the script.
    
    * NB: Be carefull about how you reset your tree, if you are making changes
    to the script and patches, so you don't loose your changes *
    
    This aims to remove all use of fixed point within Clutter and Cogl. It aims to
    not break the Clutter API, including maintaining the CLUTTER_FIXED macros,
    (though they now handle floats not 16.16 fixed)
    
    It maintains cogl-fixed.[ch] as a utility API that can be used by applications
    (and potentially for focused internal optimisations), but all Cogl interfaces
    now accept floats in place of CoglFixed.
    
    Note: the choice to to use single precision floats, not doubles is very
    intentional. GPUs are basically all single precision; only this year have high
    end cards started adding double precision - aimed mostly at the GPGPU market.
    This means if you pass doubles into any GL[ES] driver, you can expect those
    numbers to be cast to a float. (Certainly this is true of Mesa wich casts
    most things to floats internally) It can be a noteable performance issue to
    cast from double->float frequently, and if we were to have an api defined in
    terms of doubles, that would imply a *lot* of unneeded casting. One of the
    noteable issues with fixed point was the amount of casting required, so I
    don't want to overshoot the mark and require just as much casting still. Double
    precision arithmatic is also slower, so it usually makes sense to minimize its
    use if the extra precision isn't needed. In the same way that the fast/low
    precision fixed API can be used sparingly for optimisations; if needs be in
    certain situations we can promote to doubles internally for higher precision.
    
    E.g.
    quoting Brian Paul (talking about performance optimisations for GL programmers):
    "Avoid double precision valued functions
        Mesa does all internal floating point computations in single precision
        floating point. API functions which take double precision floating point
        values must convert them to single precision. This can be expensive in the
        case of glVertex, glNormal, etc. "

 fixed-to-float-patches/clutter-actor.c.0.patch     |   40 ++
 fixed-to-float-patches/clutter-alpha.c.0.patch     |  263 ++++++++++++
 fixed-to-float-patches/clutter-alpha.h.0.patch     |   13 +
 .../clutter-behaviour-ellipse.c.0.patch            |  445 ++++++++++++++++++++
 fixed-to-float-patches/clutter-bezier.c.0.patch    |   13 +
 fixed-to-float-patches/clutter-fixed.c.0.patch     |   15 +
 fixed-to-float-patches/clutter-fixed.h.0.patch     |  333 +++++++++++++++
 fixed-to-float-patches/clutter-path.c.0.patch      |   18 +
 fixed-to-float-patches/clutter-texture.c.0.patch   |   13 +
 fixed-to-float-patches/clutter-units.h.0.patch     |   85 ++++
 fixed-to-float-patches/cogl-fixed.c.0.patch        |   17 +
 fixed-to-float-patches/cogl-fixed.h.0.patch        |   23 +
 fixed-to-float-patches/cogl-pango-render.c.0.patch |   24 ++
 fixed-to-float-patches/cogl-primitives.c.0.patch   |   12 +
 .../gl-cogl-primitives.c.0.patch                   |   12 +
 fixed-to-float-patches/gl-cogl-texture.c.0.patch   |   30 ++
 fixed-to-float-patches/gl-cogl.c                   |   92 ++++
 fixed-to-float-patches/mtx_transform.0.patch       |   19 +
 .../test-cogl-tex-tile.c.0.patch                   |   35 ++
 fixed-to-float.sh                                  |  150 +++++++
 20 files changed, 1652 insertions(+)

commit aee2589cc6a5afcddbfe4d7221c8a24ec2f25cfe
Author: Robert Bragg <robert@linux.intel.com>
Date:   Mon Dec 22 16:19:49 2008 +0000

    [doc] Hooks up cogl-material reference documentation
    
    Adds some more gtk-doc comments to cogl-material.h, and adds a new section to
    cogl-sections.txt

 clutter/cogl/cogl-material.h         |  548 +++++++++++++++++++++++-----------
 clutter/cogl/common/cogl-material.c  |   72 ++---
 doc/reference/cogl/cogl-docs.sgml    |    1 +
 doc/reference/cogl/cogl-sections.txt |   38 +++
 4 files changed, 456 insertions(+), 203 deletions(-)

commit eb3b48e9ff9eab0a427fd3d73c2cefaaf2213141
Author: Robert Bragg <robert@linux.intel.com>
Date:   Thu Dec 18 19:12:09 2008 +0000

    Updates previous GLES multi-texturing code to use CoglMaterial
    
    test-cogl-material now runs on GLES 1 using the PVR GLES1 SDK (though since
    only 2 texture units are supported the third rotating light map doesn't show)
    
    Note: It currently doesn't build for GLES 2.0

 clutter/cogl/cogl-material.h     |    2 +
 clutter/cogl/gles/cogl-context.c |    5 +-
 clutter/cogl/gles/cogl-context.h |    9 +-
 clutter/cogl/gles/cogl-texture.c |  320 ++++++++++++++------------------------
 4 files changed, 122 insertions(+), 214 deletions(-)

commit 40b0bb4e95b7f332b2b48e1d072eb2b4c936b4bf
Author: Robert Bragg <bob@o-hand.com>
Date:   Thu Dec 11 20:11:30 2008 +0000

    Adds a CoglMaterial abstraction, which includes support for multi-texturing
    
    My previous work to provide muti-texturing support has been extended into
    a CoglMaterial abstraction that adds control over the texture combine
    functions (controlling how multiple texture layers are blended together),
    the gl blend function (used for blending the final primitive with the
    framebuffer), the alpha function (used to discard fragments based on
    their alpha channel), describing attributes such as a diffuse, ambient and
    specular color (for use with the standard OpenGL lighting model), and
    per layer rotations. (utilizing the new CoglMatrix utility API)
    
    For now the only way this abstraction is exposed is via a new
    cogl_material_rectangle function, that is similar to cogl_texture_rectangle
    but doesn't take a texture handle (the source material is pulled from
    the context), and the array of texture coordinates is extended to be able
    to supply coordinates for each layer.
    
    Note: this function doesn't support sliced textures; supporting sliced
    textures is a non trivial problem, considering the ability to rotate layers.
    Note: cogl_material_rectangle, has quite a few workarounds, for a number of
    other limitations within Cogl a.t.m.
    Note: The GLES1/2 multi-texturing support has yet to be updated to use
    the material abstraction.

 clutter/cogl/cogl-material.h                |  481 +++++++++++++++++++
 clutter/cogl/cogl.h.in                      |    2 +
 clutter/cogl/common/Makefile.am             |    3 +-
 clutter/cogl/common/cogl-material-private.h |   72 +++
 clutter/cogl/common/cogl-material.c         |  680 +++++++++++++++++++++++++++
 clutter/cogl/common/cogl-matrix.h           |   57 ---
 clutter/cogl/gl/cogl-context.c              |    5 +-
 clutter/cogl/gl/cogl-context.h              |    9 +-
 clutter/cogl/gl/cogl-texture-private.h      |    8 +-
 clutter/cogl/gl/cogl-texture.c              |  307 +++++-------
 tests/data/Makefile.am                      |    1 -
 tests/data/light0.png                       |  Bin 24410 -> 5674 bytes
 tests/data/light1.png                       |  Bin 28430 -> 0 bytes
 tests/interactive/Makefile.am               |    2 +-
 tests/interactive/test-cogl-material.c      |  161 +++++++
 tests/interactive/test-cogl-multi-texture.c |  250 ----------
 16 files changed, 1516 insertions(+), 522 deletions(-)

commit 63047e1907dbe1f44b173e99930305c2ddfe44d2
Author: Robert Bragg <robert@linux.intel.com>
Date:   Mon Dec 22 16:16:07 2008 +0000

    [doc] Hooks up cogl-matrix reference documentation
    
    Adds a few more gtk-doc notes to cogl-matrix.h, and adds a new section to
    cogl-sections.txt

 clutter/cogl/cogl-matrix.h           |   54 ++++++++++++++++++++++++++++++----
 doc/reference/cogl/cogl-docs.sgml    |    1 +
 doc/reference/cogl/cogl-sections.txt |   11 +++++++
 3 files changed, 61 insertions(+), 5 deletions(-)

commit fa8d6dc69b61e31873a6aa5550a5e3a0c203d6ae
Author: Robert Bragg <bob@o-hand.com>
Date:   Thu Dec 11 20:08:15 2008 +0000

    Adds CoglMatrix utility code

 clutter/cogl/cogl-matrix.h        |  102 +++++++++++++++++++++++++++
 clutter/cogl/common/Makefile.am   |    3 +-
 clutter/cogl/common/cogl-matrix.c |  138 +++++++++++++++++++++++++++++++++++++
 clutter/cogl/common/cogl-matrix.h |   57 +++++++++++++++
 4 files changed, 299 insertions(+), 1 deletion(-)

commit fc7a86fd0d071645e27a996b78267b5aaca83fcf
Author: Robert Bragg <bob@o-hand.com>
Date:   Thu Dec 11 15:35:17 2008 +0000

    [tests] Adds an interactive unit test for multi-texturing
    
    This simply gives an example of blending a red o-hand logo with an alpha mask
    and a changing light map.

 tests/data/Makefile.am                      |    3 +
 tests/data/light0.png                       |  Bin 0 -> 24410 bytes
 tests/data/light1.png                       |  Bin 0 -> 28430 bytes
 tests/data/redhand_alpha.png                |  Bin 0 -> 4539 bytes
 tests/interactive/Makefile.am               |    9 +-
 tests/interactive/test-cogl-multi-texture.c |  250 +++++++++++++++++++++++++++
 6 files changed, 261 insertions(+), 1 deletion(-)

commit ea643ca0f8e1a5020c1dc65146aaa75b85fd0109
Author: Robert Bragg <bob@o-hand.com>
Date:   Thu Dec 11 15:33:38 2008 +0000

    [multi-texturing] This adds a new cogl_multi_texture API for GL,GLES1 + GLES2
    
    Multitexturing allows blending multiple layers of texture data when texturing
    some geometry. A common use is for pre-baked light maps which can give nice
    lighting effects relativly cheaply. Another is for dot-3 bump mapping, and
    another is applying alpha channel masks.
    
    The dot-3 bump mapping would be really nice one day, but currently cogl doesn't
    support lighting so that's not dealt with in this patch.
    
    notable limitations:
    - It can only texture rectangles a.t.m - and like cogl_texture_rectangle there
    is no support for rotated texturing.
    - Sliced textures are not supported. I think I've figured out how to handle
    layers with different slice sizes at least for rectangular geometry, but I'm
    not sure how complex it becomes once rotations are possible and texturing
    arbitrary cogl_polygons.
    - Except for this new API, cogl still doesn't know about more than one texture
    unit, and so has no way of caching any enables related to other units. So that
    things don't break it's currently necessary to disable anything to do with
    additional units as soon as we are done with them which isn't ideal.
    - No clutter API yet.

 clutter/cogl/cogl-texture.h                       |   62 +++
 clutter/cogl/common/cogl-handle.h                 |    6 +
 clutter/cogl/gl/cogl-context.c                    |    3 +
 clutter/cogl/gl/cogl-context.h                    |    6 +
 clutter/cogl/gl/cogl-defines.h.in                 |    1 +
 clutter/cogl/gl/cogl-texture-private.h            |   27 +-
 clutter/cogl/gl/cogl-texture.c                    |  275 +++++++++-
 clutter/cogl/gles/cogl-context.c                  |    4 +-
 clutter/cogl/gles/cogl-context.h                  |    6 +
 clutter/cogl/gles/cogl-defines.h.in               |   12 +-
 clutter/cogl/gles/cogl-fixed-fragment-shader.glsl |   33 +-
 clutter/cogl/gles/cogl-fixed-vertex-shader.glsl   |   19 +-
 clutter/cogl/gles/cogl-gles2-wrapper.c            |  552 +++++++++++++++++----
 clutter/cogl/gles/cogl-gles2-wrapper.h            |  131 +++--
 clutter/cogl/gles/cogl-texture-private.h          |   21 +
 clutter/cogl/gles/cogl-texture.c                  |  281 ++++++++++-
 16 files changed, 1260 insertions(+), 179 deletions(-)

commit b021f518c18eb142791238cb4ecde8b1ea3707c0
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Mon Dec 22 13:29:10 2008 +0000

    Use "" as the default value for the :text property
    
    This follows the convention of GtkLabel/GtkEntry in GTK+ and the old
    ClutterEntry.
    
    It makes it easier to use strlen/strcmp etc on the output, since we can
    assume that it is always a string.
    
    This commit also updates the test unit for ClutterText to verify that
    the clutter_text_get_text() function also returns an empty string when
    a ClutterText actor has been created.

 clutter/clutter-text.c            |   12 +++++++++---
 tests/conform/test-clutter-text.c |    3 ++-
 2 files changed, 11 insertions(+), 4 deletions(-)

commit 4a934c363c559896c2dede5374cc33b63a7c01a7
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Mon Dec 22 13:24:52 2008 +0000

    Do not include cogl-pango.h multiple times
    
    The clutter-private.h header already includes cogl-pango.h with
    the correct inclusion path, because the main context stores a
    pointer to the font map.
    
    There is no need for clutter-text.c to include cogl-pango.h
    again since it already includes clutter-private.h.

 clutter/clutter-private.h |    3 ++-
 clutter/clutter-text.c    |    4 +---
 2 files changed, 3 insertions(+), 4 deletions(-)

commit 6a980793c6b7f66c698a8426d92763827d73958e
Author: Owen Taylor <otaylor@fishsoup.net>
Date:   Mon Dec 22 13:11:59 2008 +0000

    Return something reasonable from clutter_x11_handle_event()
    
    Instead of returning CLUTTER_X11_FILTER_CONTINUE always from
    clutter_x11_handle_event() return CLUTTER_X11_FILTER_REMOVE if
    the event was on a stage and translated to a ClutterEvent.
    
    Signed-off-by: Emmanuele Bassi <ebassi@linux.intel.com>

 clutter/x11/clutter-event-x11.c |   26 +++++++++++++++++++++++---
 1 file changed, 23 insertions(+), 3 deletions(-)

commit 8e88a487d997b305b63deb668b16f72f50c4850a
Author: Robert Bragg <robert@linux.intel.com>
Date:   Sun Dec 21 21:12:43 2008 +0000

    [gitignore] Adds *.swn + *.swo (Vim files) & *.orig + *.reg (patch conflicts)

 .gitignore |    4 ++++
 1 file changed, 4 insertions(+)

commit 3a6ffe3b7dacf82708392b4bd4f244a5ec28f66d
Author: Robert Bragg <robert@linux.intel.com>
Date:   Sun Dec 21 21:08:10 2008 +0000

    [build] Replaces use of #include <cairo/cairo.h> with #include <cairo.h>
    
    The cairo pkg-config is crafted such that #include <cairo.h> should be used.
    If building with a private build of cairo installed to a custom prefix
    <cairo/cairo.h> can cause an un-intended cairo header to be picked up during
    compilation due to /usr/include being in the header search path.

 clutter/clutter-cairo-texture.h |    2 +-
 clutter/clutter-path.h          |    2 +-
 2 files changed, 2 insertions(+), 2 deletions(-)

commit c700d4c9a1019fb235e0a7919c2c6e21bdd458e6
Author: Robert Bragg <robert@linux.intel.com>
Date:   Fri Dec 19 21:31:18 2008 +0000

    [tests] Ensures that test-viewport.c is built
    
    test-viewport.c wasn't listed correctly in the UNIT_TESTS variable
    (it was missing the .c extension, and so it wasn't being built.)

 tests/interactive/Makefile.am |    3 ++-
 1 file changed, 2 insertions(+), 1 deletion(-)

commit a40666469d462d5bb24ce6ee7a8c5ccfc579c213
Author: Robert Bragg <robert@linux.intel.com>
Date:   Fri Dec 19 21:22:45 2008 +0000

    [tests] Ensure that test-launcher.sh is found for out of tree builds
    
    When building out of tree the generated scripts for the unit tests
    need to explicitly reference the original src dir to be able to find
    test-launcher.sh, like this:
     $(top_srcdir)/tests/conform/test-launcher.sh
    
    Also test-launcher.sh now passes -m slow --verbose to gtester. Without
    -m slow then the wrappers dont work for some of the timeline tests.

 tests/conform/Makefile.am      |    2 +-
 tests/conform/test-launcher.sh |    2 +-
 2 files changed, 2 insertions(+), 2 deletions(-)

commit 4e493d1937e6e68e394dcb8a0ae7671dcc6d39e1
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Fri Dec 19 18:21:36 2008 +0000

    Avoid masking math.h exported variables
    
    Our beloved math.h exports, from bits/mathcalls.h, a bare "y1" symbol.
    Apparently, it's unthinkable for code including <math.h> to also declare
    arguments or variable named "y0", "y1" and "yn".
    
    Anyway, the quick fix already used elsewhere in Clutter's codebase is
    to rename the colliding variables "y_0", "y_1" and "y_n" - and
    obviously everything similar to them as well, using the same pattern.

 clutter/clutter-path.c |   60 ++++++++++++++++++++++++++----------------------
 clutter/clutter-path.h |   24 +++++++++----------
 2 files changed, 44 insertions(+), 40 deletions(-)

commit 42bba13135d97babd5c0a0ce3b65836d077fbd5a
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Fri Dec 19 17:49:57 2008 +0000

    [docs] Remove a duplicate definition
    
    ClutterScriptable was defined twice inside the sections file.

 doc/reference/clutter/clutter-sections.txt |    1 -
 1 file changed, 1 deletion(-)

commit c93cd4a096b9e37df5cdc01f0e49b8193034f73a
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Fri Dec 19 17:48:30 2008 +0000

    [docs] Documentation fixes for CairoTexture
    
    Sync up the arguments name inside the gtk-doc annotations with their
    name inside the function declaration in the header file.

 clutter/clutter-cairo-texture.c |   18 +++++++++++++-----
 1 file changed, 13 insertions(+), 5 deletions(-)

commit 2f230034255b6440fd442934f2997db1811e12f5
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Fri Dec 19 17:44:24 2008 +0000

    Whitespace fixes
    
    Let's try to honour the coding style document, now that we have one.

 clutter/clutter-path.c |   91 ++++++++++++++++++++++++++++--------------------
 1 file changed, 54 insertions(+), 37 deletions(-)

commit 81541e6940d70beaf68d856d870b96c74ddbfaac
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Fri Dec 19 17:41:44 2008 +0000

    [docs] Parameter naming fixes
    
    The name of the parameter in the header and the one in the gtk-doc
    annotation on top of a function must match.
    
    Unfortunately, there is an index() function declared inside strings.h
    which makes gcc complain for the "index" argument as soon as we
    enable the extra compiler flags we use when distchecking.
    
    Hence, we need to rename "index" to "index_" in the header and in
    the source files.

 clutter/clutter-path.c |   34 +++++++++++++++++-----------------
 clutter/clutter-path.h |    2 +-
 2 files changed, 18 insertions(+), 18 deletions(-)

commit 2e98fa46df84ba2b6dc4909c4638e493d889da3a
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Fri Dec 19 17:30:50 2008 +0000

    [docs] Add last few missing symbols to the sections file

 doc/reference/clutter/clutter-sections.txt |    7 +++++++
 1 file changed, 7 insertions(+)

commit cc52bbce0bca153bd2594a85eb4c0acb3707b762
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Fri Dec 19 17:28:42 2008 +0000

    [docs] Add shader symbols to their sections

 doc/reference/clutter/clutter-sections.txt |   23 +++++++++++++++++++++++
 1 file changed, 23 insertions(+)

commit 6a4a5e0a3b57f14368cd17833d34a8560e46886a
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Fri Dec 19 17:25:18 2008 +0000

    [docs] Add ClutterPath unused symbols
    
    Add the symbols that gtk-doc can track to the sections file.

 doc/reference/clutter/clutter-sections.txt |   17 +++++++++++++++++
 1 file changed, 17 insertions(+)

commit 4094590a528fc662091c030e3477e4eb6ba07aae
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Fri Dec 19 17:21:30 2008 +0000

    [docs] Fix a typo in the binding pool section

 doc/reference/clutter/clutter-sections.txt |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit 8d98c28dfa7d5be746f1aa8b351e4e8fea9ee3a7
Merge: 5560157 64de041
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Fri Dec 19 16:44:40 2008 +0000

    Merge branch 'cairo-texture'
    
    * cairo-texture:
      [cairo-texture] Remove the construct only restriction on surface size
      [cairo-texture] Silently discard 0x0 surfaces
      Re-indent ClutterPath header
      Add a test case for the new cairo path functions
      Add clutter_path_to_cairo_path and clutter_path_add_cairo_path
      Warn instead of returning in the IN_PAINT check
      Small documentation fixes
      Print a warning when creating a cairo_t while painting
      Do not set the IN_PAINT flag inside the Stage paint
      Set the IN_PAINT private flag
      [docs] Add ClutterCairoTexture to the API reference
      Add ClutterCairoTexture
      Require Cairo as a Clutter dependency
    
    Conflicts:
    
      Fix merge conflict in clutter/clutter-path.h

commit 64de0411eaaffd5237c45475645005d282db05cf
Author: Neil Roberts <neil@linux.intel.com>
Date:   Fri Dec 19 13:15:26 2008 +0000

    [cairo-texture] Remove the construct only restriction on surface size
    
    It is possible to change the surface size after construction with
    clutter_cairo_texture_set_surface_size so it doesn't seem right to
    restrict changing the properties.
    
    clutter_cairo_texture_resize_surface_internal is called in a handler
    for the notify signal. It is called there rather than directly in the
    set_property handler so that changing both properties in a single
    g_object_set will only cause one resize. The constructed override is
    no longer needed.
    
    resize_surface_internal will now bail out if the size of the surface
    is already the right size.

 clutter/clutter-cairo-texture.c |   30 ++++++++++++++++++++++--------
 1 file changed, 22 insertions(+), 8 deletions(-)

commit cf5d69139d0ef7f380616e4eaf18fc82721f62f5
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Fri Dec 19 13:42:17 2008 +0000

    [texture] Do not mix fixed point and units values
    
    Like we did for ClutterActor in commit cdb78ec4, fix ClutterTexture
    usage of CoglFixed and ClutterUnit values without conversion between
    the two types.

 clutter/clutter-texture.c |   40 ++++++++++++++++++++++++----------------
 1 file changed, 24 insertions(+), 16 deletions(-)

commit f6e9a701e42ca4a01a41eaa7ab220bf48c23a49f
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Fri Dec 19 13:03:53 2008 +0000

    [tests] Fix the actor detection
    
    The test-unproject interactive test assumed that only the rectangle was
    on the stage. As it turns out, labels can be picked as well.

 tests/interactive/test-unproject.c |   19 ++++++++++++-------
 1 file changed, 12 insertions(+), 7 deletions(-)

commit cdb78ec4d2bdea875fb1b4514cf4ec0618e31a8e
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Fri Dec 19 12:53:57 2008 +0000

    [units] Do not use fixed point and units interchangeably
    
    Clutter units are, at the moment, implemented as a value in fixed point
    notation using the same format as CoglFixed. This is, though, an
    implementation detail. For this reason, units should not be treated as
    CoglFixed values and should be converted to and from fixed point using
    the provided macros.
    
    This commit updates the usage of units and fixed point values in
    ClutterActor and rationalises some of the transformation code that
    heavily relied on the equivalency between them.

 clutter/clutter-actor.c |  569 +++++++++++++++++++++++++----------------------
 1 file changed, 298 insertions(+), 271 deletions(-)

commit 5560157428e8fcfde5a903878eace9134475d318
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu Dec 18 18:14:22 2008 +0000

    [docs] Fix a copy-and-paste typo in the coding style

 CODING_STYLE |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit b63b1584bd24a625b226e46149a9353102ad8774
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu Dec 18 17:56:11 2008 +0000

    [docs] Add coding style document
    
    We should formalise the current coding style of Clutter for
    third parties that wish to start hacking and contribute back
    patches.

 CODING_STYLE |  379 ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 HACKING      |    8 +-
 Makefile.am  |    2 +-
 3 files changed, 385 insertions(+), 4 deletions(-)

commit 5e0daa8ecd651a629b8a52eda6ba2fe5b915190d
Author: Robert Bragg <robert@linux.intel.com>
Date:   Thu Dec 18 17:54:35 2008 +0000

    Improves tfp performance on Nvidia
    
    Some drivers (e.g. Nvidia) get upset if you try to create multiple glx pixmaps
    for the same server side pixmap object, even though you might have unique
    client side names, we now avoid hitting this problem by destroying the current
    glx pixmap early within clutter_glx_texture_pixmap_create_glx_pixmap.

 clutter/glx/clutter-glx-texture-pixmap.c |    7 +++++++
 1 file changed, 7 insertions(+)

commit 9cd92fc540210b505b8db2819689ba582814b023
Author: Neil Roberts <neil@linux.intel.com>
Date:   Thu Dec 18 17:40:36 2008 +0000

    [test-scale] Add a label showing the gravity
    
    A label is now displayed under the rectangle showing the current
    gravity. The text for the gravity is taken from the GEnumClass. This
    makes it easier to verify that the test is working correctly.

 tests/interactive/test-scale.c |   33 +++++++++++++++++++++++++--------
 1 file changed, 25 insertions(+), 8 deletions(-)

commit 4168ed09de75d4bea08e206103e4eac3e1047d1c
Author: Neil Roberts <neil@linux.intel.com>
Date:   Thu Dec 18 12:20:46 2008 +0000

    Fix calculation in clutter_cubic_bezier
    
    The calculation for cubic bezier curves had an extra multiplication by
    3 which was causing the curve to go over 1.0 very quickly. This had
    the affect of making test-animation appear to complete much before the
    completed signal is emitted.

 clutter/clutter-alpha.c |   10 +++++-----
 1 file changed, 5 insertions(+), 5 deletions(-)

commit 2bf815131af32b8c5239425b8dacbacf29d503cf
Author: Neil Roberts <neil@linux.intel.com>
Date:   Wed Dec 17 19:26:24 2008 +0000

    [clutter-interval] Fix calculation of interval for unsigned types
    
    The patch makes it cast to double before subtracting the original
    value from the target value. Otherwise if the target value is less
    than the original value then the subtraction will overflow and the
    factor will be multiplied by a very large number instead of the
    desired interval.
    
    The problem is demonstrable using the border-width property of
    ClutterRectangle.

 clutter/clutter-interval.c |    4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

commit e130e0c9b30ee688b6dcd9d1fece05ea88b558e7
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Wed Dec 17 15:40:33 2008 +0000

    [cairo-texture] Silently discard 0x0 surfaces
    
    The current CairoTexture can be created with a surface size of 0
    by 0 pixels, but a warning will be printed.
    
    Worse, the surface can be resized to be 0 by 0 pixels without a
    warning. The :surface-width and :surface-height properties accept
    a minimum value of 0, and not check is performed on either the
    constructor or set_surface_size() parameters to enforce the "greater
    than zero" rule.
    
    The correct and consistent behaviour is to allow a 0 by 0 pixels
    surface size everywhere; inside surface_resize_internal(), the
    current surface will be destroyed and if either :surface-width or
    :surface-height are set to 0, the resizing terminates.
    
    Attempting to create a Cairo context from a CairoTexture with
    either :surface-width or :surface-height set to 0 will result in
    a warning.
    
    This allows:
    
      - creating a CairoTexture with :surface-width or :surface-height
        set to zero and delaying the surface resize at a later point;
      - resizing the surface to 0 by 0 pixels to destroy the image
        surface used internally;
      - increase the consistency in the usage of CairoTexture.

 clutter/clutter-cairo-texture.c |   46 ++++++++++++++++++---------------------
 1 file changed, 21 insertions(+), 25 deletions(-)

commit 140e4e1be29cfef0627177f91d5d9a2fd483f7e3
Author: Neil Roberts <neil@linux.intel.com>
Date:   Wed Dec 17 14:47:23 2008 +0000

    Minor fix to documentation for clutter_actor_get_anchor_point
    
    In both versions of clutter_actor_get_anchor_point the description of
    the @anchor_y parameter was slightly wrong in different ways.

 clutter/clutter-actor.c |    6 +++---
 1 file changed, 3 insertions(+), 3 deletions(-)

commit 335b650d0b74d02266dcabf3ba55422ecd613a39
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Wed Dec 17 13:59:56 2008 +0000

    [tests] Create a real file for each test unit
    
    Currently, the conformance test suite creates symbolic links pointing
    to a wrapper script that just parses the name used to invoke it and
    calls the gtester with the correct path.
    
    Unfortunately, this presents two issues:
    
            - it does not really work on file systems that do not
              support symbolic links
            - it leaves behind the symbolic links, which cannot
              be automatically cleaning by 'make clean'
    
    Both can be solved by creating a small script that invokes the wrapper
    one with the test unit path.
    
    The Makefile will use test-conform to extract the unit test paths
    and generate a list that will be iterated over to create the
    executable name (using the "test-name" convention also used by the
    interactive tests, instead of "test_name"); the executable is then
    just a simple shell script that invokes the wrapper script passing
    the unit test path on the command line. The wrapper script will
    use the first argument to work correctly, so it could be simply
    executed like:
    
            ./test-wrapper.sh /path/to/unit_test
    
    Which is another improvement over the current implementation, where
    the wrapper script does not work when invoked directly.

 .gitignore                     |   68 ++++++++++++++--------------
 tests/conform/Makefile.am      |   96 ++++++++++++++++++++++++----------------
 tests/conform/test-launcher.sh |   24 ++++++++++
 tests/conform/wrapper.sh       |   18 --------
 4 files changed, 115 insertions(+), 91 deletions(-)

commit 6b782ce4e720f07bd678ce613b81987fde13ff38
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Tue Dec 16 15:53:57 2008 +0000

    Fix the selection behaviour around the 0th glyph
    
    After fixing the cursor position issues around the initial
    glyph of the layout, the selection position needs fixing as
    well.
    
    The fix is similar: check if the position of the selection
    is 0 and provide a fast path by setting the offset to 0.

 clutter/clutter-text.c |   11 +++++++++--
 1 file changed, 9 insertions(+), 2 deletions(-)

commit ff92cc9766cfceb0cf390253b6c369099678691d
Author: Neil Roberts <neil@linux.intel.com>
Date:   Tue Dec 16 15:39:53 2008 +0000

    Convert clutter_path_get_position to take a gdouble instead of an alpha value
    
    The gdouble value represents an interval along the path from 0.0 to
    1.0. This makes more sense than using an alpha value because paths are
    not directly related to ClutterAlphas and the rest of the Clutter API
    tends to expose gdouble arguments.

 clutter/clutter-behaviour-path.c |    5 ++++-
 clutter/clutter-path.c           |   37 ++++++++++++++++++-------------------
 clutter/clutter-path.h           |    2 +-
 tests/conform/test-path.c        |    3 ++-
 4 files changed, 25 insertions(+), 22 deletions(-)

commit d7ce56bb465735599de825d1545999999aa11125
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Tue Dec 16 14:02:05 2008 +0000

    Support pango_layout_set_height() in ClutterText
    
    This is the port of the patch attached to bug 1266:
    
      ClutterLabel support for pango_layout_set_height()
    
    to the ClutterText actor. This patch adds support for the
    pango_layout_set_height() function inside the layout creation
    and caching, so that setting the height of a ClutterText will
    make PangoLayout try to fill out the given height before
    ellipsizing the contents of the ClutterText actor.
    
    The original patch is from Havoc Pennington.
    
    This commit ports the patch to ClutterText and applies a small
    change to the height computation pointed out by Behdad Esfahbod
    on GNOME's Bugzilla:
    
      http://bugzilla.gnome.org/show_bug.cgi?id=560931
    
    That the layout heights when doing a size request should be
    set to be G_MAXINT instead of -1.
    
    Unfortunately, the patch seems to break the conformance suite
    when setting the ellipsization on the layout.

 clutter/clutter-text.c |  149 +++++++++++++++++++++++++++++++-----------------
 1 file changed, 96 insertions(+), 53 deletions(-)

commit ba586b46b304bbe3fe17b12b057574b8b1e08e32
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Tue Dec 16 13:58:54 2008 +0000

    [tests] Make the layout cache fail at the right place
    
    The GTest report output allows the developer to know where exactly
    a test unit failure happened. The test-text-cache unit makes it
    very hard to pinpoint the exact failure location because it relies
    on the output to be printed out - which is not the case when the
    tests are run as part of a make check.
    
    This commit makes each sub-test inside the unit fail exactly where
    the check function fails, which makes it easier to know which sub-test
    did actually fail.

 tests/conform/test-text-cache.c |   38 ++++++++++++++++++++++++--------------
 1 file changed, 24 insertions(+), 14 deletions(-)

commit d85a1cb5a1dfce2364ca604c9ad33855d48d73aa
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Tue Dec 16 12:42:44 2008 +0000

    [docs] Add clutter_text_set_selection to gtk-doc
    
    Insert the newly added symbol to the ClutterText section in
    the API reference.

 doc/reference/clutter/clutter-sections.txt |    1 +
 1 file changed, 1 insertion(+)

commit a3fbdb594905cec0f822150b48c56837bc23dd73
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Tue Dec 16 12:41:20 2008 +0000

    Add ClutterText::set_selection()
    
    The clutter_text_set_selection() function is a convenience
    method for setting the cursor position and the selection
    boundary to a given position in a single call, with sanity
    checks for the positions.

 clutter/clutter-text.c |   38 ++++++++++++++++++++++++++++++++++++++
 clutter/clutter-text.h |    3 +++
 2 files changed, 41 insertions(+)

commit 2209e174328790b140bb4a43c53fcdf7436d4a75
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Tue Dec 16 12:25:45 2008 +0000

    Fix ClutterText::get_selection()
    
    The clutter_text_get_selection() function was not checking the
    passed argument, and was still accessing the contents of the
    Text actor using clutter_text_get_text().
    
    This commit also adds the last few gtk-doc annotations missing
    from ClutterText.

 clutter/clutter-text.c |   59 ++++++++++++++++++++++++++++++++++++++----------
 1 file changed, 47 insertions(+), 12 deletions(-)

commit e28fb9ae103038e769553b488d1c084426edb966
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Tue Dec 16 12:25:15 2008 +0000

    [docs] Add more gtk-doc annotations
    
    Almost reaching full documentation.

 clutter/clutter-text.c |   50 +++++++++++++++++++++++++++++++++++++++++++++++-
 1 file changed, 49 insertions(+), 1 deletion(-)

commit 4a43b582ac0de60464fbf0dfbebb26e549d452f6
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Tue Dec 16 12:05:10 2008 +0000

    Use clutter_text_activate()
    
    Instead of repeating the same code for the ::activate signal
    emission, use the clutter_text_activate() function inside the
    'activate' key binding handler.

 clutter/clutter-text.c |   11 +----------
 1 file changed, 1 insertion(+), 10 deletions(-)

commit 93d96dca52b21c63775a230f872de28fe0e0e3ea
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Tue Dec 16 12:02:58 2008 +0000

    Add ClutterText::activate()
    
    The clutter_text_activate() function will emit the ::activate
    signal if the :activatable property is set.
    
    This function is useful for subclasses or application code, for
    example if we are going to use ::captured-event or ::key-press-event
    signal handlers to intercept the Return key and emit the ::activate
    signal ourselves.

 clutter/clutter-text.c |   35 +++++++++++++++++++++++++++++++++++
 clutter/clutter-text.h |    1 +
 2 files changed, 36 insertions(+)

commit 87f38475aed1827de5e48e0db0d5bff4ea1bcef5
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Tue Dec 16 11:52:57 2008 +0000

    [docs] Add more gtk-doc annotations for ClutterText
    
    Document the ClutterText constructors and the :editable, :selectable
    and :activatable properties accessors.

 clutter/clutter-text.c |  116 +++++++++++++++++++++++++++++++++++++++++++++++-
 1 file changed, 114 insertions(+), 2 deletions(-)

commit e3ba2ddf0a0cdace9530ad8227fdd3a6a94bf36f
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Tue Dec 16 11:30:47 2008 +0000

    [docs] Annotate properties and fix signals docs
    
    Annotate the properties without gtk-doc description, to get the
    "Since" attribute.
    
    Also, fix the ::cursor-event and ::activate signals documentation.

 clutter/clutter-text.c |   94 +++++++++++++++++++++++++++++++++++++++++++++---
 1 file changed, 89 insertions(+), 5 deletions(-)

commit 32896d9aee66700f03417f3f88e0bba6d18d2e5c
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Tue Dec 16 10:43:05 2008 +0000

    [docs] Add :cursor-size property accessors
    
    Add the ClutterText:cursor-size property accessors to the
    known gtk-doc symbols for the ClutterText section.

 doc/reference/clutter/clutter-sections.txt |    2 ++
 1 file changed, 2 insertions(+)

commit 7ebb9ff6b7bc04d2a47a0d7202f7190ce41faa80
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Tue Dec 16 10:39:52 2008 +0000

    Allow selecting with line-start and line-end bindings
    
    Instead of installing the line-start and line-end key bindings
    using the bare ClutterBindingPool API, we can use the internal
    clutter_text_add_move_binding(), which automatically installs
    the same key binding with the Shift modifier mask.
    
    This allows selecting when pressing Shift+Home or Shift+End.
    
    The selection behaviour is still incorrect around the zeroeth
    position, with all the text after the first line being selected.

 clutter/clutter-text.c |   37 ++++++++++++++++---------------------
 1 file changed, 16 insertions(+), 21 deletions(-)

commit ea5a6abd9d599104ae4de7c0aecb529276d0d004
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Tue Dec 16 10:37:45 2008 +0000

    Add :cursor-size property to ClutterText
    
    We can control the width of the cursor when painting by using
    a simple property.
    
    The magic -1 number passed to the setter method will reset the
    cursor size to the default one of 2px.
    
    The getter method will return an unsigned integer with the
    current size.

 clutter/clutter-text.c |   80 +++++++++++++++++++++++++++++++++++++++++++++++-
 clutter/clutter-text.h |    3 ++
 2 files changed, 82 insertions(+), 1 deletion(-)

commit ffb500d3a617ef3f0cfab4912c4ed4ca8c71599a
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Tue Dec 16 10:19:56 2008 +0000

    Remove unused page up/down key bindings
    
    Moving the text by a "page" depends on being able to define a
    "page size" in terms of lines of text. Since we don't define
    something similar to an Adjustment that allows us to handle this
    behaviour, we should defer the paging implementation to a higher
    level class based on ClutterText.

 clutter/clutter-text.c |   35 -----------------------------------
 1 file changed, 35 deletions(-)

commit dc49dab35074ca27fcccf015e8990270eeaa4185
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Tue Dec 16 10:15:57 2008 +0000

    Fix line start and line end key binding behaviour
    
    Another fix for the key navigation behaviour around the zeroeth
    glyph in the layout.
    
    This commit adds a fast path for for the zero index when the
    cursor position is set as zero, in case we are using the line-start
    or line-end key bindings, similarly to what we did in commit
    be64cbcdc22952ce2fa9f902e153e3bd9f4a08c9 for the move-up and
    move-down bindings.

 clutter/clutter-text.c |   20 ++++++++++++--------
 1 file changed, 12 insertions(+), 8 deletions(-)

commit be64cbcdc22952ce2fa9f902e153e3bd9f4a08c9
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Mon Dec 15 18:46:08 2008 +0000

    Fix up/down key navigation
    
    The behaviour of ClutterText around the initial position is still
    a little bit erratic.
    
    This commit fixes the key navigation with Up and Down arrows around
    the first line of text.

 clutter/clutter-text.c |   24 ++++++++++++++++--------
 1 file changed, 16 insertions(+), 8 deletions(-)

commit e615b8cc6bd6e77cc649e71db6ea62248e37a6cd
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Mon Dec 15 18:24:42 2008 +0000

    Use units in position_to_coords()
    
    We loose precision with a direct conversion for PangoUnits to
    pixels, so we should do the conversion as needed, inside the
    callers of clutter_text_position_to_coords().

 clutter/clutter-text.c |  113 ++++++++++++++++++++++++++++++++++--------------
 1 file changed, 81 insertions(+), 32 deletions(-)

commit 2714397fd517636461088f20521c80801b696b60
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Mon Dec 15 18:23:25 2008 +0000

    Constify the cursor geometry in ::cursor-event
    
    We don't allow changing the cursor geometry inside the ::cursor-event
    signal handlers; for starters, it would make binding the signal a
    huge mess, and it would also potentially break the whole actor.

 clutter/clutter-text.h |    9 +++++----
 1 file changed, 5 insertions(+), 4 deletions(-)

commit c68cf3564e4899f8a4f34326dee439b0ab7944f3
Author: Neil Roberts <neil@linux.intel.com>
Date:   Mon Dec 15 16:32:21 2008 +0000

    [test-paint-wrapper] Use a separate paint guard for each actor
    
    Since commit c7c5cf9b ClutterCloneTexture causes an extra paint of the
    source actor during the paint run of the cloned texture if the source
    is not yet visible. When the stage is first shown it is redrawn
    immediatly before it is mapped which means get_paint_visibility will
    fail on the source actor so the inner paint will be run. The paint
    guards were a global variable so they didn't cope with a second actor
    being painted.
    
    The breakage didn't occur until commit d510a4b0 because
    get_paint_visibility was also broken.

 tests/interactive/test-paint-wrapper.c |   27 +++++++++++++++++++--------
 1 file changed, 19 insertions(+), 8 deletions(-)

commit 2d166b250c0e0da33171f0d2f87735c965af50e9
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Mon Dec 15 15:10:55 2008 +0000

    [docs] Add annotations for ClutterText structures
    
    ClutterText and ClutterTextClass were missing annotations for
    gtk-doc to pick up.

 clutter/clutter-text.h |   17 +++++++++++++++++
 1 file changed, 17 insertions(+)

commit 39b575e6b43301354912d18a50b80085e8d92388
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Mon Dec 15 15:08:12 2008 +0000

    Remove ClutterLabel and ClutterEntry
    
    Both ClutterLabel and ClutterEntry have been deprecated by
    ClutterText.

 clutter/clutter-entry.c | 1795 -----------------------------------------------
 clutter/clutter-entry.h |  165 -----
 clutter/clutter-label.c | 1347 -----------------------------------
 clutter/clutter-label.h |  128 ----
 4 files changed, 3435 deletions(-)

commit ca310d49cab2b021471d4d094c1802fee7d705af
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Mon Dec 15 15:00:37 2008 +0000

    Re-indent ClutterPath header
    
    Match the indentation and style of the other Clutter headers.

 clutter/clutter-path.h |  240 +++++++++++++++++++++---------------------------
 1 file changed, 103 insertions(+), 137 deletions(-)

commit f6feed43863f6c42d6204e5006f92937a0709756
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Mon Dec 15 14:29:59 2008 +0000

    Fix a typo in the ClutterParamSpecFixed declaration
    
    The ClutterParamSpecFixed constructor is declared in the header
    as taking ClutterFixed values, but the implementation takes
    ClutterUnit values instead. This obviously works because fixed
    and units are exactly the same type.
    
    This commit fixes the wrong parameters.

 clutter/clutter-fixed.c |   12 ++++++------
 1 file changed, 6 insertions(+), 6 deletions(-)

commit b2f4363d95a9c70ca66c533bd068eb6e1994d0c0
Author: Emmanuele Bassi <ebassi@gnome.org>
Date:   Sat Dec 13 11:53:03 2008 +0000

    Remove a double semi-colon typo
    
    Fixes bug 1351 - Extra ; in clutter-behaviour-ellipse.c
    
    Thanks to Haakon Sporsheim.

 clutter/clutter-behaviour-ellipse.c |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit 4e0073cd508ad55c8d6b6d031f060ae9644620c2
Author: Neil Roberts <neil@linux.intel.com>
Date:   Fri Dec 12 22:47:46 2008 +0000

    Fix the gtk-doc for some properties in ClutterActor
    
    Some of the properties were specified as ClutterActor::property (with
    two colons) but gtk-doc expects one colon so the documentation is not
    parsed.

 clutter/clutter-actor.c |   20 ++++++++++----------
 1 file changed, 10 insertions(+), 10 deletions(-)

commit cd1992181c13fcb94ef8d952845017b7901e6e3c
Author: Neil Roberts <neil@linux.intel.com>
Date:   Fri Dec 12 17:38:53 2008 +0000

    Fix the definition of clutter_actor_set_scale to match the declaration
    
    Trivial change to declare the parameter as gdouble instead of double
    so that it matches the header.

 clutter/clutter-actor.c |    4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

commit 965ec2762000543998e83e07f2f4690830231e2a
Author: Neil Roberts <neil@linux.intel.com>
Date:   Fri Dec 5 18:37:46 2008 +0000

    Add a test case for the new cairo path functions
    
    The nodes of the test path have been reordered because Cairo coalesces
    multiple move operations into a single move so the comparison would
    fail if the two move nodes are consecutive.

 tests/conform/test-path.c |  104 ++++++++++++++++++++++++++++++++++++++++++---
 1 file changed, 99 insertions(+), 5 deletions(-)

commit a462d19e1438dcb738362e63ddcb30a77ba5cdc2
Author: Neil Roberts <neil@linux.intel.com>
Date:   Fri Dec 5 18:37:31 2008 +0000

    Add clutter_path_to_cairo_path and clutter_path_add_cairo_path
    
    See bug #1325.
    
    Added doc for new cairo path functions to clutter-sections.txt

 clutter/clutter-path.c                     |  115 ++++++++++++++++++++++++++++
 clutter/clutter-path.h                     |    7 ++
 doc/reference/clutter/clutter-sections.txt |    2 +
 3 files changed, 124 insertions(+)

commit 0e1a3c21248cf3ab14211bee8c93e0677769a723
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Fri Dec 12 11:42:16 2008 +0000

    Warn instead of returning in the IN_PAINT check
    
    It's conceivable that a warning should be deemed enough, instead
    of just returning a NULL cairo_t when creating a context for the
    CairoTexture actor.

 clutter/clutter-cairo-texture.c |   11 ++++++-----
 1 file changed, 6 insertions(+), 5 deletions(-)

commit 4d34872deab56c9b341742386c1740bf15b2a83c
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu Dec 11 15:51:24 2008 +0000

    Small documentation fixes
    
    Fix the CairoTexture description, and some of the comments inside
    the code, especially with regards to the alpha channel unpremultiplication
    that we have to perform each time we upload the image surface to
    GL.

 clutter/clutter-cairo-texture.c |   15 +++++++++++----
 1 file changed, 11 insertions(+), 4 deletions(-)

commit cf9dea7cf6e079a8897c7b0d92da030c88cb964f
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu Dec 11 15:48:43 2008 +0000

    Print a warning when creating a cairo_t while painting
    
    If you create a Cairo context in the middle of a paint run and then
    you destroy it, the CairoTexture will have to upload the contents of
    the image surface to the GL pipeline. This usually leads to slow
    downs and general performance degradation.
    
    ClutterCairoTexture will warn to the console if Clutter has been
    compiled with the debug messages and if create() or create_region()
    are called while an actor is in the middle of a paint.

 clutter/clutter-cairo-texture.c |   19 +++++++++++++++++--
 1 file changed, 17 insertions(+), 2 deletions(-)

commit 1b88122873afac513449b03c0658ab3802c84f3d
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu Dec 11 15:41:25 2008 +0000

    Do not set the IN_PAINT flag inside the Stage paint
    
    Since the CLUTTER_ACTOR_IN_PAINT private flag is set as part
    of the paint process by clutter_actor_paint(), there is no
    need to set it inside the ClutterStage paint function.

 clutter/clutter-stage.c |    4 ----
 1 file changed, 4 deletions(-)

commit 3f2c9fe6b31af32ad643cce9154e17096eed432c
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu Dec 11 15:39:28 2008 +0000

    Set the IN_PAINT private flag
    
    When calling clutter_actor_paint() we should be setting the
    CLUTTER_ACTOR_IN_PAINT private flag. This allows signalling
    to each Actor subclass that we are effectively in the middle
    of a paint sequence. Actor subclasses can check for this
    private flag and act based on its presence - for instance to
    avoid recursion, or to detect performance degradation cases.

 clutter/clutter-actor.c |    6 ++++++
 1 file changed, 6 insertions(+)

commit 99bcf731cb168846de1bf922285f52bcb3c40a81
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu Dec 11 15:37:21 2008 +0000

    [docs] Add ClutterCairoTexture to the API reference

 doc/reference/clutter/clutter-docs.xml     |    1 +
 doc/reference/clutter/clutter-sections.txt |   29 ++++++++++++++++++++++++++++
 doc/reference/clutter/clutter.types        |    1 +
 3 files changed, 31 insertions(+)

commit e934ad03ca7880561dd282d8cc6abc29ba0c00f5
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu Dec 11 15:24:07 2008 +0000

    Add ClutterCairoTexture
    
    Move the ClutterCairo actor from a separate library to an in-tree
    actor.
    
    ClutterCairoTexture is a simple texture subclass that allows you
    to retrieve a Cairo context for a private image surface. When the
    Cairo context is destroyed it will cause the image surface
    contents to be uploaded to a GL texture.
    
    The image surface used is not hardware accelerated.

 clutter/Makefile.am             |    2 +
 clutter/clutter-cairo-texture.c |  721 +++++++++++++++++++++++++++++++++++++++
 clutter/clutter-cairo-texture.h |   92 +++++
 clutter/clutter.h               |    1 +
 4 files changed, 816 insertions(+)

commit 49e762a291cb38873ecb5992c1d6d3e91f9ae9c8
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu Dec 11 15:22:42 2008 +0000

    Require Cairo as a Clutter dependency
    
    Cairo has been an indirect dependency for Clutter since 0.8, through
    the PangoCairo API.
    
    Now we explicitly depend on Cairo in order to merge the clutter-cairo
    API into Clutter core.

 configure.ac |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit c8dbbfaacff5b3d6ed2f9b28b65a10e15241dc0f
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu Dec 11 15:01:28 2008 +0000

    [docs] Update the API reference
    
    Add all the unused API to the sections file; there are still
    some undocumented bits, but clutter-unused.txt is empty for
    the time being.
    
    Also, add ClutterText to the main XML document and remove
    ClutterLabel and ClutterEntry.

 doc/reference/clutter/Makefile.am          |    1 +
 doc/reference/clutter/clutter-docs.xml     |    3 +-
 doc/reference/clutter/clutter-sections.txt |  131 +++++++++++++++++++++++++++-
 doc/reference/clutter/clutter.types        |    3 +-
 4 files changed, 132 insertions(+), 6 deletions(-)

commit a50dfefbc33a8c0b0c7189058f4f7f521707a8fc
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu Dec 11 15:00:22 2008 +0000

    Fix documentation issues
    
    Provide a description for the ClutterText section, and fix some
    misnamed arguments inside the header file.

 clutter/clutter-text.c |   16 ++++++++++++++++
 clutter/clutter-text.h |    4 ++--
 2 files changed, 18 insertions(+), 2 deletions(-)

commit 0ac15903781b8deb9339027bdd4db2982f2629f3
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu Dec 11 14:57:46 2008 +0000

    Lazily create the PangoContext on Text::init
    
    If we create the PangoContext for ClutterText inside the class
    initialization we might not have a Clutter main context yet.
    
    Ideally, we should store the Pango context inside the main context
    and create it on clutter_init(), but for now we can lazily create
    the PangoContext when we initialize a ClutterText instance for the
    first time.

 clutter/clutter-text.c |    5 +++--
 1 file changed, 3 insertions(+), 2 deletions(-)

commit 5a1837bc9ef117d47cc9e6dbea66245c95027a4f
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu Dec 11 13:49:39 2008 +0000

    Remove ClutterEntry and ClutterLabel from the build
    
    For the time being, just don't include them or compile them; the
    files will be removed from the repository as soon as all the
    documentation annotations have been ported over to ClutterText.

 clutter/Makefile.am |    4 ----
 clutter/clutter.h   |    2 --
 2 files changed, 6 deletions(-)

commit ffa37dec2067ae69d2850a611758ea4d4ea48d0b
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu Dec 11 13:48:45 2008 +0000

    Update the micro-bench tests to ClutterText
    
    Test the ClutterText rendering speed instead of ClutterLabel's.

 tests/micro-bench/test-text.c |    6 +++---
 1 file changed, 3 insertions(+), 3 deletions(-)

commit 5c14044e5216274cd806122e9ac2550ebb39d9bf
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu Dec 11 13:48:01 2008 +0000

    Update the interactive tests to ClutterText
    
    Instead of using ClutterLabel, use ClutterText to display some
    text where needed.

 tests/interactive/test-clip.c              |    4 ++--
 tests/interactive/test-cogl-tex-polygon.c  |   14 ++++++------
 tests/interactive/test-depth.c             |   10 ++++-----
 tests/interactive/test-easing.c            |    8 +++----
 tests/interactive/test-fbo.c               |    4 ++--
 tests/interactive/test-layout.c            |    4 ++--
 tests/interactive/test-multistage.c        |    8 +++----
 tests/interactive/test-project.c           |    4 ++--
 tests/interactive/test-random-text.c       |    2 +-
 tests/interactive/test-rotate.c            |    4 ++--
 tests/interactive/test-shader.c            |    2 +-
 tests/interactive/test-stage-read-pixels.c |    6 ++---
 tests/interactive/test-unproject.c         |   33 ++++++++++++++--------------
 13 files changed, 51 insertions(+), 52 deletions(-)

commit 24a616368845de3b2e1ee4c335f3051411dfecd6
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu Dec 11 13:45:22 2008 +0000

    Do not compile the opacity and entry interactive tests
    
    The test-opacity interactive test is superceded by the equivalent
    units inside the conformance test suite.
    
    The test-entry interactive test is superceded by the test-text one.

 tests/interactive/Makefile.am |    2 --
 1 file changed, 2 deletions(-)

commit 45de6df615c5573c38d635fd95c1bb06066e2c82
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu Dec 11 13:39:35 2008 +0000

    Update ignore file
    
    Add the conformance test units for ClutterText.

 .gitignore |   13 +++++++++++++
 1 file changed, 13 insertions(+)

commit edd6b65743132648172b2bfa99eb69be82fd1971
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu Dec 11 12:26:47 2008 +0000

    Update the paint opacity unit test
    
    ClutterText behaviour with regards to the paint opacity has been
    changed by commit 07e19fff5ffa9617413fa6c3715914513fec3793.
    
    We need to update the test suite for the paint opacity to reflect
    that change as well.

 tests/conform/test-paint-opacity.c |   36 ++++++++++++++++++------------------
 1 file changed, 18 insertions(+), 18 deletions(-)

commit 786bc4d4d5741b799d7da2a86cd584600a3a2993
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu Dec 11 12:24:45 2008 +0000

    Allow only synthetic events with keyval 0
    
    We allow KeyEvents with a key symbol of '0' to fall through only
    if they are marked as synthetic. Otherwise we discard them without
    mercy.
    
    Synthetic events are useful to test ClutterText behaviour; in fact,
    we do use them inside the test suite exactly for that reason.

 clutter/clutter-text.c |   24 ++++++++++++++++++++----
 1 file changed, 20 insertions(+), 4 deletions(-)

commit 77b3b9d5f494bb193611004456dd8f025e379c18
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu Dec 11 12:21:57 2008 +0000

    Do not use contractions when not needed
    
    I understand we are not Pascal developers, and we don't have to
    use cute and cuddly names like "i_am_an_integer_counter", but
    a ClutterButtonEvent should be stored inside an "event" variable.
    Using "bev" instead? Mmmh, not so much.

 clutter/clutter-text.c |    6 +++---
 1 file changed, 3 insertions(+), 3 deletions(-)

commit 2ca7cb46f95ec49e1016ddb880f2fd9ff6cc8c25
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu Dec 11 12:18:26 2008 +0000

    Use the paint opacity when painting a ClutterText
    
    ClutterText should use the paint opacity for both text and
    cursor.
    
    ClutterLabel had the wrong behaviour, as it set the actor's
    opacity using the text color's alpha channel, and ClutterEntry
    completely disregarded the actor's opacity when painting the
    cursor.
    
    This commit harmonizes the ClutterText behaviour to always
    use a composition of the actor's paint opacity and the text
    and cursor alpha channel values, thus behaving more
    consistently with the rest of Clutter.

 clutter/clutter-text.c |   21 ++++++++++++++++++---
 1 file changed, 18 insertions(+), 3 deletions(-)

commit e9c369f86d0eea327458cc4bd7b9bc750960a09f
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu Dec 11 12:17:11 2008 +0000

    Add documentation annotations
    
    ClutterText is heavily under-documented. This commit ports most of
    the API documentation from ClutterLabel and ClutterEntry to
    ClutterText.

 clutter/clutter-text.c |  192 +++++++++++++++++++++++++++++++++++++++++++++++-
 1 file changed, 188 insertions(+), 4 deletions(-)

commit cfb60228313d16c3a373e8d39b6c05e310ab4ef4
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu Dec 11 12:15:49 2008 +0000

    Code style fixes
    
    Fix the arguments alignment whenever not consistent with the
    coding style rules.

 clutter/clutter-text.c |   24 ++++++++++++------------
 1 file changed, 12 insertions(+), 12 deletions(-)

commit 7a93bcb64eef54c1fae50129111a2d810ad4f622
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu Dec 11 12:14:53 2008 +0000

    Remove unused types
    
    Since ClutterText now uses ClutterBindingPool there is no more
    need for the internal key mapping types.

 clutter/clutter-text.c |    2 --
 1 file changed, 2 deletions(-)

commit 06b00f9dfcaa35acf01723fce0e5e224acdadba7
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu Dec 11 12:13:26 2008 +0000

    Remove units for Entry and Label
    
    ClutterText should supercede all unit tests for ClutterLabel and
    ClutterEntry.

 tests/conform/Makefile.am          |    5 +-
 tests/conform/test-clutter-entry.c |  370 ------------------------------------
 tests/conform/test-conform-main.c  |   16 +-
 tests/conform/test-label-cache.c   |  276 ---------------------------
 tests/conform/test-text-cache.c    |  276 +++++++++++++++++++++++++++
 5 files changed, 279 insertions(+), 664 deletions(-)

commit f13e00b41189fafb2eebd3df214e19db9fb107b7
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu Dec 11 12:10:46 2008 +0000

    Truncate selections on text insertion
    
    When inserting text on a key press event we should also truncate
    the selection.
    
    We should not truncate the selection when inserting any Unicode
    character, since changing the selection also changes the cursor
    position - and one of the invariants we inherited from ClutterEntry
    is that inserting characters programmatically does not change the
    cursor position.

 clutter/clutter-text.c |    6 ++++--
 1 file changed, 4 insertions(+), 2 deletions(-)

commit 35172a7615afa88eea20eee83634e8a07d701d5c
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu Dec 11 12:08:20 2008 +0000

    Change the binding propagation when truncating a selection
    
    If a selection has been truncated inside a key binding handler,
    we should just return and let the usual key event handler continue.
    
    This fixes the case where we deleted a selection using the Delete
    or the Backspace keys.

 clutter/clutter-text.c |    4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

commit ec4c15f8e71faee23b9b92cd49cb2a011750775b
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu Dec 11 12:07:20 2008 +0000

    Comment out the mapping API
    
    The test-text interactive test for ClutterText should not use
    the mapping API, since ClutterText does not have it anymore.

 tests/interactive/test-text.c |    2 ++
 1 file changed, 2 insertions(+)

commit eae98800d2fd45cacbab9f82fb9345e7f23ea517
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu Dec 11 12:03:17 2008 +0000

    Use ClutterBindPool inside ClutterText
    
    ClutterText should use the newly added ClutterBindingPool API to
    handle key events, instead of its homegrown code.
    
    This commit removes the action/mapping code and defers the entire
    key binding matching to a ClutterBindingPool created inside the
    Text class initialization function.

 clutter/clutter-text.c |  973 ++++++++++++++++++++++--------------------------
 clutter/clutter-text.h |   20 -
 2 files changed, 444 insertions(+), 549 deletions(-)

commit b1c366a143eb1db68b46cb235e43761dfbb93745
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu Dec 11 11:59:50 2008 +0000

    Add Text::get_chars() implementation and tests
    
    The clutter_text_get_chars() function returns a section of the
    contents of the Text actor, delimited by a start and an end position.
    
    This commit adds the implementation for that function and a test
    unit that guarantees the offset-to-bytes computations are correct.

 clutter/clutter-text.c            |   35 ++++++++++++++++++++++++++++++++++-
 tests/conform/test-clutter-text.c |   31 +++++++++++++++++++++++++++++++
 tests/conform/test-conform-main.c |    7 +------
 3 files changed, 66 insertions(+), 7 deletions(-)

commit 2fedd3263c4291aa2860e26ebface29913f909e7
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu Dec 11 11:57:46 2008 +0000

    Do not namespace internal data structures
    
    Since the internal data structures are not exported (duh!), we
    can eschew the namespacing and save us some characters.

 clutter/clutter-text.c |    8 ++++----
 1 file changed, 4 insertions(+), 4 deletions(-)

commit e93a7e243c3c43be59fbbfacaae9a55c5dd923a0
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu Dec 11 11:56:44 2008 +0000

    Add comments in the test suite
    
    Comment why we need to enable the editability of the Text actor
    inside the test suite.
    
    This should clarify commit ea508ea528d61ae478d8bc4c88f54a89304f18e8

 tests/conform/test-clutter-text.c |    4 ++++
 1 file changed, 4 insertions(+)

commit 4a1f4d6f9aa3c89750e9eac5f4d95f799d2d2291
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu Dec 11 11:55:39 2008 +0000

    Move internal data structures on top
    
    Try to keep the declarations section of the source files clean and
    possibly consistent.

 clutter/clutter-text.c |   30 +++++++++++++++++-------------
 1 file changed, 17 insertions(+), 13 deletions(-)

commit d84a88ac3b2a7dbc528c7f00a2dd0fc877d37783
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu Dec 11 11:54:32 2008 +0000

    Coding style consistency
    
    Channel mitch's spirit.
    
    This is also how I get to have the highest commit count on Clutter's
    repository.

 clutter/clutter-text.c |  126 ++++++++++++++++++++++++------------------------
 1 file changed, 63 insertions(+), 63 deletions(-)

commit d10f7127a2c07cf80c10c35eeacaa4b20269f740
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu Dec 11 11:54:07 2008 +0000

    Implement Text:max-length
    
    The :max-length property establishes the maximum available
    length for the Text actor's contents, in characters.

 clutter/clutter-text.c |   42 +++++++++++++++++++++++++++---------------
 1 file changed, 27 insertions(+), 15 deletions(-)

commit 191d1aebff0dce424f67a4ac9065570d35f519b7
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu Dec 11 11:51:28 2008 +0000

    Update the ClutterText test unit
    
    Whenever we are sending specially crafted KeyEvents to a ClutterText
    we also need to set it editable, since the event handling code depends
    on the editability setting.

 tests/conform/test-clutter-text.c |   44 +++++++++++++++++++++----------------
 1 file changed, 25 insertions(+), 19 deletions(-)

commit 1ff02f570e0dd214ffc4a29d82b8876b362d74f9
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu Dec 11 11:50:02 2008 +0000

    Use the stored contents length in ::delete_chars()
    
    Instead of recomputing it, we can reuse the contents length we
    compute and store inside clutter_text_set_text().

 clutter/clutter-text.c |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit 4cc57bdc4178571c7c296b09d09b8da93c828ead
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu Dec 11 11:49:45 2008 +0000

    Improve the safety checks inside the text setters
    
    We should check that the contents of the Text actor are
    not NULL when computing the offsets in bytes.

 clutter/clutter-text.c |   27 +++++++++++++--------------
 1 file changed, 13 insertions(+), 14 deletions(-)

commit c72722df8ce3d3c91a26b8fc41cb7af9c6b6d864
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu Dec 11 11:49:14 2008 +0000

    Add :cursor-color-set property declaration
    
    The :cursor-color-set property is a read-only property that
    reflects whether the ClutterText actor is going to use the
    color set inside the :cursor-color property when painting
    the cursor.

 clutter/clutter-text.c |   15 +++++++++++++--
 1 file changed, 13 insertions(+), 2 deletions(-)

commit bdb0cc462d547c0e553c02f1692f35e60034d338
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu Dec 11 11:48:17 2008 +0000

    General whitespace fixes in ClutterText
    
    Let's keep whitespace fixes to their own commit to avoid
    polluting git-blame.

 clutter/clutter-text.c |  105 ++++++++++++++++++++++++++++--------------------
 1 file changed, 62 insertions(+), 43 deletions(-)

commit 7fa93ebe9ed7be18a6dba6174020434759db691b
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu Dec 11 11:47:06 2008 +0000

    Replace offset_to_bytes() implementation
    
    We should re-use the offset_to_bytes() implementation from ClutterEntry
    as it guaranteed some behaviour and sanity checks that we want to keep
    inside ClutterText.

 clutter/clutter-text.c |   46 +++++++++++++++++++++++++++++++++++++++-------
 1 file changed, 39 insertions(+), 7 deletions(-)

commit 94789e3cc3c84acbb63cc3e83a8fb949dd5186f5
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu Dec 11 11:45:37 2008 +0000

    Add a separate test unit for ClutterText
    
    Instead of changing the unit for ClutterEntry, we add a new
    test unit specifically for ClutterText so that we can later tweak
    it specifically for the behaviour changes needed to make ClutterText
    work better.

 tests/conform/Makefile.am          |    3 +-
 tests/conform/test-clutter-entry.c |    2 +-
 tests/conform/test-clutter-text.c  |  370 ++++++++++++++++++++++++++++++++++++
 tests/conform/test-conform-main.c  |   17 ++
 4 files changed, 390 insertions(+), 2 deletions(-)

commit 9169dff794889a9533f1cf778d452fdfdcc4edae
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu Dec 11 11:43:56 2008 +0000

    Add text editing methods
    
    Port the text editing methods from ClutterEntry, so that
    ClutterText exposes the same API.

 clutter/clutter-text.c |  100 +++++++++++++++++++++++++++++++++++++++++-------
 1 file changed, 86 insertions(+), 14 deletions(-)

commit 74257dfa273a6f283e01bdc91d5a74dea0bf38e0
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu Dec 11 11:43:37 2008 +0000

    Add missing basic constructor
    
    ClutterText should have an empty constructor, mostly for
    bindings to use, that just proxies call to g_object_new()
    without setting any property.

 clutter/clutter-text.c |    6 ++++++
 clutter/clutter-text.h |    1 +
 2 files changed, 7 insertions(+)

commit 7af992974e08707d583cdb94d7353e4e64ee5633
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu Dec 11 11:42:33 2008 +0000

    Initialize the cursor position
    
    By default, the cursor position is initialized to -1, meaning
    "place the cursor always at the end of the text".

 clutter/clutter-text.c |    2 ++
 1 file changed, 2 insertions(+)

commit d5df1bebcf28cb035ea9529fbc1352c8300f7e25
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu Dec 11 11:40:55 2008 +0000

    Add text-visibility accessors for ClutterText
    
    A ClutterText can be put in "password mode" by setting the
    text as "invisible": every character inside the Text actor's
    contents will be replaced when building the Pango layout with
    a specific Unicode character.
    
    The Unicode character is set to '*' by default, but the user
    can be changed using the provided API.

 clutter/clutter-text.c |  654 +++++++++++++++++++++++++++++++++++-------------
 clutter/clutter-text.h |   21 +-
 2 files changed, 495 insertions(+), 180 deletions(-)

commit 64af7bafe387571d7087dd4c99b4f459c1ca41c0
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu Dec 11 11:37:46 2008 +0000

    Move test-threads to ClutterText
    
    The test-threads interactive test is a good candidate for the
    switch from ClutterLabel to ClutterText to verify that the
    behaviour of the two classes is the same.

 tests/interactive/test-threads.c |   10 +++++-----
 1 file changed, 5 insertions(+), 5 deletions(-)

commit 97cf7e68199f9ac901777f7c68b5475373d5a4eb
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu Dec 11 11:35:52 2008 +0000

    Correctly initialize the initial state of ClutterText
    
    Some of the values in ClutterText have an initial state that
    does not match a zero-ed out ClutterTextPrivate structure.

 clutter/clutter-text.c |   27 +++++++++++++++++++++++----
 1 file changed, 23 insertions(+), 4 deletions(-)

commit fc168a34823567caead8e7cbfcf91b3f47b229e8
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu Dec 11 11:33:10 2008 +0000

    Merge the ClutterLabel properties into ClutterText
    
    ClutterText should have the same properties as ClutterLabel.
    
    While at it, we can finally fix the disconnect between the wrap
    and wrap-mode properties and its accessors, that we perpetuated
    from GtkLabel.
    
    The ClutterText:line-wrap property and ClutterText:line-wrap-mode
    are mapped to the set_line_wrap(), get_line_wrap() and
    set_line_wrap_mode(), get_line_wrap_mode() accessor functions
    respectively. This should simplify bindings the Vala ones that
    map a property into a method.

 clutter/clutter-text.c | 1312 ++++++++++++++++++++++++++++++++----------------
 1 file changed, 886 insertions(+), 426 deletions(-)

commit c5f51f7027dbbac373587621a52fc6f95f529e69
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu Dec 11 11:31:48 2008 +0000

    Add Text::get_chars() method declaration
    
    Add the declaration for a clutter_text_get_chars() function that
    returns a portion of the contents of a Text actor.

 clutter/clutter-text.h |    3 +++
 1 file changed, 3 insertions(+)

commit 430d1cf347beeaa619651f2a227d00e053b6b2da
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu Dec 11 11:22:46 2008 +0000

    Add Actor::grab_key_focus() method
    
    Bug 1003 - Add clutter_actor_take_key_focus()
    
    The grab_key_focus() method is just a simple wrapper around
    clutter_stage_take_key_focus() that removes the need to get
    the ClutterStage of an actor in order to set the key focus.
    
    Based on a patch by Xan López.
    
    Signed-off-by: Emmanuele Bassi <ebassi@linux.intel.com>
    Signed-off-by: Øyvind Kolås <pippin@linux.intel.com>

 clutter/clutter-actor.c |   25 +++++++++++++++++++++++++
 clutter/clutter-actor.h |    2 ++
 2 files changed, 27 insertions(+)

commit 40fb75052ba11b80b41590f17ab3b194df11ae3f
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu Dec 11 11:21:39 2008 +0000

    Merge Label and Entry API into ClutterText
    
    ClutterText should expose both ClutterLabel and ClutterEntry
    functionality using an API that matches the one provided by
    those two classes.

 clutter/clutter-text.h |  150 ++++++++++++++++++++++++++++++++----------------
 1 file changed, 99 insertions(+), 51 deletions(-)

commit 437f96982e5754f25630570818d4a5173bd9a8ce
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu Dec 11 11:20:14 2008 +0000

    Expose the Text accessors as public API
    
    Fix up the header to expose ClutterText accessors for the main
    properties, matching ClutterLabel.

 clutter/clutter-text.c |    8 --------
 clutter/clutter-text.h |   47 +++++++++++++++++++++++------------------------
 2 files changed, 23 insertions(+), 32 deletions(-)

commit 5ac16652df4fc165c6237464e6df250687bf023f
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu Dec 11 11:18:05 2008 +0000

    Update the ClutterText interactive test
    
    Use ClutterText's own API instead of relying on the Label's API.
    
    ClutterText is not meant to be a subclass of ClutterLabel.

 tests/interactive/test-text.c |    8 ++++----
 1 file changed, 4 insertions(+), 4 deletions(-)

commit 4d62da80adf7347d1be25cdc42255438e5d8fb64
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu Dec 11 11:17:26 2008 +0000

    Coalesce ClutterLabel API usage
    
    ClutterText replaces ClutterLabel, so it should expose the same
    kind of API - ideally with the minimal amount of changes, so that
    the porting is trivial.

 clutter/clutter-text.c |  693 ++++++++++++++++++++++++++++++++++++++++++------
 1 file changed, 608 insertions(+), 85 deletions(-)

commit a91bb5450f029200635d9fdaf470c27046ebdeae
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu Dec 11 11:15:56 2008 +0000

    Group all the integer private fields
    
    Integer fields using the ": <bits>" notation should be packed
    together so that the compiler can optimize the structure size
    correctly.

 clutter/clutter-text.c |   19 ++++++++++---------
 1 file changed, 10 insertions(+), 9 deletions(-)

commit f9bf187e5d0268886a96a40911debd21b666e5e0
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu Dec 11 11:15:11 2008 +0000

    Use internal headers
    
    Since ClutterText is part of Clutter, it can use the internal
    and private headers instead of the catch-all clutter.h.

 clutter/clutter-text.c |   17 ++++++++++++++++-
 1 file changed, 16 insertions(+), 1 deletion(-)

commit a98720ae19f4892676c043bb6e4f2258eb201827
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu Dec 11 11:12:48 2008 +0000

    Initial import of the Text actor from Tidy
    
    The TidyText actor is meant as a replacement for both ClutterLabel
    and ClutterText.
    
    Any text-displaying and editing actor should derive from ClutterText
    and implement the various visual cues to differentiate the editable
    from the non-editable state. Those visual cues usually belong to
    a high-level toolkit, especially if themeing is involved.

 clutter/Makefile.am           |    2 +
 clutter/clutter-text.c        | 1561 +++++++++++++++++++++++++++++++++++++++++
 clutter/clutter-text.h        |  136 ++++
 clutter/clutter.h             |    1 +
 tests/interactive/Makefile.am |    3 +-
 tests/interactive/test-text.c |  176 +++++
 6 files changed, 1878 insertions(+), 1 deletion(-)

commit 4973b684a619ad62ed4bad0103cdd38a3f34ccba
Author: Emmanuele Bassi <ebassi@gnome.org>
Date:   Thu Dec 11 11:11:11 2008 +0000

    Resort the main Clutter include file
    
    Just for overall sanity we keep the include file sorted.

 clutter/clutter.h |   22 +++++++++++-----------
 1 file changed, 11 insertions(+), 11 deletions(-)

commit ee72352de0da52ae977d42fe2b06e96a90cf4bee
Author: Emmanuele Bassi <ebassi@gnome.org>
Date:   Wed Dec 10 23:12:22 2008 +0000

    Update ignore file

 .gitignore |    3 +++
 1 file changed, 3 insertions(+)

commit e21fee39b450beee1a140a3b075321687e9c6f05
Merge: 9537f8e dc6545c
Author: Neil Roberts <neil@linux.intel.com>
Date:   Wed Dec 10 12:25:25 2008 +0000

    Merge commit 'git-svn' into multiple-texture-rectangle

commit 9537f8e4ae69af43848f679d6568e94eb800b266
Author: Neil Roberts <neil@linux.intel.com>
Date:   Tue Dec 9 18:03:29 2008 +0000

    Use a single index array
    
    There's no point in clearing the index array because it is always the
    same sequence of indices regardless of the vertices. Instead it is
    just added to when there are more vertices than ever before.

 clutter/cogl/gl/cogl-texture.c   |   51 ++++++++++++++++++++++++--------------
 clutter/cogl/gles/cogl-texture.c |   51 ++++++++++++++++++++++++--------------
 2 files changed, 66 insertions(+), 36 deletions(-)

commit 2c9a79651a0d8b0400589b9e1232c941b09ebb2a
Merge: 0bedd89 e3dd18d
Author: Neil Roberts <neil@linux.intel.com>
Date:   Tue Dec 9 15:10:56 2008 +0000

    Merge commit 'git-svn' into multiple-texture-rectangle

commit 0bedd891fb716e03b867e1f450205a2d503721cf
Author: Neil Roberts <neil@linux.intel.com>
Date:   Tue Dec 9 15:10:33 2008 +0000

    Support cogl_texture_multiple_rectangles in GL ES backend

 clutter/cogl/gles/cogl-context.c |   14 +-
 clutter/cogl/gles/cogl-context.h |   11 +-
 clutter/cogl/gles/cogl-texture.c |  343 ++++++++++++++++++++++----------------
 3 files changed, 212 insertions(+), 156 deletions(-)

commit 8fc949bfafe0ca5de2cf19081f122896e29a3794
Author: Neil Roberts <neil@linux.intel.com>
Date:   Tue Dec 9 15:01:10 2008 +0000

    Minor fix to indentation in gl/cogl-texture.c

 clutter/cogl/gl/cogl-texture.c |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit 73974de482cff70c124aa49869b77099382591c3
Author: Neil Roberts <neil@linux.intel.com>
Date:   Tue Dec 9 13:16:42 2008 +0000

    Add gtk-doc for cogl_texture_multiple_rectangles

 clutter/cogl/cogl-texture.h          |   18 ++++++++++++++++++
 doc/reference/cogl/cogl-sections.txt |    1 +
 2 files changed, 19 insertions(+)

commit bf72b8cdc3c43221e0813475957712f3ad9c8265
Author: Neil Roberts <neil@linux.intel.com>
Date:   Tue Dec 9 13:02:28 2008 +0000

    Use glDrawRangeElements to share vertices
    
    When drawing a quad from cogl_texture_multiple_rectangles share two of
    the vertices in each triangle by using indices.

 clutter/cogl/gl/cogl-context.c |    4 +
 clutter/cogl/gl/cogl-context.h |    1 +
 clutter/cogl/gl/cogl-texture.c |  157 +++++++++++++++++++++-------------------
 3 files changed, 88 insertions(+), 74 deletions(-)

commit bafcfca797d29d3731b1af4675c341ed212fbd5d
Merge: e3f077d 98035e4
Author: Neil Roberts <neil@linux.intel.com>
Date:   Thu Dec 4 18:08:40 2008 +0000

    Merge commit 'git-svn' into multiple-texture-rectangle
    
    Conflicts:
    
    	clutter/cogl/gl/cogl-texture.c

commit e3f077d55f323d71efed19def7f6a740ff78c2ec
Author: Neil Roberts <neil@linux.intel.com>
Date:   Thu Dec 4 17:50:03 2008 +0000

    Use the correct length in _cogl_texture_flush_vertices
    
    The check for whether there are any rectangles to flush was using the
    wrong value so it would always flush.
    
    Thanks to Johan Bilien for spotting.

 clutter/cogl/gl/cogl-texture.c |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit 29505dd0ba651df08dcfb184f0b08efa5b4eddfe
Author: Neil Roberts <neil@linux.intel.com>
Date:   Fri Nov 28 14:20:07 2008 +0000

    Use GL_TRIANGLES for the texture vertex array
    
    Most cards don't actually support GL_QUADS and they are deprecated in
    GL 3.0 so there is a chance it will perform faster with GL_TRIANGLES
    even though it has to submit two extra vertices.

 clutter/cogl/gl/cogl-texture.c |   32 +++++++++++++++++++++++---------
 1 file changed, 23 insertions(+), 9 deletions(-)

commit ab347481aeccd28b0986fbc991c96d72bbc3f072
Author: Neil Roberts <neil@linux.intel.com>
Date:   Fri Nov 28 13:14:10 2008 +0000

    Use cogl_texture_multiple_rectangles in CoglPangoRenderer
    
    The glyphs are queued into an array of rectangles instead of being
    drawn directly. Whenever a different texture is used or the sequence
    is complete the array is flushed.
    
    This is based on a patch from Owen Taylor.

 clutter/pango/cogl-pango-render.c |   78 ++++++++++++++++++++++++++++++-------
 1 file changed, 64 insertions(+), 14 deletions(-)

commit b312cd2d5560de953cfc0438353f9f6d8e3cae9a
Author: Neil Roberts <neil@linux.intel.com>
Date:   Fri Nov 28 12:44:21 2008 +0000

    Add cogl_texture_multiple_rectangles
    
    This takes an array of sets of 8 floats to describe the rectangles. It
    tries to send the geometry with a single glDrawArrays as far as
    possible. cogl_texture_rectangle is now just a wrapper around
    cogl_texture_multiple_rectangles.

 clutter/cogl/cogl-texture.h    |    5 +++
 clutter/cogl/gl/cogl-texture.c |   74 +++++++++++++++++++++++++++-------------
 2 files changed, 55 insertions(+), 24 deletions(-)

commit 10942e8e049a4bfdd3df5abd5036c63f5676df92
Author: Neil Roberts <neil@linux.intel.com>
Date:   Fri Nov 28 12:33:19 2008 +0000

    Make cogl_texture_rectangle use the vertex array
    
    cogl_texture_quad_hw and _sw now just add vertices to the vertex
    array. The last texture used is stored and if a different texture is
    encountered then flushes the vertices. cogl_texture_rectangle always
    flushes the vertices after calling either of the functions.

 clutter/cogl/gl/cogl-context.h |    7 +-
 clutter/cogl/gl/cogl-texture.c |  199 ++++++++++++++++++++++------------------
 2 files changed, 118 insertions(+), 88 deletions(-)

commit 93ea1681bb21704a51370c0a2e7bc8f791a38d5a
Author: Neil Roberts <neil@linux.intel.com>
Date:   Thu Nov 27 16:44:39 2008 +0000

    Use a GArray for the texture vertices in cogl_texture_polygon
    
    Previously it was a dynamic array that was manually reallocated.

 clutter/cogl/gl/cogl-context.c |   11 +++++++----
 clutter/cogl/gl/cogl-context.h |    3 +--
 clutter/cogl/gl/cogl-texture.c |   32 +++++++++-----------------------
 3 files changed, 17 insertions(+), 29 deletions(-)
