commit 1f3f718a50b8138194057b3827459e402006b0f6
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Fri Sep 24 15:07:17 2010 +0100

    Release 1.4.0 (stable)

 NEWS         |   33 +++++++++++++++++++++++++++++++++
 configure.ac |    4 ++--
 2 files changed, 35 insertions(+), 2 deletions(-)

commit 34407c14b00d35392e70b27e4b579f24f28e023a
Author: Elliot Smith <elliot.smith@intel.com>
Date:   Fri Sep 24 14:48:53 2010 +0100

    cookbook: Reduce complexity of sample ClutterAnimator code for recipe
    
    http://bugzilla.clutter-project.org/show_bug.cgi?id=2341
    
    Signed-off-by: Emmanuele Bassi <ebassi@linux.intel.com>

 doc/cookbook/examples/animations-moving-animator.c |   24 ++------------------
 1 file changed, 2 insertions(+), 22 deletions(-)

commit 4640dad6afdce4469b64cef3fea9a426afcb0ce8
Author: Øyvind Kolås <pippin@linux.intel.com>
Date:   Fri Sep 24 13:28:08 2010 +0100

    animator: fix removal of all keys
    
    When removing all keys in a ClutterAnimator, the hash table with
    object/property name pairs went out of sync. This change makes
    the animator always clear this hash table upon key-removal; and
    refreshing it if the animator's timeline is running.
    
    Fixes bug #2335

 clutter/clutter-animator.c |   23 +++++++----------------
 1 file changed, 7 insertions(+), 16 deletions(-)

commit f834b8b138f1f405a7afa7e56560e4014f8bb990
Author: Robert Bragg <robert@linux.intel.com>
Date:   Thu Sep 23 22:18:42 2010 +0100

    material: Don't prune ancestry if it owns some layers
    
    Each time a material property changes we look to see if any of its
    ancestry has become redundant and if so we prune that redundant
    ancestry.
    
    There was a problem with the logic that handles this though because we
    weren't considering that a material which is a layer state authority may
    still defer to ancestors to define the state of individual layers.
    
    For example a material that derives from a parent with 5 layers can
    become a STATE_LAYERS authority by simply changing it's ->n_layers count
    to 4 and in that case it can still defer to its ancestors to define the
    state of those 4 layers.
    
    This patch checks first if a material is a layer state authority and if
    so only tries to prune its ancestry if it also *owns* all the individual
    layers it depends on. (I.e. if g_list_length
    (material->layer_differences) != material->n_layers then it's not safe
    to try pruning its ancestry!)
    
    http://bugzilla-attachments.gnome.org/attachment.cgi?id=170907

 clutter/cogl/cogl/cogl-material.c |   21 +++++++++++++++++++++
 1 file changed, 21 insertions(+)

commit ffd5c32209bc6784c554134dd8c61536191c1e29
Author: Jammy Zhou <jammy.zhou@linaro.org>
Date:   Tue Sep 21 11:37:52 2010 +0800

    cogl-framebuffer.c: GL_DEPTH_STENCIL not supported in gles
    
    There is GL_INVALID_ENUM error for GL_DEPTH_STENCIL when call
    glRenderbufferStorage() with OpenGL ES backend. So enable this
    only for OpenGL backend.
    
    Signed-off-by: Robert Bragg <robert@linux.intel.com>

 clutter/cogl/cogl/cogl-framebuffer.c |    2 ++
 1 file changed, 2 insertions(+)

commit 4533edeef03b452aa79671fd6f80e659b2f09fa9
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu Sep 23 17:03:17 2010 +0100

    cookbook: Further clarification of the anchor point
    
    Make sure to add a note on the behaviour of the anchor point. Ideally,
    it would be nice to have a recipe about it in the Actor section.

 doc/cookbook/animations.xml |   17 ++++++++++++++++-
 1 file changed, 16 insertions(+), 1 deletion(-)

commit ce0bd4e26cd1cff6a9f446b1c54a440751d15fe7
Author: Elliot Smith <elliot.smith@intel.com>
Date:   Thu Sep 23 16:18:29 2010 +0100

    cookbook: Recipe for "moving actors"
    
    This recipe explains how to use the three animation
    approaches (implicit, State, Animator) to animate movement
    of actors.
    
    Includes some guidelines about which approach to use when, with
    a full code example for each approach.
    
    The discussion section covers some subtleties around animated
    movement; namely: moving actors out of their containers; anchor
    points and movement; moving in the depth axis; interactions
    between animated movement and constraints.

 doc/cookbook/Makefile.am                          |    2 +
 doc/cookbook/animations.xml                       |  474 +++++++++++++++++++++
 doc/cookbook/videos/animations-moving-anchors.ogv |  Bin 0 -> 18806 bytes
 doc/cookbook/videos/animations-moving-depth.ogv   |  Bin 0 -> 23536 bytes
 4 files changed, 476 insertions(+)

commit b8d36a364f6db8cb75eaacf27e7e6c109f4f336e
Author: Elliot Smith <elliot.smith@intel.com>
Date:   Thu Sep 23 11:19:00 2010 +0100

    cookbook: Fixed markup in animations section
    
    Fixed indentation on some mark-up in an unrelated recipe.

 doc/cookbook/animations.xml |   14 +++++++-------
 1 file changed, 7 insertions(+), 7 deletions(-)

commit 6307876552c95389c7c41acfa5483dd669d620eb
Author: Elliot Smith <elliot.smith@intel.com>
Date:   Wed Sep 22 16:58:08 2010 +0100

    cookbook: Example of animated movement with ClutterAnimator
    
    Added an example showing how to randomly animate the
    simultaneous movement on the x axis of three actors,
    using ClutterAnimator.

 doc/cookbook/examples/Makefile.am                  |    2 +
 doc/cookbook/examples/animations-moving-animator.c |  145 ++++++++++++++++++++
 2 files changed, 147 insertions(+)

commit f1b2f1e8c55816753362cd038da18e0e572d9978
Author: Elliot Smith <elliot.smith@intel.com>
Date:   Tue Sep 21 17:45:03 2010 +0100

    cookbook: Example of animated movement with ClutterState
    
    Added an example showing how to move two actors between
    two states (one minimised, one maximised) using ClutterState
    to do the movement. Also shows how movement can be mixed
    with other animation (in this case, scaling).

 doc/cookbook/examples/Makefile.am               |    2 +
 doc/cookbook/examples/animations-moving-state.c |   98 +++++++++++++++++++++++
 2 files changed, 100 insertions(+)

commit 5bca30300e21338ff8118f41e9f9e449625bc96a
Author: Elliot Smith <elliot.smith@intel.com>
Date:   Tue Sep 21 17:44:00 2010 +0100

    cookbook: Example of simple movement animation
    
    Added example showing how to move an actor in one of the
    three axes (x,y,z) in response to a button event on the
    actor.

 doc/cookbook/examples/Makefile.am                  |    2 +
 doc/cookbook/examples/animations-moving-implicit.c |   93 ++++++++++++++++++++
 2 files changed, 95 insertions(+)

commit 884ead03e1232b1f35c70098869cf9802f8ef836
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu Sep 23 16:17:24 2010 +0100

    Add some more argument validation
    
    This is all internal, so we shouldn't need it; unfortunately, it seems
    we're passing invalid data internally, so for the time being catching
    inconsistencies should at least emit a warning for us to backtrace.

 clutter/clutter-private.h |    5 +++--
 clutter/clutter-stage.c   |   15 +++++++++++++--
 2 files changed, 16 insertions(+), 4 deletions(-)

commit f66e1de0e35f7e310db919926bbc06d8b03becbf
Author: Robert Bragg <robert@linux.intel.com>
Date:   Thu Sep 23 16:03:06 2010 +0100

    actor: don't pass NULL to _stage_set_pick_buffer_valid
    
    This adds a check in clutter_actor_real_queue_redraw after calling
    _clutter_actor_get_stage_internal to check in case the actor doesn't yet
    have an associated stage so we can avoid passing a NULL stage pointer to
    _clutter_stage_set_pick_buffer_valid which could cause a crash.

 clutter/clutter-actor.c |    3 ++-
 1 file changed, 2 insertions(+), 1 deletion(-)

commit 37d0dbe6b2da3f7747780f638ac39c3f9c0e3818
Author: Robert Bragg <robert@linux.intel.com>
Date:   Thu Sep 23 15:45:27 2010 +0100

    docs: Put deprecated Cogl symbols into new section
    
    This adds a "Cogl deprecated API" chapter to the Cogl reference manual
    so we can group all the documentation for deprecated symbols together
    instead of having them clutter up the documentation of symbols we would
    rather developers used.

 doc/reference/cogl/cogl-docs.xml.in  |   28 ++++++++++
 doc/reference/cogl/cogl-sections.txt |   99 +++++++++++++++++++++++-----------
 2 files changed, 96 insertions(+), 31 deletions(-)

commit 779c780500dd263b5bc0244d0e0b5693cdd3cd6c
Author: Robert Bragg <robert@linux.intel.com>
Date:   Wed Aug 25 22:31:30 2010 +0100

    docs: update the overview paragraph for Cogl
    
    Instead of describing OpenGL as "a low level OpenGL abstraction
    library" it is now summarised as "modern 3D graphics API".

 doc/reference/cogl/cogl-docs.xml.in |   12 +++++++-----
 1 file changed, 7 insertions(+), 5 deletions(-)

commit 2bc739ab445264b01700bada43755e6ab27d0aec
Author: Robert Bragg <robert@linux.intel.com>
Date:   Wed Aug 25 20:36:20 2010 +0100

    docs: cogl-texture-3d wasn't listed as experimental
    
    The CoglTexture3D API is only available when defining
    COGL_ENABLE_EXPERIMENTAL_API so it should be listed in the experimental
    section of the API reference.

 doc/reference/cogl/cogl-docs.xml.in |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit a89b8f430449ea02467aa6d11bd501841ef22756
Author: Robert Bragg <robert@linux.intel.com>
Date:   Wed Aug 25 20:33:27 2010 +0100

    docs: Use "Cogl" not "COGL" in Cogl API reference
    
    Cogl isn't an acronym so we should use "Cogl" instead of "COGL" in
    our documentation.

 doc/HACKING                                        |    6 +++---
 doc/reference/clutter/running-clutter.xml          |    6 +++---
 doc/reference/clutter/subclassing-ClutterActor.xml |    9 ++++-----
 doc/reference/cogl/cogl-docs.xml.in                |   14 +++++++-------
 4 files changed, 17 insertions(+), 18 deletions(-)

commit 4c8867ea07cf5ed8d36c0f7a351f91b254d93693
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu Sep 23 15:15:37 2010 +0100

    table-layout: Invert row/column in arguments
    
                    *** This is an API change ***
    
    The general pattern for axis-aligned arguments is:
    
            x argument
            y argument
    
    If we consider columns an x-aligned argument, and row a y-aligned
    argument, then we need to update the TableLayout functions to be:
    
            column
            row
    
    and not:
    
            row
            column

 clutter/clutter-table-layout.c        |  100 ++++++++++++++++-----------------
 clutter/clutter-table-layout.h        |    8 +--
 tests/interactive/test-table-layout.c |   22 ++++----
 3 files changed, 65 insertions(+), 65 deletions(-)

commit 462d4c832a61731507bf1900d5ed7ec223c1fc57
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu Sep 23 13:36:56 2010 +0100

    docs: Mention Uncrustify in the coding style document

 doc/CODING_STYLE |    5 +++++
 1 file changed, 5 insertions(+)

commit 5335689340c2748842999b40a43563f1f3be9fad
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu Sep 23 13:36:41 2010 +0100

    Update the uncrustify configuration

 build/clutter-uncrustify.cfg |   18 +++++++++++++++---
 1 file changed, 15 insertions(+), 3 deletions(-)

commit 46357db3898eb28bb07faffb5ea8a0b8841fcaec
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu Sep 23 13:00:06 2010 +0100

    Add uncrustify configuration file
    
    Patch submission should include a pass of uncrustify to conform to the
    coding style.
    
    Uncrustify is not perfect - but at least it's a start.

 build/clutter-uncrustify.cfg |  117 ++++++++++++++++++++++++++++++++++++++++++
 1 file changed, 117 insertions(+)

commit 56929942a81a99105cd11dc4fa5afffcca26429e
Author: Robert Bragg <robert@linux.intel.com>
Date:   Sat Sep 11 00:29:05 2010 +0100

    picking: Fix tracking of pick buffer validity
    
    We have an optimization to track when there are multiple picks per
    frame so we can do a full render of the pick buffer to reduce the
    number of pick renders for a static scene.
    
    There was a problem though in that we were tracking this information in
    the ClutterMainContext, but conceptually this doesn't really make sense
    because the pick buffer is associated with a stage framebuffer and there
    can be multiple stages for one context.
    
    This patch moves the state tracking to ClutterStage.

 clutter/clutter-actor.c   |   17 +++++------------
 clutter/clutter-main.c    |   16 ++++++----------
 clutter/clutter-private.h |    9 ++++++---
 clutter/clutter-stage.c   |   46 +++++++++++++++++++++++++++++++++++++++++++++
 4 files changed, 63 insertions(+), 25 deletions(-)

commit b2a56c9cda148bcca6e9695a488562fa45d66f9a
Author: Robert Bragg <robert@linux.intel.com>
Date:   Thu Sep 23 11:35:42 2010 +0100

    Revert "picking: Fix tracking of pick buffer validity"
    
    This reverts commit d7e86e26960f4cb2f5f0600357f5df89bd1c46c1.
    
    This was a half baked patch that was pushed a bit early since it broke
    test-texture-pick-with-alpha + the commit message refers to a change on
    the wip/paint-box branch that hasn't happened yet.

 clutter/clutter-actor.c   |   12 ++++++++++++
 clutter/clutter-main.c    |   16 ++++++++++------
 clutter/clutter-private.h |   10 +++-------
 clutter/clutter-stage.c   |   46 ---------------------------------------------
 4 files changed, 25 insertions(+), 59 deletions(-)

commit d7e86e26960f4cb2f5f0600357f5df89bd1c46c1
Author: Robert Bragg <robert@linux.intel.com>
Date:   Sat Sep 11 00:29:05 2010 +0100

    picking: Fix tracking of pick buffer validity
    
    We have an optimization to track when there are multiple picks per
    frames so we can do a full render of the pick buffer to reduce the
    number of pick renders for a static scene.
    
    There were two problems with how we were tracking this state though.
    Firstly we were tracking this information in the ClutterMainContext, but
    conceptually this doesn't really make sense because the pick buffer is
    associated with a stage framebuffer and there can be multiple stages for
    one context.  Secondly - since the change to how redraws are queued - we
    weren't marking the pick buffer as invalid when a queuing a redraw, we
    were only marking the buffer invalid when signaling/finishing the
    queue-redraw process, which is now deferred until just before a paint.
    This meant using clutter_stage_get_actor_at_pos after a scenegraph
    change could give a wrong result if it just read from an existing (but
    technically invalid) pick buffer.
    
    This patch moves the state tracking to ClutterStage, and ensures the
    buffer is invalidated in _clutter_stage_queue_actor_redraw.
    
    http://bugzilla.clutter-project.org/show_bug.cgi?id=2283
    
    Signed-off-by: Emmanuele Bassi <ebassi@linux.intel.com>

 clutter/clutter-actor.c   |   12 ------------
 clutter/clutter-main.c    |   16 ++++++----------
 clutter/clutter-private.h |   10 +++++++---
 clutter/clutter-stage.c   |   46 +++++++++++++++++++++++++++++++++++++++++++++
 4 files changed, 59 insertions(+), 25 deletions(-)

commit 60c9dc25df59956cc28c2b243a69c76c66b4135e
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Wed Sep 22 12:46:47 2010 +0100

    box-layout: Small cleanups

 clutter/clutter-box-layout.c |   23 ++++++++++++-----------
 1 file changed, 12 insertions(+), 11 deletions(-)

commit acc7d48e47b275c9320cc4b5817aec8eb0fe1e25
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Wed Sep 22 10:07:42 2010 +0100

    docs: Update the coding style
    
    Make sure to document:
    
      • nested if
      • conditions
      • interface definition

 doc/CODING_STYLE |  187 +++++++++++++++++++++++++++++++++++++++++++++++-------
 1 file changed, 164 insertions(+), 23 deletions(-)

commit bcd4385a0e1fe34f0be6cac906ff32ab42c43d3c
Author: Neil Roberts <neil@linux.intel.com>
Date:   Tue Sep 21 13:17:53 2010 +0100

    test-conform: Delay initializing Clutter until a test is run
    
    Instead of calling clutter_init immediately, test-conformance now only
    calls it as part of test_conform_simple_fixture_setup. The conformance
    tests assert that only one test is run per instance of
    test-conformance so it should never end up calling clutter_init
    twice. Delaying clutter_init has the advantage that calling
    "test-conformance -l" will still work even on systems with no X
    server. This could be useful for automated build systems.

 tests/conform/test-conform-common.c |   21 +++++++++++++++++++++
 tests/conform/test-conform-main.c   |   15 ---------------
 2 files changed, 21 insertions(+), 15 deletions(-)

commit ddf1e4c77bde95a71a325998ebc3b984116d0c19
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Tue Sep 21 13:32:31 2010 +0100

    effects: Make sure we're using GLSL 1.10

 clutter/clutter-blur-effect.c       |   22 +++++++++++-----------
 clutter/clutter-colorize-effect.c   |    1 +
 clutter/clutter-desaturate-effect.c |    1 +
 3 files changed, 13 insertions(+), 11 deletions(-)

commit 9f2b62a595805c3d8bae1c9e5692959296aa5d28
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Tue Sep 21 13:17:51 2010 +0100

    introspection: Build ClutterJson before Clutter
    
    Since the latter requires the former.

 clutter/Makefile.am |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit 66ba609f3b704b0950e4bd2b94b0ec9c485dc0b5
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Tue Sep 21 13:15:56 2010 +0100

    Require the installed JSON-GLib
    
    Continue to provide the internal copy for 1.4, but require an explicit
    override to use it.
    
    The internal copy will be removed for Clutter 1.6.

 README       |    4 ++++
 configure.ac |    2 +-
 2 files changed, 5 insertions(+), 1 deletion(-)

commit 4037f76a3e7aba3acac710e0bc73ba31a9dfcfc2
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Tue Sep 21 12:02:41 2010 +0100

    build: Update the remote publish path for the cookbook

 doc/cookbook/Makefile.am |    6 ++++--
 1 file changed, 4 insertions(+), 2 deletions(-)

commit 8f4d61e663770d6a24b75d77418a145eba7c104f
Author: Neil Roberts <neil@linux.intel.com>
Date:   Mon Sep 20 12:04:51 2010 +0100

    clutter-box-layout: Swap the default request mode
    
    The request mode set by the box layout was previously width-for-height
    in a vertical layout and height-for-width in a horizontal layout which
    seems to be wrong. For example, if width-for-height is used in a
    vertical layout then the width request will come second with the
    for_height parameter set. However a vertical layout doesn't pass the
    for_height parameter on to its children so doing the requests in that
    order doesn't help. If the layout contains a ClutterText then both the
    width and height request for it will have -1 for the for_width and
    for_height parameters so the text would end up allocated too small.
    
    http://bugzilla.clutter-project.org/show_bug.cgi?id=2328

 clutter/clutter-box-layout.c |    6 +++---
 1 file changed, 3 insertions(+), 3 deletions(-)

commit 699e8bbed28687dd91aba6b0518d43f815cae456
Merge: af42cdb e92b186
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Mon Sep 20 14:33:26 2010 +0100

    Merge branch 'cookbook-layouts-bind-constraint'
    
    * cookbook-layouts-bind-constraint:
      cookbook: Add recipe about sync'ing actor sizes
      cookbook: Example using allocation-changed to sync actor size
      cookbook: Simple example to demonstrate bind constraint
      cookbook: Example of using a bind constraint for an overlay

commit af42cdbe875bf2c2db00ac7b380870545e2aaebf
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Mon Sep 20 14:31:53 2010 +0100

    docs: Description fixes for State.set_animator()

 clutter/clutter-state.c |   11 +++++++----
 1 file changed, 7 insertions(+), 4 deletions(-)

commit 695839c6f3527e3838bf104d26d3ff32b85aff3f
Author: Bastian Winkler <buz@netbuz.org>
Date:   Fri Sep 17 13:21:03 2010 +0200

    state: Request the animator for the default state
    
    Try to use the default-state animator in case there is no animator for
    this specific state change request.
    
    http://bugzilla.clutter-project.org/show_bug.cgi?id=2325

 clutter/clutter-state.c |    4 ++++
 1 file changed, 4 insertions(+)

commit 172fc6bfedeefcb337ccefbf38b427c5be2591cd
Author: Bastian Winkler <buz@netbuz.org>
Date:   Wed Sep 15 15:59:39 2010 +0200

    state: Fix the usage of ClutterAnimator in ClutterScript
    
    Fix the transition parser to allow transitions that have only an
    animator and no keys defined.
    
    http://bugzilla.clutter-project.org/show_bug.cgi?id=2325

 clutter/clutter-state.c |   30 +++++++++++++++++-------------
 1 file changed, 17 insertions(+), 13 deletions(-)

commit 2d41d5afcb6e69d45ac5ca9575aa96f943484abf
Author: Bastian Winkler <buz@netbuz.org>
Date:   Wed Sep 15 14:46:19 2010 +0200

    state: Create a new target state in clutter_state_set_animator
    
    clutter_state_set_animator needs to create a new state in order to use a
    ClutterAnimator with a target state that doesn't exist yet.
    
    http://bugzilla.clutter-project.org/show_bug.cgi?id=2325

 clutter/clutter-state.c |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit 9399760030325f513e640a781b6139372a8cca5a
Author: Dominique Leuenberger <dimstar@opensuse.org>
Date:   Mon Sep 20 14:13:49 2010 +0100

    build: Pass CLUTTER_CFLAGS to g-ir-scanner
    
    http://bugzilla.clutter-project.org/show_bug.cgi?id=2327
    
    Signed-off-by: Emmanuele Bassi <ebassi@linux.intel.com>

 clutter/Makefile.am |    8 ++++----
 1 file changed, 4 insertions(+), 4 deletions(-)

commit ce174654bf7d743ec2eb18b92c72ab64c9ed7a10
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Mon Sep 20 13:15:44 2010 +0100

    docs: API reference fixes

 clutter/clutter-timeout-pool.h                     |    4 +++
 clutter/cogl/cogl/cogl-path.h                      |    2 ++
 clutter/cogl/cogl/winsys/cogl-texture-pixmap-x11.h |   18 ++++++----
 doc/reference/cally/cally-sections.txt             |   36 ++++++++++----------
 doc/reference/clutter/clutter-sections.txt         |    4 +--
 5 files changed, 36 insertions(+), 28 deletions(-)

commit d9f762f525f91b6eb86ebc6539d4573abddb1875
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Mon Sep 20 11:30:23 2010 +0100

    build: Remove unnecessary newline

 autogen.sh |    1 -
 1 file changed, 1 deletion(-)

commit e3e08c0eaf69db51cd901cd16e80bcb41903ef81
Author: Frederik Hahne <frederik.hahne@googlemail.com>
Date:   Mon Sep 20 11:23:31 2010 +0100

    po: Update German translation

 po/de.po |   39 +++++++++++++--------------------------
 1 file changed, 13 insertions(+), 26 deletions(-)

commit 7fe0df393b905319a261258c68019c4edc29bcea
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Sat Sep 18 08:41:52 2010 +0100

    texture: Add more validation on the material
    
    If set_cogl_texture() is called after unsetting the Texture's material
    then we really want to make a copy of the template.
    
    Also, we should assert more often if the internal state goes horribly
    wrong: at least, we'll have a backtrace.

 clutter/clutter-texture.c |   10 +++++++++-
 1 file changed, 9 insertions(+), 1 deletion(-)

commit 66104f51123538a57b9aa077569a8e68d9438e9b
Author: Neil Roberts <neil@linux.intel.com>
Date:   Fri Sep 17 17:10:39 2010 +0100

    Fix the ordering of the arguments for clutter_table_layout_set_span
    
    The order of the row_span and column_span arguments was different in
    the declaration from that in the definition. This was causing the
    gtk-doc to also have the wrong order.

 clutter/clutter-table-layout.h |    4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

commit 760fa8efd6817ec9c3a1ef5800eb9c64c0f1baf6
Author: Neil Roberts <neil@linux.intel.com>
Date:   Fri Sep 17 17:18:09 2010 +0100

    cogl-object-private.h: Include cogl-debug.h
    
    If COGL_OBJECT_DEBUG is defined then cogl-object-private.h will call
    COGL_NOTE in the ref and unref macros. For this to work the debug
    header needs to also be included or COGL_NOTE won't necessarily be
    defined.

 clutter/cogl/cogl/cogl-object-private.h |    1 +
 1 file changed, 1 insertion(+)

commit e92b18671905f5690320883cc4854dd76dc17d15
Author: Elliot Smith <elliot.smith@intel.com>
Date:   Thu Sep 16 15:55:21 2010 +0100

    cookbook: Add recipe about sync'ing actor sizes
    
    The recipe covers how to use ClutterBindConstraint
    to bind actor sizes together.
    
    It gives some examples of where this approach is appropriate,
    as well as explaining an alternative using allocation-changed
    or notify::* signals.
    
    Three examples are given:
    
    1. Resizing a texture to the stage.
    2. Resizing a rectangle to act as a transparent overlay on
    top of a texture (using constraints).
    3. Resizing a rectangle to act as a transparent overlay on
    top of a texture, but with a size proportional to the texture
    (using a handler connected to allocation-changed signals
    emitted by the texture).

 doc/cookbook/Makefile.am                           |    1 +
 .../images/layouts-bind-constraint-stage.png       |  Bin 0 -> 11084 bytes
 doc/cookbook/layouts.xml                           |  220 ++++++++++++++++++++
 3 files changed, 221 insertions(+)

commit c3cbf1533fdb6174894f38d5956802ce46df4238
Author: Elliot Smith <elliot.smith@intel.com>
Date:   Thu Sep 16 13:42:09 2010 +0100

    cookbook: Example using allocation-changed to sync actor size
    
    An alternative method (not using constraints) to bind
    one actor's size and position to another. Used as
    an example in the recipe about resizing one actor in
    sync with a source actor.

 doc/cookbook/examples/Makefile.am                  |    2 +
 .../examples/layouts-bind-constraint-allocation.c  |   70 ++++++++++++++++++++
 2 files changed, 72 insertions(+)

commit 8a149521cef9f2693d0c32e3cc4bf85a62dee026
Author: Elliot Smith <elliot.smith@intel.com>
Date:   Wed Sep 15 16:05:15 2010 +0100

    cookbook: Simple example to demonstrate bind constraint
    
    A simple example showing how to scale an actor to the stage.
    
    Demonstrates ClutterBindConstraint and ClutterAlignConstraint
    in a fashion suitable for a short recipe.

 doc/cookbook/examples/Makefile.am                  |    2 +
 .../examples/layouts-bind-constraint-stage.c       |   55 ++++++++++++++++++++
 2 files changed, 57 insertions(+)

commit a0f63a3153c023f6a3299b95c0e7259d1eba013d
Author: Elliot Smith <elliot.smith@intel.com>
Date:   Wed Sep 15 15:50:32 2010 +0100

    cookbook: Example of using a bind constraint for an overlay
    
    Example code which loads an image into a texture, and resizes
    the image in response to +/- key presses. The overlay is
    a transparent rectangle which is bound to the height and
    width of the texture; on clicking the texture, the overlay
    is made visible by increasing its opacity.
    
    This demonstrates how to use constraints to simplify code
    for resizing an actor which is "dependent" on another actor.

 doc/cookbook/examples/Makefile.am                  |    2 +
 .../examples/layouts-bind-constraint-overlay.c     |  135 ++++++++++++++++++++
 2 files changed, 137 insertions(+)

commit 68da998c9bc81fa7f2f163032e19640aae9100e7
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Fri Sep 17 14:54:31 2010 +0100

    docs: Add sub-classing notes on ActorMeta and Constraint

 clutter/clutter-actor-meta.c |    8 ++++++--
 clutter/clutter-constraint.c |   26 ++++++++++++++++++++++++++
 2 files changed, 32 insertions(+), 2 deletions(-)

commit f7e8b471132b062d4bc0169cb9f2f5306451603f
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Fri Sep 17 12:43:23 2010 +0100

    flow-layout: Blow the cached preferred size if needed
    
    If the FlowLayout layout manager wasn't allocated the same size it
    requested then it should blow its caches and recompute the layout
    with the given allocation size.

 clutter/clutter-flow-layout.c |   21 +++++++++++++++++++++
 1 file changed, 21 insertions(+)

commit cdff2a9e7a5c44f214978b6a3d6b0cce33b4e5f5
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Fri Sep 17 12:13:29 2010 +0100

    constraint: Re-implement using update_allocation()
    
    Instead of using the fixed position and size API, use the newly added
    update_allocation() virtual function in ClutterConstraint to change the
    allocation of a ClutterActor. This allows using constraints inside
    layout managers, and also allows Constraints to react to changes in the
    size of an actor without causing relayout cycles.
    
    http://bugzilla.clutter-project.org/show_bug.cgi?id=2319

 clutter/clutter-align-constraint.c |   98 +++++++++++++++++++++------------
 clutter/clutter-bind-constraint.c  |  105 +++++++++++++++++++++---------------
 clutter/clutter-bind-constraint.h  |    2 -
 3 files changed, 124 insertions(+), 81 deletions(-)

commit 5da0064de7b77cdb7147371631cf1b9c31f60509
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Fri Sep 17 12:09:56 2010 +0100

    constraint: Add ::update_allocation()
    
    The Constraint should plug directly into the allocation mechanism, and
    modify the allocation of the actor to which they are applied to. This is
    similar to the mechanism used by the Effect class to modify the paint
    sequence of an actor.

 clutter/clutter-actor.c      |   35 +++++++++++++++++++++++++----------
 clutter/clutter-constraint.c |   29 +++++++++++++++++++++++++++--
 clutter/clutter-constraint.h |    4 ++++
 clutter/clutter-private.h    |    4 ++++
 4 files changed, 60 insertions(+), 12 deletions(-)

commit bdcac5617be1c6a774259379a668619ba387c2bc
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Fri Sep 17 12:08:52 2010 +0100

    test-bind: Fix colors and set the name of the boxes

 tests/interactive/test-bind.c |    4 +++-
 1 file changed, 3 insertions(+), 1 deletion(-)

commit 8ca47e3b20f17545e6fcc89e0940d485158308ef
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Fri Sep 17 11:40:10 2010 +0100

    build: Use the power of abs_builddir
    
    When calling test-conformance to get the list of conformance tests.

 tests/conform/Makefile.am |    4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

commit 5529619254aac0f33dc5ee0646b920a63f7b46bb
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Fri Sep 17 11:39:20 2010 +0100

    build: Enable COGL_OBJECT_DEBUG in the debug flags
    
    The CoglObject debugging code is enabled by a separate flag.
    
    http://bugzilla.clutter-project.org/show_bug.cgi?id=2318

 configure.ac |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit d1b4495f7f1694c8b1a671a489d82e124f45c822
Author: Robert Bragg <robert@linux.intel.com>
Date:   Thu Sep 16 12:58:42 2010 +0100

    offscreen-effect: Update handling of transforms
    
    In line with the changes made in f5f066df9ce7 to clean up how Clutter
    deals with transformations of actors this patch updates the code in
    clutter-offscreen-effect.c. We now query the projection matrix from the
    stage instead of the perspective and instead of duplicating the logic to
    setup the stage view transform we now use
    _clutter_actor_apply_modelview_transform for the stage instead.

 clutter/clutter-offscreen-effect.c |   64 +++++++++++++-----------------------
 1 file changed, 23 insertions(+), 41 deletions(-)

commit f0ab8edac0e3e5a5792f48588ab9d24774ff7e72
Author: Neil Roberts <neil@linux.intel.com>
Date:   Thu Sep 16 11:12:51 2010 +0100

    clutter.modules: Specify the checkoutdir for the gtk2 module
    
    If no checkoutdir is specified then jhbuild seems to use the name of
    the module which in this case would be 'gtk+'. This ends up
    overwriting the checkout of the master branch of gtk+ and causes all
    kinds of build problems. This patch adds a checkoutdir attribute to
    the gtk2 module to force it to checkout into the gtk2 directory.

 build/clutter.modules |    1 +
 1 file changed, 1 insertion(+)

commit 8a09e91ef84e483d9fd8dd93cd04d11da241925d
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Wed Sep 15 16:46:06 2010 +0100

    Post-release version bump to 1.3.15

 configure.ac |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit b776f6b4fbe05b493d0b36619c95ece5443c443b
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Wed Sep 15 16:12:39 2010 +0100

    Release Clutter 1.3.14 (developers snapshot)

 NEWS               |   24 ++-
 configure.ac       |    2 +-
 po/clutter-1.0.pot |  470 ++++++++++++++++++++++++------------------------
 po/de.po           |  501 +++++++++++++++++++++++++++-------------------------
 po/it.po           |  468 ++++++++++++++++++++++++------------------------
 po/pl.po           |  468 ++++++++++++++++++++++++------------------------
 po/zh_CN.po        |  468 ++++++++++++++++++++++++------------------------
 7 files changed, 1218 insertions(+), 1183 deletions(-)

commit 037a1b82cc19752d44121a530fac3516a6c25c71
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Wed Sep 15 15:56:42 2010 +0100

    build: Add cogl-debug-options.h

 clutter/cogl/cogl/Makefile.am |    1 +
 1 file changed, 1 insertion(+)

commit 7d2706e8ba09444572d9dcd122b466ff020849f9
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Wed Sep 15 15:35:05 2010 +0100

    docs: Fix the name of the parameters

 clutter/clutter-drag-action.c |    3 ++-
 1 file changed, 2 insertions(+), 1 deletion(-)

commit 73385414524fe03771d135cc3bd94a37b35def4b
Author: Neil Roberts <neil@linux.intel.com>
Date:   Wed Sep 15 14:39:05 2010 +0100

    cogl: Make cogl_util_next_p2 internal and fix the documentation
    
    cogl_util_next_p2 is declared in cogl-util.h which is a private header
    so it shouldn't be possible for an application to use it. It's
    probably not a function we'd like to export from Cogl so it seems
    better to keep it private. This patch renames it to _cogl_util_next_p2
    so that it won't be exported from the shared library.
    
    The documentation for the function is also slightly wrong because it
    stated that the function returned the next power greater than
    'a'. However the code would actually return 'a' if it's already a
    power of two. I think the actual behaviour is more useful so this
    patch changes the documentation rather than the code.

 clutter/cogl/cogl/cogl-texture-2d-sliced.c |    4 ++--
 clutter/cogl/cogl/cogl-util.c              |   11 ++++++-----
 clutter/cogl/cogl/cogl-util.h              |    2 +-
 3 files changed, 9 insertions(+), 8 deletions(-)

commit 42dacf97f82ac506613db662a676df92a9cc4d3a
Author: Neil Roberts <neil@linux.intel.com>
Date:   Wed Sep 15 14:07:30 2010 +0100

    cogl-vertex-buffer: Don't always set COGL_MATERIAL_FLUSH_FALLBACK_MASK
    
    Previously CoglVertexBuffer would always set the flush options flags
    to at least contain COGL_MATERIAL_FLUSH_FALLBACK_MASK. The code then
    later checks whether any flags are set before deciding whether to copy
    the material to implement the overrides. This means that it would
    always end up copying the material even if there are no fallback
    layers. This patch changes it so that it only sets
    COGL_MATERIAL_FLUSH_FALLBACK_MASK if fallback_layers != 0.

 clutter/cogl/cogl/cogl-vertex-buffer.c |    9 ++++++---
 1 file changed, 6 insertions(+), 3 deletions(-)

commit 8cfb158f63a1e1f4af614e17b0198850ff3bdbce
Author: Robert Bragg <robert@linux.intel.com>
Date:   Tue Sep 14 20:25:23 2010 +0100

    material-arbfp: fix updating params if sharing progs
    
    If a single arbfp program is being shared between multiple CoglMaterials
    then we need to make sure we update all program.local params when
    switching between materials. Previously we had a dirty flag to track
    when combine_constant params were changed but didn't take in to account
    that different materials sharing the same program may have different
    combine constants.

 clutter/cogl/cogl/cogl-material-arbfp.c |   12 +++++++++++-
 1 file changed, 11 insertions(+), 1 deletion(-)

commit d87522596d5c2c1001716d6806684e1fa8580109
Author: Robert Bragg <robert@linux.intel.com>
Date:   Tue Sep 14 18:50:50 2010 +0100

    material-arbfp: Another pass at simplifying the code
    
    Previously the backend private state was used to either link to an
    authority material or provide authoritative program state. The mechanism
    seemed overly complex and felt very fragile. I made a recent comment
    which added a lot of documentation to make it easier to understand but
    still it didn't feel very elegant.
    
    This patch takes a slightly different approach; we now have a
    ref-counted ArbfpProgramState object which encapsulates a single ARBfp
    program and the backend private state now just has a single member which
    is a pointer to one of these arbfp_program_state objects. We no longer
    need to cache pointers to our arbfp-authority and so we can get rid of
    a lot of awkward code that ensured these pointers were
    updated/invalidated at the right times. The program state objects are
    not tightly bound to a material so it will also allow us to later
    implement a cache mechanism that lets us share state outside a materials
    ancestry. This may help to optimize code not following the
    recommendations of deriving materials from templates, avoiding one-shot
    materials and not repeatedly modifying materials because even if a
    material's ancestry doesn't naturally lead us to shareable state we can
    fallback to searching for shareable state using central hash tables.

 clutter/cogl/cogl/cogl-material-arbfp.c |  600 +++++++++++++------------------
 1 file changed, 256 insertions(+), 344 deletions(-)

commit f6dc3ddcbaf919e1ddcc218b6a1b7b570f4ff829
Author: Robert Bragg <robert@linux.intel.com>
Date:   Mon Jul 5 21:33:26 2010 +0100

    material: Adds experimental cogl_material_foreach_layer API
    
    This adds a way to iterate the layer indices of the given material since
    cogl_material_get_layers has been deprecated. The user provides a
    callback to be called once for each layer.
    
    Because modification of layers in the callback may potentially
    invalidate any number of the internal CoglMaterialLayer structures and
    invalidate the material's layer cache this should be more robust than
    cogl_material_get_layers() which used to return a const GList *
    pointing directly to internal state.

 clutter/cogl/cogl/cogl-material-arbfp.c   |   12 ++--
 clutter/cogl/cogl/cogl-material-opengl.c  |   18 ++---
 clutter/cogl/cogl/cogl-material-private.h |   10 +--
 clutter/cogl/cogl/cogl-material.c         |  108 ++++++++++++++++++++---------
 clutter/cogl/cogl/cogl-material.h         |   33 +++++++++
 5 files changed, 129 insertions(+), 52 deletions(-)

commit d5eebedaa3c9e4ee54c7efffefd195c2e012c4d9
Author: Robert Bragg <robert@linux.intel.com>
Date:   Tue Sep 14 12:13:30 2010 +0100

    material: don't declare backend vtables in headers
    
    This fixes the material backends to declare their constant vtable in the
    c file with a corresponding extern declaration in the header. This
    should fix complaints about duplicate symbols seen on OSX.

 clutter/cogl/cogl/cogl-material-arbfp-private.h |    2 +-
 clutter/cogl/cogl/cogl-material-arbfp.c         |    2 ++
 clutter/cogl/cogl/cogl-material-fixed-private.h |    2 +-
 clutter/cogl/cogl/cogl-material-fixed.c         |    2 ++
 clutter/cogl/cogl/cogl-material-glsl-private.h  |    2 +-
 clutter/cogl/cogl/cogl-material-glsl.c          |    2 ++
 6 files changed, 9 insertions(+), 3 deletions(-)

commit 5583d9c12eb7b042a400b2d0e77f88fb06a414aa
Author: Robert Bragg <robert@linux.intel.com>
Date:   Tue Sep 14 00:33:46 2010 +0100

    material-arbfp: don't recompile for constant changes
    
    Instead of lazily incorporating combine constants as arbfp PARAM
    constants in the source directly we now use program.local parameters
    instead so we can avoid repeating codegen if a material's combine
    constant is updated. This should be a big win for applications animating
    a constant used for example in an animated interpolation, such as
    gnome-shell.
    
    http://bugzilla.clutter-project.org/show_bug.cgi?id=2280

 clutter/cogl/cogl/cogl-material-arbfp.c |   68 ++++++++++++++++++++-----------
 1 file changed, 45 insertions(+), 23 deletions(-)

commit 2815cf471972cefded669bd4596d46f91178a049
Author: Robert Bragg <robert@linux.intel.com>
Date:   Tue Sep 14 00:27:57 2010 +0100

    material-arbfp: don't redo codegen for texture changes
    
    This makes it so we don't consider LAYER_STATE_TEXTURE changes to affect
    the arbfp code. This should avoid a lot of unneeded passes of
    code generation for applications modifying the texture for a layer.

 clutter/cogl/cogl/cogl-material-arbfp.c |   12 +++++++++---
 1 file changed, 9 insertions(+), 3 deletions(-)

commit 3adeef6604966e4b61a6058eb6ae00629cfcf7c9
Author: Robert Bragg <robert@linux.intel.com>
Date:   Tue Sep 14 00:18:02 2010 +0100

    material: make layer/material_pre_changes mutually exclusive
    
    This makes it so we only notify backends of either a single material
    change or a single layer change. Previously all material STATE_LAYERS
    changes would be followed by a more detailed layer change.
    
    For backends that perform code generation for fragment processing they
    typically need to understand the details of how layers get changed to
    determine if they need to repeat codegen. It doesn't help them to report
    a material STATE_LAYERS change for all layer changes since it's so
    broad, they really need to wait for the layer change to be notified.
    
    What does help though is to report a STATE_LAYERS change for a change in
    material->n_layers because they typically do need to repeat codegen in
    that case.

 clutter/cogl/cogl/cogl-material-arbfp.c |    7 +++++++
 clutter/cogl/cogl/cogl-material.c       |   22 +++++++++++++++++++++-
 2 files changed, 28 insertions(+), 1 deletion(-)

commit 16e9794318b9fe13126b0b19c77a54c4714262a2
Author: Robert Bragg <robert@linux.intel.com>
Date:   Mon Sep 13 23:52:18 2010 +0100

    material-arbfp: fixes for how we track private state
    
    This fixes a number of issues relating to how we track the arbfp private
    state associated with CoglMaterials. At the same time it adds much more
    extensive code documentation to try and make it a bit more approachable.

 clutter/cogl/cogl/cogl-material-arbfp.c |  175 +++++++++++++++++++++++++------
 1 file changed, 143 insertions(+), 32 deletions(-)

commit a114843f744cacc43a4bed4a7186f1746673f01a
Author: Robert Bragg <robert@linux.intel.com>
Date:   Mon Sep 13 23:05:49 2010 +0100

    material: pass material owner for layer pre changes
    
    When notifying a backend about a layer being modified we now pass the
    layers current owner for reference. NB: Although a layer can indirectly
    be referenced by multiple layers, a layer is considered immutable once
    it has dependants, so there is only ever one material associated with a
    layer being modified. Passing the material pointer to the backends
    layer_pre_change callback can be useful for backends that associate
    their private state with materials and may need to update that state in
    response to layer changes.

 clutter/cogl/cogl/cogl-material-arbfp.c   |   11 ++++++++++-
 clutter/cogl/cogl/cogl-material-private.h |    3 ++-
 clutter/cogl/cogl/cogl-material.c         |    7 ++++---
 3 files changed, 16 insertions(+), 5 deletions(-)

commit d9a32f979c7fc2c3e7bd58c29b36208be1fd01c9
Author: Robert Bragg <robert@linux.intel.com>
Date:   Mon Sep 13 22:56:44 2010 +0100

    arbfp: rename get_arbfp_authority clarifying semantics
    
    This renames the get_arbfp_authority function to
    get_arbfp_authority_no_check to clarify that the function doesn't
    validate that the authority cache is still valid by looking at the age
    of the referenced material. The function should only be used when we
    *know* the cache has already been checked.

 clutter/cogl/cogl/cogl-material-arbfp.c |   16 ++++++++++------
 1 file changed, 10 insertions(+), 6 deletions(-)

commit ed1123a06b6afe3d98342f2550cb6f5cd248a578
Author: Robert Bragg <robert@linux.intel.com>
Date:   Mon Sep 13 21:26:31 2010 +0100

    material: track if material change is layer change
    
    We now pass a boolean to _cogl_material_pre_change_notify to know when
    a material change is as a result of a layer change. We plan to use this
    information to avoid notifying the backends about material changes if
    they are as a result of layer changes. This will simplify the handling
    of state changes in the backends because they can assume that layer and
    material changes are mutually exclusive.

 clutter/cogl/cogl/cogl-material.c |   52 +++++++++++++++++++++----------------
 1 file changed, 29 insertions(+), 23 deletions(-)

commit 53acf4d1b0ad372205c1b8f1dcecfef2777d13d5
Author: Robert Bragg <robert@linux.intel.com>
Date:   Mon Sep 13 21:21:09 2010 +0100

    material: Adds _get_layer_combine_constant API
    
    This adds an internal _cogl_material_get_layer_combine_constant function
    so we can query the current layer combine constant back. We should
    probably make this a public property getter, but for now we just need
    this so we can read the constant in the arbfp backend.

 clutter/cogl/cogl/cogl-material-private.h |    5 +++++
 clutter/cogl/cogl/cogl-material.c         |   26 ++++++++++++++++++++++++++
 2 files changed, 31 insertions(+)

commit 7f95015c6d0f7e1652b88d8e534cee323eb408f4
Author: Robert Bragg <robert@linux.intel.com>
Date:   Mon Sep 13 21:17:30 2010 +0100

    material: track unit state with arbfp private state
    
    We are going to start tracking more per-texture unit state with arbfp
    private state so this adds an internal UnitState type and we allocate an
    array of these when setting up a new private state structure. The first
    thing that has been moved into this is the sampled boolean to know when
    a particular texture unit gets sampled from in the generated arbfp code.

 clutter/cogl/cogl/cogl-material-arbfp.c |   36 +++++++++++++++++++++++--------
 1 file changed, 27 insertions(+), 9 deletions(-)

commit 98516061c328fd4306b2059cd6bc7d443d4900a3
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Wed Sep 15 11:56:59 2010 +0100

    Enumeration value should be on the same line
    
    The glib-mkenums script is not clever enough to deal with
    
      FLAGS_VALUE = FLAGS_A |
                    FLAGS_B
    
    And since this breaks the enumeration GType and the introspection data,
    we cannot really wait for it to be fixed.
    
    See: https://bugzilla.gnome.org/show_bug.cgi?id=629741
    
    http://bugzilla.clutter-project.org/show_bug.cgi?id=2238

 clutter/cogl/cogl/cogl-buffer.h |    3 +--
 1 file changed, 1 insertion(+), 2 deletions(-)

commit d45c1671d12ad056362e7fb39a0ca8ca9a981660
Author: Robert Bragg <robert@linux.intel.com>
Date:   Wed Sep 1 15:15:20 2010 +0100

    cogl-framebuffer: fix leak when popping framebuffer
    
    We were using g_slist_remove_link instead of g_slist_delete_link
    resulting in a memory leak. Thanks to Simon Lanzmich for
    reporting this bug.

 clutter/cogl/cogl/cogl-framebuffer.c |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit 88023d438d3124792ba58ad624ba537b27568528
Author: Robert Bragg <robert@linux.intel.com>
Date:   Mon Aug 16 21:11:42 2010 +0100

    Initialize the cogl uprof state in cogl_create_context
    
    This avoids the use of of gcc constructor and destructor attributes to
    initialize the cogl uprof context and optionally print a cogl uprof
    report at app exit. We now initialize the uprof context in
    cogl_context_create instead.

 clutter/cogl/cogl/cogl-context.c |   17 +++++++++++++++++
 clutter/cogl/cogl/cogl-profile.c |   30 ++++++++++++++++--------------
 clutter/cogl/cogl/cogl-profile.h |    3 +++
 3 files changed, 36 insertions(+), 14 deletions(-)

commit d9ee3be835465650ea474b971f028b49321ca7e2
Author: Robert Bragg <robert@linux.intel.com>
Date:   Mon Jul 26 15:21:18 2010 +0100

    journal: provide more detailed uprof instrumentation
    
    This adds more timing around key stages of the journal flushing process.

 clutter/cogl/cogl/cogl-journal.c  |   39 ++++++++++++++++++++++++++++++++++++
 clutter/cogl/cogl/cogl-material.c |   40 ++++++++++++++++++++++++++-----------
 2 files changed, 67 insertions(+), 12 deletions(-)

commit fb7bf9ce0231ee4f54675ebe71b01b5e4bf98bc5
Author: Robert Bragg <robert@linux.intel.com>
Date:   Mon Jun 21 15:36:46 2010 +0100

    profile: Update to uprof-0.3 dep for --enable-profile
    
    When building with --enable-profile we now depend on the uprof-0.3
    developer release which brings a few improvements:
    
    » It lets us "fix" how we initialize uprof so that instead of using a shared
    object constructor/destructor (which was a hack used when first adding
    uprof support to Clutter) we can now initialize as part of clutter's
    normal initialization code. As a side note though, I found that the way
    Clutter initializes has some quite serious problems whenever it
    involves GOptionGroups. It is not able to guarantee the initialization
    of dependencies like uprof and Cogl. For this reason we still use the
    contructor/destructor approach to initialize uprof in Cogl.
    
    » uprof-0.3 provides a better API for adding custom columns when reporting
    timer and counter statistics which lets us remove quite a lot of manual
    report generation code in clutter-profile.c.
    
    » uprof-0.3 provides a shared context for tracking mainloop timer
    statistics. This means any mainloop based library following the same
    "Mainloop" timer naming convention can use the shared context and no
    matter who ends up owning the final mainloop the statistics will always
    be in the same place. This allows profiling of Clutter with an
    external mainloop such as with the Mutter compositor.
    
    » uprof-0.3 can export statistics over dbus and comes with an ncurses
    based ui to vizualize timer and counter stats live.
    
    The latest version of uprof can be cloned from:
    git://github.com/rib/UProf.git

 README                                 |    2 +-
 clutter/clutter-debug.h                |   65 +++---
 clutter/clutter-main.c                 |   45 ++++-
 clutter/clutter-profile.c              |  345 ++++++++++++++++++++------------
 clutter/clutter-profile.h              |    8 +
 clutter/cogl/cogl/cogl-debug-options.h |  145 ++++++++++++++
 clutter/cogl/cogl/cogl-debug.c         |   37 +---
 clutter/cogl/cogl/cogl-debug.h         |   18 +-
 clutter/cogl/cogl/cogl-profile.c       |   48 +++++
 clutter/cogl/cogl/cogl-profile.h       |    4 +
 clutter/cogl/cogl/cogl-texture-3d.c    |    1 +
 configure.ac                           |    2 +-
 12 files changed, 514 insertions(+), 206 deletions(-)

commit a45f67bbdcd8cb53c2daebd11acebd906647eda3
Author: Neil Roberts <neil@linux.intel.com>
Date:   Mon Sep 6 17:18:11 2010 +0100

    cogl-framebuffer: Clear the renderbuffer list on failure
    
    When try_creating_fbo fails it deletes any intermediate render buffers
    that were created. However it doesn't clear the list so I think if it
    failed a second time it would try to delete the render buffers
    again. This could potentially cause problems if a subsequent fbo is
    created because the destructor for the original might delete the
    renderbuffers of the new fbo.

 clutter/cogl/cogl/cogl-framebuffer.c |    4 ++++
 1 file changed, 4 insertions(+)

commit 570fa3f0442d528af8aa50114fc79085c541b661
Author: Robert Bragg <robert@linux.intel.com>
Date:   Sat Sep 11 02:31:03 2010 +0100

    clone: scale src with apply_transform not cogl_scale
    
    Since a ClutterClone may be allocated a different size than its source
    actor we need to apply a scale factor before painting the source actor.
    We were manually using cogl_scale to do this in clutter_clone_paint but
    really this kind of thing is best handled in an implementation of the
    apply_transform virtual so Clutter can be aware of the transform for
    other purposes, such as input transformations. Also we want to provide
    an implementation of the get_paint_volume virtual where Clutter will
    also expect to be able to use the apply_transform virtual to transform
    the volume into its parent's coordinate space.

 clutter/clutter-clone.c |   46 ++++++++++++++++++++++++++++++----------------
 1 file changed, 30 insertions(+), 16 deletions(-)

commit ad398d583b7b5e2b3e3a0c00eda6b5eb358121d9
Author: Robert Bragg <robert@linux.intel.com>
Date:   Wed Sep 8 01:41:01 2010 +0100

    glx: Mark stage clip initialized even for NULL user clip
    
    If a NULL clip is passed to clutter_stage_glx_add_redraw_clip then we
    update the redraw clip to have width of 0, but we weren't setting
    stage_glx->initialized_redraw_clip = TRUE. This could result in a full,
    unclipped stage redraw being reduced to a clipped redraw.

 clutter/glx/clutter-stage-glx.c |    5 ++---
 1 file changed, 2 insertions(+), 3 deletions(-)

commit 8d2a3d608869ef09aff42db7bc537ae927f8d1c1
Author: Robert Bragg <robert@linux.intel.com>
Date:   Tue Sep 7 22:02:23 2010 +0100

    actor: warn if allocating actor not descending from stage
    
    This adds a verbose warning that will be displayed if
    clutter_actor_allocate is passed an actor that isn't a descendent of a
    ClutterStage. Layouting should always bubble up from a stage so this
    condition is likely to indicate a buggy container that allocating a
    child that it has already unparented.

 clutter/clutter-actor.c |    7 +++++++
 1 file changed, 7 insertions(+)

commit ff4c24f0a498e2922b20160482fa2c60ca8d9c40
Author: Robert Bragg <robert@linux.intel.com>
Date:   Tue Sep 7 17:00:49 2010 +0100

    geometry: Adds a clutter_geometry_intersects API
    
    This adds a public function named clutter_geometry_intersects which
    determines if two geometries intersect or not returning TRUE if so else
    FALSE.

 clutter/clutter-actor.c                    |   26 ++++++++++++++++++++++++++
 clutter/clutter-types.h                    |    8 +++++---
 doc/reference/clutter/clutter-sections.txt |    1 +
 3 files changed, 32 insertions(+), 3 deletions(-)

commit 8a2e164354c36bc817f8d48d630808f00cb9d06f
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Mon Aug 16 16:02:53 2010 +0100

    actor-box: Correctly clamp to pixel
    
    Use ceilf() to round up the right side of the actor's box, and floorf()
    to round down the left side.

 clutter/clutter-actor.c |    8 ++++----
 1 file changed, 4 insertions(+), 4 deletions(-)

commit f5f066df9ce7f7de19015371cf8399534661b959
Author: Robert Bragg <robert@linux.intel.com>
Date:   Tue Sep 7 13:10:55 2010 +0100

    Try to clean up how we handle actor transformations
    
    When building actor relative transforms, instead of using the matrix
    stack to combine transformations and making assumptions about what is
    currently on the stack we now just explicitly initialize an identity
    matrix and apply transforms to that.
    
    This removes the full_vertex_t typedef for internal transformation code
    and we just use ClutterVertex.
    
    ClutterStage now implements apply_transform like any other actor now
    and the code we had in _cogl_setup_viewport has been moved to the
    stage's apply_transform instead.
    
    ClutterStage now tracks an explicit projection matrix and viewport
    geometry. The projection matrix is derived from the perspective whenever
    that changes, and the viewport is updated when the stage gets a new
    allocation. The SYNC_MATRICES mechanism has been removed in favour of
    _clutter_stage_dirty_viewport/projection() APIs that get used when
    switching between multiple stages to ensure cogl has the latest
    information about the onscreen framebuffer.

 clutter/clutter-actor.c             |  752 +++++++++++------------------------
 clutter/clutter-backend.c           |   22 +-
 clutter/clutter-main.c              |   28 --
 clutter/clutter-private.h           |   42 +-
 clutter/clutter-stage.c             |  288 +++++++++++++-
 clutter/clutter-texture.c           |   18 +-
 clutter/osx/clutter-stage-osx.c     |    7 -
 clutter/win32/clutter-stage-win32.c |    7 -
 clutter/x11/clutter-stage-x11.c     |   41 +-
 doc/clutter-actor-invariants.txt    |    5 -
 10 files changed, 592 insertions(+), 618 deletions(-)

commit ab008948cfdde8ca9a9842c2e9000db0d0f3ad49
Author: Robert Bragg <robert@linux.intel.com>
Date:   Tue Sep 7 11:55:23 2010 +0100

    actor: Add _get_stage_internal to clutter-private.h
    
    This adds _clutter_actor_get_stage_internal to clutter-private.h since
    we plan to use it in clutter-offscreen-effect when preparing to
    redirect an actor offscreen.

 clutter/clutter-actor.c   |   28 +++++++++++++---------------
 clutter/clutter-private.h |    1 +
 2 files changed, 14 insertions(+), 15 deletions(-)

commit 64088ea4de6334e10ad99c0844ffab057f1557ab
Merge: 28f28c0 e8e360e
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Mon Sep 13 15:51:18 2010 +0100

    Merge remote branch 'elliot/cookbook-animations-reuse'
    
    * elliot/cookbook-animations-reuse:
      cookbook: Added a recipe for reusing a complex animation
      cookbook: Added id for section in "rotating an actor" recipe
      cookbook: Simplified and clarified example code
      cookbook: Cleaned up the "animations reuse" example
      cookbook: Refactored reusable animation example
      cookbook: Added example for animation reuse recipe

commit 28f28c030994621d931a7ed61bd529644947f9c3
Author: Murray Cumming <murrayc@murrayc.com>
Date:   Mon Sep 13 16:16:25 2010 +0200

    Remove trailin enum commas, avoiding C++ warnings.
    
    http://bugzilla.clutter-project.org/show_bug.cgi?id=2314

 clutter/clutter-align-constraint.h     |    2 +-
 clutter/clutter-event.h                |    4 ++--
 clutter/clutter-types.h                |    2 +-
 clutter/cogl/cogl/cogl-types.h         |    2 +-
 clutter/cogl/cogl/cogl-vertex-buffer.h |    2 +-
 5 files changed, 6 insertions(+), 6 deletions(-)

commit e8e360eaa7207a677738ce15496499ac7196a5b5
Author: Elliot Smith <elliot.smith@intel.com>
Date:   Mon Sep 13 14:29:37 2010 +0100

    cookbook: Added a recipe for reusing a complex animation
    
    This recipe explains how to "reuse" the same animation
    definition for different actors, by creating a new
    instance of a "rig" (empty container) and animation
    for the rig each time the animation is required.
    
    An actor is then re-parented to the rig and animated
    using it, rather than being animated directly.
    
    JSON is used to define the rig + animator, to make
    creating new instances of them simpler. The recipe
    also discusses various caveats around using this
    approach, rather than directly animating an actor.

 doc/cookbook/Makefile.am                 |    1 +
 doc/cookbook/animations.xml              |  378 ++++++++++++++++++++++++++++++
 doc/cookbook/videos/animations-reuse.ogv |  Bin 0 -> 60837 bytes
 3 files changed, 379 insertions(+)

commit 6548bee56ca8401d2e9d31e33bf4fcd5a65b92f5
Author: Elliot Smith <elliot.smith@intel.com>
Date:   Mon Sep 13 10:28:16 2010 +0100

    cookbook: Added id for section in "rotating an actor" recipe
    
    Added an id to a section in the "rotating an actor" recipe,
    so that it can be referred to from the "reusing an animation"
    recipe.

 doc/cookbook/animations.xml |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit 82ab00930b63d3860f96ac99da9cdc8128de1aee
Author: Elliot Smith <elliot.smith@intel.com>
Date:   Thu Sep 9 12:02:02 2010 +0100

    cookbook: Simplified and clarified example code
    
    Modified the "animation reuse" sample code to provide
    a simpler example to explain in the recipe.
    
    Also modified variable names to mirror the names used
    for the previous "complex animation" example and added
    some more comments, to further simplify and support the
    recipe.

 .../examples/animations-reuse-animation.json       |   36 +++++--------------
 doc/cookbook/examples/animations-reuse-ui.json     |   37 +++++++++++++++++---
 doc/cookbook/examples/animations-reuse.c           |   20 ++++++++---
 3 files changed, 56 insertions(+), 37 deletions(-)

commit d7a3e35f46593e04cf8cfe5eca18e3b2c06ff35b
Author: Elliot Smith <elliot.smith@intel.com>
Date:   Wed Sep 1 11:18:15 2010 +0100

    cookbook: Cleaned up the "animations reuse" example
    
    With some help from pippin, moved variable declarations
    into more sensible positions within their functions,
    changed a function name, and found a better way
    to unref a script once its associated actor has
    been destroyed.

 .../examples/animations-reuse-animation.json       |    1 -
 doc/cookbook/examples/animations-reuse.c           |   30 +++++++++-----------
 2 files changed, 14 insertions(+), 17 deletions(-)

commit d4190cbf8ce8c667110744976c8cdd52ff3ede81
Author: Elliot Smith <elliot.smith@intel.com>
Date:   Wed Sep 1 10:21:23 2010 +0100

    cookbook: Refactored reusable animation example
    
    Extracted the animation into its own JSON definition,
    then create a new script and get the animation each
    time a rectangle is clicked.
    
    Removes the need to reparent onto the background and
    copy property values to the rectangle after the animation,
    and generally much cleaner.

 .../examples/animations-reuse-animation.json       |   63 ++++++++++
 doc/cookbook/examples/animations-reuse-ui.json     |   53 +++++++++
 doc/cookbook/examples/animations-reuse.c           |  102 ++++++----------
 doc/cookbook/examples/animations-reuse.json        |  124 --------------------
 4 files changed, 155 insertions(+), 187 deletions(-)

commit acc28cf60c482bf56bb298630a9d1b75f350d31b
Author: Elliot Smith <elliot.smith@intel.com>
Date:   Tue Aug 31 17:42:37 2010 +0100

    cookbook: Added example for animation reuse recipe
    
    Added an example showing how to reuse a ClutterAnimator
    instance to animate multiple actors at different times
    using an animatable rig, combined with reparenting.

 doc/cookbook/examples/Makefile.am           |    2 +
 doc/cookbook/examples/animations-reuse.c    |  117 +++++++++++++++++++++++++
 doc/cookbook/examples/animations-reuse.json |  124 +++++++++++++++++++++++++++
 3 files changed, 243 insertions(+)

commit 209bef6f8a4059d8cb7a6b4d3c64d25898f46047
Author: Alejandro Piñeiro <apinheiro@igalia.com>
Date:   Thu Jul 22 13:19:34 2010 +0200

    cally: fixing public headers
    
    Cally headers were including specific clutter object headers.
    
    This caused a problem including cally.h on a external program.
    
    http://bugzilla.clutter-project.org/show_bug.cgi?id=2234

 clutter/cally/cally-actor.h     |    2 +-
 clutter/cally/cally-clone.h     |    2 +-
 clutter/cally/cally-group.h     |    2 +-
 clutter/cally/cally-rectangle.h |    2 +-
 clutter/cally/cally-stage.h     |    2 +-
 clutter/cally/cally-text.h      |    2 +-
 clutter/cally/cally-texture.h   |    2 +-
 7 files changed, 7 insertions(+), 7 deletions(-)

commit dec0863f58d7a67791d29cf0e53eb24ea09b222c
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Mon Sep 13 11:31:46 2010 +0100

    build: Add tesselator to the include paths

 clutter/cogl/cogl/Makefile.am |    1 +
 1 file changed, 1 insertion(+)

commit 94e2c7a9495e61640f602e01c3d5adff9338affe
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Mon Sep 13 02:15:44 2010 +0100

    build: Generate ClutterJson in the top directory
    
    Instead of doing the shlib trick, build ClutterJson (if needed) inside
    the top-level clutter/ directory - similar to a non-recursive layout.
    
    Hopefully, one day, we'll be able to do this with a real non-recursive
    layout.

 clutter/Makefile.am      |   35 +++++++++++++++++++++++------------
 clutter/json/Makefile.am |   30 ------------------------------
 2 files changed, 23 insertions(+), 42 deletions(-)

commit 40af71fad72794af90cf6b11f15e5fa64bed188d
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Mon Sep 13 02:01:50 2010 +0100

    build: List the units inside a file
    
    This avoids trying to run test-conformance -l multiple times.

 tests/conform/Makefile.am |    9 ++++++---
 1 file changed, 6 insertions(+), 3 deletions(-)

commit c03458a86175075bf7a46d8e58f7e3db5bd74f76
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Mon Sep 13 02:01:21 2010 +0100

    build: Remove gir files from dist
    
    The introspection data is going to be generated, so it should never be
    in the dist.

 clutter/Makefile.am           |    4 ++--
 clutter/cogl/cogl/Makefile.am |    2 +-
 clutter/json/Makefile.am      |    4 +++-
 3 files changed, 6 insertions(+), 4 deletions(-)

commit 64924f0e98ed06924d8968d22e5ee257ee858db1
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Sun Sep 12 19:25:47 2010 +0100

    build: Do not build a noinst library for the tesselator
    
    Let's try to keep Cogl's build as non-recursive as possible, in the hope
    that one day we'll be able to make it fully non-recursive along with the
    rest of Clutter.

 clutter/cogl/cogl/Makefile.am            |   59 +++++++++++++++++++++++++-----
 clutter/cogl/cogl/tesselator/Makefile.am |   41 ---------------------
 configure.ac                             |    1 -
 3 files changed, 50 insertions(+), 51 deletions(-)

commit 732eecf5c6c097b9f6ede3da376f61504e5cb48c
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Fri Sep 10 18:21:45 2010 +0100

    cookbook: Use the new CLUTTER_KEY_* symbol constants
    
    Instead of the deprecated CLUTTER_* ones.

 doc/cookbook/events.xml |   18 +++++++++---------
 1 file changed, 9 insertions(+), 9 deletions(-)

commit f2669df6b5c1c9c45c0694443f6748399d0a181c
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Fri Sep 10 18:21:19 2010 +0100

    build: Disable deprecated API when building the cookbook examples
    
    Make sure we always use the latest API.

 doc/cookbook/examples/Makefile.am |    2 ++
 1 file changed, 2 insertions(+)

commit 4ee05f8e21db9d2262befdc9d07f462bbd95446d
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Fri Sep 10 13:41:49 2010 +0100

    keysyms: Update the macros to CLUTTER_KEY_*
    
    The keysyms defines in clutter-keysyms.h are generated from the X11 key
    symbols headers by doing the equivalent of a pass of sed from XK_* to
    CLUTTER_*. This might lead to namespace collisions, down the road.
    Instead, we should use the CLUTTER_KEY_* namespace.
    
    This commit includes the script, taken from GDK, that parses the X11
    key symbols and generates two headers:
    
      - clutter-keysyms.h: the default included header, with CLUTTER_KEY_*
      - clutter-keysyms-compat.h: the compatibility header, with CLUTTER_*
    
    The compat.h header file is included if CLUTTER_DISABLE_DEPRECATED is
    not defined - essentially deprecating all the old key symbols.
    
    This does not change any ABI and, assuming that an application or
    library is not compiling with CLUTTER_DISABLE_DEPRECATED, the source
    compatibility is still guaranteed.

 README                                     |    5 +
 clutter/Makefile.am                        |    3 +
 clutter/clutter-keysyms-compat.h           | 2208 +++++++++++++++
 clutter/clutter-keysyms-update.pl          |  216 ++
 clutter/clutter-keysyms.h                  | 4193 +++++++++++++++-------------
 clutter/clutter-text.c                     |   46 +-
 doc/reference/clutter/Makefile.am          |    1 +
 tests/conform/test-binding-pool.c          |   30 +-
 tests/conform/test-clutter-text.c          |    8 +-
 tests/interactive/Makefile.am              |    4 +-
 tests/interactive/test-actor-clone.c       |    4 +-
 tests/interactive/test-actors.c            |    4 +-
 tests/interactive/test-binding-pool.c      |   10 +-
 tests/interactive/test-box-layout.c        |   14 +-
 tests/interactive/test-clip.c              |    9 +-
 tests/interactive/test-cogl-shader-arbfp.c |    6 +-
 tests/interactive/test-cogl-shader-glsl.c  |    6 +-
 tests/interactive/test-layout.c            |   23 +-
 tests/interactive/test-paint-wrapper.c     |    4 +-
 tests/interactive/test-pixmap.c            |    6 +-
 tests/interactive/test-text-field.c        |   12 +-
 tests/interactive/test-threads.c           |    4 +-
 22 files changed, 4725 insertions(+), 2091 deletions(-)

commit 1447eff00fe70f16350ee16dd86f5f8758ff3065
Author: Lucas Rocha <lucasr.at.mundo@gmail.com>
Date:   Fri Sep 10 17:48:12 2010 +0100

    introspection: Add full path for the Clutter-1.0 inclusion
    
    Signed-off-by: Emmanuele Bassi <ebassi@linux.intel.com>

 clutter/Makefile.am |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit edb54574fa8ee8aaefd0f7021b7a5310b429f49b
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Fri Sep 10 14:27:56 2010 +0100

    build: Disable deprecated API when building Clutter
    
    Make sure we don't use deprecated API internally by adding
    CLUTTER_DISABLE_DEPRECATED to the AM_CPPFLAGS.
    
    This requires adding -UCLUTTER_DISABLE_DEPRECATED to the introspection
    scanner CFLAGS, otherwise the deprecated API will never be introspected
    and the data generated will not be compatible.

 clutter/Makefile.am |    7 ++++---
 1 file changed, 4 insertions(+), 3 deletions(-)

commit d76f64a10cdfbfe44f5cf3f35351ae8f3307d7df
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Fri Sep 10 14:27:37 2010 +0100

    Do not use deprecated API internally

 clutter/clutter-backend.c |    8 +++++++-
 clutter/clutter-main.c    |   18 ++++++++++++++----
 clutter/clutter-text.c    |   32 ++++++++++++++++++++++++--------
 3 files changed, 45 insertions(+), 13 deletions(-)

commit 0bd18fbcc9f9a01fe24945251a1a3e860b7c80a7
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Fri Sep 10 12:24:37 2010 +0100

    Update the NEWS

 NEWS |   21 +++++++++++++++++++++
 1 file changed, 21 insertions(+)

commit 01362effca53d0a3149e3f81f6374b1440cbe2cd
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Fri Sep 10 11:42:11 2010 +0100

    actor: Add a method for querying key focus
    
    A simple convenience method on Clutter.Actor for checking whether
    it has key focus assigned on the Stage to which it belongs.

 clutter/clutter-actor.c                    |   24 ++++++++++++++++++++++++
 clutter/clutter-actor.h                    |    2 ++
 doc/reference/clutter/clutter-sections.txt |    1 +
 3 files changed, 27 insertions(+)

commit 71a4db613569cd08572db517a045224161ba67d7
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Fri Sep 10 11:18:53 2010 +0100

    animation: Allow detaching an animation from an actor
    
    When animating an actor through clutter_actor_animate() and friends we
    might want forcibly detach the animation instance from the actor in
    order to start a new one - for instance, in response to user
    interaction.
    
    Currently, there is no way to do that except in a very convoluted way,
    by emitting the ::completed signal and adding a special case in the
    signal handlers; this is due to the fact that clutter_actor_animate()
    adds more logic than the one added by clutter_animation_set_object(),
    so calling set_object(NULL) or unreferencing the animation instance
    itself won't be enough.
    
    The right way to approach this is to add a new method to Clutter.Actor
    that detaches any eventual Animation currently referencing it.
    
    http://bugzilla.clutter-project.org/show_bug.cgi?id=2051

 clutter/clutter-animation.c                |   53 ++++++++++++++++++++++++++++
 clutter/clutter-animation.h                |    1 +
 doc/reference/clutter/clutter-sections.txt |    1 +
 3 files changed, 55 insertions(+)

commit 3aa2d00c3bf034b478fcc040056c25ef6f46baa0
Author: Colin Walters <walters@verbum.org>
Date:   Thu Sep 9 23:01:40 2010 +0100

    introspection: Don't look for installed Cogl-1.0.gir
    
    If we're depending on an uninstalled .gir, use --include-uninstalled.
    We need to explicitly specify Cogl to let the scanner know it's also
    uninstalled.
    
    Signed-off-by: Emmanuele Bassi <ebassi@linux.intel.com>

 clutter/Makefile.am |    7 ++++++-
 1 file changed, 6 insertions(+), 1 deletion(-)

commit 5f5369990fec5bfc734604761ed4ea49e78e6aa3
Author: Colin Walters <walters@verbum.org>
Date:   Thu Sep 9 13:32:13 2010 -0400

    introspection: Don't look for installed Clutter-1.0.gir
    
    If we're depending on an uninstalled .gir, use --include-uninstalled.

 clutter/Makefile.am |    4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

commit 72a4fd9250564a75f9cef89a3070d5d0ab5a5c24
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu Sep 9 16:45:51 2010 +0100

    po: Update Polish localization

 po/pl.po |  174 +++++++++++++++++++++++++++++---------------------------------
 1 file changed, 82 insertions(+), 92 deletions(-)

commit d86dc377dea38678efa1f8b8e3aa5759f37d01ac
Author: Chris Kühl <chrisk@openismus.com>
Date:   Thu Sep 9 16:41:37 2010 +0200

    Added documentation for alpha parameter in Behaviour constructors.
    
    http://bugzilla.clutter-project.org/show_bug.cgi?id=2304
    
    Signed-off-by: Emmanuele Bassi <ebassi@linux.intel.com>

 clutter/clutter-behaviour-depth.c   |    6 +++++-
 clutter/clutter-behaviour-ellipse.c |    6 +++++-
 clutter/clutter-behaviour-opacity.c |   10 +++++++---
 clutter/clutter-behaviour-path.c    |   18 +++++++++++++++---
 clutter/clutter-behaviour-rotate.c  |    6 +++++-
 clutter/clutter-behaviour-scale.c   |   10 +++++++---
 6 files changed, 44 insertions(+), 12 deletions(-)

commit 9e1cd15b48f4e6a9bb6928bf1218e7bea2b1b1ed
Author: Neil Roberts <neil@linux.intel.com>
Date:   Thu Sep 9 12:15:59 2010 +0100

    cogl-vertex-buffer: Flush the framebuffer state first
    
    Flushing the framebuffer state can cause some drawing to occur if the
    framebuffer has a clip stack which needs the stencil buffer. This was
    causing the array pointers set up by enable_state_for_drawing_buffer
    to get mangled so it would crash when it hits glDrawArrays. This patch
    moves the framebuffer state flush to before it sets up the array
    pointers.
    
    http://bugzilla.clutter-project.org/show_bug.cgi?id=2297

 clutter/cogl/cogl/cogl-vertex-buffer.c |   13 ++++++++-----
 1 file changed, 8 insertions(+), 5 deletions(-)

commit 0e325404aa50fcca400d0cb8020a36bcd81f4c37
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu Sep 9 11:58:03 2010 +0100

    build: Allow using gettext 0.17
    
    This requires some autotools magic when setting up the environment
    through autogen.sh, because autoreconf does not do the right thing
    by default.
    
    The correct order for setting up localization is:
    
      ‣ autopoint
      ‣ aclocal
      ‣ ...
    
    otherwise aclocal will copy the system's gettext.m4 instead of honouring
    the version we specified with AM_GNU_GETTEXT_VERSION in configure.ac.

 autogen.sh   |  124 +++++++++++++++++++++++++++++++++++++++++++++++++---------
 configure.ac |    2 +-
 2 files changed, 107 insertions(+), 19 deletions(-)

commit cfab64c1db609d7fd4840dd83a161af7527c17ab
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu Sep 9 11:39:56 2010 +0100

    po: Update German localization

 po/de.po |  325 ++++++++++++++++++++++++++++++++------------------------------
 1 file changed, 166 insertions(+), 159 deletions(-)

commit bcf20955d32b580195f45bf507a5970003f464cf
Author: Robert Bragg <robert@linux.intel.com>
Date:   Wed Sep 8 23:33:45 2010 +0100

    ClutterX11TexturePixmap: Fix unbalanced error trapping
    
    I think this is what commit 2cf140550635 intended to do since it
    specifically mentioned cleaning up the trap in
    clutter_x11_texture_pixmap_set_pixmap, but although it moved the untrap
    to only be done in the case where Pixmap != None it left the position of
    the trap itself unchanged. This meant the error trapping wouldn't be
    balanced if pixmap == None since the untrap wouldn't be done. We now
    only trap and untrap around the XGetGeometry call done when pixmap !=
    None.
    
    http://bugzilla.clutter-project.org/show_bug.cgi?id=2303

 clutter/x11/clutter-x11-texture-pixmap.c |    3 +--
 1 file changed, 1 insertion(+), 2 deletions(-)

commit 089a20e79d3f542ad74f34d7a318ef19718bdc40
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Wed Sep 8 18:27:12 2010 +0100

    build: Add ClutterX11 introspection generation

 clutter/Makefile.am |   32 ++++++++++++++++++++++++++++++++
 1 file changed, 32 insertions(+)

commit 32ea9702e664db8e0601362d2d1aae6c726f3c63
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Wed Sep 8 17:50:38 2010 +0100

    build: Add XML files to the ignore blacklist

 tests/conform/Makefile.am |    1 +
 1 file changed, 1 insertion(+)

commit f8bd45dbcea77e19a6a7e37edad535f6d3edd7cd
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Wed Sep 8 17:39:04 2010 +0100

    x11-texture-pixmap: Do not go through g_object_get()
    
    The pixmap width and height are stored in our own private data
    structure; going through g_object_get() is pointless overhead.

 clutter/x11/clutter-x11-texture-pixmap.c |   16 +++++++---------
 1 file changed, 7 insertions(+), 9 deletions(-)

commit 2cf14055063568038be607bd8f7ce3eea2285475
Author: Owen W. Taylor <otaylor@fishsoup.net>
Date:   Wed Sep 8 11:34:58 2010 -0400

    Clean up CoglTexturePixmapX11 first
    
    With currently distributed versions of Mesa, calling XFreePixmap()
    before glxDestroyPixmap() will cause an X error from DRI. So, we
    need to make sure that we get rid of the CoglTexturePixmapX11 before
    we XFreePixmap().
    
    clutter_x11_texture_pixmap_dispose(): Call
     clutter_x11_texture_pixmap_set_pixmap() instead of using XFreePixmap
     directly so that we leverage the text-clearing hack and destroy
     things in the right order.
    
    clutter_x11_texture_pixmap_set_pixmap(): Don't do a pointless roundtrip
     and trap a pointless error when setting pixmap to None.
    
    clutter_x11_texture_pixmap_set_pixmap(): Free damage resources when
     we are setting Pixmap to None.
    
    clutter_x11_texture_pixmap_set_window(): When setting a new window
     or setting the window to None, immedediately  call
     cluter_x11_texture_pixmap_set_pixmap(). This means that set_window(None)
     immediately will free any referenced resources related to the window.
    
    http://bugzilla.clutter-project.org/show_bug.cgi?id=2303

 clutter/x11/clutter-x11-texture-pixmap.c |   46 ++++++++++++++++--------------
 1 file changed, 24 insertions(+), 22 deletions(-)

commit ca8db4c2ee16e8c711baa40803c3dcd75ca2f382
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Wed Sep 8 17:04:21 2010 +0100

    Add caller-allocates annotations
    
    For ClutterColor, ClutterUnits, ClutterInterval and the Perspective
    accessor in ClutterStage.

 clutter/clutter-color.c    |   18 +++++++++---------
 clutter/clutter-fixed.c    |    2 +-
 clutter/clutter-interval.c |    6 +++---
 clutter/clutter-stage.c    |    3 ++-
 clutter/clutter-units.c    |   23 ++++++++++++-----------
 5 files changed, 27 insertions(+), 25 deletions(-)

commit 8a5686d83503d9b9a5c8e083d8613a8e9d1cf1f5
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Wed Sep 8 16:41:47 2010 +0100

    Further annotation fixes

 clutter/clutter-actor.c          |   10 +++++-----
 clutter/clutter-animator.c       |    2 +-
 clutter/clutter-behaviour.c      |    2 +-
 clutter/clutter-color.c          |    8 ++++----
 clutter/clutter-container.c      |    2 +-
 clutter/clutter-device-manager.c |    4 ++--
 clutter/clutter-frame-source.c   |    4 +++-
 clutter/clutter-layout-manager.c |    6 +++---
 clutter/clutter-list-model.c     |    2 +-
 clutter/clutter-main.c           |   12 +++++++++---
 clutter/clutter-model.c          |    4 ++--
 clutter/clutter-path.c           |    3 ++-
 clutter/clutter-score.c          |   10 +++++-----
 clutter/clutter-script.c         |    7 ++++---
 clutter/clutter-stage-manager.c  |    4 ++--
 clutter/clutter-stage-window.h   |   16 ++++++++++++++++
 clutter/clutter-state.c          |    2 +-
 clutter/clutter-timeout-pool.h   |    4 ++++
 18 files changed, 66 insertions(+), 36 deletions(-)

commit f1c44a27a17c66c80ac92f7365b7fcc85c9f0847
Author: Owen W. Taylor <otaylor@fishsoup.net>
Date:   Wed Sep 8 10:37:58 2010 -0400

    introspection: Add missing (out) annotations
    
    Comprehensively add (out) annotations to functions parameters
    returning int/float/double.
    
    Not handled here: structure out returns like ClutterColor or
    ClutterPerspective or GValue that should get (out caller-allocates).
    
    Not handled here: Cogl
    
    http://bugzilla.clutter-project.org/show_bug.cgi?id=2302

 clutter/clutter-actor.c             |    2 +-
 clutter/clutter-behaviour-depth.c   |    4 ++--
 clutter/clutter-behaviour-ellipse.c |   10 +++++-----
 clutter/clutter-behaviour-opacity.c |    4 ++--
 clutter/clutter-behaviour-rotate.c  |    6 +++---
 clutter/clutter-behaviour-scale.c   |    8 ++++----
 clutter/clutter-cairo-texture.c     |    4 ++--
 clutter/clutter-color.c             |    6 +++---
 clutter/clutter-script-parser.c     |    2 +-
 clutter/clutter-text.c              |    6 +++---
 10 files changed, 26 insertions(+), 26 deletions(-)

commit e4870ebaf461170e78f2ed6787beda541501d561
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Wed Sep 8 15:15:57 2010 +0100

    Constify Event accessors and copy method
    
    This is still C, but at least we can get some sort of safety net when
    using the API correctly.

 clutter/clutter-backend.c         |    6 ++---
 clutter/clutter-backend.h         |   10 ++++----
 clutter/clutter-event.c           |   48 ++++++++++++++++++-------------------
 clutter/clutter-event.h           |   48 ++++++++++++++++++-------------------
 clutter/clutter-private.h         |   10 ++++----
 clutter/x11/clutter-backend-x11.c |    6 ++---
 6 files changed, 64 insertions(+), 64 deletions(-)

commit 8fb4c7b9a9f58a2137dfe981fac0001d4c64505c
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Wed Sep 8 14:48:40 2010 +0100

    po: Rename the POT file

 configure.ac       |    2 +-
 po/Makevars        |    2 +-
 po/clutter-1.0.pot | 1828 ++++++++++++++++++++++++++++++++++++++++++++++++++++
 po/clutter.pot     | 1828 ----------------------------------------------------
 4 files changed, 1830 insertions(+), 1830 deletions(-)

commit 144da2ae3b49715ea72052a3722e03872694aa92
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Wed Sep 8 14:40:52 2010 +0100

    po: Add clutter.pot to the repository
    
    Since we're not using intltool, and since we need to let people on
    Transifex generate their translations, we need to add the POT file
    to the repository.

 .gitignore     |    1 -
 po/clutter.pot | 1828 ++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 2 files changed, 1828 insertions(+), 1 deletion(-)

commit 82bef432ed095b031408d858c00bffc140b21ed1
Author: ElleUca <elle.uca@libero.it>
Date:   Wed Sep 8 12:44:43 2010 +0100

    po: Add italian translation

 po/it.po | 1837 ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 1 file changed, 1837 insertions(+)

commit 33b0d5ddb5d6b056db8371717d1600ce7572a095
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Wed Sep 8 12:25:25 2010 +0100

    po: Update the translation files
    
    We are finally able to add the properties nicks and blurbs to the list
    of translatable strings, for UI builders to use. This means bumping the
    list of strings from 20-ish to a whopping 400. Whoopsie.

 po/de.po    | 1852 +++++++++++++++++++++++++++++++++++++++++++++++++++++++++--
 po/pl.po    | 1849 ++++++++++++++++++++++++++++++++++++++++++++++++++++++++--
 po/zh_CN.po | 1850 ++++++++++++++++++++++++++++++++++++++++++++++++++++++++--
 3 files changed, 5369 insertions(+), 182 deletions(-)

commit 948da3728d770c2c328286f3263322215aa76eec
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Wed Sep 8 12:25:02 2010 +0100

    Add more /po files to the ignore list

 .gitignore |    2 ++
 1 file changed, 2 insertions(+)

commit 94c17dba51d9836c0add5f0b4bbd5b2306bfda8a
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Wed Sep 8 12:23:50 2010 +0100

    build: Update autogen.sh
    
    Remove the fix-ups for shave and gtk-doc with libtool 1.5: we don't use
    shave any more, and we require libtool 2.2.
    
    Also remove the unnecessary autopoint: we use autoreconf, which calls it
    automatically.

 autogen.sh |   14 ++------------
 1 file changed, 2 insertions(+), 12 deletions(-)

commit dfca349bbe8219d03db16cf7bc2d7e39cd4275f2
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Wed Sep 8 12:22:58 2010 +0100

    build: Bump gettext version
    
    Apparently, gettext can only work with the same exact version it's
    autogenerated from.

 configure.ac |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit dc8c7be7f0680095e6e507f05e01939d161e84e5
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Wed Sep 8 11:56:06 2010 +0100

    Ignore more files under /po

 .gitignore |   10 ++++++++++
 1 file changed, 10 insertions(+)

commit 4fedbad24e4ec434236b7b6c7f73421bd59c2130
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Wed Sep 8 11:53:07 2010 +0100

    Update ignore files for m4 macros

 .gitignore |    4 ++++
 1 file changed, 4 insertions(+)

commit a9e29e6fbafd073e78e19a74577b0d3d631a2214
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Wed Sep 8 11:50:09 2010 +0100

    Add Makevars

 po/Makevars |   41 +++++++++++++++++++++++++++++++++++++++++
 1 file changed, 41 insertions(+)

commit 98cac30d82299b3739f3801f71b5e2e931eb2e8d
Author: Javier Jardón <jjardon@gnome.org>
Date:   Wed Sep 8 00:35:06 2010 +0200

    build: Use upstream gettext instead the glib one
    
    Fixes http://bugzilla.clutter-project.org/show_bug.cgi?id=2300

 autogen.sh          |    2 +
 clutter/Makefile.am |    1 +
 configure.ac        |    5 +-
 po/Makefile.in.in   |  264 ---------------------------------------------------
 4 files changed, 6 insertions(+), 266 deletions(-)

commit c4ca75350f54160482db2081219b9d8a77820f84
Author: Owen W. Taylor <otaylor@fishsoup.net>
Date:   Tue Sep 7 19:56:42 2010 -0400

    introspection: Fix annotation for clutter_container_get_children()
    
    (element-type) should have a full name like Clutter.Actor rather than
    a non-namespaced name like Actor. gobject-introspection has become
    more strict about this with the recent scanner rewrite.
    
    http://bugzilla.clutter-project.org/show_bug.cgi?id=2301

 clutter/clutter-container.c |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit 5e57539f3bdcb4d6004c3bcc9177706b175c500d
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Tue Sep 7 21:10:40 2010 +0100

    build: Update introspection.m4

 build/autotools/introspection.m4 |   10 ++++++++--
 1 file changed, 8 insertions(+), 2 deletions(-)

commit e678c746daf0ccd740328cae01feb5efa53f012c
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Tue Sep 7 16:17:51 2010 +0100

    build: Add escaping in AS_IF()
    
    Based on a patch by: Owen W. Taylor <otaylor@fishsoup.net>

 configure.ac |   21 ++++++++++-----------
 1 file changed, 10 insertions(+), 11 deletions(-)

commit 287b3ba542080dd4466060d05ac153dbec8dcde6
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Tue Sep 7 15:23:35 2010 +0100

    Makefile.am.enums: Forgot an AM_V_GEN

 build/autotools/Makefile.am.enums |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit 368b24b42054599e36c1e5125f84a2d032fd3377
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Tue Sep 7 14:47:59 2010 +0100

    build: Fix up rules for enums and marshallers
    
    • Use addprefix instead of manually concatenating $(srcdir)
    • Use AM_V_GEN instead of QUIET_GEN, to avoid inter-dependencies
    • Do basic checks on GLIB_MKENUMS and GLIB_GENMARSHAL being defined
    • Do checks on the required variables being defined

 build/autotools/Makefile.am.enums   |   26 +++++++++++++++++---------
 build/autotools/Makefile.am.marshal |   21 ++++++++++++++-------
 2 files changed, 31 insertions(+), 16 deletions(-)

commit d7e5e9247bd5af2267a52087b74bbf4d2e17974f
Author: Damien Lespiau <damien.lespiau@intel.com>
Date:   Tue Sep 7 14:17:18 2010 +0100

    build: Make the generated glib-mkenums c file depend on the headers
    
    What happens now if you rename an enum inside a header:
    
      • glib-mkenums generates the header file
      • a comparison is made with the previous version of the heade is made
        and no difference is found as you don't remove or create enums
      • the compilation of the generated mkenums c file fails because it has
        not been regenerated with the new, renamed, enum.
    
    That's why the generated clutter-enum-types.c needs to depend on the
    headers too.
    
    Of course such scenario should not happen in stable releases as enums
    are part of the API, but renaming enums happens in the development cycle
    and create compilation errors (very annoying when doing git bissects for
    instance).

 build/autotools/Makefile.am.enums |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit 1eae9fcd7edd3f8e330cd4be691e62fe759b67ec
Author: Henrik Hedberg <hhedberg@innologies.fi>
Date:   Fri Sep 3 20:00:40 2010 +0300

    drag-action: Added x-drag-threshold and y-drag-threshold properties
    
                    *** This is an API change ***
    
    Replaced the original drag-threshold property with two separate
    horizontal (x-drag-threshold) and vertical (y-drag-threshold)
    thresholds.
    
    It is some times necessary to have different drag thresholds for the
    horizontal and vertical axes. For example, when a draggable actor is
    inside a horizontal scrolling area, only vertical movement must begin
    dragging. That can be achieved by setting the x-drag-threshold to
    G_MAXUINT while y-drag-threshold is something usual, say, 20 pixels.
    
    This is different than drag axis, because after the threshold
    has been cleared by the pointer, the draggable actor can be dragged
    along both axes (if allowed by the drag-axis property).
    
    http://bugzilla.clutter-project.org/show_bug.cgi?id=2291
    
    Signed-off-by: Emmanuele Bassi <ebassi@linux.intel.com>

 clutter/clutter-drag-action.c |  124 ++++++++++++++++++++++++++++++-----------
 clutter/clutter-drag-action.h |    7 ++-
 tests/interactive/test-drag.c |   19 +++++--
 3 files changed, 110 insertions(+), 40 deletions(-)

commit ba9aa3b332cd8f6bd57983a5dfbb6a24e8fd8ad9
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Mon Sep 6 18:08:44 2010 +0100

    texture: Move the material unref() in ::dispose

 clutter/clutter-texture.c |   28 +++++++++++++++-------------
 1 file changed, 15 insertions(+), 13 deletions(-)

commit 128e981f6cf6e9a5b32da1b908d83f6c01d384fa
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Mon Sep 6 17:50:57 2010 +0100

    texture: Do some more validation in get_cogl_texture()
    
    Check the layer type, even though right now we only have one type
    available.

 clutter/clutter-texture.c |    9 ++++++++-
 1 file changed, 8 insertions(+), 1 deletion(-)

commit 7e56a98413817479d0501ce8af9fad3e6411104d
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu Sep 2 14:48:30 2010 +0100

    texture: Use a base material for all instances
    
    Creating new materials for every Texture instance results in a lot of
    ARBfp programs being generated/compiled. Since most textures will just
    be similar we should create a template material for all of them, and
    then copy it in every instance. Cogl will try to optimize the generation
    of the program and, hopefully, will reuse the same program most of the
    time.
    
    With this change, a simple test shows that loading 48 textures will
    result in just two programs being compiled - with and without batching
    enabled.
    
    http://bugzilla.clutter-project.org/show_bug.cgi?id=2295

 clutter/clutter-texture.c                 |   19 ++++++++++--
 tests/interactive/Makefile.am             |    1 +
 tests/interactive/test-texture-material.c |   47 +++++++++++++++++++++++++++++
 3 files changed, 65 insertions(+), 2 deletions(-)

commit 283dce8e21b58bd769e923e9239d5607b820ddd9
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Mon Sep 6 18:07:07 2010 +0100

    material: Check before unreferencing a texture
    
    When disposing a material layer of type 'texture' we should check that
    the texture handle is still valid before calling cogl_handle_unref().
    This avoids an assertion failure when disposing a ClutterTexture.

 clutter/cogl/cogl/cogl-material.c |    3 ++-
 1 file changed, 2 insertions(+), 1 deletion(-)

commit b4120b81e4a472fff5f7388b4cfc8f717ecc23f0
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Mon Sep 6 16:11:46 2010 +0100

    Add some more introspection annotations

 clutter/clutter-main.c             |    6 +++---
 clutter/clutter-offscreen-effect.c |    4 +++-
 clutter/cogl/cogl/cogl-material.h  |    2 +-
 clutter/cogl/cogl/cogl-offscreen.h |   11 ++++++-----
 clutter/cogl/cogl/cogl-types.h     |    2 +-
 5 files changed, 14 insertions(+), 11 deletions(-)

commit 070e239b6d887d43ff57320b7e325c8d689ce0ef
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Fri Sep 3 17:15:22 2010 +0100

    docs: Fix up the Cogl API reference build

 doc/reference/cogl/Makefile.am      |   41 ++++++++++++++++++++---------------
 doc/reference/cogl/cogl-docs.xml.in |    2 +-
 2 files changed, 25 insertions(+), 18 deletions(-)

commit 7abe63953ef95eb197fe8e0069b5ddeb078f2ffd
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Fri Sep 3 16:56:12 2010 +0100

    cogl-shader: Add deprecation guards for cogl_program_uniform_*

 clutter/cogl/cogl/cogl-shader.h |   14 +++++++++-----
 1 file changed, 9 insertions(+), 5 deletions(-)

commit abef73bb58aa69ec63ebe2dbaed959da7dec0bb5
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Fri Sep 3 16:55:12 2010 +0100

    Replace cogl_color_set_from_* with cogl_color_init_from_*
    
    The former is not yet "officially" deprecated by the latter, but it's
    confusing to have them both in the code base.

 clutter/clutter-deform-effect.c                 |    2 +-
 clutter/clutter-main.c                          |    2 +-
 clutter/clutter-offscreen-effect.c              |    2 +-
 clutter/clutter-page-turn-effect.c              |    2 +-
 clutter/clutter-stage.c                         |   36 +++++++++++------------
 clutter/clutter-text.c                          |   10 +++----
 clutter/clutter-texture.c                       |   12 ++++----
 clutter/cogl/cogl/cogl-material.c               |    4 +--
 clutter/cogl/cogl/cogl.c                        |    6 ++--
 clutter/cogl/pango/cogl-pango-display-list.c    |   10 +++----
 clutter/cogl/pango/cogl-pango-render.c          |   10 +++----
 doc/cookbook/examples/text-shadow.c             |    2 +-
 doc/cookbook/examples/textures-crossfade-cogl.c |    2 +-
 doc/cookbook/examples/textures-reflection.c     |    4 +--
 doc/cookbook/textures.xml                       |    4 +--
 tests/conform/test-cogl-backface-culling.c      |    2 +-
 tests/conform/test-cogl-blend-strings.c         |    4 +--
 tests/conform/test-cogl-materials.c             |    2 +-
 tests/conform/test-cogl-viewport.c              |    2 +-
 tests/interactive/test-box-layout.c             |    2 +-
 tests/interactive/test-cogl-tex-polygon.c       |   10 +++----
 21 files changed, 64 insertions(+), 66 deletions(-)

commit 0e2b0e496ee6b5f96e76e8dfa36dbf9a9b172de0
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Fri Sep 3 16:52:06 2010 +0100

    docs: Add annotation glossary to the Cogl API reference
    
    It's the only way to let gtk-doc know that we're using annotations in
    the comments.

 doc/reference/cogl/cogl-docs.xml.in |    6 ++++++
 1 file changed, 6 insertions(+)

commit 0caef5c8aab1ad5b417375a8417cc26f40d4ac6f
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Fri Sep 3 16:10:44 2010 +0100

    docs: Fixes for gtk-doc

 clutter/clutter-alpha.c                    |    4 ++--
 clutter/clutter-interval.c                 |    2 +-
 clutter/cogl/cogl/cogl-matrix.h            |    8 ++++----
 doc/reference/clutter/clutter-sections.txt |    2 ++
 4 files changed, 9 insertions(+), 7 deletions(-)

commit b06b7109d6498f6d9f4083fd2464aca9d1c443b2
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Fri Sep 3 15:53:52 2010 +0100

    docs: Update NEWS

 NEWS |    1 +
 1 file changed, 1 insertion(+)

commit 7fee8cf26a07a41910ca730a4c22b61ddbc1e372
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Fri Sep 3 15:44:03 2010 +0100

    cookbook: Add a short introduction for the Text chapter

 doc/cookbook/text.xml |   16 +++++++++++++---
 1 file changed, 13 insertions(+), 3 deletions(-)

commit 655c60aaa9d90aeed6869faf9c0209006aa0cd61
Author: Elliot Smith <elliot.smith@intel.com>
Date:   Fri Sep 3 14:31:44 2010 +0100

    cookbook: Added recipe for complex animation
    
    Uses ClutterAnimator to implement a reasonably complex
    animation of a single actor (movement along a path with
    simultaneous scaling).
    
    Provides a metaphor for thinking about ClutterAnimator
    animations (stage directions) and explains keys and key
    frames in some depth. Also compares ClutterAnimator
    with other possible approaches to this type of animation
    (implicit animations, ClutterState).

 doc/cookbook/Makefile.am                   |    1 +
 doc/cookbook/animations.xml                |  427 ++++++++++++++++++++++++++++
 doc/cookbook/videos/animations-complex.ogv |  Bin 0 -> 34212 bytes
 3 files changed, 428 insertions(+)

commit 60ff660d421fd5aeefd18978cecaac60b6c13d88
Author: Elliot Smith <elliot.smith@intel.com>
Date:   Fri Sep 3 11:56:33 2010 +0100

    cookbook: Added a second example to show "overlapping" transitions
    
    Added another JSON example to show how transitions can
    be easily overlapped when using ClutterAnimator (two
    sequences of 5 transitions, simultaneous with two
    sequences of 1 transition).
    
    Modified the C JSON loader program so it can be used with
    this example as well.

 .../examples/animations-complex-overlapping.json   |   80 ++++++++++++++++++++
 doc/cookbook/examples/animations-complex.c         |    9 ++-
 2 files changed, 87 insertions(+), 2 deletions(-)

commit c0aa72a04259564d462ca4b80e080eacac885ecd
Author: Elliot Smith <elliot.smith@intel.com>
Date:   Wed Sep 1 18:02:07 2010 +0100

    cookbook: Added complex animations example
    
    To support recipe about using ClutterAnimator to create
    complex animations.

 doc/cookbook/examples/Makefile.am             |    2 +
 doc/cookbook/examples/animations-complex.c    |   64 ++++++++++++++++++++
 doc/cookbook/examples/animations-complex.json |   80 +++++++++++++++++++++++++
 3 files changed, 146 insertions(+)

commit 9210c46730fa839c0e050a8be4ff04979730932c
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Fri Sep 3 14:05:20 2010 +0100

    docs: Update NEWS

 NEWS |   27 +++++++++++++++++++++++++++
 1 file changed, 27 insertions(+)

commit 6c1559b6113d5eaa1f4b96110d365b7142d7de04
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Fri Sep 3 13:55:07 2010 +0100

    build: Allow disabling linking with -Bsymbolic
    
    Some debugging tools might require full visibility for the Clutter
    symbols; for this reason, and to match what the Clutter dependencies
    already allow, we should provide a configure switch to disable linking
    with the -Bsymbolic flag.

 README       |    3 +++
 configure.ac |   35 ++++++++++++++++++++++-------------
 2 files changed, 25 insertions(+), 13 deletions(-)

commit 3e74f42f07c0d4a5f830a49274cfe9a78268217f
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Fri Sep 3 12:14:50 2010 +0100

    introspection: Add annotations
    
    Reduce the amount of warnings coming from g-ir-scanner.

 clutter/clutter-actor.c          |    9 +++++----
 clutter/clutter-alpha.c          |    4 +++-
 clutter/clutter-animator.c       |    4 +++-
 clutter/clutter-behaviour.c      |    2 +-
 clutter/clutter-box.c            |    4 +++-
 clutter/clutter-container.c      |    4 ++--
 clutter/clutter-event.c          |    4 +++-
 clutter/clutter-interval.c       |    4 ++--
 clutter/clutter-layout-manager.c |    6 ++++--
 clutter/clutter-main.c           |    2 +-
 clutter/clutter-path.c           |    2 +-
 clutter/clutter-script.c         |    3 ++-
 clutter/clutter-shader.c         |   12 +++++++++---
 clutter/clutter-state.c          |   12 ++++++++----
 clutter/clutter-texture.c        |   16 +++++++++-------
 clutter/clutter-timeline.c       |    9 +++++----
 16 files changed, 61 insertions(+), 36 deletions(-)

commit 67792b875038fbe4a4fbc339f463ee73ac811c40
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Fri Sep 3 11:33:20 2010 +0100

    docs: Update the dependencies
    
    We depend on G-I 0.9.5 after the latest slew of changes.
    
    We also depend on UProf 0.3.

 README |    4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

commit 710c7aed400eb320581f160dc9cd0f4cba8676a8
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Fri Sep 3 11:09:57 2010 +0100

    build: Use Makefile.introspection
    
    Whenever possible, instead of writing our own rules for generating GIR
    files and typelibs.

 clutter/Makefile.am           |  103 ++++++++++++++++-------------------------
 clutter/cogl/cogl/Makefile.am |   36 +++++++-------
 clutter/json/Makefile.am      |   41 +++++++++-------
 configure.ac                  |   23 ++++-----
 4 files changed, 89 insertions(+), 114 deletions(-)

commit f7854dd90ffe22a08b2e182e10484320f360b2c9
Author: Colin Walters <walters@verbum.org>
Date:   Thu Sep 2 11:45:42 2010 -0400

    introspection: Build fixes
    
    This patch merges in substantial work from
    Emmanuele Bassi <ebassi@linux.intel.com>
    
    * Use new introspection --include-uninstalled API since we don't want
      to try to find the clutter-1.0.pc file before it's installed.
    * Use --pkg-export for Clutter-1.0.gir, since we want the .gir file to
      contain the associated pkg-config file.
    * Drop the use of --pkg for dependencies; those come from the associated
      .gir files.  (Actually, --pkg is almost never needed)
    * Add --quiet
    
    http://bugzilla.clutter-project.org/show_bug.cgi?id=2292

 clutter/Makefile.am           |   34 +++++++++++++---------------------
 clutter/cogl/cogl/Makefile.am |    2 +-
 clutter/json/Makefile.am      |    3 +--
 configure.ac                  |    2 +-
 4 files changed, 16 insertions(+), 25 deletions(-)

commit 24b12d626c3afdaa94b4119e218cf5b7436d0478
Author: Damien Lespiau <damien.lespiau@intel.com>
Date:   Thu Sep 2 16:22:45 2010 +0100

    cex100: Remove C99-ism
    
    We were declaring a variable in the middle of the code. Blasphemy, for
    non-c99 compilers.

 clutter/egl/clutter-backend-cex100.c |   33 +++++++++++++++++----------------
 1 file changed, 17 insertions(+), 16 deletions(-)

commit 0216f0b2810f6c3f7db2b7ad615a9e259ab7059f
Author: Damien Lespiau <damien.lespiau@intel.com>
Date:   Thu Sep 2 16:20:10 2010 +0100

    cex100: Use % not # to document constants
    
    gtk-doc contants should be prefixed by %, not # (types).

 clutter/egl/clutter-cex100.h.in |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit 0a0a59cf7bdc5d4ee3639923f19cb57bf666815b
Author: Damien Lespiau <damien.lespiau@intel.com>
Date:   Sat Aug 28 12:06:11 2010 +0100

    cex100: Add an API to configure the buffering mode of the GDL plane
    
    GDL planes can be double or triple buffered. Let the user choose between
    the two modes befored initalizing Clutter.

 clutter/egl/clutter-backend-cex100.c       |   21 +++++++++++----------
 clutter/egl/clutter-cex100.h.in            |   27 +++++++++++++++++++++++++++
 doc/reference/clutter/clutter-sections.txt |    2 ++
 3 files changed, 40 insertions(+), 10 deletions(-)

commit 01fcd11efd0f02833370901dc47d042dc067627a
Author: Damien Lespiau <damien.lespiau@intel.com>
Date:   Sat Aug 28 10:43:39 2010 +0100

    cex100: Add an API to configure the GDL plane to use
    
    Intel CE3100 and CE4100 have several planes (framebuffers) and a
    hardware blender to blend the planes togeteher to produce the final
    image.
    
    clutter_cex100_set_plane() lets you configure which framebuffer clutter
    will use for its rendering.

 .gitignore                                 |    1 +
 clutter/egl/Makefile.am                    |    1 +
 clutter/egl/clutter-backend-cex100.c       |   35 +++++++++++++++
 clutter/egl/clutter-cex100.h.in            |   64 ++++++++++++++++++++++++++++
 configure.ac                               |    3 ++
 doc/reference/clutter/Makefile.am          |    2 +
 doc/reference/clutter/building-clutter.xml |    2 +-
 doc/reference/clutter/clutter-docs.xml.in  |    1 +
 doc/reference/clutter/clutter-sections.txt |    6 +++
 9 files changed, 114 insertions(+), 1 deletion(-)

commit 70dc3ecbd6986b0f9ded6ec9c7d4634dda5c5465
Author: Damien Lespiau <damien.lespiau@intel.com>
Date:   Fri Aug 27 16:19:00 2010 +0100

    egl: Fix the installed headers
    
     • Use the public COGL_HAS_GLES[12] define instead of the HAVE_COGL_*
       ones which are private and defined in config.h,
     • Install clutter-egl-headers.h which is needed by clutter-egl.h,
     • Remove clutter-stage.h as it's uneeded and does not work since the
       single clutter.h include policy,
     • Install the egl headers into their own egl directory as the x11 and
       glx backends do. The include should then be <clutter/egl/clutter-egl.h>,
       so document it. It does not really break anything as nobody could
       have used those broken headers.

 clutter/egl/Makefile.am           |    4 ++--
 clutter/egl/clutter-egl-headers.h |   12 +++++++-----
 clutter/egl/clutter-egl.h         |    6 ++++--
 3 files changed, 13 insertions(+), 9 deletions(-)

commit e1e5db00327db6d37850aaad7bb8fb42ffe29e57
Author: Damien Lespiau <damien.lespiau@gmail.com>
Date:   Thu Aug 12 09:25:17 2010 -0400

    cex100: Add a Clutter EGL backend for CE3100/CE4100 SoCs
    
    Intel CE3100 and CE4100 SoCs are designed for TVs. They have separate
    framebuffers that are blended together by a piece of hardware to make
    the final output. The library that allows you to initialize and
    configure those planes is called GDL. A EGL GDL winsys can then be
    use with those planes as NativeWindowType to select which plane to use.
    
    This patch adds a new ClutterBackendCex100 backend that can be
    selected at compile time with the new --with-flavour=cex100 option.

 clutter/cogl/cogl/Makefile.am        |    4 +
 clutter/egl/Makefile.am              |    3 +
 clutter/egl/clutter-backend-cex100.c |  332 ++++++++++++++++++++++++++++++++++
 clutter/egl/clutter-backend-cex100.h |   60 ++++++
 clutter/egl/clutter-backend-egl.c    |    2 +
 configure.ac                         |   49 ++++-
 6 files changed, 449 insertions(+), 1 deletion(-)

commit af983faccd6fc91ea328d19ace2bb61df2c0f9fd
Author: Damien Lespiau <damien.lespiau@gmail.com>
Date:   Thu Aug 12 09:05:01 2010 -0400

    egl: Fix compilation for EGL native
    
    Some minor fixes here and there: missing include, wrongly placed #endif,
    unused variable warning fixes, missing #ifdef.
    
    Make ClutterStageEGL a subclass of either ClutterStageX11 or GObject
    depending if you compile with X11 support (EGLX) or not (native).

 clutter/cogl/cogl/cogl-material-glsl.c |    1 +
 clutter/egl/clutter-backend-egl.c      |    1 -
 clutter/egl/clutter-stage-egl.h        |   18 +++++++++++++++---
 3 files changed, 16 insertions(+), 4 deletions(-)

commit 12a5bf2e06114e60e8286ee7fd75e73ce16f487c
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Wed Sep 1 17:56:15 2010 +0100

    offscreen-effect: Rename create_target to create_buffer
    
                    *** This is an API change ***
    
    The create_target() virtual function should return a CoglHandle to a
    texture; clutter_offscreen_effect_get_target(), instead, returns a
    CoglMaterial to be painted in the implementation of the paint_target()
    virtual function.
    
    Instead of equating textures with materials, and confusing the user of
    the API, we should mark the difference more prominently.
    
    First of all, we should return a CoglMaterial* (now that we have that
    as a public type) in get_target(); having handles all over the place
    does not make it easier to distinguish the semantics of the virtual
    functions.
    
    Then we should rename create_target() to create_texture(), to make it
    clear that what should be returned is a texture that is used as the
    backing for the offscreen framebuffer.

 clutter/clutter-offscreen-effect.c         |   45 +++++++++++++++-------------
 clutter/clutter-offscreen-effect.h         |   14 ++++-----
 doc/reference/clutter/clutter-sections.txt |    2 +-
 3 files changed, 32 insertions(+), 29 deletions(-)

commit 6c40b100839e3597e9ab5f1d3e32c9d42d1af87c
Author: Elliot Smith <elliot.smith@intel.com>
Date:   Tue Aug 31 14:39:03 2010 +0100

    cookbook: Added recipe for signal handling in ClutterScript
    
    Added a recipe explaining how to connect signals to handlers
    in the JSON definition used by ClutterScript; also shows
    how to connect the signals in code once the JSON has been
    loaded.
    
    Includes guidelines on writing handlers (i.e. need to use
    -export-dynamic and non-static functions) and example
    which connects a handler for motion events on a rectangle.

 doc/cookbook/script.xml |  266 +++++++++++++++++++++++++++++++++++++++++++++++
 1 file changed, 266 insertions(+)

commit a67111a17cf5427096272276c2117c9f8d92a978
Author: Elliot Smith <elliot.smith@intel.com>
Date:   Fri Aug 27 16:31:00 2010 +0100

    cookbook: Added example of connecting signals in ClutterScript
    
    To support recipe about connecting signals in script.

 doc/cookbook/examples/Makefile.am         |    2 +
 doc/cookbook/examples/script-signals.c    |   91 +++++++++++++++++++++++++++++
 doc/cookbook/examples/script-signals.json |   40 +++++++++++++
 3 files changed, 133 insertions(+)

commit b369cb51dc24801dc6e1dd4db54691ff859db93f
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Sat Aug 28 21:21:08 2010 +0100

    docs: Pass -DCOGL_ENABLE_EXPERIMENTAL_API when scanning

 doc/reference/cogl/Makefile.am |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit be9dd6e7dac5711bd5cf0f225c0d4b151b851868
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Sat Aug 28 21:18:12 2010 +0100

    docs: Split x11-texture-pixmap in its own section

 doc/reference/clutter/clutter-sections.txt |   10 +++++++---
 1 file changed, 7 insertions(+), 3 deletions(-)

commit a0c700b8d074dc0581cb7889c98e63e77a98439f
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Sat Aug 28 21:17:52 2010 +0100

    docs: Fix up the main index of the Clutter API reference

 doc/reference/clutter/clutter-docs.xml.in |    8 ++------
 1 file changed, 2 insertions(+), 6 deletions(-)

commit ac6256ae604ad1da05e719f8623b4650402245fb
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Sat Aug 28 21:17:23 2010 +0100

    docs: Add @Title to the X11TexturePixmap gtk-doc section

 clutter/x11/clutter-x11-texture-pixmap.c |    1 +
 1 file changed, 1 insertion(+)

commit 79a4dbb32908043223e0d5a085214850166124f5
Author: Elliot Smith <elliot.smith@intel.com>
Date:   Fri Aug 27 15:29:09 2010 +0100

    cookbook: Use nicknames for enumeration values
    
    GEnum nicknames can be used to set properties in JSON
    definitions, so added a callout to the JSON example explaining
    this, and showing how to derive the nickname for an enumeration
    value.
    
    Modified the example code to use nicknames as well.

 doc/cookbook/examples/script-ui.json |    4 ++--
 doc/cookbook/script.xml              |   27 +++++++++++++++++++++++++--
 2 files changed, 27 insertions(+), 4 deletions(-)

commit 2c3ca20cdc3299e239388f75b583e2afb7437b47
Author: Elliot Smith <elliot.smith@intel.com>
Date:   Fri Aug 27 15:13:28 2010 +0100

    cookbook: Don't use the default stage
    
    It's not necessary to use the default stage, so
    don't encourage this in the JSON example.

 doc/cookbook/examples/script-ui.json |    1 -
 doc/cookbook/script.xml              |    6 ------
 2 files changed, 7 deletions(-)

commit 6db795baf634df0d5b8becc746c6c57c2ed0131a
Author: Elliot Smith <elliot.smith@intel.com>
Date:   Fri Aug 27 15:10:17 2010 +0100

    cookbook: Mention nick names as possible values for enums
    
    As JSON can make use of nicknames for GEnum properties,
    mentioned this in the table mapping C property values
    to their JSON equivalents (as the nick name is a much
    shorter and cleaner way of setting a property in JSON).

 doc/cookbook/script.xml |    7 +++++--
 1 file changed, 5 insertions(+), 2 deletions(-)

commit b532f9591786f4b5381269718e7e0d479ad58c4d
Author: Elliot Smith <elliot.smith@intel.com>
Date:   Fri Aug 27 11:20:29 2010 +0100

    cookbook: Added introduction to and recipe on ClutterScript
    
    Wrote an introduction to using ClutterScript with JSON. Focus
    is on explaining why you might want to use it, basic principles
    of operation (with annotated JSON sample), and how to map
    data types from C to JSON.
    
    Written simultaneously with a short recipe (uses the same sample
    code) showing how to load a JSON file and retrieve objects
    from it in code.

 doc/cookbook/script.xml |  394 ++++++++++++++++++++++++++++++++++++-----------
 1 file changed, 303 insertions(+), 91 deletions(-)

commit 7900ac4dc7fb204c9f8a957f20ec445ef19f655d
Author: Elliot Smith <elliot.smith@intel.com>
Date:   Thu Aug 26 17:07:21 2010 +0100

    cookbook: Added comments to script example
    
    Commented the ClutterScript example so it can be used
    inline as part of the recipe, rather than as an
    example in the appendix (it's too simple to warrant
    a separate appendix).

 doc/cookbook/examples/script-ui.c |    2 ++
 1 file changed, 2 insertions(+)

commit 0fc1c8503b073491ca301c5551c515408a499052
Author: Elliot Smith <elliot.smith@intel.com>
Date:   Thu Aug 26 12:51:33 2010 +0100

    cookbook: Added first draft of script introduction
    
    New script chapter needs an introduction.
    
    While writing the introduction, also slightly changed the
    emphasis of the recipe (towards refactoring an existing
    application to use ClutterScript) and incorporated example
    code into documentation.

 doc/cookbook/script.xml |  205 ++++++++++++++++++++++++++++++++++++++++++++---
 1 file changed, 196 insertions(+), 9 deletions(-)

commit ce3a3d4404830cc951dc14660aa5c846ec3f8727
Author: Elliot Smith <elliot.smith@intel.com>
Date:   Thu Aug 26 12:49:59 2010 +0100

    cookbook: Use text for callouts in documentation
    
    Set a parameter on the XSLT transform so that callout elements
    are rendered as text rather than graphics (removes the need
    to add callout graphics to the build).

 doc/cookbook/Makefile.am |    1 +
 1 file changed, 1 insertion(+)

commit fef53e1b287df0640e3395d082c7dcb84d8886b1
Author: Elliot Smith <elliot.smith@intel.com>
Date:   Thu Aug 26 11:07:54 2010 +0100

    cookbook: Added skeleton for script chapter of cookbook

 doc/cookbook/Makefile.am             |    1 +
 doc/cookbook/clutter-cookbook.xml.in |    1 +
 doc/cookbook/script.xml              |   45 ++++++++++++++++++++++++++++++++++
 3 files changed, 47 insertions(+)

commit 27d9825abe50d5fc38788c1c47f4a28b5225f098
Author: Elliot Smith <elliot.smith@intel.com>
Date:   Thu Aug 26 10:52:12 2010 +0100

    cookbook: Simplified ClutterScript example
    
    There was too much in the example code to cover in a single
    recipe, so I trimmed it down to demonstrate simple
    UI building (no constraints, effects, animations, or signals).

 doc/cookbook/examples/script-ui.c    |   35 --------------
 doc/cookbook/examples/script-ui.json |   85 ++++------------------------------
 2 files changed, 8 insertions(+), 112 deletions(-)

commit 4cba0cf3e82617e4cad0b4ab3813d5c6e6a5b715
Author: Elliot Smith <elliot.smith@intel.com>
Date:   Wed Aug 25 17:53:46 2010 +0100

    cookbook: Added ClutterScript example
    
    Added a simple script and program to load it, to support
    recipe on ClutterScript for UI definitions.
    
    Also amended the Makefile (following the pattern of
    the tests/interactive Makefile) to enable signal
    connection from ClutterScript by passing -export-dynamic
    to linker.

 doc/cookbook/examples/Makefile.am    |    4 +-
 doc/cookbook/examples/script-ui.c    |   69 ++++++++++++++++++++++
 doc/cookbook/examples/script-ui.json |  104 ++++++++++++++++++++++++++++++++++
 3 files changed, 176 insertions(+), 1 deletion(-)

commit 88b026fa72eddcd1e9da817ddd50be3f0e037f6a
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu Aug 26 17:31:32 2010 +0100

    test-actors: Name all the actors
    
    Makes it easier to debug events.

 tests/interactive/test-actors.c |   17 +++++++++++++----
 1 file changed, 13 insertions(+), 4 deletions(-)

commit 36d45b660fc86619345bfe4f2837037f3a164d5d
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu Aug 26 16:36:59 2010 +0100

    click-action: Add get_button()
    
    Allow retrieving the pointer button that caused the ::clicked signal to
    be emitted.
    
    http://bugzilla.clutter-project.org/show_bug.cgi?id=2287

 clutter/clutter-click-action.c             |   18 ++++++++++++++++++
 clutter/clutter-click-action.h             |    6 ++++--
 doc/reference/clutter/clutter-sections.txt |    1 +
 3 files changed, 23 insertions(+), 2 deletions(-)

commit 550d5ab621379f732958dda99da130a25ea6aa15
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu Aug 26 16:36:06 2010 +0100

    click-action: Fix the release() method name
    
    Documented and declared as release(), it's implemented as
    force_release().
    
    http://bugzilla.clutter-project.org/show_bug.cgi?id=2286

 clutter/clutter-click-action.c |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit 870e7ddfadaff366ca02e28cc464e704b77b3430
Author: Bastian Winkler <buz@netbuz.org>
Date:   Tue Aug 24 12:13:30 2010 +0200

    test-script-parser: Add a second child to the container
    
    The script parser won't apply child and layout properties correctly with
    more than one children.
    
    http://bugzilla.clutter-project.org/show_bug.cgi?id=2285
    
    Signed-off-by: Emmanuele Bassi <ebassi@linux.intel.com>

 tests/conform/test-script-parser.c          |   27 ++++++++++++++++++++++-----
 tests/data/test-script-layout-property.json |    7 ++++++-
 2 files changed, 28 insertions(+), 6 deletions(-)

commit cb58f1f68cb3863a948f5e85db58d437d45ee091
Author: Bastian Winkler <buz@netbuz.org>
Date:   Tue Aug 24 12:16:50 2010 +0200

    script-parser: Apply child and layout properties to the right actor
    
    http://bugzilla.clutter-project.org/show_bug.cgi?id=2285
    
    Signed-off-by: Emmanuele Bassi <ebassi@linux.intel.com>

 clutter/clutter-script-parser.c |    5 ++---
 1 file changed, 2 insertions(+), 3 deletions(-)

commit 2e12768e3c84eb67948df1af1c89cb0011403d88
Author: Neil Roberts <neil@linux.intel.com>
Date:   Tue Aug 24 20:00:04 2010 +0100

    win32: Fix the check for the 'IN_DESTRUCTION' flag
    
    Commit eae45619299 tried to clean how it checks for the private actor
    flags. However the check for the 'IN_DESTRUCTION' flag in the Win32
    backend got inverted so it would always clear the current
    context. This was causing _cogl_check_driver_valid to fail later and
    then the realize would get stuck in a infinite loop.

 clutter/win32/clutter-backend-win32.c |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit 04d55107f380340ce22fbb56a3c87cf7576524db
Author: Øyvind Kolås <pippin@linux.intel.com>
Date:   Tue Aug 17 13:22:08 2010 +0100

    state: clutter_state_remove_key_internal fix memory corruption
    
    When we free a state because there are no more keys with it as a target use a
    goto to re-initialize temporary variables that have become invalid.
    
    Fixing bug #2273

 clutter/clutter-state.c |   21 ++++++++++++++-------
 1 file changed, 14 insertions(+), 7 deletions(-)

commit 66018a7035ccdc2422f8eef9a9523339fd6309be
Author: Neil Roberts <neil@linux.intel.com>
Date:   Mon Aug 23 11:36:33 2010 +0100

    Invert the check for whether to clip the pick
    
    In 965907deb3f9e the picking was changed to render the full stage
    instead of a single pixel whenever picking is performed more than once
    between paints. However the condition in the if-statement was
    backwards so it would end up always doing a full stage render.

 clutter/clutter-main.c |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit ddd08ba72364d14c0ca291981a231f4add3d62a5
Author: Neil Roberts <neil@linux.intel.com>
Date:   Mon Aug 23 11:33:22 2010 +0100

    Add some debugging notes for picking
    
    This adds a new CLUTTER_DEBUG option for picking. Currently this just
    reports the position for each pick and whether it is clipped or not.

 clutter/clutter-debug.h |    3 ++-
 clutter/clutter-main.c  |    7 +++++++
 2 files changed, 9 insertions(+), 1 deletion(-)

commit 12e58c78132766ff4eb3e4c471a32d9e8ef95585
Author: Alexandros Frantzis <alexandros.frantzis@linaro.org>
Date:   Fri Aug 13 17:48:30 2010 +0300

    Hide internal glx and egl(x) backend symbols.
    
    The glx and egl(x) backends export some internal symbols. Hide these
    symbols (using '_' prefix) to reduce ABI differentiation between the
    glx and eglx flavours.
    
    http://bugzilla.clutter-project.org/show_bug.cgi?id=2267
    
    Signed-off-by: Emmanuele Bassi <ebassi@linux.intel.com>

 clutter/egl/clutter-backend-egl.c |   22 +++++++++++-----------
 clutter/egl/clutter-backend-egl.h |    4 ++--
 clutter/egl/clutter-stage-egl.c   |   14 +++++++-------
 clutter/egl/clutter-stage-egl.h   |    6 +++---
 clutter/glx/clutter-backend-glx.c |   24 ++++++++++++------------
 clutter/glx/clutter-backend-glx.h |    4 ++--
 clutter/glx/clutter-event-glx.c   |    2 +-
 clutter/glx/clutter-event-glx.h   |    2 +-
 clutter/glx/clutter-stage-glx.c   |   10 +++++-----
 clutter/glx/clutter-stage-glx.h   |    6 +++---
 10 files changed, 47 insertions(+), 47 deletions(-)

commit cda5afb41981e5402bfc4816e71f12b99eb820fc
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Fri Aug 20 17:03:06 2010 +0100

    box-layout: Use the correct name for the arguments
    
    Since we're getting the preferred height for a given width, the width
    argument should be named "for_width" and not "for_height".

 clutter/clutter-box-layout.c |    4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

commit 5f15a620a107847e0b26bab6cdd1c9d27cd3a243
Merge: 81481cd 444d315
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Fri Aug 20 15:24:42 2010 +0100

    Merge remote branch 'elliot/cookbook-textures-crossfade'
    
    * elliot/cookbook-textures-crossfade:
      cookbook: Use GdkPixbuf instead of getting data from a texture
      cookbook: Added a recipe for cross-fading between two images
      cookbook: Modified COGL example for consistency
      cookbook: Added video of two texture cross-fade
      cookbook: Removed unused constant
      cookbook: Renamed front/back to top/bottom in cross-fade example
      cookbook: Don't need to set keep-aspect-ratio for simple example
      cookbook: Modified ordering of statements in cross-fade example
      cookbook: Added a longer slideshow example
      cookbook: Made code examples more consistent
      cookbook: Added example code for texture cross-fading
      Post-release version bump to 1.3.13
      Release Clutter 1.3.12 (developers snapshot)
    
    Conflicts:
    	doc/cookbook/examples/Makefile.am

commit 81481cd80342614d0fe57ffa6d2bd46103602952
Author: Elliot Smith <elliot.smith@intel.com>
Date:   Fri Aug 20 13:54:04 2010 +0100

    cookbook: Added recipe for handling pointer events on an actor
    
    Added a recipe about handling enter, leave, and motion events
    on an actor.
    
    Gives some pointers to data available from motion events,
    explains a bit about stage-relative and actor-relative coords,
    and covers how overlapping actors and reactivity of actors
    can affect events occurring.
    
    Examples include a simple scribble app showing how to integrate
    pointer events into a more useful context.

 doc/cookbook/Makefile.am                           |    1 +
 doc/cookbook/events.xml                            |  323 ++++++++++++++++++++
 .../images/events-pointer-motion-stacking.png      |  Bin 0 -> 1063 bytes
 3 files changed, 324 insertions(+)

commit c480e5ec00d52b176bdda1b26d1dfee8aea3384f
Author: Elliot Smith <elliot.smith@intel.com>
Date:   Fri Aug 20 12:38:35 2010 +0100

    cookbook: Added example to show how stacking affects pointer events
    
    Added another example (used for a screenshot) to demonstrate
    how pointer events pass through non-reactive actors and how
    depth ordering affects whether an actor will emit a pointer
    motion signal.

 doc/cookbook/examples/Makefile.am                  |    2 +
 .../examples/events-pointer-motion-stacked.c       |   90 ++++++++++++++++++++
 2 files changed, 92 insertions(+)

commit 526b438b3a4ebc446a1f986dcaeb759377462c18
Author: Elliot Smith <elliot.smith@intel.com>
Date:   Fri Aug 20 11:25:40 2010 +0100

    cookbook: Use get_coords rather than struct members
    
    Use clutter_event_get_coords() to get x and y position,
    rather than casting to the right event type then directly
    accessing members of the event struct.

 doc/cookbook/examples/events-pointer-motion.c |    6 ++----
 1 file changed, 2 insertions(+), 4 deletions(-)

commit a4db7746f24280b26fed0b8caae0068cfe8d57b0
Author: Elliot Smith <elliot.smith@intel.com>
Date:   Thu Aug 19 17:50:25 2010 +0100

    cookbook: Made callback names more consistent
    
    Changed callback function names so they are more consistent
    within this recipe and with other callback names used
    in other recipes.

 .../examples/events-pointer-motion-crossing.c      |   16 +++++------
 .../examples/events-pointer-motion-scribbler.c     |   28 ++++++++++----------
 doc/cookbook/examples/events-pointer-motion.c      |    8 +++---
 3 files changed, 26 insertions(+), 26 deletions(-)

commit c1e2658104046d8895134df5b7519db26a491892
Author: Elliot Smith <elliot.smith@intel.com>
Date:   Thu Aug 19 17:17:58 2010 +0100

    cookbook: Added simple pointer motion example
    
    Added a simple pointer motion example which just reports on
    the stage and actor-relative coordinates of the pointer
    as it moves.

 doc/cookbook/examples/Makefile.am             |    6 ++-
 doc/cookbook/examples/events-pointer-motion.c |   56 +++++++++++++++++++++++++
 2 files changed, 60 insertions(+), 2 deletions(-)

commit 7c196d31b4707322fc45b55106ded0e0daaacd40
Author: Elliot Smith <elliot.smith@intel.com>
Date:   Thu Aug 19 16:53:27 2010 +0100

    cookbook: Added scribble example for pointer motion recipe
    
    Simple scribbler application which demonstrates tracking
    mouse enter and motion events on a texture, drawing with
    COGL and ClutterPath as they occur.

 doc/cookbook/examples/Makefile.am                  |    2 +
 .../examples/events-pointer-motion-scribbler.c     |  160 ++++++++++++++++++++
 2 files changed, 162 insertions(+)

commit b648bff10c0e2c48f0707bfecd7ea7ae1acab2eb
Author: Elliot Smith <elliot.smith@intel.com>
Date:   Thu Aug 19 16:48:59 2010 +0100

    cookbook: Renamed example for pointer crossing
    
    Decided might be better to cover crossing and motion under
    a broader "pointer motion" recipe, so renamed the example
    (which only shows pointer crossing event handling).

 doc/cookbook/examples/Makefile.am                  |    4 +-
 doc/cookbook/examples/events-pointer-cross.c       |  113 --------------------
 .../examples/events-pointer-motion-crossing.c      |  113 ++++++++++++++++++++
 3 files changed, 115 insertions(+), 115 deletions(-)

commit 72ddd471f04f663ce52fdb36347688a595cfa940
Author: Elliot Smith <elliot.smith@intel.com>
Date:   Thu Aug 19 10:32:28 2010 +0100

    cookbook: Added example for pointer cross recipe
    
    Code example demonstrates detecting pointers entering/leaving
    an actor by implementing a (very) simple button with hover
    effect.

 doc/cookbook/examples/Makefile.am            |    2 +
 doc/cookbook/examples/events-pointer-cross.c |  113 ++++++++++++++++++++++++++
 2 files changed, 115 insertions(+)

commit 213bd1eab4e0dfbb0c033c5d8d56eb6343e35876
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu Aug 19 13:57:10 2010 +0100

    debug: Add a macro for checking debug flags

 clutter/clutter-actor.c |    2 +-
 clutter/clutter-debug.h |   79 ++++++++++++++++++++++++-----------------------
 clutter/clutter-main.c  |    2 +-
 3 files changed, 43 insertions(+), 40 deletions(-)

commit 459a6bb24c880c21f71c37e99f04e801d117705d
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu Aug 19 12:10:43 2010 +0100

    click-action: Add a method to force a release
    
    It can be useful to be able to forcibly break the grab set up by the
    ClickAction. The newly added release() method provides a mechanism to
    release the grab and unset the :held state of the ClickAction.

 clutter/clutter-click-action.c             |   30 ++++++++++++++++++++++++++++
 clutter/clutter-click-action.h             |    3 ++-
 doc/reference/clutter/clutter-sections.txt |    1 +
 3 files changed, 33 insertions(+), 1 deletion(-)

commit db7d821ef6e435b02a7a99c6f7f02df9bd3565b5
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu Aug 19 11:26:51 2010 +0100

    click-action: Add attribution
    
    The ClickAction semantics were inspired by the StClickable widget in the
    GNOME Shell Toolkit (St).

 clutter/clutter-click-action.h |    3 +++
 1 file changed, 3 insertions(+)

commit 5ccaa61e4fcd527cfeeaded08a1e0311a5e6814e
Author: Robert Bragg <robert@linux.intel.com>
Date:   Wed Aug 18 18:06:35 2010 +0100

    docs: Clarifies that queue_redraw also applies to picking
    
    This clarifies the documentation for clutter_actor_queue_redraw to
    explain that custom actors should call this whenever some private state
    changes that affects painting *or* picking.

 clutter/clutter-actor.c |    4 ++++
 1 file changed, 4 insertions(+)

commit f8940e3c9a7d58df0a484d70d371983cc337bbec
Author: Robert Bragg <robert@linux.intel.com>
Date:   Wed Aug 18 18:05:15 2010 +0100

    clutter-texture: queue redraw when changing pick_with_alpha
    
    The expectation is that actors should call clutter_actor_queue_redraw
    when ever some private state changes that affects painting *or* picking.
    ClutterTexture was not doing this for pick_with_alpha property changes.

 clutter/clutter-texture.c |    5 +++++
 1 file changed, 5 insertions(+)

commit 965907deb3f9e69cb459dd28af4074364a7b72f9
Author: Robert Bragg <robert@linux.intel.com>
Date:   Wed Aug 18 16:48:55 2010 +0100

    Cache a full pick render if we have a static stage
    
    The idea is that if we see multiple picks per frame then that implies
    the visible scene has become static. In this case we can promote the
    next pick render to be unclipped so we have valid pick values for the
    entire stage. Now we can continue to read from this cached buffer until
    the stage contents do visibly change.
    
    Thanks to Luca Bruno on #clutter for this idea!

 clutter/clutter-actor.c   |   12 +++++++++
 clutter/clutter-main.c    |   61 ++++++++++++++++++++++++++++++++++++++++++---
 clutter/clutter-private.h |    3 +++
 3 files changed, 72 insertions(+), 4 deletions(-)

commit c646a366c62ab6a07b8ae53c170db31ad5b3d7d3
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Wed Aug 18 18:20:16 2010 +0100

    actor: Ignore paint() on actors being destroyed
    
    OBVIOUS OPTIMIZATION IS OBVIOUS

 clutter/clutter-actor.c |    3 +++
 1 file changed, 3 insertions(+)

commit 56097df60cae9b665c9c6033bf7ad54751874e92
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Wed Aug 18 18:20:04 2010 +0100

    docs: Improve paint() documentation

 clutter/clutter-actor.c |    9 ++++++++-
 1 file changed, 8 insertions(+), 1 deletion(-)

commit 444d315078f41295c722bdf30c4b3ff92c89cf53
Author: Elliot Smith <elliot.smith@intel.com>
Date:   Wed Aug 18 16:02:51 2010 +0100

    cookbook: Use GdkPixbuf instead of getting data from a texture
    
    Rewrote example for single texture + COGL to use
    a GdkPixbuf to load images, rather than reading data
    out of another CoglTexture.
    
    The data is then loaded from the pixbuf to a region of
    the CoglTexture (as before).

 doc/cookbook/textures.xml |  165 +++++++++++++++++++++++----------------------
 1 file changed, 83 insertions(+), 82 deletions(-)

commit c207820bef93bffede1733ef8c6586cda5095347
Author: Elliot Smith <elliot.smith@intel.com>
Date:   Wed Aug 18 11:41:10 2010 +0100

    cookbook: Added a recipe for cross-fading between two images
    
    The recipe covers a two texture approach (using the Clutter API)
    and a single texture approach (using COGL).
    
    It also discusses issues with cross-fading between images of
    different sizes with the COGL API, and gives a longer
    example of cycling through multiple images in a slideshow
    application.

 doc/cookbook/textures.xml |  535 +++++++++++++++++++++++++++++++++++++++++++++
 1 file changed, 535 insertions(+)

commit c492faecb2fda5619fa26b4eb84e6ced7a103833
Author: Elliot Smith <elliot.smith@intel.com>
Date:   Tue Aug 17 15:47:59 2010 +0100

    cookbook: Modified COGL example for consistency
    
    Changed the stage size so the COGL API example for cross-fade
    has a stage the same size as the two texture example.

 doc/cookbook/examples/textures-crossfade-cogl.c |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit e54d3e716b5f9a00d59a006e70926d5fe31fd4a3
Author: Elliot Smith <elliot.smith@intel.com>
Date:   Tue Aug 17 15:46:48 2010 +0100

    cookbook: Added video of two texture cross-fade
    
    Added a video showing the two texture cross-fade.
    
    Modified the example code to animate on key press, so
    this video could be captured.
    
    Also altered the stage size to minimise the video size.

 doc/cookbook/Makefile.am                           |    1 +
 doc/cookbook/examples/textures-crossfade.c         |   21 ++++++++++++++++----
 .../videos/textures-crossfade-two-textures.ogv     |  Bin 0 -> 81903 bytes
 3 files changed, 18 insertions(+), 4 deletions(-)

commit 0486c56a41870ac1ebb3a0200060fb80282a1f25
Author: Elliot Smith <elliot.smith@intel.com>
Date:   Tue Aug 17 14:54:32 2010 +0100

    cookbook: Removed unused constant

 doc/cookbook/examples/textures-crossfade.c |    2 --
 1 file changed, 2 deletions(-)

commit 8c0c2924ae467d265aabf7b7c472eb0474c459e7
Author: Elliot Smith <elliot.smith@intel.com>
Date:   Tue Aug 17 11:51:33 2010 +0100

    cookbook: Renamed front/back to top/bottom in cross-fade example
    
    Front/back seems like the wrong terminology when discussing
    actors arranged in layers. Top/bottom fits better with Clutter
    API function names and other recipes, so renamed variables.

 .../examples/textures-crossfade-slideshow.c        |   44 ++++++++++----------
 doc/cookbook/examples/textures-crossfade.c         |   38 ++++++++---------
 2 files changed, 41 insertions(+), 41 deletions(-)

commit 1e4578d1dd6dc7d638ac2d4902e303d07504039f
Author: Elliot Smith <elliot.smith@intel.com>
Date:   Tue Aug 17 11:20:20 2010 +0100

    cookbook: Don't need to set keep-aspect-ratio for simple example

 doc/cookbook/examples/textures-crossfade.c |    3 ---
 1 file changed, 3 deletions(-)

commit 1b2606a850288b2f8f943ae2e433b14e34a944f7
Author: Elliot Smith <elliot.smith@intel.com>
Date:   Tue Aug 17 10:56:06 2010 +0100

    cookbook: Modified ordering of statements in cross-fade example
    
    Changed the order of statements in the sample code to match
    the order they will be explained in the walk-through in the recipe.

 doc/cookbook/examples/textures-crossfade.c |   20 ++++++++++----------
 1 file changed, 10 insertions(+), 10 deletions(-)

commit e332236b87871b09922ab3ada1a2a5726d06130a
Author: Elliot Smith <elliot.smith@intel.com>
Date:   Mon Aug 16 16:39:13 2010 +0100

    cookbook: Added a longer slideshow example
    
    Cross-fading between two images is straightforward,
    but cycling between more than two is more efficient
    if done by copying COGL textures between the
    two textures, rather than trying to reposition the
    textures.
    
    The example demonstrates how to reuse a pair of
    textures to cycle through multiple images.

 doc/cookbook/examples/Makefile.am                  |    2 +
 .../examples/textures-crossfade-slideshow.c        |  182 ++++++++++++++++++++
 2 files changed, 184 insertions(+)

commit c230fd8dfdb43c98faa3147d2f669e0b5e44702b
Author: Elliot Smith <elliot.smith@intel.com>
Date:   Mon Aug 16 16:16:07 2010 +0100

    cookbook: Made code examples more consistent
    
    Modified the code example for the Clutter API version
    of the cross-fade to use the same command line
    as the COGL version.
    
    This also simplifies the explanation in the recipe.
    
    Also made the COGL code sample more consistent with
    the Clutter API code sample.

 doc/cookbook/examples/textures-crossfade-cogl.c |   17 +--
 doc/cookbook/examples/textures-crossfade.c      |  184 +++++++++--------------
 2 files changed, 75 insertions(+), 126 deletions(-)

commit 83a8d0b3bb2ad47db6afd32bd2aa503814486e07
Author: Elliot Smith <elliot.smith@intel.com>
Date:   Thu Aug 12 17:39:59 2010 +0100

    cookbook: Added example code for texture cross-fading
    
    Added simple image viewer which loads image file names
    from a directory, displays the first one, then displays
    the next in the list with each key press. Uses the
    primitive fade front in/fade back out approach.
    
    Also adapted Emmanuele's example code which uses Cogl
    to produce a similar effect, but within a single texture.
    This code loads two images specified on the command
    line and cross-fades between them.

 doc/cookbook/examples/Makefile.am               |    4 +
 doc/cookbook/examples/textures-crossfade-cogl.c |  174 +++++++++++++++++++++++
 doc/cookbook/examples/textures-crossfade.c      |  174 +++++++++++++++++++++++
 3 files changed, 352 insertions(+)

commit dc7d62a42a9b111d03626a8bc72c956869f4b7b8
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Mon Aug 16 13:37:57 2010 +0100

    Post-release version bump to 1.3.13

 configure.ac |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit 6d751bf9514683a893668bc3b3822e433277a377
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Mon Aug 16 13:23:43 2010 +0100

    Release Clutter 1.3.12 (developers snapshot)

 configure.ac |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit ad0c36e1a1a0df5c0ff1f4449c54918e775e965d
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Tue Aug 17 14:54:20 2010 +0100

    docs: Fixes to avoid gtk-doc warnings

 clutter/clutter-actor.c                    |   57 +++++++++-------------------
 clutter/clutter-actor.h                    |    4 +-
 clutter/clutter-behaviour-path.c           |    6 +--
 clutter/clutter-colorize-effect.c          |    2 +-
 clutter/clutter-drag-action.c              |    2 +-
 clutter/clutter-script.c                   |    2 +-
 doc/reference/clutter/clutter-docs.xml.in  |    7 +++-
 doc/reference/clutter/clutter-overview.xml |   23 +++++++----
 8 files changed, 48 insertions(+), 55 deletions(-)

commit 50f4bfd7f72eb10f05506b9932785b5cded42aa7
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Tue Aug 17 11:34:35 2010 +0100

    build: Remove dolt remnants
    
    We don't use Dolt any more, since we depend on libtool 2.2.

 .gitignore                  |    2 -
 Makefile.am                 |    2 +-
 build/autotools/Makefile.am |    1 -
 build/autotools/dolt.m4     |  178 -------------------------------------------
 4 files changed, 1 insertion(+), 182 deletions(-)

commit 06ecaa98f1f993239eebb7b74b3fa2ab5929a622
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Mon Aug 16 16:33:32 2010 +0100

    docs: Add :keep-aspect-ratio behaviour to the notes

 README |    8 ++++++++
 1 file changed, 8 insertions(+)

commit 92b1a33eb313abdb9d84f6731deb84a12d61d5d0
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Mon Aug 16 15:56:49 2010 +0100

    texture: Default square textures to height-for-width
    
    Square textures should have a preferred geometry request set to
    height-for-width, as it is the default for Clutter itself.

 clutter/clutter-texture.c |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit dc2aee43007bc4b154b5d819404071a35862c500
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Mon Aug 16 13:37:57 2010 +0100

    Post-release version bump to 1.3.13

 configure.ac |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit e75e6e0c97f2f9878dc348775cfe75651872e927
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Mon Aug 16 13:23:43 2010 +0100

    Release Clutter 1.3.12 (developers snapshot)

 NEWS         |   40 ++++++++++++++++++++++++++++++++++++++++
 configure.ac |    2 +-
 2 files changed, 41 insertions(+), 1 deletion(-)

commit fd6d6a93f1550f6c423d1dfc2d228ae7b1c87707
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Mon Aug 16 13:23:10 2010 +0100

    build: Fix distcheck errors

 tests/conform/Makefile.am     |    4 +---
 tests/interactive/Makefile.am |    4 +---
 2 files changed, 2 insertions(+), 6 deletions(-)

commit 3142b15a9f4c77b2e3012013f174091b810d13ce
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Sun Aug 15 18:42:54 2010 +0100

    build: Use maintainer-clean for the ignore files removal
    
    Instead of distclean.

 build/autotools/Makefile.am.gitignore |   11 +++++++----
 doc/cookbook/examples/Makefile.am     |    2 --
 tests/conform/Makefile.am             |    2 ++
 tests/interactive/Makefile.am         |    2 ++
 tests/micro-bench/Makefile.am         |    2 --
 5 files changed, 11 insertions(+), 8 deletions(-)

commit c4913bfce91be011618bca93e2177ebccef1e648
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Sun Aug 15 18:33:10 2010 +0100

    Revert "build: Distclean generated ignore files"
    
    Git ignore files are not dist'ed, so it's pointless to remove them on
    distclean.
    
    This reverts commit f14587aadc428e5743d2b30e2a9f4bf51f1d1e05.

 tests/conform/Makefile.am     |    2 +-
 tests/interactive/Makefile.am |    2 +-
 2 files changed, 2 insertions(+), 2 deletions(-)

commit e43215a5c9331517de555e44ba1181ad42ed79bc
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Sat Aug 14 08:53:18 2010 +0100

    build: Rule for quick publishing of the cookbook
    
    Just call `make publish`.

 doc/cookbook/Makefile.am |    9 +++++++++
 1 file changed, 9 insertions(+)

commit 94c8635d0f4584ef81e565e7837bdeb0008e034e
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Sat Aug 14 08:43:16 2010 +0100

    build: Autogenerate more ignore files
    
    The tests/accessibility, tests/micro-bench and the examples directory
    in the coobook create a lot of non-installed binaries. Since we know who
    they are, and we ignore them, we can auto-generate the ignore files as
    well.
    
    The rest of Clutter is covered by the main ignore file.

 build/autotools/Makefile.am           |    1 +
 build/autotools/Makefile.am.gitignore |   21 +++++++++++++++++++++
 doc/cookbook/examples/.gitignore      |    8 --------
 doc/cookbook/examples/Makefile.am     |    4 ++++
 tests/accessibility/.gitignore        |    5 -----
 tests/accessibility/Makefile.am       |    4 ++++
 tests/micro-bench/.gitignore          |    5 -----
 tests/micro-bench/Makefile.am         |    3 +++
 8 files changed, 33 insertions(+), 18 deletions(-)

commit f14587aadc428e5743d2b30e2a9f4bf51f1d1e05
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Fri Aug 13 18:35:35 2010 +0100

    build: Distclean generated ignore files

 tests/conform/Makefile.am     |    2 +-
 tests/interactive/Makefile.am |    2 +-
 2 files changed, 2 insertions(+), 2 deletions(-)

commit a3bc2ebfa7cd4d62107ef56078b6973ff844e882
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Fri Aug 13 18:32:10 2010 +0100

    build: Make test-conform depend on Makefile changes

 tests/conform/Makefile.am |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit 1e0a83b88139a13a8488bfe7000e0c459ccbad66
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Fri Aug 13 18:31:44 2010 +0100

    build: Autogenerate interactive/.gitignore
    
    Exactly like we did for conform/.gitignore

 tests/interactive/.gitignore  |   73 -----------------------------------------
 tests/interactive/Makefile.am |    8 ++++-
 2 files changed, 7 insertions(+), 74 deletions(-)

commit 7c412464c27e712654ca7aa9e16ebcdba8bc0e7f
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Fri Aug 13 18:22:12 2010 +0100

    build: Generate the conformance/.gitignore file
    
    Since we are generating a lot of files that we should ignore, we should
    generate the Git ignore file as well.

 tests/conform/.gitignore  |  123 ---------------------------------------------
 tests/conform/Makefile.am |    7 +++
 2 files changed, 7 insertions(+), 123 deletions(-)

commit e888da21804809f7700b0932d0eb16727cf15d09
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Fri Aug 13 18:15:01 2010 +0100

    build: Split up the test-conformance SOURCES
    
    Having different sections should make it easier to add new test units to
    the build.

 tests/conform/Makefile.am |  115 +++++++++++++++++++++++++++------------------
 1 file changed, 68 insertions(+), 47 deletions(-)

commit ff9a5a01b4bef60496cb27e645ac23c790267f98
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Fri Aug 13 18:14:10 2010 +0100

    clutter.modules: Remove deps on gir-repository
    
    Keep it in the moduleset, but don't let Clutter depend on it.

 build/clutter.modules |    4 ----
 1 file changed, 4 deletions(-)

commit a25cf14e978dd51034baf2d0cd4c1743c93a7774
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Fri Aug 13 18:12:43 2010 +0100

    Revert "clutter.modules: Remove deps on gir-repository"
    
    This reverts commit 0ce9cf730b2a8c3b3ac4786afee0579a3795fd9e.
    
    The commit contained unrelated changes

 build/clutter.modules     |    4 ++
 tests/conform/Makefile.am |  115 ++++++++++++++++++---------------------------
 2 files changed, 51 insertions(+), 68 deletions(-)

commit 0ce9cf730b2a8c3b3ac4786afee0579a3795fd9e
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Fri Aug 13 18:09:28 2010 +0100

    clutter.modules: Remove deps on gir-repository
    
    Keep it in the moduleset, but don't let Clutter depend on it.

 build/clutter.modules     |    4 --
 tests/conform/Makefile.am |  115 +++++++++++++++++++++++++++------------------
 2 files changed, 68 insertions(+), 51 deletions(-)

commit 175b16a5c81faf12e204274e87c013e2c65a4030
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Fri Aug 13 18:00:23 2010 +0100

    clutter.modules: Add a gtk2 module for gtk+ 2.x
    
    Mx (and others) depend on gtk+ 2.x, and not on gtk+ 3.x.

 build/clutter.modules |   17 +++++++++++++++--
 1 file changed, 15 insertions(+), 2 deletions(-)

commit 271e0d960486acea896389b05ba521d569c7c83a
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Fri Aug 13 16:32:27 2010 +0100

    animator: Plug some leaks

 clutter/clutter-animator.c |   20 +++++++-------------
 1 file changed, 7 insertions(+), 13 deletions(-)

commit 12031ca2c5a52c574ba7c16a86b84e049b0cfb38
Author: Robert Bragg <robert@linux.intel.com>
Date:   Mon Aug 9 16:01:17 2010 +0100

    material: Implements weak materials
    
    Weak materials are ones that don't take a reference on their parent and
    they are associated with a callback that notifies when the material is
    destroyed, because its parent was freed or modified.
    
    More details can be found at:
    http://wiki.clutter-project.org/wiki/CoglDesign/CoglMaterial
    
    For now the concept is internal only but the plan is to make this public
    at some point once we have tested the design internally.

 clutter/cogl/cogl/cogl-material-private.h |  142 +++++++++++++++++++++
 clutter/cogl/cogl/cogl-material.c         |  191 +++++++++++++++++++++++------
 2 files changed, 297 insertions(+), 36 deletions(-)

commit 50c5ecfe87b3074d997799eb864fbd9c999cd6c7
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Fri Aug 13 12:12:59 2010 +0100

    state: Plug some memory leakage
    
    Thanks to Valgrind, test-state-base now reports 0 bytes definitely lost.

 clutter/clutter-state.c    |   26 +++++++++++++++++---------
 tests/conform/test-state.c |    3 ---
 2 files changed, 17 insertions(+), 12 deletions(-)

commit 6c6e93d27a0381ff07ecb9c37f1b0840682f359f
Merge: 12f2481 1ed5d5c
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu Aug 12 18:29:08 2010 +0100

    Merge remote branch 'elliot/cookbook-events-mouse-scroll'
    
    * elliot/cookbook-events-mouse-scroll:
      cookbook: Cleaning up grammar and wording in mouse scroll recipe
      cookbook: Added more explanation about setting y coord on scrollable
      cookbook: Mentioned the animation in the sample code
      cookbook: Included video of the scroll example running
      cookbook: Made stage slightly smaller for scroll event example
      cookbook: Added video showing scrollable actor
      cookbook: Added walk through of code example for mouse scroll
      cookbook: Fixed link to example in mouse scroll recipe
      cookbook: Simplified full scroll example
      cookbook: Improved wording and formatting in mouse scroll intro.
      cookbook: Handle all possible mouse scroll directions
      cookbook: Build mouse scroll example with cookbook
      cookbook: Cleaned up redundant comments in code example
      cookbook: Added xmlns for XInclude to events docbook file
      cookbook: Added basic mouse scroll recipe

commit 12f2481462df9d99114323dcf210a5219648cbee
Author: Neil Roberts <neil@linux.intel.com>
Date:   Thu Aug 12 17:03:16 2010 +0100

    docs: Update the build instructions in the reference
    
    This removes all references to SDL in the build instructions as the
    backend is no longer available.  The OpenGL version required is only
    1.2 not 1.4. The Windows build instructions were out of date and have
    been replaced with a link to the wiki instead.

 doc/reference/clutter/building-clutter.xml |   44 +++++++---------------------
 1 file changed, 11 insertions(+), 33 deletions(-)

commit daf6e739364282b77a66d7bf8abb4e90ada8c865
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu Aug 12 17:06:29 2010 +0100

    Remove last uses of cogl_program_uniform*
    
    Following the commits:
    
      c03544da - clutter-shader: use cogl_program_set_uniform_xyz API
      a26119b5 - tests: Remove use of cogl_program_use
    
    Remove the users of cogl_program_uniform_* and cogl_program_use() in the
    shader-based effects.

 clutter/clutter-blur-effect.c       |   14 +++++++-------
 clutter/clutter-colorize-effect.c   |   10 ++++------
 clutter/clutter-desaturate-effect.c |   10 ++++------
 clutter/clutter-shader-effect.c     |   31 +++++++++++++++++++------------
 4 files changed, 34 insertions(+), 31 deletions(-)

commit e016a62ab03e2d1683cc4d100ac6079fe7863788
Author: Neil Roberts <neil@linux.intel.com>
Date:   Thu Aug 12 16:56:28 2010 +0100

    build/mingw/README: Replace with a link to the wiki
    
    The build instructions for MinGW have been moved to the wiki.

 build/mingw/README |  138 ++--------------------------------------------------
 1 file changed, 3 insertions(+), 135 deletions(-)

commit 01a72725997db93cbe0ef6a47c304d456ce96205
Author: Robert Bragg <robert@linux.intel.com>
Date:   Thu Aug 12 10:43:22 2010 +0100

    cogl-shader: get_info_log should always use strdup
    
    In the case where there is no error log for arbfp we were returning a
    "" string literal. The other paths were using g_strdup to return a
    string that could be freed with g_free. This makes the arbfp path return
    g_strdup ("") instead.

 clutter/cogl/cogl/cogl-shader.c |    4 +++-
 1 file changed, 3 insertions(+), 1 deletion(-)

commit b50bdd791986d85a29c40c763b329b1347060769
Author: Robert Bragg <robert@linux.intel.com>
Date:   Thu Aug 12 10:40:39 2010 +0100

    cogl-shader: correctly #ifdef guard an if else block
    
    There are quite a few if {} else {} blocks for dealing with arbfp else
    glsl and the first block is guarded with #ifdef HAVE_COGL_GL. In this
    case though the #endif was before the else so it wouldn't compile for
    gles.

 clutter/cogl/cogl/cogl-shader.c |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit 94692370d2a95b55cccee4c08887e2b4298e418c
Author: Robert Bragg <robert@linux.intel.com>
Date:   Thu Aug 12 10:37:55 2010 +0100

    material-glsl: #include "cogl-shader-private.h"
    
    We need to include cogl-shader-private.h to have the
    COGL_SHADER_TYPE_GLSL define. When building for opengl this wasn't
    noticed probably because some other header indirectly includes this
    file. It was a problem when building for gles2 though.

 clutter/cogl/cogl/cogl-material-glsl.c |    1 +
 1 file changed, 1 insertion(+)

commit a26119b5514655df5accd2f65cb0ee3ed242b4ea
Author: Robert Bragg <robert@linux.intel.com>
Date:   Wed Aug 11 19:39:41 2010 +0100

    tests: Remove use of cogl_program_use
    
    The removes the use of cogl_program_use which has been deprecated and
    instead of using the cogl_program_uniform functions we now use the
    cogl_program_set_uniform methods.

 tests/interactive/test-cogl-shader-arbfp.c |    5 +----
 tests/interactive/test-cogl-shader-glsl.c  |   17 ++++++-----------
 2 files changed, 7 insertions(+), 15 deletions(-)

commit c03544daa6778bb52c292b4333e62084b508f58d
Author: Robert Bragg <robert@linux.intel.com>
Date:   Wed Aug 11 19:32:09 2010 +0100

    clutter-shader: use cogl_program_set_uniform_xyz API
    
    Instead of using the deprecated cogl_program_uniform_xyz functions we
    now use the cogl_program_set_uniform methods. It looks like this should
    also fix a problem with clutter-shader too in that previously we weren't
    calling cogl_program_use before cogl_program_uniform_xyz so setting
    uniforms would only work while the shader is enabled.

 clutter/clutter-shader.c |   15 ++++++++++-----
 1 file changed, 10 insertions(+), 5 deletions(-)

commit f03037d580e79d491fa965006cc379ad9f5c7ff6
Author: Robert Bragg <robert@linux.intel.com>
Date:   Wed Aug 11 19:18:14 2010 +0100

    cogl-program: Adds use_uniform_xyz methods
    
    Instead of exposing an API that provides an OpenGL state machine style
    where you first have to bind the program to the context using
    cogl_program_use() followed by updating uniforms using
    cogl_program_uniform_xyz we now have uniform setter methods that take an
    explicit CoglHandle for the program.
    
    This deprecates cogl_program_use and all the cogl_program_uniform
    variants and provides the following replacements:
        cogl_program_set_uniform_1i
        cogl_program_set_uniform_1f
        cogl_program_set_uniform_int
        cogl_program_set_uniform_float
        cogl_program_set_uniform_matrix

 clutter/cogl/cogl/cogl-shader.h              |  119 ++++++++++++++++++-
 clutter/cogl/cogl/driver/gl/cogl-program.c   |  157 +++++++++++++++++---------
 clutter/cogl/cogl/driver/gles/cogl-program.c |  127 +++++++++++++++------
 doc/reference/cogl/cogl-sections.txt         |    5 +
 4 files changed, 316 insertions(+), 92 deletions(-)

commit 2f54f8f0ea5dd53dca495d44468beb3660e335b2
Author: Damien Lespiau <damien.lespiau@gmail.com>
Date:   Thu Aug 12 10:36:04 2010 -0400

    introspection: Use the --quiet flag conditionally
    
    --quiet has been added to g-ir-scanner in the 0.9.1 cycle. We really
    want to be able to compile clutter with 0.6.14 to be able to reuse
    gir files that are distributed in current distributions.
    
    Use the INTROSPECTION_SCANNER_ARGS (previously unused) variable to
    convey --quiet when necessary.
    
    Fixes: http://bugzilla.clutter-project.org/show_bug.cgi?id=2265

 clutter/Makefile.am           |    2 --
 clutter/cogl/cogl/Makefile.am |    1 -
 clutter/json/Makefile.am      |    1 -
 configure.ac                  |    7 +++++++
 4 files changed, 7 insertions(+), 4 deletions(-)

commit 1f01fd0a4c1937dfc6371f9f8de2b07d0e9b4bd2
Author: Neil Roberts <neil@linux.intel.com>
Date:   Thu Aug 12 14:59:03 2010 +0100

    clutter.modules: cluttersmith depends on gjs and clutter-gtk
    
    This adds dependencies on gjs and clutter-gtk to cluttersmith. There
    was no module listed for gjs so this is added from the jhbuild gnome
    module list.

 build/clutter.modules |   14 ++++++++++++++
 1 file changed, 14 insertions(+)

commit c129c563f52a271e2ade2b2f7cd2424f9011164a
Author: Neil Roberts <neil@linux.intel.com>
Date:   Thu Aug 12 14:37:27 2010 +0100

    Remove test-random-text from the interactive .gitignore

 tests/interactive/.gitignore |    1 -
 1 file changed, 1 deletion(-)

commit 1a8df6788b6f23d75a99d4d9695e1983cd0910db
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu Aug 12 13:48:35 2010 +0100

    Update the micro-bench Git ignore file

 tests/micro-bench/.gitignore |    3 ++-
 1 file changed, 2 insertions(+), 1 deletion(-)

commit 053a1a9c512d00ccdbf3f81e5869b4fccbc8ff2b
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu Aug 12 13:46:58 2010 +0100

    build: Add simple scripts for setting up jhbuild
    
    Use the same script also used by gnome-shell to set up the system
    dependencies for building Clutter (and its dependencies) using jhbuild.

 build/clutter-build-setup.sh   |  174 ++++++++++++++++++++++++++++++++++++++++
 build/jhbuildrc-clutter        |   73 +++++++++++++++++
 build/jhbuildrc-custom-example |   19 +++++
 3 files changed, 266 insertions(+)

commit 1ed5d5cab0af5617b566465b943615d3c7f1058c
Author: Elliot Smith <elliot.smith@intel.com>
Date:   Thu Aug 12 10:16:56 2010 +0100

    cookbook: Cleaning up grammar and wording in mouse scroll recipe

 doc/cookbook/events.xml |   86 +++++++++++++++++++++++++----------------------
 1 file changed, 45 insertions(+), 41 deletions(-)

commit db0c15aee8466b675af8b388d21a40bb3371db77
Author: Neil Roberts <neil@linux.intel.com>
Date:   Thu Aug 12 09:59:58 2010 +0100

    cogl-atlas: Verify that the chosen initial size is supported
    
    CoglAtlas chooses a fairly large default initial size of either
    512x512 or 1024x1024 depending on the texture format. There is a
    chance that this size will not be supported on some platforms which
    would be catastrophic for the glyph cache because it would mean that
    it would always fail to put any glyphs in the cache so text wouldn't
    work. To fix this the atlas code now checks whether the chosen initial
    size is supported by the texture driver and if not it will get halved
    until it is supported.

 clutter/cogl/cogl/cogl-atlas.c |   56 ++++++++++++++++++++++++++++------------
 1 file changed, 39 insertions(+), 17 deletions(-)

commit b9f9ea3a9c59a7d4282ecf7e0b1ae7e300ec6232
Author: Neil Roberts <neil@linux.intel.com>
Date:   Thu Aug 12 09:08:30 2010 +0100

    cogl-atlas: Use _cogl_texture_driver_size_supported
    
    Previously when creating a new rectangle map it would try increasingly
    larger texture sizes until GL_MAX_TEXTURE_SIZE is reached. This is bad
    because it queries state which should really be owned by the texture
    driver. Also GL_MAX_TEXTURE_SIZE is often a conservative estimate so
    larger texture sizes can be used if the proxy texture is queried
    instead.

 clutter/cogl/cogl/cogl-atlas.c |   25 +++++++++++++++----------
 1 file changed, 15 insertions(+), 10 deletions(-)

commit 72029e14db0c0b0f82c20cf6760ab96a81c76e46
Author: Neil Roberts <neil@linux.intel.com>
Date:   Wed Aug 11 15:08:00 2010 +0100

    cogl-rectangle-map: Record largest gap rather than the remaining space
    
    Previously each node in the rectangle map tree would store the total
    remaining space in all of its children to use as an optimization when
    adding nodes. With this it could skip an entire branch of the tree if
    it knew there could never be enough space for the new node in the
    branch. This modifies that slightly to instead store the largest
    single gap. This allows it to skip a branch earlier because often
    there would be a lot of small gaps which would add up to enough a
    space for the new rectangle, but the space can't be used unless it is
    in a single node.
    
    The rectangle map still needs to keep track of the total remaining
    space for the whole map for the debugging output so this has been
    added back in to the CoglRectangleMap struct. There is a separate
    debugging function to verify this value.

 clutter/cogl/cogl/cogl-rectangle-map.c |   94 +++++++++++++++++++++++---------
 1 file changed, 68 insertions(+), 26 deletions(-)

commit 2b5bb06bed2b272ba408d53a471f78c705bf0467
Author: Neil Roberts <neil@linux.intel.com>
Date:   Fri Aug 6 18:42:43 2010 +0100

    cogl-atlas: Try the next size when there would be less than 6% waste
    
    Previously when the atlas needs to be migrated it would start by
    trying with the same size as the existing atlas if there is enough
    space for the new texture. However even if the atlas is completely
    sorted there will always be some amount of waste so when the atlas
    needs to grow it would usually end up redundantly trying the same size
    when it is very unlikely to fit. This patch changes it so that there
    must be at least 6% waste available after the new texture is added
    otherwise it will start with the next atlas size.

 clutter/cogl/cogl/cogl-atlas.c |   12 +++++++-----
 1 file changed, 7 insertions(+), 5 deletions(-)

commit f98be241a89cf4a9f23555631f2a7f722745f39b
Author: Neil Roberts <neil@linux.intel.com>
Date:   Fri Aug 6 18:42:01 2010 +0100

    cogl-atlas: Add some more debugging notes
    
    This adds some debugging notes which report when the atlas is trying
    various sizes.

 clutter/cogl/cogl/cogl-atlas.c |    7 +++++++
 1 file changed, 7 insertions(+)

commit e080e824eedecf70d48e3ffc0b65b6a3dd3765c7
Author: Neil Roberts <neil@linux.intel.com>
Date:   Fri Aug 6 17:40:52 2010 +0100

    cogl-rectangle-map: Use a GArray for the stack
    
    When iterating over the rectangle map a stack is used to implement a
    recursive algorithm. Previously this was slice allocating a linked
    list. Now it uses a GArray which is retained with the rectangle map to
    avoid frequent allocations which is a little bit faster.

 clutter/cogl/cogl/cogl-rectangle-map.c |  120 ++++++++++++++++++--------------
 1 file changed, 67 insertions(+), 53 deletions(-)

commit 0e2d18d70075621c7ea8f7b721c6b0cbd013af1e
Author: Neil Roberts <neil@linux.intel.com>
Date:   Fri Aug 6 16:13:20 2010 +0100

    cogl-rectangle-map: Store the remaining space per node
    
    Previously the remaining space was managed as part of the
    CoglRectangleMap struct. Now it is stored per node so that at any
    point in the hierarchy we can quickly determine how much space is
    remaining in all of the node's children. That way when adding a
    rectangle we can miss out entire branches more quickly if we know that
    there is no way the new rectangle would fit in that branch.
    
    This also adds a function to recursively verify the cached state in
    the nodes such as the remaining space and the number of
    rectangles. This function is only called when the dump-atlas-image
    debug flag is set because it is potentially quite slow.

 clutter/cogl/cogl/cogl-rectangle-map.c |  108 ++++++++++++++++++++++++++++----
 1 file changed, 96 insertions(+), 12 deletions(-)

commit e609a658a4355c479ec75748e72844f55c1047aa
Author: Neil Roberts <neil@linux.intel.com>
Date:   Fri Aug 6 11:44:39 2010 +0100

    cogl-atlas: Increase the default minimum texture size
    
    When initially creating a texture it would start with a minimum size
    of 256x256. This increases the size so that it would try to match 1MB
    of memory.

 clutter/cogl/cogl/cogl-atlas.c |   18 +++++++++++++++---
 1 file changed, 15 insertions(+), 3 deletions(-)

commit d03fbf9f64da5448c6ab625049489474d0b78c71
Author: Neil Roberts <neil@linux.intel.com>
Date:   Wed Aug 4 18:05:21 2010 +0100

    cogl-pango: Use a CoglAtlas to maintain the glyph cache
    
    The glyph cache is now stored in a CoglAtlas structure instead of the
    custom atlasing code. This has the advantage that it can share code
    with the main texture atlas and that it supports reorganizing the
    atlas when it becomes full. Unlike the texture atlas, the glyph cache
    can use multiple atlases which would be neccessary if the maximum
    texture size is reached and we need to create a second
    texture. Whenever a display list is created it now has to register a
    callback with the glyph cache so that the display list can be
    recreated whenever any of the atlases are reorganized. This is needed
    because the display list directly stores texture coordinates within
    the atlas texture and they would become invalid when the texture is
    moved.
    
    The ensure_glyphs_for_layout now works in two steps. First it reserves
    space in the atlas for all of the glyphs. The atlas is created with
    the DISABLE_MIGRATION flag so that it won't actually copy any textures
    if any rearranging is needed. Whenever the position is updated for a
    glyph then it is marked as dirty. After space for all of the glyphs
    has been reserved it will iterate over all dirty glyphs and redraw
    them using Cairo. The rendered glyph is then stored in the texture
    with a sub texture update.
    
    The glyphs need to all be set at the right location before starting to
    create the display list because the display list stores the texture
    coordinates of the glyph. If any of the glyphs were moved around then
    the parts of the display list that was created already would become
    invalid. To make this work, ensure_glyphs_for_layout is now always
    called before rendering a layout or a layout line.

 clutter/cogl/pango/cogl-pango-glyph-cache.c |  371 ++++++++++++---------------
 clutter/cogl/pango/cogl-pango-glyph-cache.h |   46 ++--
 clutter/cogl/pango/cogl-pango-render.c      |  226 ++++++++++------
 3 files changed, 343 insertions(+), 300 deletions(-)

commit 047227fbd7a6a6c7de3f2c523fda75f0c3a36373
Author: Neil Roberts <neil@linux.intel.com>
Date:   Thu Aug 5 13:24:02 2010 +0100

    cogl-atlas: Support multiple formats and clearing the texture
    
    _cogl_atlas_new now has two extra parameters to specify the format of
    the textures it creates as well as a set of flags to modify the
    behavious of the atlas. One of the flags causes the new textures to be
    cleared and the other causes migration to avoid actually copying the
    textures. This is needed to use CoglAtlas from the pango glyph cache
    because it needs to use COGL_PIXEL_A_8 and to clear the textures as it
    does not fill in the gaps between glyphs. It needs to avoid copying
    the textures so that it can work on GL implementations without FBO
    support.

 clutter/cogl/cogl/cogl-atlas-texture.c |    4 +-
 clutter/cogl/cogl/cogl-atlas.c         |   96 ++++++++++++++++++++++++--------
 clutter/cogl/cogl/cogl-atlas.h         |   12 +++-
 3 files changed, 86 insertions(+), 26 deletions(-)

commit 9b2f8179f00708f26400648e21d6ee77cc13aa35
Author: Neil Roberts <neil@linux.intel.com>
Date:   Mon Aug 2 16:29:10 2010 +0100

    cogl-atlas-texture: Split out the atlas data structure
    
    Instead of storing a pointer to the CoglRectangleMap and a handle to
    the atlas texture in the context, there is a now a separate data
    structure called a CoglAtlas to manage these two. The context just
    contains a pointer to this. The code to reorganise the atlas has been
    moved from cogl-atlas-texture.c to cogl-atlas.c

 clutter/cogl/cogl/Makefile.am                  |    2 +
 clutter/cogl/cogl/cogl-atlas-texture-private.h |    4 +
 clutter/cogl/cogl/cogl-atlas-texture.c         |  585 ++++-------------------
 clutter/cogl/cogl/cogl-atlas.c                 |  596 ++++++++++++++++++++++++
 clutter/cogl/cogl/cogl-atlas.h                 |   86 ++++
 clutter/cogl/cogl/cogl-context.c               |   10 +-
 clutter/cogl/cogl/cogl-context.h               |    5 +-
 7 files changed, 774 insertions(+), 514 deletions(-)

commit 0c8582aad838bf0110cceeb2bedad4ae09645ce6
Author: Neil Roberts <neil@linux.intel.com>
Date:   Wed Aug 4 17:59:06 2010 +0100

    cogl: Add an internal utility to maintain a list of callback functions
    
    This adds an internal CoglCallbackList type which is just a GSList of
    of function pointers along with a data pointer to form a
    closure. There are functions to add and remove items and to invoke the
    list of functions. This could be used in a number of places in Cogl.

 clutter/cogl/cogl/Makefile.am          |    2 +
 clutter/cogl/cogl/cogl-callback-list.c |  107 ++++++++++++++++++++++++++++++++
 clutter/cogl/cogl/cogl-callback-list.h |   58 +++++++++++++++++
 3 files changed, 167 insertions(+)

commit 4989000f55f1f5a88d397c29a7973ebecf6e4b3e
Author: Neil Roberts <neil@linux.intel.com>
Date:   Mon Aug 2 15:24:03 2010 +0100

    cogl-atlas: Rename to CoglRectangleMap
    
    This simply renames CoglAtlas to CoglRectangleMap without making any
    functional changes. The old 'CoglAtlas' is just a data structure for
    managing unused areas of a rectangle and it doesn't neccessarily have
    to be used for an atlas so it wasn't a very good name.

 clutter/cogl/cogl/Makefile.am                  |    4 +-
 clutter/cogl/cogl/cogl-atlas-texture-private.h |   12 +-
 clutter/cogl/cogl/cogl-atlas-texture.c         |  169 +++----
 clutter/cogl/cogl/cogl-atlas.c                 |  598 -----------------------
 clutter/cogl/cogl/cogl-atlas.h                 |   78 ---
 clutter/cogl/cogl/cogl-context.c               |    7 +-
 clutter/cogl/cogl/cogl-context.h               |    4 +-
 clutter/cogl/cogl/cogl-rectangle-map.c         |  612 ++++++++++++++++++++++++
 clutter/cogl/cogl/cogl-rectangle-map.h         |   78 +++
 9 files changed, 792 insertions(+), 770 deletions(-)

commit 1e45428483f82b240bc45f20556cf767c49da902
Author: Neil Roberts <neil@linux.intel.com>
Date:   Thu Aug 5 17:54:18 2010 +0100

    test-random-text: Convert to a micro-benchmark
    
    test-random-text is moved to the micro-bench directory. It now prints
    out the time taken to draw every 10 frames.

 tests/interactive/Makefile.am        |    1 -
 tests/interactive/test-random-text.c |   86 -----------------------------
 tests/micro-bench/Makefile.am        |    4 +-
 tests/micro-bench/test-random-text.c |  101 ++++++++++++++++++++++++++++++++++
 4 files changed, 104 insertions(+), 88 deletions(-)

commit 65f449bdb0625c866781c56f025d20d20772dc8d
Author: Neil Roberts <neil@linux.intel.com>
Date:   Thu Aug 5 17:27:23 2010 +0100

    test-text-perf: Add a wider range of characters
    
    Instead of just using the latin alphabet, this adds digits and some
    other alphabets to increase the range of glyphs used.

 tests/micro-bench/test-text-perf.c |   36 +++++++++++++++++++++++++++++++++++-
 1 file changed, 35 insertions(+), 1 deletion(-)

commit c26d2c5ef90c49e3854d6630c2ade6d7069865d8
Author: Neil Roberts <neil@linux.intel.com>
Date:   Thu Aug 5 17:06:45 2010 +0100

    test-text-perf: Scale the text if the settings will not fit
    
    If the font size or the number of characters causes the label not to
    fit on the stage, instead of aborting it will now scale the labels so
    that it fits within one of the dimensions. This makes it easier to
    test with large glyph sizes.

 tests/micro-bench/test-text-perf.c |   37 +++++++++++++++++++++++++++++-------
 1 file changed, 30 insertions(+), 7 deletions(-)

commit 89c535f50d4affe761c7ea0ca2cb90066a2c1639
Author: Neil Roberts <neil@linux.intel.com>
Date:   Thu Aug 12 09:11:28 2010 +0100

    cogl-material: Compare whether textures are equal by their GL handle
    
    Textures within a layer were compared for equality by comparing their
    texture handle. However this means that sub textures and atlas
    textures which may be internally using the same GL handle would not be
    batched together. Instead it now tries to determine the underlying GL
    handle using either the slice override or _cogl_texture_get_gl_texture
    and then compares those.

 clutter/cogl/cogl/cogl-material.c |   35 ++++++++++++++++++++++++++---------
 1 file changed, 26 insertions(+), 9 deletions(-)

commit 8db96675d4332bc81edb1f5f4dfe237ab81a4d9e
Author: Elliot Smith <elliot.smith@intel.com>
Date:   Thu Aug 12 10:05:27 2010 +0100

    cookbook: Added more explanation about setting y coord on scrollable
    
    Added some extra explanation, referencing the sample code, to
    try to make the scrollable actor example easier to follow. Basically
    demonstrates the principles described in the paragraph about
    setting the y coordinate for the scrollable actor, but using actual
    numbers.

 doc/cookbook/events.xml |   11 +++++++++++
 1 file changed, 11 insertions(+)

commit 8538bdbdeae74433ed5f50b1e6ee0db3d9a81a3e
Author: Neil Roberts <neil@linux.intel.com>
Date:   Wed May 5 16:45:21 2010 +0100

    cogl-atlas-texture: Accept formats with different component orders
    
    When filtering on allowed formats for atlas textures, it now masks out
    the BGR and AFIRST bits in addition to the premult bit. That way it
    will accept RGB and RGBA formats in any component order.
    
    In theory it could also accept luminance and alpha-only textures but I
    haven't added this because presumably if the application has requested
    these formats then it has some reason not to use a full RGB or RGBA
    texture and we should respect that.

 clutter/cogl/cogl/cogl-atlas-texture.c |   19 ++++++++++++++++---
 1 file changed, 16 insertions(+), 3 deletions(-)

commit 2bf01dd9592854073b241ae562867732c7b45b2a
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu Aug 12 09:03:58 2010 +0100

    build: Make the introspection generation quiet (again)

 build/autotools/Makefile.am.silent |   20 ++++++++++++++------
 clutter/Makefile.am                |   12 ++++++++----
 clutter/cogl/cogl/Makefile.am      |    4 +++-
 clutter/json/Makefile.am           |    4 +++-
 4 files changed, 28 insertions(+), 12 deletions(-)

commit 9b736cfeba8f4f3b57c8657b4d41aa554d03fec0
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu Aug 12 08:53:06 2010 +0100

    drag-action: Capture ENTER when dragging
    
    This completes commit 9ab83cebf.

 clutter/clutter-drag-action.c |    1 +
 1 file changed, 1 insertion(+)

commit a74d585fc522d010d4c8cbcffc566afc9ce495ca
Author: Elliot Smith <elliot.smith@intel.com>
Date:   Wed Aug 11 17:14:09 2010 +0100

    cookbook: Mentioned the animation in the sample code
    
    Put in comments to make it clear where the animation
    for the mouse scroll is coming from in the sample code.

 doc/cookbook/events.xml                     |    1 +
 doc/cookbook/examples/events-mouse-scroll.c |    1 +
 2 files changed, 2 insertions(+)

commit a421f0ae429bcf666dbfa1d44b15bfdbb06f898f
Author: Elliot Smith <elliot.smith@intel.com>
Date:   Wed Aug 11 17:12:42 2010 +0100

    cookbook: Included video of the scroll example running
    
    Inlined the video of the mouse scroll example code running
    to the docbook file for events.

 doc/cookbook/events.xml |   11 +++++++++++
 1 file changed, 11 insertions(+)

commit 1cfa87853a3fe1edf569a91c60528ee2d85679f7
Author: Elliot Smith <elliot.smith@intel.com>
Date:   Wed Aug 11 17:11:29 2010 +0100

    cookbook: Made stage slightly smaller for scroll event example
    
    Reduced the size of the stage to make for a smaller video.

 doc/cookbook/examples/events-mouse-scroll.c |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit f5db4943de58cf3ac9eb4aecf2278e298deaa052
Author: Elliot Smith <elliot.smith@intel.com>
Date:   Wed Aug 11 17:10:45 2010 +0100

    cookbook: Added video showing scrollable actor

 doc/cookbook/Makefile.am                    |    1 +
 doc/cookbook/videos/events-mouse-scroll.ogv |  Bin 0 -> 49532 bytes
 2 files changed, 1 insertion(+)

commit f568a68ee16ce7f59596bd1336f37eee1667b7a1
Author: Elliot Smith <elliot.smith@intel.com>
Date:   Wed Aug 11 16:54:28 2010 +0100

    cookbook: Added walk through of code example for mouse scroll
    
    Modified the mouse scroll example to fit better with the tutorial
    walkthrough.
    
    Added a stepped walkthrough of the scrollable actor code
    example.

 doc/cookbook/events.xml                     |  224 ++++++++++++++++++++++++++-
 doc/cookbook/examples/events-mouse-scroll.c |   33 +++-
 2 files changed, 243 insertions(+), 14 deletions(-)

commit 57ba89c8de1e85d52f3e6d73dade472c0da7f22e
Author: Elliot Smith <elliot.smith@intel.com>
Date:   Wed Aug 11 14:41:42 2010 +0100

    cookbook: Fixed link to example in mouse scroll recipe

 doc/cookbook/events.xml |    5 +++--
 1 file changed, 3 insertions(+), 2 deletions(-)

commit 5e0bc919c305e1825bba75277df883c231f65837
Author: Elliot Smith <elliot.smith@intel.com>
Date:   Wed Aug 11 14:39:22 2010 +0100

    cookbook: Simplified full scroll example
    
    Removed the layout and box to simplify the scrollable
    actor example.

 doc/cookbook/examples/events-mouse-scroll.c |   69 ++++++++++++++-------------
 1 file changed, 35 insertions(+), 34 deletions(-)

commit e216771a86d985631c2ee1182f1ae7c240e5c28d
Author: Elliot Smith <elliot.smith@intel.com>
Date:   Wed Aug 11 11:14:54 2010 +0100

    cookbook: Improved wording and formatting in mouse scroll intro.

 doc/cookbook/events.xml |    4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

commit 0f919fcbe3b8c5afed58e082c2dd7e14756b207c
Author: Elliot Smith <elliot.smith@intel.com>
Date:   Wed Aug 11 11:10:53 2010 +0100

    cookbook: Handle all possible mouse scroll directions
    
    Added empty cases for MOUSE_SCROLL_LEFT and MOUSE_SCROLL_RIGHT
    to the scroll-event signal handler in the example code.

 doc/cookbook/examples/events-mouse-scroll.c |    3 +++
 1 file changed, 3 insertions(+)

commit f1312e118d21c293625754248c07fa1168a1732c
Author: Elliot Smith <elliot.smith@intel.com>
Date:   Wed Aug 11 11:09:04 2010 +0100

    cookbook: Build mouse scroll example with cookbook

 doc/cookbook/examples/.gitignore  |    1 +
 doc/cookbook/examples/Makefile.am |    2 ++
 2 files changed, 3 insertions(+)

commit 241ceab73cbc1fa0a1f7c19ad95fdd54b1c26864
Author: Elliot Smith <elliot.smith@intel.com>
Date:   Wed Aug 11 11:03:37 2010 +0100

    cookbook: Cleaned up redundant comments in code example
    
    Removed comments which are only relevant in my local build
    environment.

 doc/cookbook/examples/events-mouse-scroll.c |    6 ------
 1 file changed, 6 deletions(-)

commit 5e268e0bbb0e2dcbf6edfbf3e1725a3e61e8dbd0
Author: Elliot Smith <elliot.smith@intel.com>
Date:   Wed Aug 11 11:03:02 2010 +0100

    cookbook: Added xmlns for XInclude to events docbook file

 doc/cookbook/events.xml |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit ec7186627726885acc4487f5f44177281c0f3fc6
Author: Elliot Smith <elliot.smith@intel.com>
Date:   Wed Aug 11 10:34:49 2010 +0100

    cookbook: Added basic mouse scroll recipe
    
    Added a recipe explaining the basics of mouse scroll events.

 doc/cookbook/events.xml                     |  115 +++++++++++++++++++++++++++
 doc/cookbook/examples/events-mouse-scroll.c |  108 +++++++++++++++++++++++++
 2 files changed, 223 insertions(+)

commit ed39948ccf776b50fba9c3c7934ddb727091db11
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Wed Aug 11 17:43:15 2010 +0100

    colorize-effect: Do not inherit from ShaderEffect
    
    See commits:
    
      7daeb217 blur-effect: Do not inherit from ShaderEffect
      1ec57743 desaturate-effect: Do not inherit from ShaderEffect
    
    We might avoid using shaders at all in the future for simple effects.

 clutter/clutter-colorize-effect.c |  156 ++++++++++++++++++++++++++++++-------
 1 file changed, 126 insertions(+), 30 deletions(-)

commit d10ebe9fcaf28b85d707ea41f5856632f9c8a934
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Wed Aug 11 17:25:17 2010 +0100

    effects: Check before using the cogl_shader_* API
    
    Since BlurEffect and DesaturateEffect are using the shader API
    implicitly and not using ClutterShaderEffect, we need to check if the
    underlying GL implementation supports the GLSL shading language and warn
    if not.

 clutter/clutter-blur-effect.c       |   12 ++++++++++++
 clutter/clutter-desaturate-effect.c |   12 ++++++++++++
 2 files changed, 24 insertions(+)

commit 9ab83cebfdd4808db7ebe09193b218f62f157049
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Wed Aug 11 14:42:56 2010 +0100

    drag-action: Capture stage leave
    
    If we are dragging, we don't want the drag handle to emit a
    ::leave-event even if the pointer left the stage.

 clutter/clutter-drag-action.c |    5 +++++
 1 file changed, 5 insertions(+)

commit 1ec577438e2f710970276dc3872bf4c8bb360ddf
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Wed Aug 11 14:19:48 2010 +0100

    desaturate-effect: Do not inherit from ShaderEffect
    
    Hide the fact that we're using a fragment shader, in case we're able in
    the future to use a material layer combine function when painting the
    offscreen target texture.

 clutter/clutter-desaturate-effect.c |  128 ++++++++++++++++++++++++++++-------
 1 file changed, 104 insertions(+), 24 deletions(-)

commit 7daeb217bd9f1e0e38ac6201f722bdc7fd2c45b6
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Wed Aug 11 13:05:42 2010 +0100

    blur-effect: Do not inherit from ShaderEffect
    
    We might want to switch the BlurEffect from a box-blur to a
    super-sampling of the texture target, in order to make it cheap(er).
    If we inherit from ShaderEffect, though, we're setting in stone the
    fact that we are going to use a fragment shader for blurring.
    
    Since there is not parametrization of the blur, the code necessary
    to implement effect is pretty small, and we can use the Cogl API
    directly.

 clutter/clutter-blur-effect.c |  157 +++++++++++++++++++++++++++--------------
 1 file changed, 103 insertions(+), 54 deletions(-)

commit eb4dee46b70a73d0926e8e36bb75abc52604256e
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Wed Aug 11 13:58:29 2010 +0100

    shader-effect: Attach the program to the target material
    
    Instead of calling cogl_program_use() around the paint_target()
    chain-up, we can use the newly added API in CoglMaterial to attach
    user-defined shaders to the offscreen target material.

 clutter/clutter-shader-effect.c |   39 ++++++++++++++++++++++++---------------
 1 file changed, 24 insertions(+), 15 deletions(-)

commit 304e7dd077f1e7f9e7eab8b3b15bf6f22bf354f0
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Wed Aug 11 13:53:02 2010 +0100

    test-drag: Fix the page curl angle

 tests/interactive/test-drag.c |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit c87bfef1eb7f59975513bed9da70a45ce50f7dd3
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Wed Aug 11 12:40:22 2010 +0100

    stage: Fix the user-resizable property enumeration id

 clutter/clutter-stage.c |    8 ++++----
 1 file changed, 4 insertions(+), 4 deletions(-)

commit 59a9786942c7cfae9b6ba138cf76ba658709fedb
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Wed Aug 11 11:39:24 2010 +0100

    actor: Use box origin instead of direct access

 clutter/clutter-actor.c |    4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

commit 5e1d40c07b66bcb4c2c0a4fd203bfdfeeaf3f17e
Merge: 8d51617 d14e294
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Wed Aug 11 11:32:44 2010 +0100

    Merge branch 'wip/table-layout'
    
    * wip/table-layout:
      Add ClutterTableLayout, a layout showing children in rows and columns
      box-layout: Use allocate_align_fill()
      bin-layout: Migrate to allocate_align_fill()
      actor: Add allocate_align_fill()
      test-flow-layout: Use BindConstraints

commit d14e294d86d35e9128d04ebf9a43367b5babac40
Author: José Dapena Paz <jdapena@igalia.com>
Date:   Thu Mar 18 17:02:31 2010 +0100

    Add ClutterTableLayout, a layout showing children in rows and columns
    
    A TableLayout is a layout manager that allocates its children in rows
    and columns. Each child is assigned to a cell (or more if a cell span
    is set).
    
    The supported child properties are:
    
      • x-expand and y-expand: if this cell with try to allocate the
        available extra space for the table.
      • x-fill and y-fill: if the child will get all the space available in
        the cell.
      • x-align and y-align: if the child does not fill the cell, then
        where the child will be aligned inside the cell.
      • row-span and col-span: number of cells the child will allocate for
        itself.
    
    Also, the TableLayout has row-spacing and col-spacing for specifying
    the space in pixels between rows and between columns.
    
    We also include a simple test of the layout manager, and the
    documentation updates.
    
    The TableLayout was implemented starting from MxTable and
    ClutterBoxLayout.
    
    http://bugzilla.clutter-project.org/show_bug.cgi?id=2038
    
    Signed-off-by: Emmanuele Bassi <ebassi@linux.intel.com>

 clutter/Makefile.am                        |    2 +
 clutter/clutter-table-layout.c             | 2642 ++++++++++++++++++++++++++++
 clutter/clutter-table-layout.h             |  163 ++
 clutter/clutter.h                          |    1 +
 doc/reference/clutter/clutter-docs.xml.in  |    1 +
 doc/reference/clutter/clutter-sections.txt |   47 +
 doc/reference/clutter/clutter.types        |    1 +
 tests/interactive/.gitignore               |    1 +
 tests/interactive/Makefile.am              |    3 +-
 tests/interactive/test-table-layout.c      |  275 +++
 10 files changed, 3135 insertions(+), 1 deletion(-)

commit 1043e77a00b1f5965b9a5ff52db6d0f0bd93e88c
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Tue Aug 10 22:20:38 2010 +0100

    box-layout: Use allocate_align_fill()
    
    Remove duplicated code, and use the newly added actor method to compute
    the child allocation based on alignment and fill.

 clutter/clutter-box-layout.c |  116 ++++++++----------------------------------
 1 file changed, 21 insertions(+), 95 deletions(-)

commit 6ad4126e1783d1e9a04eaf88accce6d0950064d6
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Tue Aug 10 17:43:26 2010 +0100

    bin-layout: Migrate to allocate_align_fill()
    
    Now that we have the code in ClutterActor itself.

 clutter/clutter-bin-layout.c |  100 +++++++-----------------------------------
 1 file changed, 17 insertions(+), 83 deletions(-)

commit 07b01888baed28e5fb3f0831a2441218b469f846
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Tue Aug 10 17:40:01 2010 +0100

    actor: Add allocate_align_fill()
    
    Layout managers are using the same code to allocate a child while taking
    into consideration:
    
      • horizontal and vertical alignment
      • horizontal and vertical fill
      • the preferred minimum and natural size, depending
        on the :request-mode property
      • the text direction for the horizontal alignment
      • an offset given by the fixed position properties
    
    Given the amount of code involved, and the amount of details that can go
    horribly wrong while copy and pasting such code in various classes - let
    alone various projects - Clutter should provide an allocate() variant
    that does the right thing in the right way. This way, we have a single
    point of failure.

 clutter/clutter-actor.c                    |  139 ++++++++++++++++++++++++++++
 clutter/clutter-actor.h                    |    7 ++
 doc/reference/clutter/clutter-sections.txt |    1 +
 3 files changed, 147 insertions(+)

commit 02b7bf3635ce9a3a67016847e99128bd0a9f67d9
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Tue Aug 10 17:43:56 2010 +0100

    test-flow-layout: Use BindConstraints
    
    If we want to fit the FlowLayout to the Stage size we should use the
    BindConstraint API instead of a watcher on ::allocation-changed.

 tests/interactive/test-flow-layout.c |   28 +++++++---------------------
 1 file changed, 7 insertions(+), 21 deletions(-)

commit 8d5161797974f8f9eb25da844f64fc27bceb28f4
Author: Neil Roberts <neil@linux.intel.com>
Date:   Mon Jun 21 10:20:32 2010 +0100

    Conditionally use g_object_notify_by_pspec
    
    This adds a wrapper macro to clutter-private that will use
    g_object_notify_by_pspec if it's compiled against a version of GLib
    that is sufficiently new. Otherwise it will notify by the property
    name as before by extracting the name from the pspec. The objects can
    then store a static array of GParamSpecs and notify using those as
    suggested in the documentation for g_object_notify_by_pspec.
    
    Note that the name of the variable used for storing the array of
    GParamSpecs is obj_props instead of properties as used in the
    documentation because some places in Clutter uses 'properties' as the
    name of a local variable.
    
    Mose of the classes in Clutter have been converted using the script in
    the bug report. Some classes have not been modified even though the
    script picked them up as described here:
    
    json-generator:
    
     We probably don't want to modify the internal copy of JSON
    
    behaviour-depth:
    rectangle:
    score:
    stage-manager:
    
     These aren't using the separate GParamSpec* variable style.
    
    blur-effect:
    win32/device-manager:
    
     Don't actually define any properties even though it has the enum.
    
    box-layout:
    flow-layout:
    
      Have some per-child properties that don't work automatically with
      the script.
    
    clutter-model:
    
      The script gets confused with ClutterModelIter
    
    stage:
    
      Script gets confused because PROP_USER_RESIZE doesn't match
      "user-resizable"
    
    test-layout:
    
      Don't really want to modify the tests
    
    http://bugzilla.clutter-project.org/show_bug.cgi?id=2150

 clutter/clutter-actor-meta.c             |   13 +-
 clutter/clutter-actor.c                  |  208 +++++++++++++++++++-----------
 clutter/clutter-align-constraint.c       |   15 ++-
 clutter/clutter-alpha.c                  |   19 ++-
 clutter/clutter-animation.c              |   40 +++---
 clutter/clutter-animator.c               |    8 +-
 clutter/clutter-behaviour-ellipse.c      |   37 ++++--
 clutter/clutter-behaviour-opacity.c      |   12 +-
 clutter/clutter-behaviour-path.c         |    9 +-
 clutter/clutter-behaviour-rotate.c       |   27 ++--
 clutter/clutter-behaviour-scale.c        |   16 ++-
 clutter/clutter-behaviour.c              |    9 +-
 clutter/clutter-bin-layout.c             |   18 ++-
 clutter/clutter-bind-constraint.c        |   15 ++-
 clutter/clutter-binding-pool.c           |    7 +-
 clutter/clutter-box.c                    |   15 ++-
 clutter/clutter-cairo-texture.c          |   12 +-
 clutter/clutter-child-meta.c             |    8 +-
 clutter/clutter-click-action.c           |   10 +-
 clutter/clutter-clone.c                  |    9 +-
 clutter/clutter-colorize-effect.c        |    9 +-
 clutter/clutter-deform-effect.c          |   13 +-
 clutter/clutter-desaturate-effect.c      |    9 +-
 clutter/clutter-device-manager.c         |    7 +-
 clutter/clutter-drag-action.c            |   15 ++-
 clutter/clutter-input-device.c           |    9 +-
 clutter/clutter-interval.c               |    7 +-
 clutter/clutter-layout-meta.c            |    7 +-
 clutter/clutter-page-turn-effect.c       |   15 ++-
 clutter/clutter-path.c                   |    8 +-
 clutter/clutter-private.h                |   12 ++
 clutter/clutter-script.c                 |    8 +-
 clutter/clutter-settings.c               |   15 ++-
 clutter/clutter-shader-effect.c          |    7 +-
 clutter/clutter-shader.c                 |   20 ++-
 clutter/clutter-state.c                  |   10 +-
 clutter/clutter-text.c                   |   91 ++++++++-----
 clutter/clutter-texture.c                |   42 ++++--
 clutter/clutter-timeline.c               |   18 ++-
 clutter/x11/clutter-device-manager-x11.c |    7 +-
 clutter/x11/clutter-input-device-x11.c   |    7 +-
 clutter/x11/clutter-keymap-x11.c         |    7 +-
 42 files changed, 608 insertions(+), 242 deletions(-)

commit bfa10f629f6400ff31471922ad57c27c71e76697
Author: Elliot Smith <elliot.smith@intel.com>
Date:   Tue Aug 10 11:02:17 2010 +0100

    cookbook: Added recipe for non-rectangular actor
    
    Added a new recipe for creating a non-rectangular
    actor using ClutterPath (aka "shaped pick") and
    the Cogl primitives API.
    
    Also cleaned up XML alignment in the actors.xml
    file.

 doc/cookbook/actors.xml |  691 +++++++++++++++++++++++++++++++++++------------
 1 file changed, 523 insertions(+), 168 deletions(-)

commit de8276105f34b480dee0b2044debe001c25710ac
Author: Owen W. Taylor <otaylor@fishsoup.net>
Date:   Mon Aug 9 15:06:35 2010 -0400

    Always bind a new texture to unit 1 when necessary
    
    The special handling for texture unit 1 caught the case where unit
    1 was changed for transient purposes, but didn't properly handle
    the case where the actual non-transient texture was different between
    two materials with no transient binding in between.
    
    If the actual texture has changed when flushing, mark unit 1 as dirty
    and needing a rebind.
    
    http://bugzilla.clutter-project.org/show_bug.cgi?id=2261

 clutter/cogl/cogl/cogl-material-opengl.c |    4 +++-
 1 file changed, 3 insertions(+), 1 deletion(-)

commit b646f0cfa9277ca9fd7bc7da035942a72924d6e0
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Mon Aug 9 19:56:00 2010 +0100

    clutter.modules: Add Cluttersmith

 build/clutter.modules |   10 ++++++++++
 1 file changed, 10 insertions(+)

commit 966cbd51278421d99360454a525e3789a04b1f5d
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Mon Aug 9 19:55:42 2010 +0100

    clutter.modules: Mx moved to clutter-project.org

 build/clutter.modules |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit ecc086e9eb86829646d72ca99f618fa7ba4ad95d
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Mon Aug 9 19:38:23 2010 +0100

    Silence a compiler warning

 clutter/cogl/cogl/cogl-shader.c |    3 +++
 1 file changed, 3 insertions(+)

commit 1c2e41e1b388fdf82867ac4071734316e5731870
Merge: 985a4db eaed9c2
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Mon Aug 9 17:44:42 2010 +0100

    Merge remote branch 'elliot/cookbook-layouts-introduction'
    
    * elliot/cookbook-layouts-introduction:
      cookbook: Added layout introduction and "stacking actors" recipe
      cookbook: Added layouts.xml to the list of XML files
      cookbook: Added layouts section and introduction

commit 985a4db94799ae9279ecde166ff46c5de2f369bf
Author: Damien Lespiau <damien.lespiau@intel.com>
Date:   Thu Aug 5 15:55:12 2010 +0100

    gitignore: Ignore test-cogl-shader-{arbfp,glsl}
    
    Fear the out of tree builds!

 tests/interactive/.gitignore |    2 ++
 1 file changed, 2 insertions(+)

commit a4339842f938312da4a51b8592e38e207b15bdc3
Author: Robert Bragg <robert@linux.intel.com>
Date:   Thu Aug 5 15:18:39 2010 +0100

    tests-interactive: Adds a test-cogl-shader-glsl.c
    
    This is based on test-shader.c but is solely implemented with the
    cogl_program/shader APIs instead of the clutter shader APIs.

 tests/interactive/Makefile.am             |    1 +
 tests/interactive/test-cogl-shader-glsl.c |  382 +++++++++++++++++++++++++++++
 2 files changed, 383 insertions(+)

commit f6a1f56031ed0bb404b902db83629732fc788b32
Author: Robert Bragg <robert@linux.intel.com>
Date:   Thu Aug 5 15:20:49 2010 +0100

    tests/interactive: Adds a test-cogl-shader-arbfp.c
    
    This tests the ARBfp support for cogl_program and cogl_shader using the
    shaders Chris Lord adapted from test-shader when he was experimenting
    with adding ARBfp support to clutter back in 2008 (See:
    http://bugzilla.clutter-project.org/show_bug.cgi?id=1049)

 tests/interactive/Makefile.am              |    1 +
 tests/interactive/test-cogl-shader-arbfp.c |  404 ++++++++++++++++++++++++++++
 2 files changed, 405 insertions(+)

commit 09e664c349d6132801683c2b4cc5852d57e5f3a6
Author: Robert Bragg <robert@linux.intel.com>
Date:   Wed Aug 4 17:53:51 2010 +0100

    cogl: Allow setting ARBfp source on a CoglShader
    
    This makes CoglProgram/Shader automatically detect when the user has
    given an ARBfp program by checking for "!!ARBfp1.0" at the beginning of
    the user's source.
    
    ARBfp local parameters can be set with cogl_program_uniform_float
    assuming you pass a @size of 4 (all ARBfp program.local parameters
    are vectors of 4 floats).
    
    This doesn't expose ARBfp environment parameters or double precision
    local parameters.

 clutter/cogl/cogl/cogl-material-arbfp.c      |   72 +++++++--
 clutter/cogl/cogl/cogl-material-glsl.c       |   24 +--
 clutter/cogl/cogl/cogl-shader-private.h      |   13 ++
 clutter/cogl/cogl/cogl-shader.c              |  116 ++++++++++++---
 clutter/cogl/cogl/cogl.c                     |    6 +-
 clutter/cogl/cogl/driver/gl/cogl-program.c   |  204 ++++++++++++++++++++++----
 clutter/cogl/cogl/driver/gl/cogl-program.h   |   11 +-
 clutter/cogl/cogl/driver/gles/cogl-program.c |    7 +
 8 files changed, 371 insertions(+), 82 deletions(-)

commit 5741e28cdcba3619f0eadff0e8de0d7b0d9c5c60
Author: Robert Bragg <robert@linux.intel.com>
Date:   Thu Aug 5 10:59:03 2010 +0100

    cogl: Adds a COGL_FEATURE_SHADERS_ARBFP feature flag
    
    This adds a public feature flag for ARBfp so developers can determine if
    the cogl API supports ARBfp or not.

 clutter/cogl/cogl/cogl-internal.h                    |    2 +-
 clutter/cogl/cogl/cogl-material-arbfp.c              |    2 +-
 clutter/cogl/cogl/cogl-types.h                       |    4 +++-
 clutter/cogl/cogl/cogl.c                             |    2 +-
 clutter/cogl/cogl/driver/gl/cogl-feature-functions.h |    4 ++--
 5 files changed, 8 insertions(+), 6 deletions(-)

commit f781bcec7e92c4387a2b755510681502290f8e75
Author: Robert Bragg <robert@linux.intel.com>
Date:   Thu Aug 5 10:46:54 2010 +0100

    material: Add cogl_material_{get,set}_user_program
    
    Previously we had an internal only _cogl_material_set_user_program to
    redirect legacy usage of cogl_program_use() through CoglMaterial. This
    instead makes the API public because until we implement our planned
    "snippet" framework we need a stop-gap solution for using shaders in
    Cogl.
    
    The plan is to also support ARBfp with the cogl_program/shader API so
    this API will also allow clutter-gst to stop using direct OpenGL calls
    that conflict with Cogl's state tracking.

 clutter/cogl/cogl/cogl-material-private.h |    4 --
 clutter/cogl/cogl/cogl-material.c         |   24 +++++++++--
 clutter/cogl/cogl/cogl-material.h         |   64 +++++++++++++++++++++++++++++
 3 files changed, 84 insertions(+), 8 deletions(-)

commit 1314d0b1a7567efd89f0aeca94a1d3e4c6b392bb
Author: Robert Bragg <robert@linux.intel.com>
Date:   Sun Aug 8 13:54:07 2010 +0100

    material: chain up in layer_pre_change_notify
    
    A change to a layer is also going to be a change to its owning material
    so we have to chain up in _cogl_material_layer_pre_change_notify and
    call _cogl_material_pre_change_notify. Previously we were only
    considering if the owning material was referenced in the journal but
    that ignores that it might also have dependants. We no longer need to
    flush the journal directly in layer_pre_change_notify.

 clutter/cogl/cogl/cogl-material.c |   16 ++++++++++++----
 1 file changed, 12 insertions(+), 4 deletions(-)

commit 855661754653ed1b5b1e0f1bf491f7e360ca5ed0
Author: Robert Bragg <robert@linux.intel.com>
Date:   Sun Aug 8 14:26:45 2010 +0100

    material: unlink old layer from owner when replacing
    
    In _cogl_material_layer_pre_change_notify when we see that a layer has
    dependants and it can't be modified directly then we allocate a new
    layer. In this case we also have to link the new layer to its required
    owner. If the immutable layer we copied had the same owner though we
    weren't unlinking that old layer.

 clutter/cogl/cogl/cogl-material.c |    2 ++
 1 file changed, 2 insertions(+)

commit eeac7c5f431cf9c6df66ddbe8a9c862e9143884c
Author: Robert Bragg <robert@linux.intel.com>
Date:   Sun Aug 8 13:41:15 2010 +0100

    material: fix initialization of sparse properties
    
    In _cogl_material_pre_change_notify we need to identify if it's a sparse
    property being changed and if so initialize the state group if the given
    material isn't currently the authority for it.
    
    Previously we were unconditionally calling
    _cogl_material_initialize_state which would e.g. NULL the layer
    differences list of a material each time a layer change was notified.
    
    It would also call _cogl_material_initialize_state for non-sparse
    properties which should always be valid at this point so the function
    has been renamed to _cogl_material_initialize_sparse_state to make this
    clearer with a corresponding g_return_if_fail check.

 clutter/cogl/cogl/cogl-material.c |   25 ++++++++++++++-----------
 1 file changed, 14 insertions(+), 11 deletions(-)

commit d489832688ab28e7a2a889cf793bef6ab8fab334
Author: Robert Bragg <robert@linux.intel.com>
Date:   Sun Aug 8 13:09:27 2010 +0100

    material: fix copying of material layer differences
    
    This fixes how we copy layer differences in
    _cogl_material_copy_layer_differences.
    
    We were making a redundant g_list_copy of the src differences and then
    iterating the src list calling _cogl_material_add_layer_difference for
    each entry which would double the list length, but the initial copy
    directly referenced the original layers which wasn't correct.
    
    Also we were initializing dest->n_layers before copying the layer
    differences but the act of copying the differences will re-initialize
    n_layers to 0 when adding the first layer_difference since it will
    trigger a layer_pre_change_notify and since the dest material isn't yet
    a STATE_LAYERS authority the state group is initialized before allowing
    the change.

 clutter/cogl/cogl/cogl-material.c |    8 +++++---
 1 file changed, 5 insertions(+), 3 deletions(-)

commit 0e2880b067e96ff93deec6c3a6ffb7aa0cd4cee4
Author: Robert Bragg <robert@linux.intel.com>
Date:   Sun Aug 8 13:05:40 2010 +0100

    material: don't dereference layer->texture directly
    
    In _cogl_material_texture_storage_change_notify we were potentially
    dereferencing layer->texture without checking first that it is the
    authority of texture state. We now use
    _cogl_material_layer_get_texture() instead.

 clutter/cogl/cogl/cogl-material-opengl.c |    4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

commit 9c46cb7f21fba3a8871128866c74325a598f49f2
Author: Robert Bragg <robert@linux.intel.com>
Date:   Sun Aug 8 14:09:26 2010 +0100

    material: Improve the dot file debugging code
    
    This improve the dot file output available when calling
    _cogl_debug_dump_materials_dot_file. The material graph now directly
    points into the layer graph and the layers now show the texture unit
    index.

 clutter/cogl/cogl/cogl-material.c |   30 ++++++++++++++++--------------
 1 file changed, 16 insertions(+), 14 deletions(-)

commit eaed9c22da03caa1a0ce43656f2afdfc00ac5115
Author: Elliot Smith <elliot.smith@intel.com>
Date:   Thu Aug 5 16:46:36 2010 +0100

    cookbook: Added layout introduction and "stacking actors" recipe
    
    Expanded the layout introduction and added a recipe about
    stacking actors using ClutterBinLayout, with two examples.

 doc/cookbook/Makefile.am                           |    1 +
 doc/cookbook/examples/.gitignore                   |    2 +
 doc/cookbook/examples/Makefile.am                  |   14 +-
 .../examples/layouts-stacking-diff-sized-actors.c  |   78 +++++
 doc/cookbook/examples/layouts-stacking.c           |   80 +++++
 .../images/layouts-stacking-diff-actor-sizes.png   |  Bin 0 -> 1579 bytes
 doc/cookbook/layouts.xml                           |  325 +++++++++++++++++++-
 7 files changed, 487 insertions(+), 13 deletions(-)

commit 309dd1f50e73cf6bf6e5308abca3b77135dd4686
Author: Elliot Smith <elliot.smith@intel.com>
Date:   Thu Aug 5 13:43:23 2010 +0100

    cookbook: Added layouts.xml to the list of XML files
    
    Make sure layouts.xml is included for make dist.

 doc/cookbook/Makefile.am |    1 +
 1 file changed, 1 insertion(+)

commit 1a44b56b7a5b42ff26abde46c5fdea2f8e3858ff
Author: Elliot Smith <elliot.smith@intel.com>
Date:   Tue Aug 3 11:00:19 2010 +0100

    cookbook: Added layouts section and introduction

 doc/cookbook/clutter-cookbook.xml.in |    1 +
 doc/cookbook/layouts.xml             |  281 ++++++++++++++++++++++++++++++++++
 2 files changed, 282 insertions(+)

commit 1943b8e544a985e08cd4fbe2ae79320fed2f2548
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Mon Aug 9 11:29:03 2010 +0100

    glx: Depend on libdrm
    
    DRM is available on more platforms than Linux (e.g. kFreeBSD), but
    Clutter currently FTBFS there because of not being an alternative to
    the __linux__ code (where it should be HAVE_DRM).
    
    Instead of copying the DRM data structures, we should use libdrm when
    falling back to directly requesting to wait for the vblank.
    
    http://bugzilla.clutter-project.org/show_bug.cgi?id=2225
    
    Based on a patch by: Emilio Pozuelo Monfort <pochu27@gmail.com>
    Signed-off-by: Emmanuele Bassi <ebassi@linux.intel.com>

 clutter/glx/clutter-stage-glx.c |   43 ++++++++++-----------------------------
 configure.ac                    |    8 ++++++++
 2 files changed, 19 insertions(+), 32 deletions(-)

commit 28378f1bb4f74c4ba97618f404386b26a28f5224
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Mon Aug 9 11:06:44 2010 +0100

    layout-manager: Do not emit layout-changed on thaw
    
    When thawing a LayoutManager, do not emit the ::layout-changed signal
    since it might still be in the middle of a relayout.
    
    http://bugzilla.clutter-project.org/show_bug.cgi?id=2255

 clutter/clutter-layout-manager.c |   17 +++++++++++++----
 1 file changed, 13 insertions(+), 4 deletions(-)

commit 306385c2eb6ea3e0df406edc34227ca8c2622b7d
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Mon Aug 9 08:50:18 2010 +0100

    animator: Remove redundant parenthesis

 clutter/clutter-animator.c |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit 74301da8e7bbce31395871927fe8afd6e08bbfd9
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Sun Aug 8 19:18:46 2010 +0100

    animator: Improve the key value copy
    
    Use the same code used elsewhere in Clutter when dealing with values
    that can be copied or transformed.

 clutter/clutter-animator.c |   41 ++++++++++++++++++++++++++++-------------
 1 file changed, 28 insertions(+), 13 deletions(-)

commit 1ca0c2a6d1ce7477b4c31c507603c870f298c79d
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Sun Aug 8 19:17:14 2010 +0100

    state: Return a boolean when getting the key value
    
    Since the copy might fail, we should return a boolean value and not just
    warn on the console - similarly to what ClutterAnimator does.

 clutter/clutter-state.c |   26 ++++++++++++++++++--------
 clutter/clutter-state.h |    2 +-
 2 files changed, 19 insertions(+), 9 deletions(-)

commit 786285a245096950015f55adc6f43db23371dc90
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Sun Aug 8 13:48:51 2010 +0100

    clutter.modules: Fix UProf id

 build/clutter.modules |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit fa8ee94c597fa34000d471c1e959a74ebe114076
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Fri Aug 6 19:33:21 2010 +0100

    clutter.modules: Fix the uprof repository
    
    UProf has moved.

 build/clutter.modules |    6 ++++--
 1 file changed, 4 insertions(+), 2 deletions(-)

commit d07a525eccc4b9504980ee01531dc5ee6b8db6e4
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Fri Aug 6 17:04:37 2010 +0100

    text: Do not set the markup unconditionally
    
    When setting :use-markup we always pass the contents of the Text actor
    to clutter_text_set_markup_internal(); if string contains any markup,
    this ends up being parsed and used - even when :use-markup is set to
    FALSE.
    
    http://bugzilla.clutter-project.org/show_bug.cgi?id=2239

 clutter/clutter-text.c |   66 ++++++++++++++++++++++++++++++++++++++++--------
 1 file changed, 55 insertions(+), 11 deletions(-)

commit fcbfd4ec34ba53953935954cf90f09e5675fb8cc
Author: Neil Roberts <neil@linux.intel.com>
Date:   Fri Aug 6 16:41:41 2010 +0100

    cogl-material: Unref the texture when reverting authority
    
    When the texture is set on a layer so that it is back to the parent's
    texture it would clear the texture change flag but it wouldn't unref
    the texture. The free function for a material layer does not unref the
    texture if the change flag is cleared so the texture would end up
    leaking. This happens for ClutterTexture because it disposes the
    texture by setting layer 0 of the material to COGL_INVALID_HANDLE
    which ends up the same as the default material.

 clutter/cogl/cogl/cogl-material.c |    3 +++
 1 file changed, 3 insertions(+)

commit 7032e249501080a699e19a731be2bc7d7ecc325f
Author: Damien Lespiau <damien.lespiau@intel.com>
Date:   Fri Aug 6 15:39:01 2010 +0100

    cookbook: Make the table of content have a depth of 2
    
    Instead of showing Problem/Solution/Discussion for each recipe, let's
    just show the title of those recipes.

 doc/common/cookbook.xsl |    3 +++
 1 file changed, 3 insertions(+)

commit 86c3be550efa724d512b6b1c699e05f7f4257bea
Author: Damien Lespiau <damien.lespiau@intel.com>
Date:   Fri Aug 6 12:30:06 2010 +0100

    cookbook: Remove the note about indenting <xi:include>
    
    It's not necessary now to special case the indentation of includes as
    the XSLT for the cookbook strips leading and trailing space automaticaly
    for us.

 doc/cookbook/clutter-cookbook.xml.in |   13 +++----------
 1 file changed, 3 insertions(+), 10 deletions(-)

commit 4f5ab7d01049ab3b9ceed5a8cbe6b01e8a928a4e
Author: Damien Lespiau <damien.lespiau@intel.com>
Date:   Thu Aug 5 13:21:52 2010 +0100

    cookbook: Close a tag, making xsltproc happier
    
    A </function> tag was not closed.

 doc/cookbook/text.xml |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit cbd6e047dd61ac7ceb47996346ded26d52e6d6d0
Author: Damien Lespiau <damien.lespiau@intel.com>
Date:   Thu Aug 5 10:58:42 2010 +0100

    cookbook: Add a recipe on how to create sub-textures
    
    Fiddle with Cogl textures to create a new ClutterTexture that only
    displays a rectangular region of a bigger ClutterTexture.

 doc/cookbook/Makefile.am                     |    2 +
 doc/cookbook/examples/.gitignore             |    4 +-
 doc/cookbook/examples/Makefile.am            |   16 ++-
 doc/cookbook/examples/smiley.png             |  Bin 0 -> 2856 bytes
 doc/cookbook/examples/textures-split-go.c    |  184 ++++++++++++++++++++++++++
 doc/cookbook/examples/textures-sub-texture.c |   60 +++++++++
 doc/cookbook/images/textures-sub-texture.png |  Bin 0 -> 4664 bytes
 doc/cookbook/textures.xml                    |  136 +++++++++++++++++++
 doc/cookbook/videos/textures-split-go.ogv    |  Bin 0 -> 89625 bytes
 9 files changed, 394 insertions(+), 8 deletions(-)

commit ad1f1cb741203f64d97d093981f1e58907ee8e96
Author: Damien Lespiau <damien.lespiau@intel.com>
Date:   Thu Aug 5 19:50:29 2010 +0100

    cookbook: Strip leading and trailing space inside programlisting
    
    It's a XSL FAQ to be able to chomp text nodes and we just have to copy
    and paste a XSLT 1.0 solution from:
      http://dpawson.co.uk/xsl/sect2/N8321.html#d11325e833
    
    Let's then empower our cookbook customization layer to chomp text nodes,
    children of programlisting.

 doc/common/cookbook.xsl |   79 +++++++++++++++++++++++++++++++++++++++++++++++
 1 file changed, 79 insertions(+)

commit c0c9ddab65a47404c0e6c5aa3a94c8a235c6d0ff
Author: Damien Lespiau <damien.lespiau@intel.com>
Date:   Tue Aug 3 22:26:14 2010 +0100

    cookbook: Add text.xml to the list of XML files
    
    text.xml was feeling lonely and forgotten, that's fixed now.

 doc/cookbook/Makefile.am |    1 +
 1 file changed, 1 insertion(+)

commit b4f4942e07cd2d7f5ad6e235fadb8ed2cf45f48d
Author: Damien Lespiau <damien.lespiau@intel.com>
Date:   Tue Aug 3 21:02:23 2010 +0100

    cookbook: Add the source XML files as dependencies in the Makefile rules
    
    The generated cookbook files (either HTML or PDF) do not only depend on
    clutter-cookbok.xml but also on all the chapters that compose the
    cookbook. Add this dependency to the Makefile rules to have make rebuild
    the book when a chapter changes.
    
    Since XML_FILES is now the list of source files, move recipe-template.xml
    to EXTRA_DIST.

 doc/cookbook/Makefile.am |    6 +++---
 1 file changed, 3 insertions(+), 3 deletions(-)

commit 8ac3cb29ea6a04f434887c4e7a441ae4a4e67729
Author: Robert Bragg <robert@linux.intel.com>
Date:   Fri Aug 6 14:12:22 2010 +0100

    material: only deference layer->texture for authority
    
    In _cogl_material_layer_pre_paint we were mistakenly dereferencing the
    layer->texture member for the passed layer instead of dereferencing the
    texture state authority which was causing crashes in some cases.

 clutter/cogl/cogl/cogl-material.c |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit 069266f3ed911dd8de69066c5d50a4befca468a8
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu Aug 5 18:10:22 2010 +0100

    layout-manager: Freeze ::layout-changed when creating LayoutMeta
    
    LayoutMeta instances are created lazily. If an actor is added to a
    container with a layout manager then the first time the layout manager
    might be creating the LayoutMeta instance could be during the allocation
    cycle caused by calling clutter_actor_show(). When a LayoutMeta is
    instantiated for the first time, a list of properties can be set - and
    this might lead to the emission of the ::layout-changed signal. The
    signal is, most typically, going to cause a relayout to be queued, and a
    warning will be printed on the terminal.
    
    We should freeze the emission of the ::layout-changed signal during the
    creation of the LayoutMeta instances, and thaw it after that.

 clutter/clutter-layout-manager.c |   62 ++++++++++++++++++++++++++++++++++++--
 1 file changed, 59 insertions(+), 3 deletions(-)

commit e7381c47fdaae7d52f9e1e7a1c48d7ecadeae503
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu Aug 5 17:22:50 2010 +0100

    bin-layout: Add a text to the test
    
    We have a rectangle, a cairo texture and a texture. Let's go add a text
    actor as well.

 tests/interactive/test-bin-layout.c |   10 +++++++++-
 1 file changed, 9 insertions(+), 1 deletion(-)

commit 315965290b23900e01840a2e6ef1cff17d222969
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu Aug 5 16:19:51 2010 +0100

    texture: Update the request mode depending on the size
    
    If a Texture has been set to:
    
      • keep its size synchronized with the image data
      • maintain the aspect ratio of the image data
    
    then it should also change its request mode depending on the orientation
    of the image data, so that layout managers have a fighting chance of
    sizing it correctly.

 clutter/clutter-texture.c |   25 ++++++++++++++++++++++++-
 1 file changed, 24 insertions(+), 1 deletion(-)

commit 2d4125a053b73acc1c037f02bbf1c52bcb6b0a41
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu Aug 5 15:29:54 2010 +0100

    texture: Make the :filename property readable
    
    UI builders and other tools are be interested in the file used to load
    the image data.

 README                    |    7 ++++++-
 clutter/clutter-texture.c |   44 ++++++++++++++++++++++++++++++++++++--------
 2 files changed, 42 insertions(+), 9 deletions(-)

commit 70303d6f0cbaaddc06be43ce3f3b0b2b79eaa604
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu Aug 5 13:06:38 2010 +0100

    Post-release version bump to 1.3.11

 configure.ac |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit 177d8e52d3823cd0af8fd0b7ab9bb4a7d67c27a8
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Wed Aug 4 12:38:53 2010 +0100

    Release 1.3.10

 NEWS         |   46 ++++++++++++++++++++++++++++++++++++++++++++++
 configure.ac |    2 +-
 2 files changed, 47 insertions(+), 1 deletion(-)

commit 8668a019a0bde8a078f999cd5b960a1f63f700ec
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu Aug 5 11:41:25 2010 +0100

    cookbook: Fix the text-shadow recipe
    
    Fill out the recipe and add more comments to the example code.

 doc/cookbook/examples/text-shadow.c |   10 +++--
 doc/cookbook/text.xml               |   71 +++++++++++++++++++++++++++++++++++
 2 files changed, 78 insertions(+), 3 deletions(-)

commit ea3af7bf334aa2949e9320d54f1a329e599fa587
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Wed Aug 4 12:47:16 2010 +0100

    po: Remove the requirement for LINGUAS and ChangeLog
    
    We don't use ChangeLogs and the LINGUAS file is replaced by the
    AS_ALL_LINGUAS m4 macro.

 po/Makefile.in.in |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit 8326ea26f82dcb756e4717f5ed6b80ea8582b9f1
Author: Roman Kudiyarov <rkudiyarov@crystalnix.com>
Date:   Tue Aug 3 21:12:12 2010 +0700

    osx: Fixed stage resize policy
    
    Added initialization of minimum window size property on Cocoa
    side. This property works when user change window size by mouse
    dragging. But when size is changed by clutter_actor_set_size this
    property will not help and was added another check in
    clutter_stage_osx_resize. Also osx_get_geometry was refactoried
    because it returns incorrect values in many cases but now size is
    saved in [Window reshape] in requisition_width/height and this value
    will be returned in any case to frontend.

 clutter/osx/clutter-stage-osx.c |   71 ++++++++++++++++++++-------------------
 1 file changed, 36 insertions(+), 35 deletions(-)

commit c1f0b59911fdc6096f070108d100ff14c2e25b29
Author: Roman Kudiyarov <rkudiyarov@crystalnix.com>
Date:   Wed Aug 4 12:08:50 2010 +0700

    test: Fixed test-rotate for osx platfom
    
    There was a bug in clutter-shader-effect. We have to set to zero new object
    of type GValue before we can use it in g_value_init.

 clutter/clutter-shader-effect.c |    1 +
 1 file changed, 1 insertion(+)

commit 52b6a3cd49c4fd654bde0a03b8e57156e731076f
Author: Roman Kudiyarov <rkudiyarov@crystalnix.com>
Date:   Thu Jul 29 21:59:46 2010 +0700

    osx: added resolution initialization in backend
    
    It's important step of initialization because all features calls from
    font rendering libs based on this parameter. By default it equals to
    -1 and test-text-cache test crashes in this case.

 clutter/osx/clutter-backend-osx.c |   14 +++++++++++++-
 1 file changed, 13 insertions(+), 1 deletion(-)

commit dc23b88de25d24b5b8efaf6ae7e84f3237c175eb
Author: Roman Kudiyarov <rkudiyarov@crystalnix.com>
Date:   Sat Jul 24 11:54:19 2010 +0700

    osx: Fixed warnings in osx event implementation

 clutter/osx/clutter-event-osx.c |   14 +++++++-------
 1 file changed, 7 insertions(+), 7 deletions(-)

commit af8308295c95c8bef3538af85d308e7807a8ab22
Author: Roman Kudiyarov <rkudiyarov@crystalnix.com>
Date:   Fri Jul 23 12:16:23 2010 +0700

    Added willResize delegate for osx stage.
    
    By default a clutter stage is not user resizable and this delegate
    controls this option while resizing the stage.

 clutter/osx/clutter-stage-osx.c |    8 ++++++++
 1 file changed, 8 insertions(+)

commit 49b2b623118ab961c6ce15d7f26972391b9075e1
Author: Roman Kudiyarov <rkudiyarov@crystalnix.com>
Date:   Fri Jul 23 11:25:40 2010 +0700

    Fixed lack of reaction for keyboard events after showing stage on osx.
    
    Trick with hiding view while showing the stage affects on responder
    chain. The main view ceases to be first responder and we should
    manually set first responder.

 clutter/osx/clutter-stage-osx.c |    8 +++++---
 1 file changed, 5 insertions(+), 3 deletions(-)

commit e4c4ef679254b6407133333f9572442444709845
Author: Roman Kudiyarov <rkudiyarov@crystalnix.com>
Date:   Thu Jul 22 13:51:37 2010 +0700

    Fixed incorrect size return in osx stage if stage resizable by user.
    
    For some reasons width&height was equal to 1 if flag user-resizable
    was true.

 clutter/osx/clutter-stage-osx.c |   10 ----------
 1 file changed, 10 deletions(-)

commit 411b5a09bb11d2b8831d676298d4632ab47ecd21
Author: Roman Kudiyarov <rkudiyarov@crystalnix.com>
Date:   Wed Jul 21 23:22:57 2010 +0700

    osx: Added size initialization for stage
    
    After stage creation it's size can be changed by user and it should be
    taken into account in clutter_stage_osx_realize.

 clutter/osx/clutter-stage-osx.c |   12 +++++++++++-
 1 file changed, 11 insertions(+), 1 deletion(-)

commit 5218da748f7d5c95d3aeff18c51f54361398748f
Author: Roman Kudiyarov <rkudiyarov@crystalnix.com>
Date:   Mon Jul 19 22:53:49 2010 +0700

    test: fixed uninitialized variable in test-cogl-point-sprites

 tests/interactive/test-cogl-point-sprites.c |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit 8e2b45648f14debe0039cfd32dddcf262b7f15ce
Author: Roman Kudiyarov <rkudiyarov@crystalnix.com>
Date:   Mon Jul 19 20:46:55 2010 +0700

    osx: Fixed problem with freezing application while checking behaviour.
    
    Problem was in incorrect application initialization.
    [NSApplication sharedApplication] should be call in backend init(not
    in init stage). It doesn't require any data and only makes a
    connection to window server.

 clutter/osx/clutter-backend-osx.c |   13 +++++++++++++
 clutter/osx/clutter-stage-osx.c   |   13 -------------
 2 files changed, 13 insertions(+), 13 deletions(-)

commit 8c69a639cbe39c3b006555c816f325b0cdb4b874
Author: Roman Kudiyarov <rkudiyarov@crystalnix.com>
Date:   Fri Jul 16 19:46:17 2010 +0700

    osx: Fixed bug with creating context twice.
    
    We should assign context and pixel_format vars to null to avoid
    multiple context creation.

 clutter/osx/clutter-backend-osx.c |   51 ++++++++++++++++++++-----------------
 1 file changed, 27 insertions(+), 24 deletions(-)

commit 50793eac51d541648e023455f9d0cc94e8519423
Author: Roman Kudiyarov <rkudiyarov@crystalnix.com>
Date:   Fri Jul 16 19:19:13 2010 +0700

    osx: added create_context function in backend
    
    Cleanup clutter_backend_osx_post_parse function and move context
    initialization to clutter_backend_osx_create_context. The OpenGL pixel
    format attributes were taken as is. Also move bringing application to
    foreground in clutter_stage_osx_realize, it seems there is best place
    for it.

 clutter/osx/clutter-backend-osx.c |   92 +++++++++++++++----------------------
 clutter/osx/clutter-stage-osx.c   |   13 ++++++
 2 files changed, 50 insertions(+), 55 deletions(-)

commit 904f619419b414e5de86b4bca5cd0f811ef02c87
Author: Roman Kudiyarov <rkudiyarov@crystalnix.com>
Date:   Thu Jul 15 19:04:28 2010 +0700

    osx: Implemented hide cursor backend implementation
    
    Add implementation for hide cursor in stage. Also added using this
    feature in test-animator.

 clutter/osx/clutter-stage-osx.c   |    5 ++++-
 tests/interactive/test-animator.c |    2 +-
 2 files changed, 5 insertions(+), 2 deletions(-)

commit f22b6a442cb901439d4b590b4f7a6bca4577b116
Author: Roman Kudiyarov <rkudiyarov@crystalnix.com>
Date:   Thu Jul 15 16:32:59 2010 +0700

    Added .DS_Store and test logs messages to git ignore

 .gitignore |    2 ++
 1 file changed, 2 insertions(+)

commit 12e50114883c21a2f9a0db48e53020532dffa936
Author: Roman Kudiyarov <rkudiyarov@crystalnix.com>
Date:   Thu Jul 15 16:27:16 2010 +0700

    osx: Added missed function declaration for stage
    
    Added empty functions for cursor and window resize functional with
    notes FIXME and also they are added to iface.

 clutter/osx/clutter-stage-osx.c |   15 +++++++++++++++
 1 file changed, 15 insertions(+)

commit 01c9570d168bced1e9055f66016a875bcd86b81d
Author: Roman Kudiyarov <rkudiyarov@crystalnix.com>
Date:   Thu Jul 15 16:00:29 2010 +0700

    osx: Remove drawing call while showing stage and add viewport init
    
    Viewport didn't initialized before OGL drawing and it causes crash on
    assert so added viewport initalization to
    clutter_stage_osx_realize. Also showing the stage causes drawing
    function but other part of the system(in particular conformance tests)
    don't expect it and aren't ready at this moment.

 clutter/osx/clutter-stage-osx.c |   13 ++++++++++++-
 1 file changed, 12 insertions(+), 1 deletion(-)

commit e3295050f59bcc026b8f0648e2ad2935d9911aed
Author: Roman Kudiyarov <rkudiyarov@crystalnix.com>
Date:   Thu Jul 15 15:46:04 2010 +0700

    osx: Fixed crash while features initialization
    
    Clearing current context couses incorrect work of glGetString function
    and all next GL functions that use it work incorrectly.

 clutter/osx/clutter-backend-osx.c |    1 -
 1 file changed, 1 deletion(-)

commit 24d1142ecf03cdeefb4b07cb4ac372d2f2b6b1bf
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Tue Aug 3 17:53:58 2010 +0100

    glx: Add more debugging notes
    
    Should help debug the GLX visual selection.

 clutter/glx/clutter-backend-glx.c |   10 ++++++----
 1 file changed, 6 insertions(+), 4 deletions(-)

commit fa54b7c60d52aaf75b1691586c9171b77280ae15
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Tue Aug 3 16:48:53 2010 +0100

    docs: Further clarifications
    
    Mention the XFixes extension for compositors using input regions to let
    events "pass through" the stage.
    
    Thanks to: Robert Bragg <robert@linux.intel.com>

 clutter/x11/clutter-backend-x11.c |    6 ++++--
 1 file changed, 4 insertions(+), 2 deletions(-)

commit da6b2660ba423924b5fd164fff3a5e05ca206971
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Tue Aug 3 16:30:04 2010 +0100

    docs: Clarify the event retrieval disable behaviour
    
    When we disable the event retrieval, we now just disable the X11 event
    source, not the event selection. We need to make that clear to
    applications, especially compositors, which might expect complete
    control over the selection.

 clutter/x11/clutter-backend-x11.c |   14 +++++++++++---
 1 file changed, 11 insertions(+), 3 deletions(-)

commit 609560b1cb44f4d209de810cc9b94d8d49ba2db5
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Tue Aug 3 16:11:52 2010 +0100

    glx: Unconditionally select X11/GLX events
    
    Currently, we select input events and GLX events conditionally,
    depending on whether the user has disabled event retrieval.
    
    We should, instead, unconditionally select input events even with event
    retrieval disabled because we need to guarantee that the Clutter
    internal state is maintained when calling clutter_x11_handle_event()
    without requiring applications or embedding toolkits to select events
    themselves. If we did that, we'd have to document the events to be
    selected, and also update applications and embedding toolkits each time
    we added a new mask, or a new class of events - something that's clearly
    not possible.
    
    See:
    
      http://bugzilla.clutter-project.org/show_bug.cgi?id=998
    
    for the rationale of why we did conditional selection. It is now clear
    that a compositor should clear out the input region, since it cannot
    assume a perfectly clean slate coming from us.
    
    See:
    
      http://bugzilla.clutter-project.org/show_bug.cgi?id=2228
    
    for an example of things that break if we do conditional event
    selection on GLX events. In that specific case, the X11 server ≤ 1.8
    always pushed GLX events on the queue, even without selecting them; this
    has been fixed in the X11 server ≥ 1.9, which means that applications
    like Mutter or toolkit integration libraries like Clutter-GTK would stop
    working on recent Intel drivers providing the GLX_INTEL_swap_event
    extension.
    
    This change has been tested with Mutter and Clutter-GTK.

 clutter/glx/clutter-stage-glx.c |   84 ++++++++++++++++++++++++---------------
 1 file changed, 52 insertions(+), 32 deletions(-)

commit 142f288986dba5cdeef2fa2e24fd019ce61fa5b0
Merge: 10c5cb1 7ed3517
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Tue Aug 3 15:44:46 2010 +0100

    Merge remote branch 'elliot/cookbook-animations-rotating'
    
    * elliot/cookbook-animations-rotating:
      cookbook: Added recipe for animated rotation of an actor
      cookbook: Add explanation about including code samples
      cookbook: Make filename used in video example consistent
      cookbook: Add example code for animated rotation

commit 10c5cb1800da3bdaf116197a096bf6396efa465f
Author: Robert Bragg <robert@linux.intel.com>
Date:   Fri Jul 23 10:12:39 2010 +0100

    cogl-program: gles2: bind programs lazily as for GL
    
    This makes the gles2 cogl_program_use consistent with the GL version by
    not binding the program immediately and instead leaving it to
    cogl-material.c to bind the program when actually drawing something.

 clutter/cogl/cogl/cogl-material-glsl.c           |    3 --
 clutter/cogl/cogl/cogl-material-opengl-private.h |    2 +-
 clutter/cogl/cogl/cogl-material-opengl.c         |   34 +++++++++++++---------
 clutter/cogl/cogl/driver/gl/cogl-program.c       |   10 +++----
 clutter/cogl/cogl/driver/gles/cogl-program.c     |    3 --
 5 files changed, 26 insertions(+), 26 deletions(-)

commit 4a9321b60cd443bec065bbc8a1c96bb38f8dab1e
Author: Robert Bragg <robert@linux.intel.com>
Date:   Tue Jun 8 23:06:50 2010 +0100

    gles2: Have CoglProgram track uniforms per program
    
    Previously custom uniforms were tracked in _CoglGles2Wrapper but as part
    of a process to consolidate the gl/gles2 shader code it seems to make
    sense for this state to be tracked in the CoglProgram object instead.
    
    http://bugzilla.o-hand.com/show_bug.cgi?id=2179

 clutter/cogl/cogl/driver/gles/cogl-gles2-wrapper.c |   41 ++++++++++----------
 clutter/cogl/cogl/driver/gles/cogl-gles2-wrapper.h |   11 +++---
 clutter/cogl/cogl/driver/gles/cogl-program.c       |   38 +++++++++++-------
 clutter/cogl/cogl/driver/gles/cogl-program.h       |   11 +++++-
 4 files changed, 61 insertions(+), 40 deletions(-)

commit c26f4ffa228d40e8ef73c075d6e6003d9fcfde5b
Author: Robert Bragg <robert@linux.intel.com>
Date:   Mon Aug 2 21:40:55 2010 +0100

    cogl-shader: unifies the driver/{gl,gles} shader files
    
    The per driver implementations of cogl-shader.c had become almost
    identical we now have a single cogl/cogl-shader.c instead.

 clutter/cogl/cogl/Makefile.am                      |    2 +
 clutter/cogl/cogl/cogl-shader-private.h            |   40 ++++
 clutter/cogl/cogl/cogl-shader.c                    |  235 ++++++++++++++++++++
 clutter/cogl/cogl/driver/gl/Makefile.am            |    2 -
 clutter/cogl/cogl/driver/gl/cogl-shader-private.h  |   40 ----
 clutter/cogl/cogl/driver/gl/cogl-shader.c          |  169 --------------
 clutter/cogl/cogl/driver/gles/Makefile.am          |    2 -
 .../cogl/cogl/driver/gles/cogl-shader-private.h    |   40 ----
 clutter/cogl/cogl/driver/gles/cogl-shader.c        |  214 ------------------
 9 files changed, 277 insertions(+), 467 deletions(-)

commit 8021d3e2ebeced1921a973b325275c3e000655a2
Author: Robert Bragg <robert@linux.intel.com>
Date:   Fri Jul 23 17:44:53 2010 +0100

    cogl-shader: Store the CoglShaderType in CoglShader
    
    Instead of having to query GL and translate the GL enum into a
    CoglShaderType each time cogl_shader_get_type is called we now keep
    track of the type in CoglShader.

 clutter/cogl/cogl/driver/gl/cogl-shader-private.h |    1 +
 clutter/cogl/cogl/driver/gl/cogl-shader.c         |   14 ++------------
 clutter/cogl/cogl/driver/gles/cogl-shader.c       |   13 +------------
 3 files changed, 4 insertions(+), 24 deletions(-)

commit 467c33a3e37904cb29ea596caff6c70ae5eb503a
Author: Robert Bragg <robert@linux.intel.com>
Date:   Sun Jul 25 21:36:41 2010 +0100

    cogl: don't include cogl-debug.h in cogl.h or install
    
    cogl-debug.h is an internal header so it shouldn't have been included by
    cogl.h and the header shouldn't be installed either.

 clutter/cogl/cogl/Makefile.am                      |    2 +-
 clutter/cogl/cogl/cogl-atlas-texture.c             |    1 +
 clutter/cogl/cogl/cogl-bitmap.c                    |    1 +
 clutter/cogl/cogl/cogl-framebuffer.c               |    1 +
 clutter/cogl/cogl/cogl-journal.c                   |    1 +
 clutter/cogl/cogl/cogl-material-arbfp.c            |    1 +
 clutter/cogl/cogl/cogl-material-opengl.c           |    1 +
 clutter/cogl/cogl/cogl-material.c                  |    1 +
 clutter/cogl/cogl/cogl-matrix.c                    |    1 +
 clutter/cogl/cogl/cogl-primitives.c                |    1 +
 clutter/cogl/cogl/cogl-texture-2d-sliced.c         |    1 +
 clutter/cogl/cogl/cogl.h                           |    1 -
 clutter/cogl/cogl/winsys/cogl-texture-pixmap-x11.c |    1 +
 clutter/cogl/pango/cogl-pango-render.c             |    1 +
 14 files changed, 13 insertions(+), 2 deletions(-)

commit 8b914dfa307ef2e0b84ff7dc1632cb6ae29e7c3e
Author: Robert Bragg <robert@linux.intel.com>
Date:   Fri Jul 23 21:37:22 2010 +0100

    configure.ac: when checking for gl2ext.h include gl2.h
    
    This makes sure we include gl2.h when looking for gl2ext.h since
    gl2ext.h can't always be used standalone.

 configure.ac |    4 +++-
 1 file changed, 3 insertions(+), 1 deletion(-)

commit c23b28396866cfcffa64e16d3d55075be04e0d4e
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Sat Jul 31 10:40:21 2010 +0100

    animatable: Allow passing a NULL animation
    
    The Animatable interface was created specifically for the Animation
    class. It turns out that it might be fairly useful to others - such as
    ClutterAnimator and ClutterState.
    
    The newly-added API in this cycle for querying and accessing custom
    properties should not require that we pass a ClutterAnimation to the
    implementations: the Animatable itself should be enough.
    
    This is necessary to allow language bindings to wrap
    clutter_actor_animate() correctly and do type validation and
    demarshalling between native values and GValues; an Animation instance
    is not available until the animate() call returns, and validation must
    be performed before that happens.
    
    There is nothing we can do about the animate_property() virtual
    function - but in that case we might want to be able to access the
    animation from an Animatable implementation to get the Interval for
    the property, just like ClutterActor does in order to animate
    ClutterActorMeta objects.

 clutter/clutter-actor.c      |    3 ---
 clutter/clutter-animatable.c |   15 +++------------
 clutter/clutter-animatable.h |    6 ------
 clutter/clutter-animation.c  |   24 +++++-------------------
 4 files changed, 8 insertions(+), 40 deletions(-)

commit c65c0f08d8ea6532f873b09d45033a7e546e05be
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Sat Jul 31 10:39:53 2010 +0100

    docs: Fix the BindConstraint example
    
    A constraint was created but not added to the actor.

 clutter/clutter-bind-constraint.c |    1 +
 1 file changed, 1 insertion(+)

commit 00eb71b89a09efe4ccb44e55bdff7d2e4da4d26b
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Fri Jul 30 19:39:35 2010 +0100

    conform: Move the Score test to the conformance suite
    
    The interactive test for ClutterScore is really meant to be run as part
    of the conformance test suite, so we should move it there.

 tests/conform/.gitignore          |    1 +
 tests/conform/Makefile.am         |    1 +
 tests/conform/test-conform-main.c |    2 +
 tests/conform/test-score.c        |  119 ++++++++++++++++++++++++++++++++++
 tests/interactive/.gitignore      |    1 -
 tests/interactive/Makefile.am     |    1 -
 tests/interactive/test-score.c    |  127 -------------------------------------
 7 files changed, 123 insertions(+), 129 deletions(-)

commit a20a509584c8f8982b6f2f5daf92d882f99e6d02
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu Jul 29 17:18:25 2010 +0100

    x11: Split out conditions and warnings
    
    XGetGeometry is a great piece of API, since it gets a lot of stuff that
    are moderately *not* geometry related - the root window, and the depth
    being two.
    
    Since we have multiple conditions depending on the result of that call
    we should split them up depending on the actual error - and each of them
    should have a separate error message. This makes debugging simpler.

 clutter/x11/clutter-stage-x11.c |   24 +++++++++++++++++++-----
 1 file changed, 19 insertions(+), 5 deletions(-)

commit 0736cb73230c6f2e39b7186770f7405f4dda228e
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu Jul 29 17:00:24 2010 +0100

    actor: Make set_flags() safe from unrefs
    
    It's possible - though not recommended - that user code causes the
    destruction of an actor in one of the notification handlers for
    flag-based properties. We should protect the multiple notification
    emission with g_object_ref/unref.

 clutter/clutter-actor.c |    2 ++
 1 file changed, 2 insertions(+)

commit 6f737a5f5a107cc728a9be59d79e9213dfffd026
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu Jul 29 16:58:37 2010 +0100

    Require g-i 0.6.14
    
    The 0.6.14 is the last 0.6 release, before the format changes; we build
    with both 0.6 and 0.9, so we should depend to the former and not the
    latter.

 configure.ac |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit 7ed3517504754216304607136450ef8b718597f7
Author: Elliot Smith <elliot.smith@intel.com>
Date:   Wed Jul 21 14:50:32 2010 +0100

    cookbook: Added recipe for animated rotation of an actor
    
    New recipe covering how to animate rotation of
    an actor (in all axes).
    
    Covers various factors affecting rotation animation
    (like orientation of axes, parent rotation/orientation),
    as well as trying to make rotations easier to visualise
    (e.g. describing how rotation direction is affected by
    those factors, how a rotation can be expected to look
    when animated). Uses implicit animations for code examples.
    
    Also refers to a full code example which uses ClutterState.

 doc/cookbook/Makefile.am                           |    9 +
 doc/cookbook/animations.xml                        |  510 +++++++++++++++++++-
 ...tions-rotating-container-reverses-direction.ogv |  Bin 0 -> 204262 bytes
 .../videos/animations-rotating-x-centered.ogv      |  Bin 0 -> 154165 bytes
 ...ations-rotating-x-minus-180-with-y-minus-96.ogv |  Bin 0 -> 39584 bytes
 ...ations-rotating-x-minus-180-with-z-minus-96.ogv |  Bin 0 -> 31171 bytes
 .../videos/animations-rotating-x-minus-45.ogv      |  Bin 0 -> 30059 bytes
 doc/cookbook/videos/animations-rotating-y-45.ogv   |  Bin 0 -> 34009 bytes
 .../videos/animations-rotating-y-centered.ogv      |  Bin 0 -> 150864 bytes
 doc/cookbook/videos/animations-rotating-z-90.ogv   |  Bin 0 -> 53592 bytes
 .../videos/animations-rotating-z-centered.ogv      |  Bin 0 -> 200166 bytes
 11 files changed, 517 insertions(+), 2 deletions(-)

commit 94fcbafe18b2e7079c79dde393de4b25fad02456
Author: Elliot Smith <elliot.smith@intel.com>
Date:   Wed Jul 21 15:44:16 2010 +0100

    cookbook: Add explanation about including code samples
    
    Updated the "Contributing" section to explain how to include
    a full code sample at the end of a recipe.

 doc/cookbook/clutter-cookbook.xml.in |   95 ++++++++++++++++++++++++++++++++++
 1 file changed, 95 insertions(+)

commit 9e29aac49a64adc3d1edcf54a473bbe2b074b98a
Author: Elliot Smith <elliot.smith@intel.com>
Date:   Wed Jul 21 14:42:31 2010 +0100

    cookbook: Make filename used in video example consistent
    
    Fixed video filename in sample markup to match the
    guidelines given in the "Contributing" section.

 doc/cookbook/clutter-cookbook.xml.in |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit 12ffe70a86440e04752d8dd18a1b8bc984a4e02b
Author: Elliot Smith <elliot.smith@intel.com>
Date:   Wed Jul 21 12:51:47 2010 +0100

    cookbook: Add example code for animated rotation
    
    Add example code demonstrating how to rotate in the x,y,z
    axes using ClutterState. Integrated with build.

 doc/cookbook/examples/.gitignore            |    1 +
 doc/cookbook/examples/Makefile.am           |    3 +
 doc/cookbook/examples/animations-rotating.c |  136 +++++++++++++++++++++++++++
 3 files changed, 140 insertions(+)

commit 385ac8e1811c1ca485ed129d96b8368d48955748
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Fri Jul 23 12:42:55 2010 +0100

    modules: Bump cairo to 1.9.12
    
    And add poppler.

 build/clutter.modules |   25 ++++++++++++++++++++++---
 1 file changed, 22 insertions(+), 3 deletions(-)

commit 3d806f498f1c4a02b2a166bdd5e124e7e11239cd
Author: Øyvind Kolås <pippin@linux.intel.com>
Date:   Fri Jul 23 12:16:37 2010 +0100

    effect: fix conversion from degrees to radians

 clutter/clutter-page-turn-effect.c |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit ec26466cdce5b701af7c82bce4588cb6f2e3180c
Author: Neil Roberts <neil@linux.intel.com>
Date:   Wed Jul 14 19:39:24 2010 +0100

    gles/cogl-shader.c: Store the shader type in CoglShader
    
    Nothing was storing the shader type when a shader was created so it
    would get confused about whether it was a custom vertex or fragment
    shader.
    
    Also the 'type' member of CoglShader was a GLenum but the only place
    that read it was treating it as if it was CoglShaderType. This changes
    it be CoglShaderType.

 clutter/cogl/cogl/driver/gles/cogl-shader-private.h |    2 +-
 clutter/cogl/cogl/driver/gles/cogl-shader.c         |    1 +
 2 files changed, 2 insertions(+), 1 deletion(-)

commit 616eccdad63ce35d5ce59094cf026970b799cf09
Author: Neil Roberts <neil@linux.intel.com>
Date:   Thu Jul 22 17:27:04 2010 +0100

    test-shader: Unref the ClutterShader after setting it on an actor
    
    Otherwise the test leaks the shader object and the underlying GLSL
    program.

 tests/interactive/test-shader.c |    4 ++++
 1 file changed, 4 insertions(+)

commit a639ed6593fa64c83bc4c462d9c3eac9bf543485
Author: Neil Roberts <neil@linux.intel.com>
Date:   Thu Jul 22 16:58:23 2010 +0100

    Plug the leaking CoglProgram and CoglShader
    
    _cogl_program_free and _cogl_shader_free never freed the struct their
    structs so it would end up leaking a little bit.

 clutter/cogl/cogl/driver/gl/cogl-program.c   |    2 ++
 clutter/cogl/cogl/driver/gl/cogl-shader.c    |    2 ++
 clutter/cogl/cogl/driver/gles/cogl-program.c |    2 ++
 clutter/cogl/cogl/driver/gles/cogl-shader.c  |    2 ++
 4 files changed, 8 insertions(+)

commit f17717717ab3266676053bc020f45b6bacdcee0f
Author: Neil Roberts <neil@linux.intel.com>
Date:   Thu Jul 22 16:14:59 2010 +0100

    configure.ac: Fix the missing COGL_HAS_GLES[12] defines
    
    In 7fae8ac051 the two cogl-defines.h files from GLES and GL were
    unified. However this missed out the COGL_HAS_GLES[12] defines from
    GLES. The configure.ac still made an AC_SUBST for the right version
    but the replacement was never put in any headers. This fixes it so
    that instead of directly calling AC_SUBST the value is now put into a
    variable which later gets added to COGL_DEFINES so that it will end up
    in cogl-defines.h

 configure.ac |   12 ++++++++----
 1 file changed, 8 insertions(+), 4 deletions(-)

commit d87b34f98283797a13e983f37ef9dd9f43407602
Author: Neil Roberts <neil@linux.intel.com>
Date:   Thu Jul 22 16:12:46 2010 +0100

    Fix a small typo in configure.ac for the COGL_DEFINES variable
    
    There was an initializer for the COGL_DEFINES variable which sets it
    to the empty value before it is filled in. The name of the variable
    wasn't spelt right so it wouldn't work properly. This doesn't really
    matter because it would default to empty anyway.

 configure.ac |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit a1c74209795c341dc89dbe2f6c3a91242a8c813c
Author: Neil Roberts <neil@linux.intel.com>
Date:   Thu Jul 15 17:10:31 2010 +0100

    test-shader: The tex_coord varying is now an array under GLES2
    
    Since the GLES2 wrapper grew support for multi-texturing, the
    tex_coord varying variable defined in the vertex shader is actually an
    array of texture coordinates so it ought to match in the fragment
    shader in test-shader. This seemed to work anyway under Mesa/Intel but
    under NVidia it does not so I don't think it's safe to assume that
    linking a non-array varying with an array will work.

 tests/interactive/test-shader.c |    4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

commit 488e376b7e356614494bee62ed0437ea721c2447
Author: Neil Roberts <neil@linux.intel.com>
Date:   Thu Jul 22 19:58:47 2010 +0100

    cogl-bitmap-pixbuf: Avoid copying the buffer in more circumstances
    
    When loading an RGB image GdkPixbuf will pad the rowstride so that the
    beginning of each row is aligned to 4 bytes. This was causing us to
    fallback to the code that copies the buffer. It is probably safe to
    avoid copying the buffer if we can detect that the rowstride is simply
    an alignment of the packed rowstride.
    
    This also changes the copying fallback code so that it uses the
    aligned rowstride. However it is now extremely unlikely that the
    fallback code would ever be used.

 clutter/cogl/cogl/cogl-bitmap-pixbuf.c |   33 +++++++++++++++++++++++---------
 1 file changed, 24 insertions(+), 9 deletions(-)

commit b9295bf0e5e103c2acd4b1c14d402780e824c69a
Author: Neil Roberts <neil@linux.intel.com>
Date:   Thu Jul 22 19:15:44 2010 +0100

    cogl-bitmap-pixbuf: Fix the rowstride used when copying a GdkPixbuf
    
    In commit b780413e5ae4b the GdkPixbuf loading code was changed so that
    if it needs to copy the pixbuf then it would tightly pack it. However
    it was still using the rowstride from the pixbuf so the image would
    end up skewed. This fixes it to use the real rowstride.
    
    http://bugzilla.clutter-project.org/show_bug.cgi?id=2235

 clutter/cogl/cogl/cogl-bitmap-pixbuf.c |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit bb1b1b151e28b87071cdc064af648f8c7d26b1e9
Author: Neil Roberts <neil@linux.intel.com>
Date:   Tue Jul 20 17:34:04 2010 +0100

    cogl-material: Don't map the shininess value to [0,1]
    
    In OpenGL the 'shininess' lighting parameter is floating point value
    limited to the range 0.0→128.0. This number is used to affect the size
    of the specular highlight. Cogl materials used to only accept a number
    between 0.0 and 1.0 which then gets multiplied by 128.0 before sending
    to GL. I think the assumption was that this is just a weird GL quirk
    so we don't expose it. However the value is used as an exponent to
    raise the attenuation to a power so there is no conceptual limit to
    the value.
    
    This removes the mapping and changes some of the documentation.
    
    http://bugzilla.clutter-project.org/show_bug.cgi?id=2222

 clutter/cogl/cogl/cogl-material-opengl.c |    6 ++----
 clutter/cogl/cogl/cogl-material.c        |    4 +++-
 clutter/cogl/cogl/cogl-material.h        |    9 +++++----
 3 files changed, 10 insertions(+), 9 deletions(-)

commit d76d82c88ffe8c1bdebef983716d8be77907e124
Author: Neil Roberts <neil@linux.intel.com>
Date:   Wed Jul 21 23:22:07 2010 +0100

    cogl-material: Always reset the GLSL program to zero when flushing
    
    When flushing a fixed-function or arbfp material it would always call
    disable_glsl to try to get rid of the previous GLSL shader. This is
    needed even if current_use_program_type is not GLSL because if an
    application calls cogl_program_uniform then Cogl will have to bind the
    program to set the uniform. If this happens then it won't update
    current_use_program_type presumably because the enabled state of arbfp
    is still valid.
    
    The problem was that disable_glsl would only select program zero when
    the current_use_program_type is set to GLSL which wouldn't be the case
    if cogl_program_uniform was called. This patch changes it to just
    directly call _cogl_gl_use_program_wrapper(0) instead of having a
    separate disable_glsl function. The current program is cached in the
    cogl context anyway so it shouldn't cause any extra unnecessary GL
    calls.
    
    http://bugzilla.clutter-project.org/show_bug.cgi?id=2232

 clutter/cogl/cogl/cogl-material-opengl.c |   15 ++-------------
 1 file changed, 2 insertions(+), 13 deletions(-)

commit ea255154f503112ee238b5c2c2b2ba1d3f77203f
Author: Chris Leick <c.leick@vollbio.de>
Date:   Thu Jul 22 11:40:57 2010 +0100

    po: Add de.po
    
    Signed-off-by: Emmanuele Bassi <ebassi@linux.intel.com>

 po/de.po |  104 ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 1 file changed, 104 insertions(+)

commit 24b9748f0a988110dfeda660d2f20df6e14cde3d
Author: Chris Kühl <chrisk@openismus.com>
Date:   Thu Jul 22 11:21:21 2010 +0200

    Fixed more set using *_get_* typos.
    
    http://bugzilla.clutter-project.org/show_bug.cgi?id=2233

 clutter/clutter-texture.c |    4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

commit 99d7d31318b44eacf8d8a64ee1bb92fc511ab8ce
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu Jul 22 10:48:21 2010 +0100

    docs: Improve the text of X11 event-related functions
    
    We need to make sure that people disabling event handling in Clutter
    call clutter_x11_handle_event() to update Clutter's internal state.

 clutter/x11/clutter-backend-x11.c |   15 ++++++++++-----
 clutter/x11/clutter-event-x11.c   |    8 ++++++--
 2 files changed, 16 insertions(+), 7 deletions(-)

commit 1dee65770a7eba85c899890e652d4cf32744c71a
Author: Neil Roberts <neil@linux.intel.com>
Date:   Thu Jul 22 10:04:06 2010 +0100

    Minor fix to the documentation for clutter_texture_get_sync_size
    
    The documentation was recursively referring to itself causing a stack
    overflow in the reader's brain.
    
    http://bugzilla.clutter-project.org/show_bug.cgi?id=2233

 clutter/clutter-texture.c |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit 706f42645a3436089ad33d9d07844cc4ae202b12
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Wed Jul 21 17:25:15 2010 +0100

    build: Depend on g-i 0.9.0
    
    The introspection format changed, so we should depend on the new one.

 configure.ac |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit eae4561929938057c398498267b7500796fa9d92
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Wed Jul 21 16:10:46 2010 +0100

    Clean up the private flags for ClutterActor
    
    Provide macros to quickly query a flag, and remove all namespacing
    except the initial 'CLUTTER'.

 clutter/clutter-actor.c               |  109 +++++++++++++++------------------
 clutter/clutter-backend.c             |    2 +-
 clutter/clutter-cairo-texture.c       |    2 +-
 clutter/clutter-main.c                |   12 ++--
 clutter/clutter-private.h             |   34 ++++++----
 clutter/clutter-stage.c               |   16 ++---
 clutter/egl/clutter-backend-egl.c     |    2 +-
 clutter/glx/clutter-backend-glx.c     |    2 +-
 clutter/osx/clutter-stage-osx.c       |    6 +-
 clutter/win32/clutter-backend-win32.c |    2 +-
 clutter/win32/clutter-stage-win32.c   |    6 +-
 clutter/x11/clutter-event-x11.c       |    2 +-
 clutter/x11/clutter-stage-x11.c       |    8 +--
 13 files changed, 97 insertions(+), 106 deletions(-)

commit 0dfbf010b8d4a7ca877061134e3b02c362517cc3
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Wed Jul 21 15:21:08 2010 +0100

    x11: Add more checks to set_stage_foreign()
    
    Check all the pre-requisites to avoid segfaults later on.

 clutter/x11/clutter-stage-x11.c |    8 +++++---
 1 file changed, 5 insertions(+), 3 deletions(-)

commit 8538e1bf586464f841f8321aa313be4a372c8159
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Wed Jul 21 15:14:36 2010 +0100

    x11: Clean up TexturePixmap header and private data structure
    
    Align the header file and use bitfields instead of booleans.

 clutter/x11/clutter-x11-texture-pixmap.c |   22 ++++----
 clutter/x11/clutter-x11-texture-pixmap.h |   84 +++++++++++++++---------------
 2 files changed, 52 insertions(+), 54 deletions(-)

commit 0e80747a684339d116e7860b26a7049320525284
Author: Neil Roberts <neil@linux.intel.com>
Date:   Sat Jul 17 14:08:28 2010 +0100

    cogl-material: Consider the shader when deciding if materials equate
    
    _cogl_material_equal was ignoring the user shader state so rectangles
    with different shaders would get batched together.
    
    http://bugzilla.clutter-project.org/show_bug.cgi?id=2220

 clutter/cogl/cogl/cogl-material.c |   14 ++++++++++++++
 1 file changed, 14 insertions(+)

commit f2d0f0ab5f120c514b82d75478aea1e17ad51ba7
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Tue Jul 20 14:39:43 2010 +0100

    stage: Ignore redraws on destroyed stages
    
    We might get requests to redraw even during destruction; we should
    ignore them and do some NULL checks instead of blindly invoking
    functions.

 clutter/clutter-stage.c |    7 +++++++
 1 file changed, 7 insertions(+)

commit 7b6b2ea55b758486f7d0dbe6eb8fe0bd89610de8
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Tue Jul 20 14:39:01 2010 +0100

    stage-window: Add argument guards
    
    Validate the arguments passed to StageWindow's methods.

 clutter/clutter-stage-window.c |   35 ++++++++++++++++++++++++++---------
 1 file changed, 26 insertions(+), 9 deletions(-)

commit a7adfd874524bd0e4b1d61c0e1714d0037ffa70f
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Mon Jul 19 16:03:35 2010 +0100

    po: Re-sync Makefile.in.in
    
    Use the one that ships with gtk+.

 po/Makefile.in.in |   47 +++++++++++++++--------------------------------
 1 file changed, 15 insertions(+), 32 deletions(-)

commit e45b8be71b6f5a0e95db2b6f1d4d92fbe59d2cdc
Author: Elliot Smith <elliot.smith@intel.com>
Date:   Mon Jul 19 12:52:00 2010 +0100

    cookbook: Fix key press to examine modifers correctly
    
    The simple key press example in the cookbook used a brittle
    and incorrect switch statement to test modifier values. Instead,
    use logical "&" of the state with the modifiers we're interested
    in to check which keys were pressed.
    
    http://bugzilla.clutter-project.org/show_bug.cgi?id=2223

 doc/cookbook/events.xml |   32 ++++++++++++++------------------
 1 file changed, 14 insertions(+), 18 deletions(-)

commit 5865d2a4b393a86180a36505419f2502433ccc00
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Sun Jul 18 22:53:56 2010 +0100

    cookbook: Use TESTS_DATA_DIR
    
    We need the correct location for redhand.png if we want to load it
    in textures-reflection.

 doc/cookbook/examples/textures-reflection.c |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit dc19e26073c52fd7810a3a7f2fd98be67d2bab3e
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Sun Jul 18 11:20:44 2010 +0100

    cookbook: Add image and example for text-shadow

 doc/cookbook/text.xml |   28 +++++++++++++++++++++++++++-
 1 file changed, 27 insertions(+), 1 deletion(-)

commit 0dac5e0557a637099bba873abba6068f4c45cefa
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Sun Jul 18 11:15:25 2010 +0100

    cookbook: Include the textures-reflection example code
    
    Add a section at the end of the recipe containing the full code of the
    example.

 doc/cookbook/textures.xml |   44 ++++++++++++++++++++++----------------------
 1 file changed, 22 insertions(+), 22 deletions(-)

commit 76d8119a7fcdbd64566d8ef16f73e50b0ae28c7f
Author: Neil Roberts <neil@linux.intel.com>
Date:   Sat Jul 17 12:40:19 2010 +0100

    cogl-material-arbfp: Use separate buffers when calling g_ascii_dtostr
    
    g_ascii_dtostr was being used in four separate arguments to
    g_string_append_printf but all invocations of it were using the same
    buffer. This would end up with all of the arguments having the same
    value which would depend on whichever order the compiler evaluates
    them in. This patches changes it to use a multi-dimensional array and
    a loop to fill in the separate buffers.
    
    http://bugzilla.clutter-project.org/show_bug.cgi?id=2219

 clutter/cogl/cogl/cogl-material-arbfp.c |   19 ++++++++++---------
 1 file changed, 10 insertions(+), 9 deletions(-)

commit 90b74458d2ac8fcedea8f9dc3e28a3e9d9455bc7
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Sun Jul 18 10:56:35 2010 +0100

    cookbook: Add an empty recipe for shadows under text
    
    Currently, it's just an example and an image, but it should be easy to
    flesh it out properly for the "Text" chapter.

 doc/cookbook/Makefile.am             |    1 +
 doc/cookbook/clutter-cookbook.xml.in |    1 +
 doc/cookbook/examples/.gitignore     |    1 +
 doc/cookbook/examples/Makefile.am    |    3 ++
 doc/cookbook/examples/text-shadow.c  |   59 ++++++++++++++++++++++++++++++++++
 doc/cookbook/images/text-shadow.png  |  Bin 0 -> 17618 bytes
 doc/cookbook/text.xml                |   40 +++++++++++++++++++++++
 7 files changed, 105 insertions(+)

commit bb3dc013bffe387dd1532df4c0469a88ef54808a
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Sun Jul 18 10:53:06 2010 +0100

    cookbook: Add example code
    
    The cookbook should also include fully functional code examples. We can
    even XInclude them into the docbook XML itself.
    
    The examples should be built with the coobook, so that we can always
    make sure they are up to date.

 configure.ac                                |    1 +
 doc/cookbook/Makefile.am                    |    4 +
 doc/cookbook/examples/.gitignore            |    1 +
 doc/cookbook/examples/Makefile.am           |   28 +++++++
 doc/cookbook/examples/textures-reflection.c |  110 +++++++++++++++++++++++++++
 5 files changed, 144 insertions(+)

commit 5f4f2fa3c7e95d13664e40d3e238594170df1486
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Sat Jul 17 10:23:57 2010 +0100

    Add gmo files to the Git ignore list

 .gitignore |    1 +
 1 file changed, 1 insertion(+)

commit 6983429e4a937d6c64beb427b137290e16db4527
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Fri Jul 16 23:37:59 2010 +0100

    material-arbfp: Use locale-independent double to string conversion
    
    The ARBfp programs are created with a printf() wrapper, which usually
    fails in non-en locales as soon as you start throwing things like
    floating point values in the mix.
    
    We should use the g_ascii_dtostr() function which places a double into a
    string buffer in a locale-independent way.
    
    http://bugzilla.clutter-project.org/show_bug.cgi?id=2219

 clutter/cogl/cogl/cogl-material-arbfp.c |   16 +++++++++++-----
 1 file changed, 11 insertions(+), 5 deletions(-)

commit 6f220399ae862f49f3f2aa54ec6681e159f0a934
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Fri Jul 16 17:31:27 2010 +0100

    cookbook: Use the right tag for the screenshot
    
    Screenshots should be using the <screenshot> tag, not the <figure> one.

 doc/cookbook/textures.xml |   15 +++++++++++----
 1 file changed, 11 insertions(+), 4 deletions(-)

commit 71dfdf92d74603d4e8fc48eeb9da4a6a051d45f3
Merge: af6f023 7be6ed3
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Fri Jul 16 17:23:36 2010 +0100

    Merge remote branch 'elliot/cookbook-actor-opacity'
    
    Conflicts:
    	doc/cookbook/Makefile.am

commit af6f023a80dd02c39f02bd0876714129809377ec
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Fri Jul 16 17:20:38 2010 +0100

    cookbook: Add a missing image to the list

 doc/cookbook/Makefile.am |    5 ++++-
 1 file changed, 4 insertions(+), 1 deletion(-)

commit e92c8d72cc32a7403735138e723f18ae6ecee19c
Merge: ad1613a 489799b
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Fri Jul 16 17:13:12 2010 +0100

    Merge remote branch 'elliot/cookbook-include-videos'
    
    * elliot/cookbook-include-videos:
      cookbook: Tweak so that videos sit inside a paragraph for better spacing
      docs: Note the P_() macro in the HACKING file
      cookbook: Added support for inline video
    
    Conflicts:
    	doc/cookbook/Makefile.am

commit ad1613a93670fcdf1ca2e44d1435cf0655776c25
Merge: 4170eac da22150
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Fri Jul 16 17:12:37 2010 +0100

    Merge remote branch 'elliot/cookbook-animation-fading'
    
    * elliot/cookbook-animation-fading:
      cookbook: Minor modification to wording to improve clarity
      cookbook: Added recipe for fading actors in/out

commit 4170eacd94e73de1e25a648b9f0d94868af743a0
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Fri Jul 16 17:04:31 2010 +0100

    cookbook: Add a recipe for texture reflection
    
    A common request: how to create a clone of a texture that looks like a
    reflection.

 doc/cookbook/images/textures-reflection.png |  Bin 0 -> 23953 bytes
 doc/cookbook/textures.xml                   |  198 +++++++++++++++++++++++++++
 2 files changed, 198 insertions(+)

commit 7be6ed3334a55b7ba89d116905a603c625866c41
Author: Elliot Smith <elliot.smith@intel.com>
Date:   Thu Jul 15 19:47:53 2010 +0100

    cookbook: Added a recipe about making an actor transparent
    
    Explains how to make an actor transparent so that other actors
    are visible through it.
    
    Also explains a bit more generally about opacity and how
    it's computed from the actor, container, and color; and how actor
    visibility is affected by depth (fog) and depth order.

 doc/cookbook/Makefile.am                           |    5 +-
 doc/cookbook/actors.xml                            |  229 ++++++++++++++++++++
 .../actors-opacity-container-affects-opacity.png   |  Bin 0 -> 5150 bytes
 doc/cookbook/images/actors-opacity.png             |  Bin 0 -> 5029 bytes
 4 files changed, 233 insertions(+), 1 deletion(-)

commit da2215049852e43e6ae42d4097d8a59825e31dab
Author: Elliot Smith <elliot.smith@intel.com>
Date:   Fri Jul 16 12:48:56 2010 +0100

    cookbook: Minor modification to wording to improve clarity
    
    Text referred to three animation methods, but only provides
    examples for two of them; and in future there may be more/fewer
    than 3. So I reworded it.

 doc/cookbook/animations.xml |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit 962b3c68857813967c3f3fc62ca87e7e3bc9cf6d
Author: Elliot Smith <elliot.smith@intel.com>
Date:   Fri Jul 16 12:34:44 2010 +0100

    cookbook: Added recipe for fading actors in/out
    
    Added a recipe showing how to fade actors in/out by
    animating their opacity property, using both implicit
    animations and ClutterState.

 doc/cookbook/Makefile.am                           |    4 +
 doc/cookbook/animations.xml                        |  128 +++++++++++++++++++-
 .../videos/animations-fading-in-then-out.ogv       |  Bin 0 -> 92403 bytes
 doc/cookbook/videos/animations-fading-out.ogv      |  Bin 0 -> 64464 bytes
 4 files changed, 131 insertions(+), 1 deletion(-)

commit 3aa3893a1100ec24f713f6ca8f4272e95b00e518
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Fri Jul 16 12:01:42 2010 +0100

    docbook: Add an introduction to the texture section

 doc/cookbook/textures.xml |   17 ++++++++++++++---
 1 file changed, 14 insertions(+), 3 deletions(-)

commit e3de96c2043826f50380c7b10f7f8cbf9b1f55d1
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Fri Jul 16 11:29:28 2010 +0100

    po: Fix the LTR string translation

 po/zh_CN.po |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit a8595435b8b3e85b410abc46885402b8d34575b3
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Fri Jul 16 11:23:01 2010 +0100

    po: Remove unused LINGUAS file
    
    The ALL_LINGUAS variable is generated from the list of po files.

 po/LINGUAS |    1 -
 1 file changed, 1 deletion(-)

commit ec81e8d7388c3aa8ac6d5fcbff7f72deae0abe87
Author: raven <piotrdrag@gmail.com>
Date:   Fri Jul 16 11:18:02 2010 +0100

    Add pl translations
    
    Signed-off-by: Emmanuele Bassi <ebassi@linux.intel.com>

 po/pl.po |  117 ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 1 file changed, 117 insertions(+)

commit 9b7579d9161d0bd120bf5154a8c281ca068e97c2
Author: happyaron <happyaron.xu@gmail.com>
Date:   Fri Jul 16 11:17:30 2010 +0100

    Add zn_CN translations
    
    Signed-off-by: Emmanuele Bassi <ebassi@linux.intel.com>

 po/zh_CN.po |  112 +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 1 file changed, 112 insertions(+)

commit 489799bb4d956c74c1a89d7ba5d82ce3a25e56f2
Author: Elliot Smith <elliot.smith@intel.com>
Date:   Thu Jul 15 17:24:50 2010 +0100

    cookbook: Tweak so that videos sit inside a paragraph for better spacing

 doc/common/cookbook.xsl |   22 ++++++++++++----------
 1 file changed, 12 insertions(+), 10 deletions(-)

commit ec7b0b438962a60a5b269bd712724cc3e59b7795
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu Jul 15 14:26:16 2010 +0100

    docs: Note the P_() macro in the HACKING file

 doc/HACKING |    4 ++++
 1 file changed, 4 insertions(+)

commit 1d9c64ff16cc3070405cd6a67221712cf0893b7e
Author: Elliot Smith <elliot.smith@intel.com>
Date:   Thu Jul 15 13:27:02 2010 +0100

    cookbook: Added support for inline video
    
    Amended Makefile to copy content of videos directory into
    installation directories. Also copies videos and images
    into the html/ directory during the build, so that the
    built cookbook can be viewed locally (for testing without
    having to install).
    
    Added an XSLT template to transform Docbook <inlinemediaobject>
    elements into HTML 5 <video> elements, with a fallback to
    link to the video displayed for browsers without HTML 5 support.
    
    Added note to "Contributing" appendix explaining how to put
    video into a recipe.

 doc/common/cookbook.xsl              |   18 ++++++++++
 doc/cookbook/Makefile.am             |   32 +++++++++++++++--
 doc/cookbook/clutter-cookbook.xml.in |   66 +++++++++++++++++++++++++++++++++-
 doc/cookbook/videos/README           |    1 +
 4 files changed, 113 insertions(+), 4 deletions(-)

commit 6ea2fbc7297a1f6e3d78d705fdaef8307cf59d97
Author: Neil Roberts <neil@linux.intel.com>
Date:   Thu Jul 15 13:05:55 2010 +0100

    Add an internal _cogl_bitmap_new_from_buffer
    
    This function creates a CoglBitmap which internally references a
    CoglBuffer. The map and unmap functions will divert to mapping the
    buffer. There are also now bind and unbind functions which should be
    used instead of map and unmap whenever the data doesn't need to be
    read from the CPU but will instead be passed to GL for packing or
    unpacking. For bitmaps created from buffers this just binds the
    bitmap.
    
    cogl_texture_new_from_buffer now just uses this function to wrap the
    buffer in a bitmap rather than trying to bind the buffer
    immediately. This means that the buffer will be bound only at the
    point right before the texture data is uploaded.
    
    This approach means that using a pixel array will take the fastest
    upload route if possible, but can still fallback to copying the data
    by mapping the buffer if some conversion is needed. Previously it
    would just crash in this case because the texture functions were all
    passed a NULL pointer.
    
    http://bugzilla.clutter-project.org/show_bug.cgi?id=2112

 clutter/cogl/cogl/cogl-bitmap-private.h            |   25 ++++
 clutter/cogl/cogl/cogl-bitmap.c                    |  139 +++++++++++++++++++-
 clutter/cogl/cogl/cogl-texture.c                   |   37 ++----
 clutter/cogl/cogl/driver/gl/cogl-texture-driver.c  |  114 ++++++++--------
 .../cogl/cogl/driver/gles/cogl-texture-driver.c    |   81 ++++++------
 5 files changed, 261 insertions(+), 135 deletions(-)

commit 7eb0d01f9f4bda17307d1506974201570473106c
Author: Neil Roberts <neil@linux.intel.com>
Date:   Thu Jul 15 13:02:23 2010 +0100

    Add a Cogl debug flag for BITMAP
    
    CoglBitmap will soon want to report notes as it gets more complicated
    so this adds a debug flag for it.

 clutter/cogl/cogl/cogl-debug.c |    3 ++-
 clutter/cogl/cogl/cogl-debug.h |    3 ++-
 2 files changed, 4 insertions(+), 2 deletions(-)

commit b780413e5ae4b4fea2130b85d7590d397aea8cac
Author: Neil Roberts <neil@linux.intel.com>
Date:   Thu Jul 15 11:32:08 2010 +0100

    Try to avoid copying the GdkPixbuf when it is tightly packed
    
    The docs for GdkPixbuf say that the last row of the image won't
    necessarily be allocated to the size of the full rowstride. The rest
    of Cogl and possibly GL assumes that we can copy the bitmap with
    memcpy(height*rowstride) so we previously would copy the pixbuf data
    to ensure this. However if the rowstride is the same as bpp*width then
    there is no way for the last row to be under-allocated so in this case
    we can just directly upload from the gdk pixbuf. Now that CoglBitmap
    can be created with a destroy function we can make it keep a reference
    to the pixbuf and unref it during its destroy callback. GdkPixbuf
    seems to always pack the image with no padding between rows even if it
    is RGB so this should end up always avoiding the memcpy.
    
    The fallback code for when we do have to copy the pixbuf is now
    simplified so that it copies all of the rows in a single loop. We only
    copy the useful region of each row so this should be safe. The
    rowstride of the CoglBitmap is now always allocated to bpp*width
    regardless of the rowstride of the pixbuf.

 clutter/cogl/cogl/cogl-bitmap-pixbuf.c |   41 +++++++++++++++++++-------------
 1 file changed, 24 insertions(+), 17 deletions(-)

commit fc12c42a83084b9d3acd1ed5a1b3dd34057f54d8
Author: Neil Roberts <neil@linux.intel.com>
Date:   Wed Jul 7 18:44:16 2010 +0100

    cogl-bitmap: Encapsulate the CoglBitmap even internally
    
    The CoglBitmap struct is now only defined within cogl-bitmap.c so that
    all of its members can now only be accessed with accessor
    functions. To get to the data pointer for the bitmap image you must
    first call _cogl_bitmap_map and later call _cogl_bitmap_unmap. The map
    function takes the same arguments as cogl_pixel_array_map so that
    eventually we can make a bitmap optionally internally divert to a
    pixel array.
    
    There is a _cogl_bitmap_new_from_data function which constructs a new
    bitmap object and takes ownership of the data pointer. The function
    gets passed a destroy callback which gets called when the bitmap is
    freed. This is similar to how gdk_pixbuf_new_from_data
    works. Alternatively NULL can be passed for the destroy function which
    means that the caller will manage the life of the pointer (but must
    guarantee that it stays alive at least until the bitmap is
    freed). This mechanism is used instead of the old approach of creating
    a CoglBitmap struct on the stack and manually filling in the
    members. It could also later be used to create a CoglBitmap that owns
    a GdkPixbuf ref so that we don't necessarily have to copy the
    GdkPixbuf data when converting to a bitmap.
    
    There is also _cogl_bitmap_new_shared. This creates a bitmap using a
    reference to another CoglBitmap for the data. This is a bit of a hack
    but it is needed by the atlas texture backend which wants to divert
    the set_region virtual to another texture but it needs to override the
    format of the bitmap to ignore the premult flag.

 clutter/cogl/cogl/cogl-atlas-texture-private.h     |    2 +-
 clutter/cogl/cogl/cogl-atlas-texture.c             |  187 +++---
 clutter/cogl/cogl/cogl-bitmap-fallback.c           |  144 +++--
 clutter/cogl/cogl/cogl-bitmap-pixbuf.c             |   82 ++-
 clutter/cogl/cogl/cogl-bitmap-private.h            |  109 +++-
 clutter/cogl/cogl/cogl-bitmap.c                    |  228 ++++++--
 clutter/cogl/cogl/cogl-texture-2d-private.h        |    2 +-
 clutter/cogl/cogl/cogl-texture-2d-sliced-private.h |    2 +-
 clutter/cogl/cogl/cogl-texture-2d-sliced.c         |  607 +++++++++++---------
 clutter/cogl/cogl/cogl-texture-2d.c                |   70 ++-
 clutter/cogl/cogl/cogl-texture-3d-private.h        |    2 +-
 clutter/cogl/cogl/cogl-texture-3d.c                |  109 ++--
 clutter/cogl/cogl/cogl-texture-private.h           |    4 +-
 clutter/cogl/cogl/cogl-texture-rectangle-private.h |    2 +-
 clutter/cogl/cogl/cogl-texture-rectangle.c         |   43 +-
 clutter/cogl/cogl/cogl-texture.c                   |  355 +++++++-----
 clutter/cogl/cogl/cogl.c                           |   77 +--
 clutter/cogl/cogl/driver/gl/cogl-texture-driver.c  |  116 ++--
 .../cogl/cogl/driver/gles/cogl-texture-driver.c    |  200 ++++---
 19 files changed, 1421 insertions(+), 920 deletions(-)

commit fd886d9fc265dabd454e0dd3d13ea34d29211112
Author: Neil Roberts <neil@linux.intel.com>
Date:   Wed Jul 14 13:21:54 2010 +0100

    cogl-texture-2d-sliced: Store the internal format not image format
    
    The 'format' member of CoglTexture2DSliced is returned by
    cogl_texture_get_format. All of the other backends return the internal
    format of the GL texture in this case. However the sliced backend was
    returning the format of the image data used to create the texture. It
    doesn't make any sense to retain this information because it doesn't
    necessarily indicate the format of the actual texture. This patch
    changes it to store the internal format instead.

 clutter/cogl/cogl/cogl-texture-2d-sliced.c |   10 +++++-----
 1 file changed, 5 insertions(+), 5 deletions(-)

commit fae35f841180842449d3849df9ee665eb3a01c2d
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu Jul 15 14:26:16 2010 +0100

    docs: Note the P_() macro in the HACKING file

 doc/HACKING |    4 ++++
 1 file changed, 4 insertions(+)

commit fd27ca7398337fad6d475fcb8ee4a325daf50c0b
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu Jun 3 12:57:50 2010 +0100

    Mark property strings for translation
    
    Both the nick and the blurb fields should be translatable, for UI
    builders and other introspection-based tools.

 clutter/clutter-actor-meta.c             |   12 +-
 clutter/clutter-actor.c                  |  194 +++++++++++++-------------
 clutter/clutter-align-constraint.c       |   12 +-
 clutter/clutter-alpha.c                  |   12 +-
 clutter/clutter-animation.c              |   24 ++--
 clutter/clutter-animator.c               |    8 +-
 clutter/clutter-behaviour-depth.c        |    8 +-
 clutter/clutter-behaviour-ellipse.c      |   36 ++---
 clutter/clutter-behaviour-opacity.c      |    8 +-
 clutter/clutter-behaviour-path.c         |    6 +-
 clutter/clutter-behaviour-rotate.c       |   28 ++--
 clutter/clutter-behaviour-scale.c        |   16 +--
 clutter/clutter-behaviour.c              |   14 +-
 clutter/clutter-bin-layout.c             |   24 ++--
 clutter/clutter-bind-constraint.c        |   12 +-
 clutter/clutter-binding-pool.c           |    4 +-
 clutter/clutter-box-layout.c             |   64 ++++-----
 clutter/clutter-box.c                    |   12 +-
 clutter/clutter-cairo-texture.c          |    8 +-
 clutter/clutter-child-meta.c             |    8 +-
 clutter/clutter-click-action.c           |    9 +-
 clutter/clutter-clone.c                  |    4 +-
 clutter/clutter-colorize-effect.c        |    4 +-
 clutter/clutter-deform-effect.c          |   13 +-
 clutter/clutter-desaturate-effect.c      |    4 +-
 clutter/clutter-device-manager.c         |    4 +-
 clutter/clutter-drag-action.c            |   13 +-
 clutter/clutter-flow-layout.c            |   33 +++--
 clutter/clutter-input-device.c           |   12 +-
 clutter/clutter-interval.c               |    5 +-
 clutter/clutter-layout-meta.c            |    4 +-
 clutter/clutter-media.c                  |   36 ++---
 clutter/clutter-rectangle.c              |   16 +--
 clutter/clutter-script.c                 |    8 +-
 clutter/clutter-shader-effect.c          |    4 +-
 clutter/clutter-shader.c                 |   16 +--
 clutter/clutter-stage.c                  |   60 ++++----
 clutter/clutter-state.c                  |    8 +-
 clutter/clutter-text.c                   |  117 ++++++++--------
 clutter/clutter-texture.c                |  221 +++++++++++++-----------------
 clutter/x11/clutter-x11-texture-pixmap.c |   59 ++++----
 po/POTFILES.in                           |   36 +++++
 42 files changed, 596 insertions(+), 600 deletions(-)

commit 8be43b52854caad62114b5a204cc78ecf716a04d
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu Jun 3 12:56:17 2010 +0100

    Add P_() macro for translating property strings
    
    The P_() macro adds a context for the property nick and blurb. In order
    to make xgettext recognize it, we need to drop glib-gettexize inside the
    autogen.sh script and ship a modified Makefile.in.in with Clutter.

 .gitignore                          |    1 -
 autogen.sh                          |    8 -
 clutter/clutter-behaviour-ellipse.c |    4 +
 clutter/clutter-main.c              |    2 +-
 clutter/clutter-private.h           |   11 ++
 clutter/clutter-util.c              |   20 +++
 configure.ac                        |    2 +-
 po/Makefile.in.in                   |  281 +++++++++++++++++++++++++++++++++++
 8 files changed, 318 insertions(+), 11 deletions(-)

commit 292597a9e10a1b178b9cff5ed27a4cca6bec50f6
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu Jun 3 12:32:54 2010 +0100

    build: Use AS_ALL_LINGUAS
    
    The AS_ALL_LINGUAS m4 macro allows configure-time generation of the
    ALL_LINGUAS variable from the translations inside po/ instead of using
    the LINGUAS file.

 build/autotools/Makefile.am   |    1 +
 build/autotools/as-linguas.m4 |   24 ++++++++++++++++++++++++
 configure.ac                  |    3 +--
 3 files changed, 26 insertions(+), 2 deletions(-)

commit fff5558ad25d3a633657c2bd4558132b21dc8ab8
Author: Nate Stedman <natesm@gmail.com>
Date:   Wed Jul 14 14:46:23 2010 -0400

    Fixes build with GLX on Mac OS X.
    
    Moves preprocessor #ifdef __linux_ above else statement, avoiding the
    lack of an else block if __linux__ is not defined.
    
    http://bugzilla.clutter-project.org/show_bug.cgi?id=2212
    
    Signed-off-by: Emmanuele Bassi <ebassi@linux.intel.com>

 clutter/glx/clutter-stage-glx.c |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit e7ae71e072fa7f4218b9601c3c7675e516a11f64
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu Jul 15 00:26:42 2010 +0100

    build: Fix include path for Cally's introspection
    
    The introspection scanner does not include '.' by default, so it was
    always using the installed copy of Clutter-1.0.gir. Which obviously
    wouldn't work if we didn't have one.

 clutter/Makefile.am |    3 +++
 1 file changed, 3 insertions(+)

commit 54b2e1781ee9ed4bd195ac1e91c3cd35e952de93
Author: Neil Roberts <neil@linux.intel.com>
Date:   Wed Jul 14 17:49:16 2010 +0100

    gles/cogl-texture-driver.c: Fix the include for cogl-material-private
    
    In ddb9016be4 the GL texture driver backend was changed to include
    cogl-material-opengl-private.h instead of cogl-material-private.h.
    However the gles texture backend was missed from this so it was giving
    a compiler warning about using an undeclared function.

 clutter/cogl/cogl/driver/gles/cogl-texture-driver.c |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit ccdcbbb46b91ede23eadabff271e9bed6845eac5
Author: Neil Roberts <neil@linux.intel.com>
Date:   Wed Jul 14 17:45:15 2010 +0100

    cogl-texture-3d: Use glTexSubImage3D through an indirect pointer
    
    glTexSubImage3D was being called directly in cogl-texture-3d.c but the
    function is only available since GL version 1.2 so on Windows it won't
    be possible to directly link to it. Also under GLES it is only
    available conditionally in an extension.

 clutter/cogl/cogl/cogl-texture-3d.c                  |    1 +
 clutter/cogl/cogl/driver/gl/cogl-feature-functions.h |    7 +++++++
 2 files changed, 8 insertions(+)

commit 943266db3b31f99438a27473c6feb2aa5f71abb8
Author: Neil Roberts <neil@linux.intel.com>
Date:   Wed Jul 14 16:35:33 2010 +0100

    cogl-texture-3d: Fix the cogl-material-private header include
    
    In ddb9016be4 the texture backends were changed to include
    cogl-material-opengl-private.h instead of cogl-material-private.h.
    However the 3D texture backend was missed from this so it was giving a
    compiler warning about using an undeclared function.

 clutter/cogl/cogl/cogl-texture-3d.c |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit d0d72e4d979de1078aeed00a5228c33296cd014d
Author: Neil Roberts <neil@linux.intel.com>
Date:   Wed Jul 14 16:34:36 2010 +0100

    cogl-texture-3d: Don't include cogl-texture-2d-private.h
    
    I think this was included by a cut-and-paste error as it isn't needed
    anywhere in the source.

 clutter/cogl/cogl/cogl-texture-3d.c |    1 -
 1 file changed, 1 deletion(-)

commit 5e6697038565ab8123e5f6ebe4e95c2c2c9145b1
Author: Robert Bragg <robert@linux.intel.com>
Date:   Sat Jul 10 03:40:47 2010 +0100

    material: splits out all the state flushing code
    
    This moves the code supporting _cogl_material_flush_gl_state into
    cogl-material-opengl.c as part of an effort to reduce the size of
    cogl-material.c to keep it manageable.

 clutter/cogl/cogl/cogl-journal.c                 |    1 +
 clutter/cogl/cogl/cogl-material-opengl-private.h |    7 +
 clutter/cogl/cogl/cogl-material-opengl.c         | 1014 +++++++++++++++++++++
 clutter/cogl/cogl/cogl-material-private.h        |   26 +-
 clutter/cogl/cogl/cogl-material.c                | 1061 +---------------------
 clutter/cogl/cogl/cogl-path.c                    |    1 +
 clutter/cogl/cogl/cogl-primitives.c              |    1 +
 clutter/cogl/cogl/cogl-vertex-buffer.c           |    1 +
 clutter/cogl/cogl/cogl.c                         |    1 +
 clutter/cogl/cogl/driver/gl/cogl-program.c       |    1 +
 10 files changed, 1088 insertions(+), 1026 deletions(-)

commit ddb9016be4bda2980712edef4ae37f73cfd05104
Author: Robert Bragg <robert@linux.intel.com>
Date:   Sat Jul 10 02:53:38 2010 +0100

    material: split the texture unit management out
    
    In general cogl-material.c has become far to large to manage in one
    source file. As one of the ways to try and break it down this patch
    starts to move some of lower level texture unit state management out
    into cogl-material-opengl.c. The naming is such because the plan is to
    follow up and migrate the very GL specific state flushing code into the
    same file.

 clutter/cogl/cogl/Makefile.am                      |    2 +
 clutter/cogl/cogl/cogl-atlas-texture.c             |    1 +
 clutter/cogl/cogl/cogl-context.c                   |    1 +
 clutter/cogl/cogl/cogl-material-fixed.c            |    1 +
 clutter/cogl/cogl/cogl-material-opengl-private.h   |  148 +++++++++++++
 clutter/cogl/cogl/cogl-material-opengl.c           |  230 ++++++++++++++++++++
 clutter/cogl/cogl/cogl-material-private.h          |  110 ----------
 clutter/cogl/cogl/cogl-material.c                  |  197 +----------------
 clutter/cogl/cogl/cogl-texture-2d-sliced.c         |    2 +-
 clutter/cogl/cogl/cogl-texture-2d.c                |    2 +-
 clutter/cogl/cogl/cogl-texture-rectangle.c         |    1 +
 clutter/cogl/cogl/driver/gl/cogl-texture-driver.c  |    2 +-
 clutter/cogl/cogl/winsys/cogl-texture-pixmap-x11.c |    1 +
 13 files changed, 391 insertions(+), 307 deletions(-)

commit 9e893e684e89fd9da1d7542cbbc3563d318c1c5c
Author: Robert Bragg <robert@linux.intel.com>
Date:   Sat Jul 10 01:36:22 2010 +0100

    material: copy_differences: handle copying fog state
    
    When the support for redirecting the legacy fog state through cogl
    material was added in 9b9e764dc, the code to handle copying the fog
    state in _cogl_material_copy_differences was missed.

 clutter/cogl/cogl/cogl-material.c |    7 +++++++
 1 file changed, 7 insertions(+)

commit ceb57087a76056b27f55ea67a2f97915570ad8cb
Author: Neil Roberts <neil@linux.intel.com>
Date:   Tue Jul 13 18:41:01 2010 +0100

    Add a GL_GENERATE_MIPMAP fallback to the texture 2d and 3d backends
    
    The CoglTexture2DSliced backend has a fallback for when the
    framebuffer extension is missing so it's not possible to use
    glGenerateMipmap. This involves keeping a copy of the upper-left pixel
    of the tex image so that we can temporarily enable GL_GENERATE_MIPMAP
    on the texture object and do a sub texture update by reuploading the
    contents of the first pixel. This patch copies that mechanism to the
    2D and 3D backends. The CoglTexturePixel structure which was
    previously internal to the sliced backend has been moved to
    cogl-texture-private.h so that it can be shared.

 clutter/cogl/cogl/cogl-texture-2d-private.h        |    2 +
 clutter/cogl/cogl/cogl-texture-2d-sliced-private.h |   13 -----
 clutter/cogl/cogl/cogl-texture-2d.c                |   48 ++++++++++++++-----
 clutter/cogl/cogl/cogl-texture-3d-private.h        |    2 +
 clutter/cogl/cogl/cogl-texture-3d.c                |   50 +++++++++++++-------
 clutter/cogl/cogl/cogl-texture-private.h           |   16 +++++++
 6 files changed, 89 insertions(+), 42 deletions(-)

commit ff56f4ac6f763dbce730454b8aa0806a1127e6cd
Merge: 0cbfabc 6c913aa
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Tue Jul 13 16:12:14 2010 +0100

    Merge branch 'wip/xkb-support'
    
    * wip/xkb-support:
      x11: Use XKB to translate keycodes into key symbols
      x11: Use XKB to track the Locks state
      x11: Use XKB detectable auto-repeat
      x11: Add a Keymap ancillary object
      x11: Store the group inside the event platform data
      events: Add platform-data to allocated Events
      build: Check for the XKB extension

commit 0cbfabcda468746a57b922d43778e8c8bd4c1b59
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Fri Apr 16 15:34:36 2010 +0100

    stage: Add the NO_CLEAR_ON_PAINT hint
    
    Some apps or some use cases don't need to clear the stage on immediate
    rendering GPUs. A media player playing a fullscreen video or a
    tile-based game, for instance.
    
    These apps are redrawing the whole screen, so we can avoid clearing the
    color buffer when preparing to paint the stage, since there is no
    blending with the stage color being performed.
    
    We can add an private set of hints to ClutterStage, and expose accessors
    for each potential hint; the first hint is the 'no-clear' one.
    
    http://bugzilla.clutter-project.org/show_bug.cgi?id=2058

 clutter/clutter-stage.c                    |  134 ++++++++++++++++++++++++++--
 clutter/clutter-stage.h                    |    4 +
 doc/reference/clutter/clutter-sections.txt |    2 +
 3 files changed, 135 insertions(+), 5 deletions(-)

commit 984e04cae8139de268686158ff627d843bab777a
Author: Neil Roberts <neil@linux.intel.com>
Date:   Fri Jul 2 13:33:06 2010 +0100

    Make the material functions for setting the p wrap mode public
    
    Now that we have 3D texture support it makes sense to expose the wrap
    mode for the p coordinate.

 clutter/cogl/cogl/cogl-material-private.h |   10 --------
 clutter/cogl/cogl/cogl-material.c         |   15 +++++-------
 clutter/cogl/cogl/cogl-material.h         |   38 ++++++++++++++++++++++++++---
 clutter/cogl/cogl/cogl-vertex-buffer.c    |    2 +-
 doc/reference/cogl/cogl-sections.txt      |    2 ++
 5 files changed, 43 insertions(+), 24 deletions(-)

commit 192cfa7a58bf00cab41ee91b6791e3682dfe4053
Author: Neil Roberts <neil@linux.intel.com>
Date:   Mon Jul 12 17:01:32 2010 +0100

    Rename the third texure coordinate from 'r' to 'p'
    
    Using 'r' to name the third component is problematic because that is
    commonly used to represent the red component of a vector representing
    a color. Under GLSL this is awkward because the texture swizzling for
    a vector uses a single letter for each component and the names for
    colors, textures and positions are synonymous. GLSL works around this
    by naming the components of the texture s, t, p and q. Cogl already
    effectively already exposes this naming because it exposes GLSL so it
    makes sense to use that naming consistently. Another alternative could
    be u, v and w. This is what Blender and Direct3D use. However the w
    component conflicts with the w component of a position vertex.

 clutter/cogl/cogl/cogl-atlas-texture.c             |    4 +-
 clutter/cogl/cogl/cogl-material-private.h          |    8 +--
 clutter/cogl/cogl/cogl-material.c                  |   68 ++++++++++++--------
 clutter/cogl/cogl/cogl-sub-texture.c               |    4 +-
 clutter/cogl/cogl/cogl-texture-2d-sliced.c         |    2 +-
 clutter/cogl/cogl/cogl-texture-2d.c                |    2 +-
 clutter/cogl/cogl/cogl-texture-3d-private.h        |    2 +-
 clutter/cogl/cogl/cogl-texture-3d.c                |   10 +--
 clutter/cogl/cogl/cogl-texture-private.h           |    4 +-
 clutter/cogl/cogl/cogl-texture-rectangle.c         |    2 +-
 clutter/cogl/cogl/cogl-texture.c                   |    4 +-
 clutter/cogl/cogl/cogl-vertex-buffer.c             |    4 +-
 clutter/cogl/cogl/winsys/cogl-texture-pixmap-x11.c |    4 +-
 13 files changed, 65 insertions(+), 53 deletions(-)

commit cefc0e381bfebfdf766b8331e82da474e848013b
Author: Neil Roberts <neil@linux.intel.com>
Date:   Thu Jul 1 22:05:51 2010 +0100

    Add a conformance test for 3D textures
    
    This creates a 3D texture with different colors on all of the images
    and renders it using a VBO to verify that the texture coordinates can
    select all of the images.

 tests/conform/.gitignore             |    1 +
 tests/conform/Makefile.am            |    1 +
 tests/conform/test-cogl-texture-3d.c |  230 ++++++++++++++++++++++++++++++++++
 tests/conform/test-conform-main.c    |    1 +
 4 files changed, 233 insertions(+)

commit dfea57b45ab4636b3484c0c1eed615da0f97f112
Author: Neil Roberts <neil@linux.intel.com>
Date:   Thu Jul 1 22:04:59 2010 +0100

    Add a Cogl texture 3D backend
    
    This adds a publicly exposed experimental API for a 3D texture
    backend. There is a feature flag which can be checked for whether 3D
    textures are supported. Although we require OpenGL 1.2 which has 3D
    textures in core, GLES only provides them through an extension so the
    feature can be used to detect that.
    
    The textures can be created with one of two new API functions :-
    
    cogl_texture_3d_new_with_size
    
     and
    
    cogl_texture_3d_new_from_data
    
    There is also internally a new_from_bitmap function. new_from_data is
    implemented in terms of this function.
    
    The two constructors are effectively the only way to upload data to a
    3D texture. It does not work to call glTexImage2D with the
    GL_TEXTURE_3D target so the virtual for cogl_texture_set_region does
    nothing. It would be possible to make cogl_texture_get_data do
    something sensible like returning all of the images as a single long
    image but this is not currently implemented and instead the virtual
    just always fails. We may want to add API specific to the 3D texture
    backend to get and set a sub region of the texture.
    
    All of those three functions can throw a GError. This will happen if
    the GPU does not support 3D textures or it does not support NPOTs and
    an NPOT size is requested. It will also fail if the FBO extension is
    not supported and the COGL_TEXTURE_NO_AUTO_MIPMAP flag is not
    given. This could be avoided by copying the code for the
    GL_GENERATE_MIPMAP TexParameter fallback, but in the interests of
    keeping the code simple this is not yet done.
    
    This adds a couple of functions to cogl-texture-driver for uploading
    3D data and querying the 3D proxy
    texture. prep_gl_for_pixels_upload_full now also takes sets the
    GL_UNPACK_IMAGE_HEIGHT parameter so that 3D textures can have padding
    between the images. Whenever 3D texture is uploading, both the height
    of the images and the height of all of the data is specified (either
    explicitly or implicilty from the CoglBitmap) so that the image height
    can be deduced by dividing by the depth.

 clutter/cogl/cogl/Makefile.am                      |    3 +
 clutter/cogl/cogl/cogl-material-arbfp.c            |    7 +
 clutter/cogl/cogl/cogl-texture-3d-private.h        |   96 +++
 clutter/cogl/cogl/cogl-texture-3d.c                |  657 ++++++++++++++++++++
 clutter/cogl/cogl/cogl-texture-3d.h                |  154 +++++
 clutter/cogl/cogl/cogl-texture-driver.h            |   26 +
 clutter/cogl/cogl/cogl-types.h                     |    4 +-
 clutter/cogl/cogl/cogl.h                           |    1 +
 .../cogl/cogl/driver/gl/cogl-feature-functions.h   |   14 +
 clutter/cogl/cogl/driver/gl/cogl-texture-driver.c  |  108 +++-
 .../cogl/cogl/driver/gles/cogl-feature-functions.h |   19 +
 clutter/cogl/cogl/driver/gles/cogl-gles2-wrapper.c |   23 +-
 clutter/cogl/cogl/driver/gles/cogl-gles2-wrapper.h |    4 +
 .../cogl/cogl/driver/gles/cogl-texture-driver.c    |  135 +++-
 doc/reference/cogl/cogl-docs.xml.in                |    1 +
 doc/reference/cogl/cogl-sections.txt               |    8 +
 16 files changed, 1233 insertions(+), 27 deletions(-)

commit 8ccf8f6f08623492ca2b5af93d3384878e53d912
Author: Neil Roberts <neil@linux.intel.com>
Date:   Mon Jul 12 14:30:44 2010 +0100

    configure: Include gl2ext.h or glext.h under GLES
    
    Under big GL, glext.h is included automatically by gl.h. However under
    GLES this doesn't appear to happen so it has to be included explicitly
    to get the defines for extensions. This patch changes the
    clutter_gl_header to be called cogl_gl_headers and it can now take a
    space seperated list of multiple headers. This is then later converted
    to a list of #include lines which ends up cogl-defines.h. The gles2
    and gles1 backends now add their respective ext header to this list.

 clutter/cogl/cogl/cogl-defines.h.in |    2 +-
 configure.ac                        |   36 +++++++++++++++++++++--------------
 2 files changed, 23 insertions(+), 15 deletions(-)

commit 8940c3068183c4e78bbb8a2c3570c3c77d8ff509
Author: Neil Roberts <neil@linux.intel.com>
Date:   Thu Jul 1 21:49:16 2010 +0100

    Make a public CoglBitmapError enum
    
    There are many places in the texture backend that need to do
    conversion using the CoglBitmap code. Currently none of these
    functions can throw an error but they do return a value to indicate
    failure. In future it would make sense if new texture functions could
    throw an error and in that case they would want to use a CoglBitmap
    error if the failure was due to the conversion. This moves the
    internal CoglBitmap error from the quartz backend to be public in
    cogl-bitmap.h so that it can be used in this way.

 clutter/cogl/cogl/cogl-bitmap-pixbuf.c |   16 ----------------
 clutter/cogl/cogl/cogl-bitmap.c        |    5 +++++
 clutter/cogl/cogl/cogl-bitmap.h        |   32 ++++++++++++++++++++++++++++++++
 doc/reference/cogl/cogl-sections.txt   |    2 ++
 4 files changed, 39 insertions(+), 16 deletions(-)

commit 539b3f83e1614ebe2b93b8ce3c713cbcee6ea975
Author: Neil Roberts <neil@linux.intel.com>
Date:   Tue Jul 13 12:59:24 2010 +0100

    Rename COGL_ERROR_MISSING_FEATURE to COGL_ERROR_UNSUPPORTED
    
    We can use this error in more unsupported situations than just when we
    have a Cogl feature flag for the error. For example if a non-sliced
    texture is created with dimensions that are too large then we could
    throw this error. Therefore it seems good to rename to something more
    general.

 clutter/cogl/cogl/cogl-material.c |    4 ++--
 clutter/cogl/cogl/cogl-types.h    |   21 ++++++++++++++++++---
 2 files changed, 20 insertions(+), 5 deletions(-)

commit 423f7128711ee891ef88f18a6b7bb1d28850ac55
Author: Neil Roberts <neil@linux.intel.com>
Date:   Thu Jul 1 11:07:03 2010 +0100

    Move _cogl_texture_2d_is_pot to cogl-util.h
    
    This function could be used in many places in Cogl so it makes sense
    to share it in cogl-util.h as _cogl_util_is_pot().

 clutter/cogl/cogl/cogl-texture-2d.c |   11 ++---------
 clutter/cogl/cogl/cogl-util.h       |    8 ++++++++
 2 files changed, 10 insertions(+), 9 deletions(-)

commit 31c127bfa7066f57d2b15957610ff4c12b5b5465
Author: Neil Roberts <neil@linux.intel.com>
Date:   Tue Jul 13 13:59:07 2010 +0100

    cogl-gles2-wrapper: Layers aren't equal if one is enabled and one is not
    
    Previously when comparing whether the settings for a layer are equal
    it would only check if one of them was enabled. If so then it would
    assume the other one was enabled and continue to compare the texture
    environment. Now it also checks whether the enabledness differs.

 clutter/cogl/cogl/driver/gles/cogl-gles2-wrapper.c |   60 +++++++++++---------
 1 file changed, 33 insertions(+), 27 deletions(-)

commit 6c913aa55e67d56c5095f48a61aaef85961736ec
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Tue Jul 13 11:54:44 2010 +0100

    x11: Use XKB to translate keycodes into key symbols
    
    And fall back to XKeycodeToKeysym() if XKB is not available.

 clutter/x11/clutter-event-x11.c  |   15 +++++---
 clutter/x11/clutter-keymap-x11.c |   73 ++++++++++++++++++++++++++++++++++++--
 clutter/x11/clutter-keymap-x11.h |    6 ++++
 3 files changed, 87 insertions(+), 7 deletions(-)

commit 1ea4c50041b3193a83e0336e9a39a91b57bdb7ed
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Tue Jul 13 09:15:21 2010 +0100

    x11: Use XKB to track the Locks state
    
    For Caps Lock and Num Lock. Store the state of both in the
    platform-specific per-event data structure. No accessors, yet.

 clutter/x11/clutter-event-x11.c  |   17 +++++---
 clutter/x11/clutter-keymap-x11.c |   83 ++++++++++++++++++++++++++++++++++++--
 clutter/x11/clutter-keymap-x11.h |    6 ++-
 3 files changed, 96 insertions(+), 10 deletions(-)

commit bf2f8d670d449299aba85526ebc3289b20f3d300
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Mon Jul 12 18:04:03 2010 +0100

    x11: Use XKB detectable auto-repeat
    
    If we have XKB support then we should be using it to turn on the
    detectable auto-repeat; this allows avoiding the peeking trick
    that emulates it inside the event handling code.

 clutter/x11/clutter-backend-x11.h |    3 +
 clutter/x11/clutter-event-x11.c   |   20 +++--
 clutter/x11/clutter-keymap-x11.c  |  155 ++++++++++++++++++++++++++++++++++++-
 clutter/x11/clutter-keymap-x11.h  |    3 +-
 4 files changed, 171 insertions(+), 10 deletions(-)

commit bea657d3d5e7306c10b245d5cf348e80e0084719
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Mon Jul 12 17:11:30 2010 +0100

    x11: Add a Keymap ancillary object
    
    We should try to abstract everything that is related with the key mapping
    to its own object, to avoid complicating ClutterBackendX11 any further.

 clutter/x11/Makefile.am           |    2 +
 clutter/x11/clutter-backend-x11.c |    6 ++
 clutter/x11/clutter-backend-x11.h |    3 +
 clutter/x11/clutter-event-x11.c   |   17 ++---
 clutter/x11/clutter-keymap-x11.c  |  123 +++++++++++++++++++++++++++++++++++++
 clutter/x11/clutter-keymap-x11.h  |   44 +++++++++++++
 6 files changed, 182 insertions(+), 13 deletions(-)

commit d345a61e6c017af594a4d9624a861035be4dd592
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu Jul 8 15:47:18 2010 +0100

    x11: Store the group inside the event platform data
    
    Now that we have private, per-event platform data, we can start putting
    it to good use. The first, most simple use is to store the key group
    given the event's modifiers. Since we assume a modern X11, we use XKB
    to retrieve it, or we simply fall back to 0 by default.
    
    The data is exposed as a ClutterX11-specific function, within the
    sanctioned clutter_x11_* namespace.

 clutter/x11/clutter-backend-x11.c |   25 +++++++++++
 clutter/x11/clutter-backend-x11.h |   12 +++++
 clutter/x11/clutter-event-x11.c   |   90 ++++++++++++++++++++++++++++++++++---
 clutter/x11/clutter-x11.h         |    2 +
 4 files changed, 122 insertions(+), 7 deletions(-)

commit f44ccba42e29b0bc1d32afaaeb83de51a4a35603
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Mon Jun 14 18:01:17 2010 +0100

    events: Add platform-data to allocated Events
    
    Events allocated by Clutter should have a pointer to platform-specific
    data; this would allow backends to add separate structures for holding
    ancillary data, whilst retaining the ClutterEvent structure for use on
    the stack.
    
    In theory, for Clutter 2.x we might just want to drop Event and use an
    opaque structure, or a typed data structure inheriting from
    GTypeInstance instead.

 clutter/clutter-backend.c |   30 ++++++++++++++++++++
 clutter/clutter-backend.h |    6 ++++
 clutter/clutter-event.c   |   68 +++++++++++++++++++++++++++++++++++++++++++--
 clutter/clutter-private.h |   11 +++++++-
 4 files changed, 112 insertions(+), 3 deletions(-)

commit fd6513858928b05ddac41cc660b6006ffaac6f01
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Mon Jun 14 17:29:21 2010 +0100

    build: Check for the XKB extension
    
    When compiling the X11 backends.

 README       |    1 +
 configure.ac |   20 +++++++++++++++++++-
 2 files changed, 20 insertions(+), 1 deletion(-)

commit 698fd7d9601aa729f4bc1c261adda5d7b5e6dc08
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Mon Jul 12 21:43:04 2010 +0100

    Post-release version bump to 1.3.9

 configure.ac |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit e1320b559d1ff8ccb5aa9a5f0e36ac019cab2d69
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Mon Jul 12 21:31:15 2010 +0100

    Release 1.3.8

 NEWS         |   42 +++++++++++++++++++++++++++++++++++++++++-
 configure.ac |    2 +-
 2 files changed, 42 insertions(+), 2 deletions(-)

commit 1eec056bfd29119a515be072f92807a9398a4a37
Merge: e2a553d 9d96c21
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Mon Jul 12 21:25:25 2010 +0100

    Merge remote branch 'elliot/cookbook-animation-inversion'
    
    * elliot/cookbook-animation-inversion:
      cookbook: Fixed invalid XML tag
      cookbook: Added "inverting an animation" recipe
      docs: Enabled animation section

commit e2a553da86f3c62d167b9898e337ff10f43d3575
Merge: 2de61da 97ac28e
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Mon Jul 12 21:25:22 2010 +0100

    Merge remote branch 'elliot/cookbook-animation-intro'
    
    * elliot/cookbook-animation-intro:
      cookbook: Added introduction for animations section
      docs: Enabled animation section

commit 2de61da29661585274fd5e10c27110f7eb1fe6fc
Merge: 25dd0ae 9e5a18f
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Mon Jul 12 21:20:30 2010 +0100

    Merge remote branch 'elliot/cookbook-consistency'
    
    * elliot/cookbook-consistency:
      cookbook: Fixed typo
      cookbook: Fix build so CSS files get installed
      cookbook: Moved paragraph where it logically belongs
      cookbook: Added some judicious note elements
      cookbook: Added more information for contributors
      cookbook: Link out to docbook site
      cookbook: Made docbook element usage consistent
      cookbook: Additional selectors in CSS stylesheet
      cookbook: Copy the CSS file into the HTML build directory

commit 25dd0ae356e7e0486e2a56c21f53e601ec54ab54
Author: Øyvind Kolås <pippin@linux.intel.com>
Date:   Mon Jul 12 17:34:17 2010 +0100

    state: swap clutter_state_set_state and clutter_state_warp_to_state
    
    Got the boolean arguments for the old clutter_state_change wrong,
    making the methods do the opposite of what they should.

 clutter/clutter-state.c |    4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

commit 97ac28ee482a02e1309105171bfb8efdbf8be3c8
Author: Elliot Smith <elliot.smith@intel.com>
Date:   Mon Jul 12 17:15:16 2010 +0100

    cookbook: Added introduction for animations section
    
    Introduces basic concepts (timelines, alphas, frames)
    common to different parts of the Clutter animation API.
    
    Gives a high level overview of the three different
    approaches to animation (implicit, ClutterAnimator,
    ClutterState).

 doc/cookbook/animations.xml |  203 ++++++++++++++++++++++++++++++++++++++++++-
 1 file changed, 200 insertions(+), 3 deletions(-)

commit 295a043194878e66072b619529355e3fc20c9821
Author: Elliot Smith <elliot.smith@intel.com>
Date:   Fri Jul 9 11:27:57 2010 +0100

    docs: Enabled animation section

 doc/cookbook/clutter-cookbook.xml.in |    2 --
 1 file changed, 2 deletions(-)

commit 9d96c21de6578efeb6099295da8c4cb1e189dad8
Author: Elliot Smith <elliot.smith@intel.com>
Date:   Mon Jul 12 16:59:38 2010 +0100

    cookbook: Fixed invalid XML tag

 doc/cookbook/animations.xml |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit 6a443a0cd3a7a661d3cf727f682d636c3dab08a1
Author: Elliot Smith <elliot.smith@intel.com>
Date:   Mon Jul 12 15:34:23 2010 +0100

    cookbook: Added "inverting an animation" recipe
    
    Added a new recipe (based on the skeleton in the
    animations section of the cookbook) about inverting
    an animation by reversing the direction of its timeline.
    
    Uses clutter_actor_animate() as the basic approach,
    but mentions ClutterState and ClutterAnimator as well.

 doc/cookbook/animations.xml |  149 ++++++++++++++++++++++++++++++++++++++++++-
 1 file changed, 146 insertions(+), 3 deletions(-)

commit bfb51adf97e3a702c47d3c5d0b7c2a575caf8ddc
Author: Elliot Smith <elliot.smith@intel.com>
Date:   Fri Jul 9 11:27:57 2010 +0100

    docs: Enabled animation section

 doc/cookbook/clutter-cookbook.xml.in |    2 --
 1 file changed, 2 deletions(-)

commit 90acc6a2a9a6563c60df5f9849a23c40c89a956f
Author: Neil Roberts <neil@linux.intel.com>
Date:   Fri Jul 9 19:09:49 2010 +0100

    Add the deprecated ref-counting for cogl_program
    
    cogl_program has always had cogl_program_ref and cogl_program_unref
    but this was missed from 89cb325fd4 so they got removed.

 clutter/cogl/cogl/driver/gl/cogl-program.c   |    1 +
 clutter/cogl/cogl/driver/gles/cogl-program.c |    1 +
 2 files changed, 2 insertions(+)

commit 8a85088196809cac2b47a84be2d7f0a1e3c67701
Author: Neil Roberts <neil@linux.intel.com>
Date:   Fri Jul 9 18:46:31 2010 +0100

    Don't define public cogl_is_* functions for internal types
    
    This adds a COGL_OBJECT_INTERNAL_DEFINE macro and friends that are the
    same as COGL_OBJECT_DEFINE except that they prefix the cogl_is_*
    function with an underscore so that it doesn't get exported in the
    shared library.

 clutter/cogl/cogl/cogl-atlas-texture.c     |    2 +-
 clutter/cogl/cogl/cogl-clip-stack.c        |    4 +-
 clutter/cogl/cogl/cogl-framebuffer.c       |    8 +--
 clutter/cogl/cogl/cogl-material.c          |   18 ++++---
 clutter/cogl/cogl/cogl-object-private.h    |   78 ++++++++++++++++++++--------
 clutter/cogl/cogl/cogl-sub-texture.c       |    4 +-
 clutter/cogl/cogl/cogl-texture-2d-sliced.c |    2 +-
 clutter/cogl/cogl/cogl-texture-2d.c        |    4 +-
 clutter/cogl/cogl/cogl-texture-private.h   |    6 +++
 clutter/cogl/cogl/cogl-texture-rectangle.c |    2 +-
 10 files changed, 87 insertions(+), 41 deletions(-)

commit 0e839c37693339287232f0292283f92522fa3ca5
Author: Neil Roberts <neil@linux.intel.com>
Date:   Fri Jul 9 18:24:28 2010 +0100

    Add cogl_vertex_buffer_is_indices to the public headers
    
    This function has always been defined in the shared library but it was
    missed from the public headers.

 clutter/cogl/cogl/cogl-vertex-buffer.h |   15 +++++++++++++++
 doc/reference/cogl/cogl-sections.txt   |    1 +
 2 files changed, 16 insertions(+)

commit 89cb325fd4e921149fc9ad861d66ef1ed9acd3df
Author: Neil Roberts <neil@linux.intel.com>
Date:   Fri Jul 9 17:59:16 2010 +0100

    cogl: Don't define the deprecated ref/unref accessors for new types
    
    Previously COGL_OBJECT_DEFINE would always define deprecated
    cogl_$type_{ref,unref} functions even if the type is new or if the
    type is entirely internal. An application would still find it
    difficult to use these because they wouldn't be in the headers, but it
    still looks bad that they are exported from the shared library. This
    patch changes it so that the deprecated ref counting functions are
    defined using a separate macro and only the types that have these
    functions in the headers call this macro.

 clutter/cogl/cogl/cogl-framebuffer.c        |    1 +
 clutter/cogl/cogl/cogl-material.c           |    1 +
 clutter/cogl/cogl/cogl-object-private.h     |    4 +++-
 clutter/cogl/cogl/cogl-vertex-buffer.c      |    1 +
 clutter/cogl/cogl/driver/gl/cogl-shader.c   |    1 +
 clutter/cogl/cogl/driver/gles/cogl-shader.c |    1 +
 6 files changed, 8 insertions(+), 1 deletion(-)

commit 903560c6c8c50c28959c2588d24d288bc2c4db26
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Fri Jul 9 18:37:34 2010 +0100

    text: Layouts for single-line-mode entries are boundless
    
    A PangoLayout for an editable, single-line text entry is by definition
    without a given width, since the actor will be clipped when being drawn.

 clutter/clutter-text.c |   26 ++++++++++++++++++++------
 1 file changed, 20 insertions(+), 6 deletions(-)

commit 1635a2db1256ec1df40a5b920e3afe6a9f9745d9
Author: Robert Bragg <robert@linux.intel.com>
Date:   Thu Jul 8 11:49:31 2010 +0100

    material: use common node type for materials and layers
    
    Since 365605cf42, materials and layers are represented in a tree
    structure that allows traversing up through parents and iterating down
    through children.  This re-works the related typedefs and reparenting
    code so that they can be shared.

 clutter/cogl/cogl/cogl-material-arbfp.c   |   25 +-
 clutter/cogl/cogl/cogl-material-private.h |  109 +++----
 clutter/cogl/cogl/cogl-material.c         |  479 +++++++++++++++--------------
 3 files changed, 326 insertions(+), 287 deletions(-)

commit 9e82fe39444d4f69dc3ca920fdfd94d1ba000136
Author: Damien Lespiau <damien.lespiau@intel.com>
Date:   Fri Jul 9 17:55:31 2010 +0100

    cogl-texture-pixmap-x11: This API is new in 1.4, not 1.2
    
    CoglTexturePixmapX11 has been introduced in the 1.3 development cycle. A
    Stability: Unstable tag was missing too, so add it.

 clutter/cogl/cogl/winsys/cogl-texture-pixmap-x11.h |   11 +++++++----
 1 file changed, 7 insertions(+), 4 deletions(-)

commit 892aa455138c692b464b3bce37a548e33d68e083
Author: Damien Lespiau <damien.lespiau@intel.com>
Date:   Fri Jul 9 15:59:14 2010 +0100

    cogl: Add Stability tag to new experimental API
    
    Functions guarded with COGL_ENABLE_EXPERIMENTAL API should be also maked
    as being Unstable with the Stability gtk-doc tag.
    
    Fixes: http://bugzilla.clutter-project.org/show_bug.cgi?id=2175

 clutter/cogl/cogl/cogl-material.h |    8 ++++++++
 1 file changed, 8 insertions(+)

commit b7f99ddd3c55f3d1356bb162114cbdf85ffb6101
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Fri Jul 9 14:59:32 2010 +0100

    script: Let ClutterActor parse behaviours
    
    Up until now, the "behaviours" member of an actor definition was parsed
    by the ClutterScript parser itself - even though it's not strictly
    necessary.
    
    In an effort to minimize the ad hoc code in the Script parser, we should
    let ClutterActor handle all the special cases that involve
    actor-specific members.

 clutter/clutter-actor.c          |   66 ++++++++++++++++++++++++++++++
 clutter/clutter-script-parser.c  |   83 +-------------------------------------
 clutter/clutter-script-private.h |    1 -
 clutter/clutter-script.c         |    3 --
 4 files changed, 67 insertions(+), 86 deletions(-)

commit fdc79427a6bf152b11831accbef5ca3b0165f71b
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Fri Jul 9 11:40:00 2010 +0100

    Add new tests to the ignore files

 tests/conform/.gitignore     |    1 +
 tests/interactive/.gitignore |    1 +
 2 files changed, 2 insertions(+)

commit a65429363e5c9dc03f84df3b8d4a95988b602dd1
Author: Neil Roberts <neil@linux.intel.com>
Date:   Thu Jul 8 18:37:01 2010 +0100

    Use GL_MAX_TEXTURE_SIZE on GLES when checking supported tex size
    
    Under big GL, _cogl_texture_driver_size_supported uses the proxy
    texture to check whether the given texture size is supported. Proxy
    textures aren't available under GLES so previously this would just
    return TRUE to assume all texture sizes are supported. This patch
    makes it use glGetIntegerv with GL_MAX_TEXTURE_SIZE to give a second
    best guess.
    
    This fixes the sliced texture backend so that it will use slices when
    the texture is too big.

 clutter/cogl/cogl/driver/gles/cogl-texture-driver.c |    8 +++++++-
 1 file changed, 7 insertions(+), 1 deletion(-)

commit eb24d2a252b33ce86f9bfa476b12c683d88a4776
Author: Neil Roberts <neil@linux.intel.com>
Date:   Thu Jul 8 18:33:45 2010 +0100

    Fix cogl_texture_get_data when an intermediate buffer is used
    
    When an intermediate buffer is used for downloading texture data it
    was using the wrong byte length for a row so the copy back to the
    user's buffer would fail.

 clutter/cogl/cogl/cogl-texture.c |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit 9e1bb31922a53a7a27bf03ac92cb9a5cfa743770
Author: Neil Roberts <neil@linux.intel.com>
Date:   Thu Jul 8 18:31:29 2010 +0100

    Use GL_NEAREST filter in the draw-and-read get_data texture fallback
    
    The fallback for when glGetTexImage is not available renders the
    texture to the framebuffer to read the data using glReadPixels. This
    patch just sets the COGL_MATERIAL_FILTER_NEAREST filter mode on the
    material before rendering to avoid linear filtering which would alter
    the texture data.

 clutter/cogl/cogl/cogl-texture.c |    4 ++++
 1 file changed, 4 insertions(+)

commit 25cf5979e63e093397bad042e3953da7455d0491
Author: Neil Roberts <neil@linux.intel.com>
Date:   Thu Jul 8 18:29:12 2010 +0100

    Use cogl_read_pixels in the cogl texture draw-and-read fallback
    
    The fallback for when glGetTexImage is not available draws parts of
    the texture to the framebuffer and uses glReadPixels to extract the
    data. However it was using cogl_rectangle to draw and then immediately
    using raw glReadPixels to fetch the data. This won't cause a journal
    flush so the rectangle won't necessarily have hit the framebuffer
    yet. Instead it now uses cogl_read_pixels which does flush the
    journal.

 clutter/cogl/cogl/cogl-texture.c |   15 +++++++--------
 1 file changed, 7 insertions(+), 8 deletions(-)

commit e454b9cadfd8393f65ad38030c5fe98a69be2904
Author: Neil Roberts <neil@linux.intel.com>
Date:   Thu Jul 8 18:28:11 2010 +0100

    cogl-material: Fix some problems with flushing texture overrides
    
    There were a few problems flushing texture overrides so that sliced
    textures would not work:
    
    * In _cogl_material_set_layer_texture it ignored the 'overriden'
      parameter and always set texture_overridden to FALSE.
    
    * cogl_texture_get_gl_texture wasn't being called correctly in
      override_layer_texture_cb. It returns a gboolean to indicate the
      error status but this boolean was being assigned to gl_target.
    
    * _cogl_material_layer_texture_equal did not take into account the
      override.
    
    * _cogl_material_layer_get_texture_info did not return the overridden
      texture so it would always use the first texture slice.

 clutter/cogl/cogl/cogl-material.c |   22 ++++++++++++++++++----
 1 file changed, 18 insertions(+), 4 deletions(-)

commit 8beb49164ffeffa867d52c9da89c6dbb6e754e4a
Author: Neil Roberts <neil@linux.intel.com>
Date:   Thu Jul 8 15:15:22 2010 +0100

    cogl-texture: Share the common code in the set_region virtual
    
    There was a lot of common code that was copied to all of the backends
    to convert the data to a suitable format and wrap it into a CoglBitmap
    so that it can be passed to _cogl_texture_driver_upload_subregion_to_gl.
    This patch moves the common code to cogl-texture.c so that the virtual
    just takes a CoglBitmap that is already in the right format.

 clutter/cogl/cogl/cogl-atlas-texture.c             |   83 +++++---------------
 clutter/cogl/cogl/cogl-sub-texture.c               |   21 ++---
 clutter/cogl/cogl/cogl-texture-2d-sliced.c         |   57 +++-----------
 clutter/cogl/cogl/cogl-texture-2d.c                |   58 +++-----------
 clutter/cogl/cogl/cogl-texture-private.h           |   19 +++--
 clutter/cogl/cogl/cogl-texture-rectangle.c         |   58 +++-----------
 clutter/cogl/cogl/cogl-texture.c                   |   74 ++++++++++++++---
 clutter/cogl/cogl/winsys/cogl-texture-pixmap-x11.c |    6 +-
 8 files changed, 135 insertions(+), 241 deletions(-)

commit 972c0c24f012e09fd2ad47296f2eba15f8ff11da
Author: Neil Roberts <neil@linux.intel.com>
Date:   Thu Jul 8 14:25:23 2010 +0100

    Add a conformance test for cogl_texture_{get_data,set_region}
    
    This verifies that calling cogl_texture_get_data returns the same data
    uploaded to the texture. The bottom quarter of the texture is replaced
    using cogl_texture_set_region. It tries creating the texture with
    different sizes and flags in the hope that it will hit different
    texture backends.

 tests/conform/Makefile.am                      |    1 +
 tests/conform/test-cogl-texture-get-set-data.c |  131 ++++++++++++++++++++++++
 tests/conform/test-conform-main.c              |    1 +
 3 files changed, 133 insertions(+)

commit 0577c81c3b2b76e97aeca672b2f39df42e03ad5d
Author: Neil Roberts <neil@linux.intel.com>
Date:   Thu Jul 8 13:54:37 2010 +0100

    cogl-texture: Share the common code in the get_data virtual
    
    Previously cogl_texture_get_data would pretty much directly pass on to
    the get_data texture virtual function. This ended up with a lot of
    common code that was copied to all of the backends. For example, the
    method is expected to return the required data size if the data
    pointer is NULL and to calculate its own rowstride if the rowstride is
    0. Also it needs to convert the downloaded data if GL can't support
    that format directly.
    
    This patch moves the common code to cogl-texture.c so the virtual is
    always called with a format that can be downloaded directly by GL and
    with a valid rowstride. If the download fails then the virtual can
    return FALSE in which case cogl-texture will use the draw and read
    fallback.

 clutter/cogl/cogl/cogl-atlas-texture.c             |    2 +-
 clutter/cogl/cogl/cogl-sub-texture.c               |   26 ++---
 clutter/cogl/cogl/cogl-texture-2d-sliced.c         |   93 +++--------------
 clutter/cogl/cogl/cogl-texture-2d.c                |  102 +++----------------
 clutter/cogl/cogl/cogl-texture-private.h           |   13 ++-
 clutter/cogl/cogl/cogl-texture-rectangle.c         |  106 +++-----------------
 clutter/cogl/cogl/cogl-texture.c                   |   98 +++++++++++++++++-
 clutter/cogl/cogl/winsys/cogl-texture-pixmap-x11.c |    2 +-
 8 files changed, 150 insertions(+), 292 deletions(-)

commit 4ca1e491dae164559479c218f4118869d0fa9187
Author: Robert Bragg <robert@linux.intel.com>
Date:   Thu Jul 8 19:20:33 2010 +0100

    tests: don't delay/skip frames due to glReadPixel concerns
    
    This greatly speeds up running all the conformance tests by no longer
    delaying many of the tests for a number of dummy frames to be painted.
    
    We used to skip frames because we thought there was a problem with the
    driver's glReadPixels implementation. Although we have seen driver
    issues at times the real reason the delay was needed was because
    resizing the stage usually happens asynchronously (because a non
    synchronous X request is used by clutter_stage_set_size()). We now force
    all X requests to be synchronized for the conformance tests so this is
    no longer a problem and we can avoid these hacks.

 tests/conform/test-cogl-blend-strings.c            |   36 ++----------
 tests/conform/test-cogl-depth-test.c               |   29 ++--------
 tests/conform/test-cogl-materials.c                |   24 +-------
 tests/conform/test-cogl-multitexture.c             |   19 ++-----
 tests/conform/test-cogl-npot-texture.c             |   13 ++---
 tests/conform/test-cogl-pixel-buffer.c             |   13 ++---
 tests/conform/test-cogl-premult.c                  |   59 ++++++--------------
 tests/conform/test-cogl-sub-texture.c              |   13 ++---
 tests/conform/test-cogl-texture-mipmaps.c          |   13 +----
 tests/conform/test-cogl-texture-rectangle.c        |   17 +-----
 tests/conform/test-cogl-vertex-buffer-contiguous.c |   20 ++-----
 tests/conform/test-cogl-vertex-buffer-interleved.c |   20 ++-----
 tests/conform/test-cogl-vertex-buffer-mutability.c |   21 ++-----
 tests/conform/test-cogl-wrap-modes.c               |   17 +-----
 tests/conform/test-pick.c                          |    2 +-
 tests/conform/test-texture-fbo.c                   |   13 ++---
 16 files changed, 63 insertions(+), 266 deletions(-)

commit f47152c557c3d21ebacc7b774e94cfa4f6dcb3bc
Author: Neil Roberts <neil@linux.intel.com>
Date:   Wed Apr 7 11:06:20 2010 +0100

    cogl-vertex-buffer: Default to GL_CLAMP_TO_EDGE for point sprites
    
    For point sprites you are usually drawing the whole texture so you
    most often want GL_CLAMP_TO_EDGE. This patch removes the override for
    COGL_MATERIAL_WRAP_MODE_AUTOMATIC when point sprites are enabled for a
    layer so that it will clamp to edge.

 clutter/cogl/cogl/cogl-material.h      |    6 ++--
 clutter/cogl/cogl/cogl-vertex-buffer.c |   57 +++++++++++++++++---------------
 2 files changed, 35 insertions(+), 28 deletions(-)

commit ad6d597445f58b9ef55c7d3696935b35739957bd
Author: Neil Roberts <neil@linux.intel.com>
Date:   Mon Mar 22 13:48:27 2010 +0000

    Add an interactive test for cogl point sprites
    
    The test draws some fireworks with trailing sparks that fade out.
    
    http://bugzilla.openedhand.com/show_bug.cgi?id=2047

 tests/interactive/Makefile.am               |    3 +-
 tests/interactive/test-cogl-point-sprites.c |  280 +++++++++++++++++++++++++++
 2 files changed, 282 insertions(+), 1 deletion(-)

commit ab05f6bfb1493bb1a6d17c79656c0efef21da5e1
Author: Neil Roberts <neil@linux.intel.com>
Date:   Mon Mar 22 13:33:55 2010 +0000

    cogl-material: Add support for point sprites
    
    This adds a new API call to enable point sprite coordinate generation
    for a material layer:
    
    void
    cogl_material_set_layer_point_sprite_coords_enabled (CoglHandle material,
                                                         int layer_index,
                                                         gboolean enable);
    
    There is also a corresponding get function.
    
    Enabling point sprite coords simply sets the GL_COORD_REPLACE of the
    GL_POINT_SPRITE glTexEnv when flusing the material. There is no
    separate application control for glEnable(GL_POINT_SPRITE). Instead it
    is left permanently enabled under the assumption that it has no affect
    unless GL_COORD_REPLACE is enabled for a texture unit.
    
    http://bugzilla.openedhand.com/show_bug.cgi?id=2047

 clutter/cogl/cogl/cogl-context.c                   |   14 ++
 clutter/cogl/cogl/cogl-material-private.h          |   12 +-
 clutter/cogl/cogl/cogl-material.c                  |  166 +++++++++++++++++++-
 clutter/cogl/cogl/cogl-material.h                  |   44 ++++++
 clutter/cogl/cogl/cogl-types.h                     |    5 +-
 .../cogl/cogl/driver/gl/cogl-feature-functions.h   |    7 +
 clutter/cogl/cogl/driver/gles/cogl-gles2-wrapper.c |   63 ++++++--
 clutter/cogl/cogl/driver/gles/cogl-gles2-wrapper.h |   19 ++-
 clutter/cogl/cogl/driver/gles/cogl.c               |    3 +
 doc/reference/cogl/cogl-sections.txt               |    2 +
 10 files changed, 305 insertions(+), 30 deletions(-)

commit 73642ac9c435709e79c62973fd0523494b9b14fb
Author: Neil Roberts <neil@linux.intel.com>
Date:   Mon Mar 22 09:32:17 2010 +0000

    cogl-material: Add a property for setting the point size
    
    This adds cogl_material_{get,set}_point_size. If the point size is not
    1.0f then glPointSize will be called when the material is flushed.
    
    http://bugzilla.openedhand.com/show_bug.cgi?id=2047

 clutter/cogl/cogl/cogl-context.c                   |    2 +
 clutter/cogl/cogl/cogl-context.h                   |    2 +
 clutter/cogl/cogl/cogl-material-private.h          |   10 ++-
 clutter/cogl/cogl/cogl-material.c                  |   72 ++++++++++++++++++++
 clutter/cogl/cogl/cogl-material.h                  |   33 +++++++++
 .../cogl/driver/gles/cogl-fixed-vertex-shader.glsl |    6 ++
 clutter/cogl/cogl/driver/gles/cogl-gles2-wrapper.c |   19 ++++++
 clutter/cogl/cogl/driver/gles/cogl-gles2-wrapper.h |    9 ++-
 doc/reference/cogl/cogl-sections.txt               |    2 +
 9 files changed, 151 insertions(+), 4 deletions(-)

commit c76d53a9c4be0e7376392c0d9fb1d316aaeae69d
Author: Neil Roberts <neil@linux.intel.com>
Date:   Thu Jul 8 15:28:37 2010 +0100

    tests/accessibility: Fix the soname for libclutter
    
    The required .so file was named using @CLUTTER_WINSYS@ but since
    bf9d5f394997 the .so should be named with @CLUTTER_SONAME_INFIX@. This
    was breaking the build on eglx.

 tests/accessibility/Makefile.am |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit b2decfe7627e605e8ac7de8b372d7e9d4df49a35
Author: Robert Bragg <robert@linux.intel.com>
Date:   Wed Jul 7 20:43:54 2010 +0100

    material: support dumping layer state graph to dot file
    
    Recently I added a _cogl_debug_dump_materials_dot_file function for
    debugging the sparse material state. This extends the state dumped to
    include the graph of layer state also.

 clutter/cogl/cogl/cogl-material.c |  133 ++++++++++++++++++++++++++++++-------
 1 file changed, 110 insertions(+), 23 deletions(-)

commit 7eedf0f2342dc717f8a293627ab1dd13d17eda52
Author: Robert Bragg <robert@linux.intel.com>
Date:   Wed Jul 7 19:23:57 2010 +0100

    material: set ->layer_index on new layers for unit0
    
    We were mistakenly only initializing layer->layer_index for new layers
    associated with texture units > 0. This had gone unnoticed because
    normally layers associated with texture unit0 have a layer index of 0
    too. Mutter was hitting this issue because it was initializing layer 1
    before layer 0 for one of its materials so layer 1 was temporarily
    associated with texture unit 0.

 clutter/cogl/cogl/cogl-material.c |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit 9e730727ca3318067164121b52ed62d164884649
Author: Øyvind Kolås <pippin@linux.intel.com>
Date:   Wed Jul 7 18:14:43 2010 +0100

    state: add clutter_state_set_state and clutter_state_warp_to_state
    
    Replaced clutter_state_change with a boolean argument for animating the
    transition or not with two separate argument-less methods.

 clutter/clutter-state.c                    |   61 ++++++++++++++++++++--------
 clutter/clutter-state.h                    |    7 ++--
 doc/reference/clutter/clutter-sections.txt |    3 +-
 tests/interactive/test-state-animator.c    |    6 +--
 tests/interactive/test-state.c             |   15 +++----
 5 files changed, 60 insertions(+), 32 deletions(-)

commit f87e4037a880b3bf180a547dea1713a99aa3398b
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Wed Jul 7 16:30:31 2010 +0100

    build: Distcheck fixes after the Cally merge

 clutter/cally/Makefile.am       |    4 +++-
 doc/reference/cally/Makefile.am |    4 ++--
 tests/Makefile.am               |    2 +-
 tests/accessibility/Makefile.am |   14 ++++++++------
 4 files changed, 14 insertions(+), 10 deletions(-)

commit e3a8ece54d3a626f012b955a953d0ae69a22ad7a
Merge: 175317a a3c69dc
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Wed Jul 7 16:06:30 2010 +0100

    Merge branch 'cally-merge'
    
    * cally-merge:
      cally: Add introspection generation
      cally: Improving cally doc
      cally: Cleaning CallyText
      cally: Refactoring "window:create" and "window:destroy" emission code
      cally: Use proper backend information on CallyActor
      cally: Check HAVE_CONFIG_H on cally-util.c
      docs: Fix Cally documentation
      cally: Clean up the headers
      Add binaries of the Cally examples to the ignore file
      docs: Add Cally API reference
      Avoid to load cally module on a11y examples
      Add accessibility tests
      Initialize accessibility support on clutter_init
      Rename some methods and includes to avoid -Wshadow warnings
      Cally initialization code
      Add Cally

commit 175317a75481b9d3e228258d86e17dfd12263551
Author: Robert Bragg <robert@linux.intel.com>
Date:   Wed Jul 7 15:58:02 2010 +0100

    test-timeline: instantiate a stage so the master clock runs
    
    This makes test-timeline get the default stage so there is at least one
    stage instantiated. Without any stages the master clock will never run
    which was causing this test to fail.

 tests/conform/test-timeline.c |    5 +++++
 1 file changed, 5 insertions(+)

commit a3c69dc27c5fc492184a2b6948f59ef27b60f10c
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Wed Jul 7 15:57:43 2010 +0100

    cally: Add introspection generation
    
    Toolkits and applications not written in C might still need access to
    the Cally API to write accessibility extensions based on it for their
    own native elements.

 clutter/Makefile.am           |   30 +++++++++++++++++++++++++++---
 clutter/cally/Makefile.am     |    6 ++----
 clutter/cogl/cogl/Makefile.am |    2 +-
 3 files changed, 30 insertions(+), 8 deletions(-)

commit 7d1445afcaee17a341d3e206d7a38d2d3e555e27
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Wed Jul 7 14:50:24 2010 +0100

    Restore the report on the conformance test suite
    
    The report generation was broken by the split of the various test units;
    also, we were using GTest in a way that's not really sanctioned by
    upstream.
    
    This commit tries to re-use the targets from GLib's Makefile rules while
    compensating for our own set up.

 tests/conform/.gitignore   |    4 ++
 tests/conform/Makefile.am  |  142 +++++++++++++++++++++++++++-----------------
 tests/conform/run-tests.sh |    4 +-
 3 files changed, 92 insertions(+), 58 deletions(-)

commit 608a5a8ae6951dc06c9fcb67b00491d2a60404c0
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Wed Jul 7 14:49:28 2010 +0100

    x11: Clean up NET_WM_STATE modifiers
    
    Use a separate function to avoid code duplication.

 clutter/x11/clutter-stage-x11.c |   44 ++++++++++++++++++++++++++++-----------
 1 file changed, 32 insertions(+), 12 deletions(-)

commit eca398f11309ff91c6a10d51e5358ed28f816397
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Tue Jul 6 17:13:55 2010 +0100

    x11: Do not swallow XSettings events
    
    We might want pieces higher in the stack (like Mx) to handle XSettings
    events as well, and swallowing them by removing them from the events
    queue would make it impossible.

 clutter/x11/clutter-backend-x11.c |   11 +++++++----
 1 file changed, 7 insertions(+), 4 deletions(-)

commit a2f8ce175fed304b8e48304ff82703af58022bfb
Author: Alejandro Piñeiro <apinheiro@igalia.com>
Date:   Tue Jul 6 16:51:24 2010 +0200

    cally: Improving cally doc
    
      * Add documentation for all undocumented symbols
      * Add an overview section

 clutter/cally/cally-actor.c               |    2 +-
 clutter/cally/cally-actor.h               |    8 ++--
 clutter/cally/cally-clone.c               |   11 +++++
 clutter/cally/cally-factory.h             |   26 ++++++++++
 clutter/cally/cally-rectangle.c           |   11 +++++
 clutter/cally/cally-root.c                |   11 ++++-
 clutter/cally/cally-stage.c               |   65 +++++++++++++++++++++++++
 clutter/cally/cally-text.c                |   11 +++++
 clutter/cally/cally-texture.c             |   11 +++++
 clutter/cally/cally.c                     |   11 ++++-
 doc/reference/cally/Makefile.am           |    6 ++-
 doc/reference/cally/cally-docs.xml.in     |    7 ++-
 doc/reference/cally/cally-overview.xml    |   74 +++++++++++++++++++++++++++++
 doc/reference/clutter/running-clutter.xml |    4 ++
 14 files changed, 248 insertions(+), 10 deletions(-)

commit c931e11e3df98119f1d2c64abc64083453ad0ab4
Author: Alejandro Piñeiro <apinheiro@igalia.com>
Date:   Tue Jul 6 13:28:38 2010 +0200

    cally: Cleaning CallyText
    
      * Removing superfluous g_return_if_fail
      * Removing unused ClutterText::text-changed callback

 clutter/cally/cally-text.c |   18 ------------------
 1 file changed, 18 deletions(-)

commit 137790bec9d4c29a4e5504ea49623884e90e3cca
Author: Alejandro Piñeiro <apinheiro@igalia.com>
Date:   Tue Jul 6 13:25:44 2010 +0200

    cally: Refactoring "window:create" and "window:destroy" emission code
    
    Previously "window:create" and "window:destroy" were emitted on
    CallyUtil. Although it works, and CallyUtil already have callbacks to
    stage_added/removed signals, I think that it is more tidy/clear to do
    that on CallyRoot:
    
      * CallyRoot already has code to manage ClutterStage addition/removal
    
      * In fact, we can see CallyRoot as the object exposing the a11y
        information from ClutterStageManager, so it fits better here.
    
      * CallyUtil callbacks these signals are related to key event
        listeners (key snooper simulation). One of the main CallyUtil
        responsabilities is managing event (connecting, emitting), so I
        would prefer to not start to add/mix more functionalities here.
    
    Ideally it would be better to emit all CallyStage methods from
    CallyStage, but it is clear that "create" and "destroy" are more easy
    to emit from a external object

 clutter/cally/cally-root.c |    2 ++
 clutter/cally/cally-util.c |   10 ----------
 2 files changed, 2 insertions(+), 10 deletions(-)

commit ffd1f125604a2a25015804bcf2b8ebb6503fdd77
Author: Alejandro Piñeiro <apinheiro@igalia.com>
Date:   Tue Jul 6 13:36:48 2010 +0200

    cally: Use proper backend information on CallyActor
    
    It uses HAVE_CLUTTER_GLX to check the current backend in use for
    some accessibility related methods.
    
    Fixes CB#2071

 clutter/cally/cally-actor.c |    4 ++--
 clutter/cally/cally-util.c  |    4 ----
 2 files changed, 2 insertions(+), 6 deletions(-)

commit d45499f88b3b3fb4b7f5e95434677ad6710776ac
Author: Alejandro Piñeiro <apinheiro@igalia.com>
Date:   Wed Jul 7 14:05:27 2010 +0200

    cally: Check HAVE_CONFIG_H on cally-util.c

 clutter/cally/cally-util.c |   17 +++++++++++++++++
 1 file changed, 17 insertions(+)

commit 1dd174add37f5b5e118d3c7ce84019d33dfc9e8f
Author: Robert Bragg <robert@linux.intel.com>
Date:   Wed Jul 7 14:41:54 2010 +0100

    framebuffer: Replace CoglHandle with CoglFramebuffer *
    
    One more object converted to stop using CoglHandle re:a8c8cbee513

 clutter/cogl/cogl/cogl-clip-state.c          |   16 ++--
 clutter/cogl/cogl/cogl-framebuffer-private.h |   33 +++----
 clutter/cogl/cogl/cogl-framebuffer.c         |  121 +++++++++++---------------
 clutter/cogl/cogl/cogl-journal.c             |    2 +-
 clutter/cogl/cogl/cogl-texture.c             |    2 +-
 clutter/cogl/cogl/cogl.c                     |    2 +-
 clutter/cogl/cogl/cogl.h                     |   22 ++---
 7 files changed, 88 insertions(+), 110 deletions(-)

commit 9b9e764dc1dcc2025e3cabb63ea118fa37ed373d
Author: Robert Bragg <robert@linux.intel.com>
Date:   Tue Jul 6 20:18:26 2010 +0100

    material: route fogging state through CoglMaterial
    
    Previously cogl_set_fog would cause a flush of the Cogl journal and
    would directly bang the GL state machine to setup fogging. As part of
    the ongoing effort to track most state in CoglMaterial to support
    renderlists this now adds an indirection so that cogl_set_fog now just
    updates ctx->legacy_fog_state. The fogging state then gets enabled as a
    legacy override similar to how the old depth testing API is handled.

 clutter/cogl/cogl/cogl-context.c          |    3 +-
 clutter/cogl/cogl/cogl-context.h          |    3 +-
 clutter/cogl/cogl/cogl-material-arbfp.c   |    2 +-
 clutter/cogl/cogl/cogl-material-fixed.c   |   48 ++++++++++++++++++++++
 clutter/cogl/cogl/cogl-material-private.h |   20 ++++++++--
 clutter/cogl/cogl/cogl-material.c         |   62 +++++++++++++++++++++++++++++
 clutter/cogl/cogl/cogl.c                  |   54 +++++--------------------
 7 files changed, 143 insertions(+), 49 deletions(-)

commit 279e68d8d9a84356c83e32502c5bc5af5160da08
Author: Robert Bragg <robert@linux.intel.com>
Date:   Tue Jul 6 16:47:09 2010 +0100

    osx: explicitly request depth and stencil buffer bits
    
    This is a blind patch because I don't know enough about the osx backend
    and the osx backend probably doesn't even work these days anyway but
    since people have filed bugs specifically on OSX that imply they don't
    have a depth or stencil buffer this tries to fix that.
    
    Maybe someone will eventually pick up the osx backend again and verify
    if this helps.
    
    http://bugzilla.clutter-project.org/show_bug.cgi?id=1394

 clutter/osx/clutter-backend-osx.c |    2 ++
 1 file changed, 2 insertions(+)

commit 2e0d2cf055050c0dd27841e639a4c98cd182919f
Author: Robert Bragg <robert@linux.intel.com>
Date:   Tue Jul 6 01:21:43 2010 +0100

    cogl-buffer: Move malloc fallback logic into CoglBuffer
    
    Since we'll want to share the fallback logic with CoglVertexArray this
    moves the malloc based fallback (for when OpenGL doesn't support vertex
    or pixel buffer objects) into cogl-buffer.c.

 clutter/cogl/cogl/cogl-buffer-private.h |    9 +-
 clutter/cogl/cogl/cogl-buffer.c         |  201 ++++++++++++++++++++++++++-----
 clutter/cogl/cogl/cogl-pixel-array.c    |  183 ++--------------------------
 3 files changed, 182 insertions(+), 211 deletions(-)

commit 2353aa56eacbe13f1024cc066a129615e10583d3
Author: Robert Bragg <robert@linux.intel.com>
Date:   Mon Jul 5 23:32:55 2010 +0100

    cogl-buffer: consider it an error to free a mapped buffer
    
    Explicitly warn if we detect that a CoglBuffer is being freed while it
    is still mapped. Previously we silently unmapped the buffer, but it's
    not something we want to encourage.

 clutter/cogl/cogl/cogl-buffer.c |    3 +--
 clutter/cogl/cogl/cogl-buffer.h |    3 ++-
 2 files changed, 3 insertions(+), 3 deletions(-)

commit 429d7cf696a19181cfd7408344803b757b331b69
Author: Robert Bragg <robert@linux.intel.com>
Date:   Mon Jul 5 23:24:34 2010 +0100

    cogl-buffer: Track the last used bind target in CoglBuffer
    
    This makes CoglBuffer track the last used bind target as a private
    property. This is later used when binding a buffer to map instead of
    always using the PIXEL_UNPACK target.
    
    This also adds some additional sanity checks that code doesn't try to
    nest binds to the same target or bind a buffer to multiple targets at
    the same time.

 clutter/cogl/cogl/cogl-buffer-private.h      |   23 ++++++-
 clutter/cogl/cogl/cogl-buffer.c              |   86 +++++++++++++++++++++-----
 clutter/cogl/cogl/cogl-context.c             |    6 +-
 clutter/cogl/cogl/cogl-context.h             |    4 +-
 clutter/cogl/cogl/cogl-pixel-array-private.h |    1 -
 clutter/cogl/cogl/cogl-pixel-array.c         |   35 ++++++-----
 clutter/cogl/cogl/cogl-texture.c             |    5 +-
 7 files changed, 121 insertions(+), 39 deletions(-)

commit 551945ce6cc1438eec0b304cb9dc0a1b730bdb7e
Author: Robert Bragg <robert@linux.intel.com>
Date:   Wed Jul 7 13:38:10 2010 +0100

    tests: Force X synchronization so the stage size is reliable
    
    Normally the asynchronous nature of X means that setting the clutter
    stage size may really happen an indefinite amount of time later but
    since the tests are so short lived and may only render a single frame
    this is not an acceptable semantic.
    
    This way we should be able to remove all the hacky sleeps and frame
    count delays from our tests.

 tests/conform/test-conform-common.c |   17 +++++++++++++++++
 1 file changed, 17 insertions(+)

commit b24c96189df25df19a164cd477ea634cf41b45d9
Author: Robert Bragg <robert@linux.intel.com>
Date:   Wed Jul 7 13:31:35 2010 +0100

    tests: no longer clean up state between tests
    
    Since we now run every test in a separate process there is no need to
    try and avoid state leakage between tests. This removes the code to
    cleanup all children of the stage and disconnect handlers from the
    stage paint signal. We now explicitly print a warning if the users tries
    to run multiple tests in one process.

 tests/conform/test-conform-common.c |   43 ++++++++---------------------------
 1 file changed, 9 insertions(+), 34 deletions(-)

commit 3570852b02fb7a26919bf50cbad1bc76dd4d2be7
Author: Robert Bragg <robert@linux.intel.com>
Date:   Tue Jul 6 02:01:24 2010 +0100

    cogl: expose the semantic differences of gl/gles2 npot textures
    
    This adds three new feature flags COGL_FEATURE_TEXTURE_NPOT_BASIC,
    COGL_FEATURE_TEXTURE_NPOT_MIPMAP and COGL_FEATURE_TEXTURE_NPOT_REPEAT
    that can tell you if your hardware supports non power of two textures,
    npot textures + mipmaps and npot textures + wrap modes other than
    CLAMP_TO_EDGE.
    
    The pre-existing COGL_FEATURE_TEXTURE_NPOT feature implies all of the
    above.
    
    By default GLES 2 core supports npot textures but mipmaps and repeat
    modes can only be used with power of two textures. This patch also makes
    GLES check for the GL_OES_texture_npot extension to determine if mipmaps
    and repeating are supported with npot textures.

 clutter/cogl/cogl/cogl-types.h                     |   21 ++++++++++++++++++--
 clutter/cogl/cogl/driver/gl/cogl.c                 |    5 ++++-
 .../cogl/cogl/driver/gles/cogl-feature-functions.h |   10 ++++++++++
 clutter/cogl/cogl/driver/gles/cogl.c               |    3 +++
 4 files changed, 36 insertions(+), 3 deletions(-)

commit 9e5a18fea435a46dd57c53e8e8e0fab867a5bb92
Author: Elliot Smith <elliot.smith@intel.com>
Date:   Tue Jul 6 17:14:22 2010 +0100

    cookbook: Fixed typo
    
    Removed stray 'd' character.

 doc/cookbook/actors.xml |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit 7c67903a44d8bfdd188a1d8fddbfdd67025d2f48
Author: Elliot Smith <elliot.smith@intel.com>
Date:   Tue Jul 6 16:22:47 2010 +0100

    cookbook: Fix build so CSS files get installed
    
    I had changed the build so CSS files get put into
    the HTML build directory; but done it in such
    a way that they were then being ignored during
    install. Fixed this.

 doc/cookbook/Makefile.am |    3 ++-
 1 file changed, 2 insertions(+), 1 deletion(-)

commit e566c56bd14157e496e741e095961ce2babaf6a2
Author: Elliot Smith <elliot.smith@intel.com>
Date:   Tue Jul 6 16:11:46 2010 +0100

    cookbook: Moved paragraph where it logically belongs
    
    There was a note about constants for keys and
    where they are defined in Clutter header files; but
    the sentence about where key modifiers are defined
    was outside the note. Logically, they belong
    together.

 doc/cookbook/events.xml |   26 ++++++++++++++------------
 1 file changed, 14 insertions(+), 12 deletions(-)

commit 03b19af38ecbf7f51188317c20a368ef24cb448f
Author: Elliot Smith <elliot.smith@intel.com>
Date:   Tue Jul 6 16:09:58 2010 +0100

    cookbook: Added some judicious note elements
    
    In some cases, there were blocks of text which
    were really asides/interrupts to the flow, but
    which weren't explicitly marked as such. I fixed
    them by turning them into <note> blocks.

 doc/cookbook/events.xml   |    4 ++--
 doc/cookbook/textures.xml |    4 ++--
 2 files changed, 4 insertions(+), 4 deletions(-)

commit 9a609cf629dd1251a9e995b02c43512dff2b5b39
Author: Elliot Smith <elliot.smith@intel.com>
Date:   Tue Jul 6 16:08:43 2010 +0100

    cookbook: Added more information for contributors
    
    Suggested use of <note> element for adding detail
    or asides which would otherwise interrupt the
    flow of the recipe.

 doc/cookbook/clutter-cookbook.xml.in |    4 ++++
 1 file changed, 4 insertions(+)

commit 15331d3a0106c8087ab2dceccb744b0857e91e09
Author: Elliot Smith <elliot.smith@intel.com>
Date:   Tue Jul 6 16:04:46 2010 +0100

    cookbook: Link out to docbook site
    
    Corrected the link on the word Docbook, as it
    was an internal <link> rather than an external
    <ulink>.

 doc/cookbook/clutter-cookbook.xml.in |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit c108a32c30b31790e92dde0bb9bd06c8ed8bc3d7
Author: Elliot Smith <elliot.smith@intel.com>
Date:   Tue Jul 6 16:00:33 2010 +0100

    cookbook: Made docbook element usage consistent
    
    Made usage of docbook elements consistent across
    recipes; to ensure the conventions are kept by others,
    added a section about how to write and style recipes.

 doc/cookbook/actors.xml              |   22 ++++----
 doc/cookbook/clutter-cookbook.xml.in |   57 ++++++++++++++++++--
 doc/cookbook/events.xml              |   97 +++++++++++++++++++---------------
 doc/cookbook/textures.xml            |   93 +++++++++++++++++---------------
 4 files changed, 172 insertions(+), 97 deletions(-)

commit fe7385cb7d011ade2394b465a12fb4c89a98ad79
Author: Elliot Smith <elliot.smith@intel.com>
Date:   Tue Jul 6 15:42:32 2010 +0100

    cookbook: Additional selectors in CSS stylesheet
    
    Added some selectors for docbook element types
    [properties and types], so those elements can be used in recipes

 doc/common/style.css |   34 +++++++++++++++++++---------------
 1 file changed, 19 insertions(+), 15 deletions(-)

commit dfe7c554fd6f8d5cf1d5217c7c67b17148e3f145
Author: Elliot Smith <elliot.smith@intel.com>
Date:   Tue Jul 6 15:34:19 2010 +0100

    cookbook: Copy the CSS file into the HTML build directory
    
    This makes local testing easier, as you can see what the
    cookbook will look like when installed.

 doc/cookbook/Makefile.am |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit ced7915ea1977bd9d9aa2a70f54f1f2f774ed567
Author: Neil Roberts <neil@linux.intel.com>
Date:   Tue Jul 6 16:08:06 2010 +0100

    cogl-vertex-buffer: Fix the #define for glDisableVertexAttribArray
    
    glDisableVertexAttribArray was defined to glEnableVertexAttribArray so
    it would probably cause crashes if it was ever used. Presumably
    nothing is using these yet because the generic attributes are not yet
    tied to shader attributes in a predictable way.

 clutter/cogl/cogl/cogl-vertex-buffer.c |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit 6757f41c861481540cbea86dd624860645df0ff1
Author: Robert Bragg <robert@linux.intel.com>
Date:   Tue Jul 6 14:23:40 2010 +0100

    configure: Improves GLES 1.x checks
    
    We now always aim to use pkg-config based configuration when possible,
    but when not configure.ac now knows the difference between GLES_CM
    libraries that contain EGL symbols (I.e. a separate EGL library doesn't
    need to be found) and GLESv1_CM libraries that don't contain EGL
    symbols.
    
    http://bugzilla.clutter-project.org/show_bug.cgi?id=2160

 configure.ac |   92 +++++++++++++++++++++++++++++++---------------------------
 1 file changed, 50 insertions(+), 42 deletions(-)

commit 5cb4e0c5d002809afbce93f477ba968979f0c5be
Author: Øyvind Kolås <pippin@linux.intel.com>
Date:   Tue Jul 6 14:26:07 2010 +0100

    test-state: fix test for state count after state removal
    
    In the .json file used for the test, there is no null -> "base"
    transition defined only a "clicked" -> "base", when the "clicked" state
    is removed the "base" state will also disappear.

 tests/conform/test-state.c |    6 +++++-
 1 file changed, 5 insertions(+), 1 deletion(-)

commit 290038ee683d3672b68a063903483440f02407a8
Author: Øyvind Kolås <pippin@linux.intel.com>
Date:   Tue Jul 6 13:38:16 2010 +0100

    animator: fix removal of multiple keys
    
    When removing keys, sometimes a couple of keys would be remaining.

 clutter/clutter-animator.c |   11 ++++++-----
 1 file changed, 6 insertions(+), 5 deletions(-)

commit ec05230b97a9b683620af1c84c823eb7d161b64c
Author: Øyvind Kolås <pippin@linux.intel.com>
Date:   Tue Jul 6 13:47:49 2010 +0100

    state: added clutter_state_key_get_property_type
    
    A function to retrieve the type of the value stored in a key, the
    equivalent already exists for ClutterAnimator.

 clutter/clutter-state.c                    |   22 ++++++++++++++++++++++
 clutter/clutter-state.h                    |    1 +
 doc/reference/clutter/clutter-sections.txt |   17 +++++++++--------
 3 files changed, 32 insertions(+), 8 deletions(-)

commit 6d1f697bc42d87e2cdbcdc3cfef91bf98a485b84
Author: Øyvind Kolås <pippin@linux.intel.com>
Date:   Tue Jul 6 13:34:22 2010 +0100

    state: automatically remove unused states
    
    When there is no further keys with a state as the target state, remove
    the state (and all transitions that used this state as a target)

 clutter/clutter-state.c    |   24 ++++++++++++++----------
 tests/conform/test-state.c |   22 ++++++++++++++++++++++
 2 files changed, 36 insertions(+), 10 deletions(-)

commit 140f76abf44594dc6b004b381e3ec24b6ecdc208
Author: Alexandros Frantzis <alexandros.frantzis@linaro.org>
Date:   Tue Jul 6 13:24:00 2010 +0100

    build: Exclude built sources from the dist
    
    http://bugzilla.clutter-project.org/show_bug.cgi?id=2169
    
    Signed-off-by: Emmanuele Bassi <ebassi@linux.intel.com>

 clutter/cogl/cogl/Makefile.am |    8 ++++----
 1 file changed, 4 insertions(+), 4 deletions(-)

commit 1860d45087f85a956e21ce69631b9a1cf0e7436f
Author: Damien Lespiau <damien.lespiau@intel.com>
Date:   Sun Jun 6 22:47:02 2010 +0100

    build: Allow to run the tests from any directory
    
    I was fed up to cd into the tests/conform or tests/interactive directories
    to launch a specific test. Now, with the power the abs_ variants of
    builddir and srcdir we can run specific test from any directory.
    
    http://bugzilla.clutter-project.org/show_bug.cgi?id=2159

 configure.ac                      |    2 ++
 tests/conform/.gitignore          |    1 +
 tests/conform/Makefile.am         |    6 ++++--
 tests/conform/test-launcher.sh    |   25 -------------------------
 tests/conform/test-launcher.sh.in |   25 +++++++++++++++++++++++++
 tests/interactive/.gitignore      |    1 +
 tests/interactive/Makefile.am     |    8 +++++---
 tests/interactive/wrapper.sh      |   15 ---------------
 tests/interactive/wrapper.sh.in   |   15 +++++++++++++++
 9 files changed, 53 insertions(+), 45 deletions(-)

commit 739240095ff62a69b6cb34cdee4243fa258e5382
Author: Robert Bragg <robert@linux.intel.com>
Date:   Tue Jul 6 01:30:25 2010 +0100

    debug: Adds a COGL_DEBUG=disable-pbos debug option
    
    For testing purposes, either to identify bugs in Cogl or the driver or
    simulate lack of PBO support COGL_DEBUG=disable-pbos can be used to
    fallback to malloc instead.

 clutter/cogl/cogl/cogl-debug.c |    2 ++
 clutter/cogl/cogl/cogl-debug.h |    9 +++++----
 clutter/cogl/cogl/cogl.c       |    3 +++
 3 files changed, 10 insertions(+), 4 deletions(-)

commit b4b98358e191f31acb73d773fdd9a8a4b72f3292
Author: Robert Bragg <robert@linux.intel.com>
Date:   Sat Jul 3 19:05:04 2010 +0100

    pango-render: set CLAMP_TO_EDGE wrap mode on glyph_material
    
    The pango renderer was causing lots of override materials to be allocated
    because the vertex_buffer API converts AUTOMATIC mode into REPEAT for
    backwards compatibility. By explicitly setting the wrap mode to
    CLAMP_TO_EDGE when creating the glyph_material then the vertex_buffer
    API will leave it untouched.

 clutter/cogl/pango/cogl-pango-render.c |    2 ++
 1 file changed, 2 insertions(+)

commit 82ba7220afcb03f87606a0a8800eb067f0962724
Author: Robert Bragg <robert@linux.intel.com>
Date:   Mon Jul 5 16:14:00 2010 +0100

    pixel-array: Allow passing of hints to cogl_buffer_map
    
    This allows you to tell Cogl that you are planning to replace all the
    buffer's data once it is mapped with cogl_buffer_map. This means if the
    buffer is currently being accessed by the GPU then the driver doesn't
    have to stall and wait for it to finish before it can access it from the
    CPU and can instead potentially allocate a new buffer with undefined
    data and map that.

 clutter/cogl/cogl/cogl-buffer-private.h |    3 ++-
 clutter/cogl/cogl/cogl-buffer.c         |    8 ++++---
 clutter/cogl/cogl/cogl-buffer.h         |   36 ++++++++++++++++++++++++++++---
 clutter/cogl/cogl/cogl-pixel-array.c    |    9 +++++---
 tests/conform/test-cogl-pixel-buffer.c  |    4 +++-
 5 files changed, 49 insertions(+), 11 deletions(-)

commit 0273b13d757ad968e29579e283aaf5c54a0e016c
Author: Robert Bragg <robert@linux.intel.com>
Date:   Mon Jul 5 19:49:35 2010 +0100

    test-cogl-pixel-array: fix how data is initialized
    
    There was a missing '* 4' and '* i' in the for() loops that initialized
    the first test buffer, so it was containing uninitialized data causing
    the test to fail.

 tests/conform/test-cogl-pixel-buffer.c |    4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

commit fb79b0c14e20849de5a5d95fd7eab45f763843ef
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Tue Jul 6 11:57:16 2010 +0100

    moduleset: Update cairo and pixman versions
    
    The gtk+ we use for clutter-gtk depends on a new version of Cairo.

 build/clutter.modules |   14 +++++++-------
 1 file changed, 7 insertions(+), 7 deletions(-)

commit aa8ffef5439553f9e06e776285fc58e42d497c84
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Tue Jul 6 11:42:08 2010 +0100

    moduleset: Remove libXft
    
    The system one should be enough.

 build/clutter.modules |    2 ++
 1 file changed, 2 insertions(+)

commit a63eb10855a94426ecd53cc9888f08b1ced1cede
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Mon Jul 5 15:10:42 2010 +0100

    docs: Fix Cally documentation

 clutter/cally/cally-actor.c     |   64 +++++++++++++++++++++++----------------
 clutter/cally/cally-clone.c     |   43 ++++++++++++++++++++++++--
 clutter/cally/cally-group.c     |   19 ++++++++++--
 clutter/cally/cally-rectangle.c |    4 +--
 clutter/cally/cally-root.c      |   11 +++----
 clutter/cally/cally-stage.c     |    5 +--
 clutter/cally/cally-text.c      |    4 +--
 clutter/cally/cally-texture.c   |    5 +--
 8 files changed, 109 insertions(+), 46 deletions(-)

commit 09c6553f0dd086413ce80c17eec05665a6ea03d3
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Mon Jul 5 14:43:18 2010 +0100

    cally: Clean up the headers
    
    Make Cally follow the single-include header file policy of Clutter and
    Cogl; this means making cally.h the single include header, and requires
    a new cally-main.h file for the functions defined by cally.h.
    
    Also:
    
      • clean up the licensing notice and remove the FSF address;
    
      • document the object structures (instance and class);
    
      • G_GNUC_CONST-ify the get_type() functions;
    
      • reduce the padding for CallyActor sub-classes;
    
      • reduce the amount of headers included.

 clutter/cally/Makefile.am           |    3 +-
 clutter/cally/cally-actor-private.h |   11 +++++---
 clutter/cally/cally-actor.c         |   11 ++++----
 clutter/cally/cally-actor.h         |   45 +++++++++++++++++++++++------
 clutter/cally/cally-clone.h         |   35 +++++++++++++++++------
 clutter/cally/cally-group.h         |   34 +++++++++++++++++-----
 clutter/cally/cally-main.h          |   39 ++++++++++++++++++++++++++
 clutter/cally/cally-rectangle.h     |   35 +++++++++++++++++------
 clutter/cally/cally-root.h          |   32 ++++++++++++++++-----
 clutter/cally/cally-stage.h         |   34 +++++++++++++++++-----
 clutter/cally/cally-text.c          |    6 ++++
 clutter/cally/cally-text.h          |   53 ++++++++++++++++++++++++-----------
 clutter/cally/cally-texture.h       |   35 +++++++++++++++++------
 clutter/cally/cally-util.h          |   31 ++++++++++++++++----
 clutter/cally/cally.c               |    7 +++++
 clutter/cally/cally.h               |   29 +++++++++++--------
 clutter/cally/cally.pc.in           |    8 +++---
 doc/reference/cally/Makefile.am     |    2 +-
 18 files changed, 346 insertions(+), 104 deletions(-)

commit da4dbbb9260fcbe3a142e0287a6b3b2ea90420ff
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Mon Jul 5 14:00:29 2010 +0100

    Add binaries of the Cally examples to the ignore file

 tests/accessibility/.gitignore |    5 +++++
 1 file changed, 5 insertions(+)

commit e0a1f20ca2a0c38015acde9d1e77fa8c3e484a6c
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Mon Jul 5 13:59:36 2010 +0100

    docs: Add Cally API reference

 .gitignore                             |   14 +++
 configure.ac                           |    2 +
 doc/reference/Makefile.am              |    2 +-
 doc/reference/cally/Makefile.am        |   87 ++++++++++++++++
 doc/reference/cally/cally-docs.xml.in  |  130 ++++++++++++++++++++++++
 doc/reference/cally/cally-sections.txt |  174 ++++++++++++++++++++++++++++++++
 doc/reference/cally/cally.types        |    9 ++
 doc/reference/clutter/Makefile.am      |    3 +-
 8 files changed, 419 insertions(+), 2 deletions(-)

commit e110b3569446b3c950273c69651e9aaed21e28a1
Author: Alejandro Piñeiro <apinheiro@igalia.com>
Date:   Tue Apr 27 12:08:42 2010 +0200

    Avoid to load cally module on a11y examples
    
    As cally is being integrated on clutter is not required to load
    cally module anymore. Anyway, it is still required to load
    the atk bridge by hand. The current way to load it could change
    in the future, more information here:
    
    https://bugzilla.gnome.org/show_bug.cgi?id=612599
    https://bugzilla.gnome.org/show_bug.cgi?id=619946
    
    Part [4/4] of CB#2099

 tests/accessibility/cally-examples-util.c |   80 ++---------------------------
 1 file changed, 3 insertions(+), 77 deletions(-)

commit 790d2165f3178cc947455acfd08d42dcafdbdd02
Author: Alejandro Piñeiro <apinheiro@igalia.com>
Date:   Mon Apr 26 20:07:22 2010 +0200

    Add accessibility tests
    
    http://bugzilla.clutter-project.org/show_bug.cgi?id=2099
    
    Signed-off-by: Emmanuele Bassi <ebassi@linux.intel.com>

 configure.ac                                       |    1 +
 tests/Makefile.am                                  |    2 +-
 tests/README                                       |    3 +
 tests/accessibility/Makefile.am                    |   61 +++++
 tests/accessibility/cally-atkcomponent-example.c   |  102 ++++++++
 .../accessibility/cally-atkeditabletext-example.c  |  270 ++++++++++++++++++++
 tests/accessibility/cally-atkevents-example.c      |  180 +++++++++++++
 tests/accessibility/cally-atktext-example.c        |  212 +++++++++++++++
 tests/accessibility/cally-clone-example.c          |  112 ++++++++
 tests/accessibility/cally-examples-util.c          |  216 ++++++++++++++++
 tests/accessibility/cally-examples-util.h          |   24 ++
 11 files changed, 1182 insertions(+), 1 deletion(-)

commit 8f8e88b692b04fc8cf1949fa1b98c7ae47846a90
Author: Alejandro Piñeiro <apinheiro@igalia.com>
Date:   Mon Apr 26 19:33:49 2010 +0200

    Initialize accessibility support on clutter_init
    
    Initialize the accessibility support calling cally_accessibility_init
    
    Take into account that this is required to at least be sure that
    CallyUtil class is available.
    
    It also modifies cally_accessibility_module_init in order to return
    if the initialization was fine (and the name, removing the module word).
    
    It also removes the gnome accessibility hooks, as it is not anymore
    module code.
    
    Solves CB#2098

 clutter/cally/cally.c  |   64 +++++++++++++++++++++++++-----------------------
 clutter/cally/cally.h  |   11 +++------
 clutter/clutter-main.c |   27 ++++++++++++++++++++
 clutter/clutter-main.h |    1 +
 4 files changed, 65 insertions(+), 38 deletions(-)

commit 774541d71e2518f03bc4fdfb7ad481077a9b0dcb
Author: Alejandro Piñeiro <apinheiro@igalia.com>
Date:   Tue Jun 15 13:45:19 2010 +0200

    Rename some methods and includes to avoid -Wshadow warnings
    
    http://bugzilla.clutter-project.org/show_bug.cgi?id=2097

 clutter/cally/cally-actor.c |    5 ++---
 clutter/cally/cally-util.c  |   14 +++++++-------
 2 files changed, 9 insertions(+), 10 deletions(-)

commit 72da871c0a918a33b742f3353c73c2e984c46f57
Author: Alejandro Piñeiro <apinheiro@igalia.com>
Date:   Mon Jun 14 18:05:57 2010 +0200

    Cally initialization code
    
    This commit includes a method to init the a11y support. Two main purposes:
    
     * Register the different Atk factories.
     * Ensure that there are a AtkUtil implementation class available.
    
    Part of CB#2097

 clutter/cally/cally.c |   93 +++++++++++++++++++++++++++++++++++++++++++++++++
 clutter/cally/cally.h |   40 +++++++++++++++++++++
 2 files changed, 133 insertions(+)

commit c0f753d108b7a2ad23dbf5a5b596f80175442927
Author: Alejandro Piñeiro <apinheiro@igalia.com>
Date:   Mon Jun 14 13:38:25 2010 +0200

    Add Cally
    
    The Clutter Accessibility Library is an implementation of the ATK,
    the Accessibility Toolkit, which exposes Clutter actors to accessibility
    tools. This allows not only writing accessible user interfaces, but also
    allows testing and verification frameworks based on A11Y technologies to
    inspect and test a Clutter scene graph.
    
    http://bugzilla.clutter-project.org/show_bug.cgi?id=2097
    
    Signed-off-by: Emmanuele Bassi <ebassi@linux.intel.com>

 clutter/Makefile.am                 |   10 +-
 clutter/cally/Makefile.am           |   79 ++
 clutter/cally/cally-actor-private.h |   35 +
 clutter/cally/cally-actor.c         | 1491 +++++++++++++++++++++++++++++++++++
 clutter/cally/cally-actor.h         |  108 +++
 clutter/cally/cally-clone.c         |  105 +++
 clutter/cally/cally-clone.h         |   63 ++
 clutter/cally/cally-factory.h       |   91 +++
 clutter/cally/cally-group.c         |  138 ++++
 clutter/cally/cally-group.h         |   65 ++
 clutter/cally/cally-rectangle.c     |  102 +++
 clutter/cally/cally-rectangle.h     |   63 ++
 clutter/cally/cally-root.c          |  273 +++++++
 clutter/cally/cally-root.h          |   64 ++
 clutter/cally/cally-stage.c         |  258 ++++++
 clutter/cally/cally-stage.h         |   62 ++
 clutter/cally/cally-text.c          | 1255 +++++++++++++++++++++++++++++
 clutter/cally/cally-text.h          |   63 ++
 clutter/cally/cally-texture.c       |  103 +++
 clutter/cally/cally-texture.h       |   63 ++
 clutter/cally/cally-util.c          |  557 +++++++++++++
 clutter/cally/cally-util.h          |   61 ++
 clutter/cally/cally.pc.in           |   18 +
 configure.ac                        |    2 +
 24 files changed, 5126 insertions(+), 3 deletions(-)

commit b9c65510cbae99598bec271e78be9ae737af8e0e
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Mon Jul 5 16:45:19 2010 +0100

    Update conformance Git ignore file

 tests/conform/.gitignore |    1 +
 1 file changed, 1 insertion(+)

commit ae43fe9968d901524003b2d19e6d016d8715a6fd
Author: Robert Bragg <robert@linux.intel.com>
Date:   Mon Jul 5 16:17:34 2010 +0100

    conform: don't reference old test_cogl_pixel_buffer symbol
    
    Since CoglPixelBuffer was renamed to CoglPixelArray the test entry point
    was also renamed to test_cogl_pixel_array, but mistakenly the
    corresponding test-conform-main.c change wasn't pushed at the same time.

 tests/conform/test-conform-main.c |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit 3e03ba1e7e11d44f5afd290e0d6f1e7fe77f9786
Author: Robert Bragg <robert@linux.intel.com>
Date:   Sat Jul 3 21:11:33 2010 +0100

    cogl-object: cogl_is_XYZ prototype should take void *
    
    This changes the cogl_is_XYZ function prototypes generated when using
    the COGL_OBJECT_DEFINE macro to take a void * argument instead of a
    CoglHandle argument.

 clutter/cogl/cogl/cogl-object-private.h |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit 8a5aed36fe8e9cd57c4644653a8e7103ca946bc3
Author: Robert Bragg <robert@linux.intel.com>
Date:   Sun Jul 4 00:49:31 2010 +0100

    pixel-array: Only allow allocation of arrays with a 2D size
    
    This removes cogl_pixel_array_new which just took a size in bytes.
    
    Without the image size and pixel format then the driver often doesn't
    have enough information to allocate optimal GPU memory that can be
    textured from directly. This is because GPUs often have ways to
    spatially alter the layout of a texture to improve cache access patterns
    which may require special alignment and padding dependant in the images
    width, height and bpp.
    
    Although currently we are limited by OpenGL because it doesn't let us
    pass on the width and height when allocating a PBO, the hope is that we
    can define a better extension at some point.

 clutter/cogl/cogl/cogl-pixel-array.c   |    6 ++---
 clutter/cogl/cogl/cogl-pixel-array.h   |   16 --------------
 tests/conform/test-cogl-pixel-buffer.c |   38 ++++++++++++++++++--------------
 3 files changed, 24 insertions(+), 36 deletions(-)

commit cfef390d87076454195d6b2288cb7fa9c17acf4b
Author: Robert Bragg <robert@linux.intel.com>
Date:   Sun Jul 4 00:45:12 2010 +0100

    pixel-array: rename new_from_size to new_with_size
    
    It is more in keeping with other coding conventions in Cogl to use new
    "with" size instead of new "from" size.

 clutter/cogl/cogl/cogl-pixel-array.c |    8 ++++----
 clutter/cogl/cogl/cogl-pixel-array.h |   12 ++++++------
 2 files changed, 10 insertions(+), 10 deletions(-)

commit 8ae0478850461285fa8e2d493a79fccd6c94c7fb
Author: Robert Bragg <robert@linux.intel.com>
Date:   Sun Jul 4 00:18:10 2010 +0100

    cogl-buffer-private.h: cleanup up the coding style
    
    This file was following the Clutter coding style of arranging prototypes
    into columns which Cogl doesn't copy.

 clutter/cogl/cogl/cogl-buffer-private.h |   42 ++++++++++++++++++-------------
 1 file changed, 25 insertions(+), 17 deletions(-)

commit 54f4a3a7526bf0b0a188ae1c865ed64581395507
Author: Robert Bragg <robert@linux.intel.com>
Date:   Sat Jul 3 23:46:03 2010 +0100

    rename CoglPixelBuffer to CoglPixelArray
    
    This renames CoglPixelBuffer to CoglPixelArray to be consistent with the
    new CoglVertexArray API.

 clutter/cogl/cogl/Makefile.am                 |    6 +-
 clutter/cogl/cogl/cogl-buffer.c               |    2 +-
 clutter/cogl/cogl/cogl-pixel-array-private.h  |   74 ++++++
 clutter/cogl/cogl/cogl-pixel-array.c          |  324 +++++++++++++++++++++++++
 clutter/cogl/cogl/cogl-pixel-array.h          |  147 +++++++++++
 clutter/cogl/cogl/cogl-pixel-buffer-private.h |   73 ------
 clutter/cogl/cogl/cogl-pixel-buffer.c         |  323 ------------------------
 clutter/cogl/cogl/cogl-pixel-buffer.h         |  146 -----------
 clutter/cogl/cogl/cogl-texture.c              |   14 +-
 clutter/cogl/cogl/cogl.h                      |    2 +-
 tests/conform/test-cogl-pixel-buffer.c        |   24 +-
 11 files changed, 569 insertions(+), 566 deletions(-)

commit 57341dbb607280410bcfaf19d09876570a966a3b
Author: Robert Bragg <robert@linux.intel.com>
Date:   Sat Jul 3 21:30:33 2010 +0100

    cogl-buffer: make the COGL_BUFFER_USAGE_HINT private
    
    The usage hint should be implied by the CoglBuffer subclass type so the
    public getter and setter APIs for manually changing the usage hint of a
    CoglBuffer have now been removed.

 clutter/cogl/cogl/cogl-buffer-private.h |    9 +++++++
 clutter/cogl/cogl/cogl-buffer.c         |   22 ----------------
 clutter/cogl/cogl/cogl-buffer.h         |   44 -------------------------------
 tests/conform/test-cogl-pixel-buffer.c  |    5 ----
 4 files changed, 9 insertions(+), 71 deletions(-)

commit 7820842262a086d2075f7fc5c043a589a05e4825
Author: Robert Bragg <robert@linux.intel.com>
Date:   Sat Jul 3 23:56:44 2010 +0100

    cogl-buffer: Handle subclass registration like cogl-texture
    
    Instead of having to extend cogl_is_buffer with new buffer types
    manually this now adds a new COGL_BUFFER_DEFINE macro to be used instead
    of COGL_OBJECT_DEFINE for CoglBuffer subclasses. This macro will
    automatically register the new type with ctx->buffer_types which will
    iterated by cogl_is_buffer. This is the same coding pattern used for
    CoglTexture.

 clutter/cogl/cogl/cogl-buffer-private.h |   12 ++++++++++++
 clutter/cogl/cogl/cogl-buffer.c         |   28 +++++++++++++++++++++++++---
 clutter/cogl/cogl/cogl-context.c        |    2 ++
 clutter/cogl/cogl/cogl-context.h        |    4 ++++
 clutter/cogl/cogl/cogl-pixel-buffer.c   |    2 +-
 5 files changed, 44 insertions(+), 4 deletions(-)

commit 90931e261fbfd75b52330817e5f28981303be3a6
Author: Robert Bragg <robert@linux.intel.com>
Date:   Sat Jul 3 20:24:36 2010 +0100

    pixel-buffer: Replace CoglHandle with CoglPixelBuffer *
    
    One more file converted to stop using CoglHandle re:a8c8cbee513

 clutter/cogl/cogl/cogl-buffer-private.h       |    5 +++--
 clutter/cogl/cogl/cogl-pixel-buffer-private.h |    4 ++--
 clutter/cogl/cogl/cogl-pixel-buffer.c         |   26 ++++++++++++-------------
 clutter/cogl/cogl/cogl-pixel-buffer.h         |   18 +++++++++--------
 4 files changed, 28 insertions(+), 25 deletions(-)

commit baacf2e707fced48d9dc658527f7b599ce609029
Author: Robert Bragg <robert@linux.intel.com>
Date:   Fri Jul 2 18:04:45 2010 +0100

    cogl-material: Adds debug api to dump sparse material graph
    
    This adds a _cogl_debug_dump_materials_dot_file function that can be
    used to dump all the descendants of the default material to a file using
    the dot format which can then be converted to an image to visualize.

 clutter/cogl/cogl/cogl-material.c |  165 +++++++++++++++++++++++++++++++++++++
 1 file changed, 165 insertions(+)

commit f3b75541c7b5c286911c6761e902e74bb39c6ed7
Author: Robert Bragg <robert@linux.intel.com>
Date:   Sun Jul 4 02:44:37 2010 +0100

    cogl-vertex-buffer.h: #include <cogl/cogl-defines.h>
    
    cogl-vertex-buffer.h was assuming that the platforms GL headers had
    already been included but that shouldn't have to be the case.

 clutter/cogl/cogl/cogl-vertex-buffer.h |    1 +
 1 file changed, 1 insertion(+)

commit ed232070837c77bfaf7c2c7f522bac73a80d2b63
Author: Robert Bragg <robert@linux.intel.com>
Date:   Sat Jul 3 21:10:05 2010 +0100

    cogl-object-private.h: #include glib.h and cogl-types.h
    
    cogl-object-private.h was only working in places that had already
    included glib.h and cogl-types.h

 clutter/cogl/cogl/cogl-object-private.h |    3 +++
 1 file changed, 3 insertions(+)

commit cf8e88768fcd98ccd9ebb9b080264eec882b2268
Author: Robert Bragg <robert@linux.intel.com>
Date:   Sat Jul 3 18:44:47 2010 +0100

    material: don't keep extra ref on copy-on-write materials
    
    In _cogl_material_pre_change_notify if a material with descendants is
    modified then we create a new material that is a copy of the one being
    modified and reparent those descendants to the new material.
    
    This patch ensures we drop the reference we get from cogl_material_copy
    since we can rely on the descendants to keep the new material alive.

 clutter/cogl/cogl/cogl-material.c |    4 ++++
 1 file changed, 4 insertions(+)

commit 70925a31949dee013a97ed6aff1f62e98b8f1076
Author: Robert Bragg <robert@linux.intel.com>
Date:   Fri Jul 2 01:07:36 2010 +0100

    build: Fix GLES builds since the material backend split
    
    The commit to split the fragment processing backends out from
    cogl-material.c (3e1323a6362906a95) broke the GLES 1 and 2 builds the
    fix was to guard the code in each backend according to the
    COGL_MATERIAL_BACKEND_XYZ defines which are setup in
    cogl-material-private.h.

 clutter/cogl/cogl/cogl-material-arbfp.c   |    7 ++++++-
 clutter/cogl/cogl/cogl-material-fixed.c   |    7 ++++++-
 clutter/cogl/cogl/cogl-material-glsl.c    |    7 ++++++-
 clutter/cogl/cogl/cogl-material-private.h |    2 ++
 4 files changed, 20 insertions(+), 3 deletions(-)

commit 9313f44e67b131543e358fe8461e33a3d1210b2d
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Fri Jul 2 17:48:19 2010 +0100

    docs: Add a cogl-paths section
    
    The path primitives have a specific section, now, and gtk-doc is loudly
    complaining about it being defined but not referenced.

 doc/reference/cogl/cogl-docs.xml.in  |    1 +
 doc/reference/cogl/cogl-sections.txt |    6 ++++--
 2 files changed, 5 insertions(+), 2 deletions(-)

commit 38941372bf09e0d36752ab8e9be626dc744bf847
Author: Øyvind Kolås <pippin@linux.intel.com>
Date:   Fri Jul 2 16:44:54 2010 +0100

    state: rename property "target-state" to "state"
    
    This reduces the amount of typing, and should provide for more readable
    code for most uses of ClutterState.

 clutter/clutter-state.c                    |   80 +++++++++++------------
 clutter/clutter-state.h                    |   98 ++++++++++++++--------------
 doc/reference/clutter/clutter-sections.txt |    2 +-
 tests/interactive/test-state.c             |    4 +-
 4 files changed, 91 insertions(+), 93 deletions(-)

commit 25509e6a7b04be9b40c9fa0821901e88d4b7ec03
Author: Neil Roberts <neil@linux.intel.com>
Date:   Fri Jul 2 16:19:48 2010 +0100

    Convert the ASCII art documentation in cogl-vertex-buffer to PNGs
    
    The documentation for cogl_vertex_buffer_indices_get_for_quads was
    using ugly ASCII art to draw the diagrams. These have now been
    replaced with PNG figures.

 clutter/cogl/cogl/cogl-vertex-buffer.h        |   35 ++++++++++---------------
 doc/reference/cogl/Makefile.am                |    4 +++
 doc/reference/cogl/quad-indices-order.png     |  Bin 0 -> 2620 bytes
 doc/reference/cogl/quad-indices-triangles.png |  Bin 0 -> 8018 bytes
 4 files changed, 18 insertions(+), 21 deletions(-)

commit 86500cd3d5bda3025da90105fb80127069e4ddef
Author: Neil Roberts <neil@linux.intel.com>
Date:   Fri Jul 2 13:49:34 2010 +0100

    Add CoglMaterialWrapMode to the Cogl docs and fix docs for the getters
    
    CoglMaterialWrapMode was missing from the cogl-sections.txt file so it
    wasn't getting displayed. There were also no documented return values
    from the getters.

 clutter/cogl/cogl/cogl-material.h    |    4 ++++
 doc/reference/cogl/cogl-sections.txt |    1 +
 2 files changed, 5 insertions(+)

commit 9338df438c0e9683e4eb9387d0897fc638b91a19
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Fri Jul 2 11:38:22 2010 +0100

    align-constraint: Offset the position after the alignment factor
    
    Instead of aligning (pos + size), align on size alone, and then offset
    by pos.
    
    http://bugzilla.clutter-project.org/show_bug.cgi?id=2168

 clutter/clutter-align-constraint.c |    8 ++++----
 1 file changed, 4 insertions(+), 4 deletions(-)

commit 884df17536a11c092880392232ecc7c5b71f39a7
Author: Neil Roberts <neil@linux.intel.com>
Date:   Thu Jul 1 20:34:59 2010 +0100

    Fix building the tesselator code for GLES
    
    The tesselator code uses some defines that it expects to be in the GL
    headers such as GLAPI and GLAPIENTRY. These are used to mark the entry
    points as exportable on each platform. We don't really want the
    tesselator code to use these but we also don't want to modify the C
    files so instead they are #defined to be empty in the stub glu.h. That
    header is only included internally when building the tesselator/ files
    so it shouldn't affect the rest of Cogl.
    
    GLES also doesn't have a GLdouble type so we just #define this to be a
    regular double.

 clutter/cogl/cogl/cogl-path.c             |    4 ++--
 clutter/cogl/cogl/tesselator/GL/glu.h     |   14 ++++++++++++++
 clutter/cogl/cogl/tesselator/tesselator.h |   30 ++++++++++++++---------------
 3 files changed, 31 insertions(+), 17 deletions(-)

commit c019ff241d472edba3d54f8e698ea1f80c26a651
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu Jul 1 16:05:41 2010 +0100

    cookbook: Fix up the textures section

 doc/cookbook/textures.xml |   16 ++++++++--------
 1 file changed, 8 insertions(+), 8 deletions(-)

commit da06f650df3366c3d342da32c4e04ac7c7efc66c
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu Jul 1 15:59:15 2010 +0100

    cookbook: Fix examples

 doc/cookbook/actors.xml |   60 +++++++++++++++++++++++------------------------
 1 file changed, 29 insertions(+), 31 deletions(-)

commit b74c722670bfa0e17c6fe9d51ec5afc614318a05
Author: Neil Roberts <neil@linux.intel.com>
Date:   Thu Jul 1 15:27:03 2010 +0100

    cogl-material: Don't doubly ref the parent in cogl_material_copy
    
    cogl_material_copy was taking a reference on the original texture when
    making a copy. However it then calls _cogl_material_set_parent on the
    material which also takes a reference on the parent. The second
    reference is cleaned up whenever _cogl_material_unparent is called and
    this is also called by _cogl_material_free. However, it seems that
    nothing was cleaning up the first reference. I think the reference is
    entirely unnecessary so this patch removes it.

 clutter/cogl/cogl/cogl-material.c |    2 --
 1 file changed, 2 deletions(-)

commit daf19205e0fe367acb6b79f240c2123156a13348
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu Jul 1 14:09:37 2010 +0100

    align-constraint: Follow the position of the source
    
    The AlignConstraint update is using only the width/height of the source,
    but it should also take into account the position.
    
    Also, instead of using the ::notify signal, it should follow the
    BindConstraint, and switch to the ::allocation-changed signal, since
    it's less expensive (one emission instead of four notifications, one for
    each property we use).

 clutter/clutter-align-constraint.c |   30 +++++++++++++++++-------------
 1 file changed, 17 insertions(+), 13 deletions(-)

commit b625d94362b69fcd4dee6dfa621429c5b07ff0ea
Author: Robert Bragg <robert@linux.intel.com>
Date:   Thu Jul 1 12:21:25 2010 +0100

    cogl: don't include cogl-vector.h twice in cogl.h
    
    cogl-vector.h should only be included by cogl.h when
    COGL_ENABLE_EXPERIMENTAL_API is defined. This removes the unguarded
    duplicate include.

 clutter/cogl/cogl/cogl.h |    1 -
 1 file changed, 1 deletion(-)

commit 5187804e13d43cc40cd255b58ef2425dbbba2b76
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu Jul 1 12:17:01 2010 +0100

    cookbook: Clean up build
    
    Create two HTML versions of the cookbook:
    
      • single page
      • multiple pages
    
    Use the online version of the DocBook XHTML XSL, and disable the PDF
    generation until we can restore it.

 .gitignore               |    1 +
 doc/cookbook/Makefile.am |   28 ++++++++++++++++++----------
 2 files changed, 19 insertions(+), 10 deletions(-)

commit 089b9b545e393848a0f8bce73d2a8468566d56c6
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu Jul 1 11:29:46 2010 +0100

    cookbook: Split the cookbook chapters
    
    Use separate files, to avoid making the XML too big and uneditable.
    
    This breaks the PDF build.

 doc/cookbook/Makefile.am             |   13 +-
 doc/cookbook/actors.xml              |  260 +++++++
 doc/cookbook/animations.xml          |   42 ++
 doc/cookbook/clutter-cookbook.xml.in | 1255 +---------------------------------
 doc/cookbook/events.xml              |  337 +++++++++
 doc/cookbook/introduction.xml        |  103 +++
 doc/cookbook/recipe-template.xml     |   24 +
 doc/cookbook/textures.xml            |  483 +++++++++++++
 8 files changed, 1270 insertions(+), 1247 deletions(-)

commit 9c11538bee618c52809e936f7d218901a15d3d8b
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu Jul 1 11:08:51 2010 +0100

    cookbook: Fix up the examples

 doc/cookbook/clutter-cookbook.xml.in |   56 +++++++++++++++++-----------------
 1 file changed, 28 insertions(+), 28 deletions(-)

commit 534472a0d46688b660bac41f0a0f3797059d2be9
Author: Robert Bragg <robert@linux.intel.com>
Date:   Wed Jun 30 18:06:04 2010 +0100

    cogl: declare experimental symbols consistently
    
    We had several different ways of exposing experimental API, in one case
    the symbols had no special suffix, in two other ways the symbols were
    given an _EXP suffix but in different ways.
    
    This makes all experimental API have an _EXP suffix which is handled
    using #defines in the header so the prototypes in the .c and .h files
    don't have the suffix.
    
    The documented reason for the suffix is so that anyone watching Cogl for
    ABI changes who sees symbols disappear will hopefully understand what's
    going on.

 clutter/cogl/cogl/cogl-buffer.c                    |   32 ++++----
 clutter/cogl/cogl/cogl-buffer.h                    |   67 ++++------------
 clutter/cogl/cogl/cogl-pixel-buffer.c              |   82 ++++----------------
 clutter/cogl/cogl/cogl-pixel-buffer.h              |   47 ++++-------
 clutter/cogl/cogl/cogl-vector.h                    |   22 ++++++
 clutter/cogl/cogl/winsys/cogl-texture-pixmap-x11.h |   56 ++++---------
 6 files changed, 96 insertions(+), 210 deletions(-)

commit 06710027485f1b836a2d143cf86c743eb913d9c3
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Wed Jun 30 17:26:34 2010 +0100

    cookbook: Fix entity typo

 doc/cookbook/clutter-cookbook.xml.in |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit 54aa553d0f691268346657fd661450ed9bf8845a
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Wed Jun 30 17:18:15 2010 +0100

    cookbook: Re-style
    
    Use a modified version of the Poky Handbook CSS for the HTML version of
    the Cookbook.
    
    Promote Elliot as author.
    
    Re-license from the GPLv2.0 to the CC BY-NC-SA 2.0.

 doc/common/style.css                 |  992 +++++++++++++++++++++++++++++++---
 doc/cookbook/Makefile.am             |    6 +-
 doc/cookbook/clutter-cookbook.xml.in |   36 +-
 doc/cookbook/images/clutter-logo.png |  Bin 0 -> 3270 bytes
 4 files changed, 953 insertions(+), 81 deletions(-)

commit 698743d4549660b1409e425ed9268a03df54650a
Author: Neil Roberts <neil@linux.intel.com>
Date:   Wed Jun 30 15:51:52 2010 +0100

    cogl/tesselator: Update to the latest code from GLU
    
    This grabs the latest code for libtess from git Mesa. This is mostly
    so that we can get the following commit which fixes a lot of compiler
    warnings in Clutter:
    
    commit 75acb896c6da758d03e86f8725d6ca0cb2c6ad82
    Author: Neil Roberts <neil@linux.intel.com>
    Date:   Wed Jun 30 12:41:11 2010 +0100
    
        glu: Fix some compiler warnings in libtess
    
        When compiled with the more aggressive compiler warnings such as
        -Wshadow and -Wempty-body the libtess code gives a lot more
        warnings. This fixes the following issues:
    
        * The 'Swap' macro tries to combine multiple statements into one and
          then consume the trailing semicolon by using if(1){/*...*/}else.
          This gives warnings because the else part ends up with an empty
          statement. It also seems a bit dangerous because if the semicolon
          were missed then it would still be valid syntax but it would just
          ignore the following statement. This patch replaces it with the more
          common idiom do { /*...*/ } while(0).
    
        * 'free' was being used as a local variable name but this shadows the
          global function. This has been renamed to 'free_handle'
    
        * TRUE and FALSE were being unconditionally defined. Although this
          isn't currently a problem it seems better to guard them with #ifndef
          because it's quite common for them to be defined in other headers.
    
        https://bugs.freedesktop.org/show_bug.cgi?id=28845

 clutter/cogl/cogl/tesselator/geom.c           |    2 +-
 clutter/cogl/cogl/tesselator/mesh.c           |    4 ++++
 clutter/cogl/cogl/tesselator/normal.c         |    4 ++++
 clutter/cogl/cogl/tesselator/priorityq-heap.c |   22 +++++++++++++---------
 clutter/cogl/cogl/tesselator/priorityq.c      |    2 +-
 clutter/cogl/cogl/tesselator/render.c         |    8 ++++++--
 clutter/cogl/cogl/tesselator/sweep.c          |    4 ++++
 clutter/cogl/cogl/tesselator/tess.c           |    4 ++++
 8 files changed, 37 insertions(+), 13 deletions(-)

commit 4ed4e86e75a0837080324ecbb5022d49add74758
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Wed Jun 30 15:50:47 2010 +0100

    docs: Various fixes for gtk-doc

 clutter/clutter-alpha.c           |   22 +++++++++++-----------
 clutter/clutter-animator.c        |    8 ++++----
 clutter/clutter-script.c          |   20 ++++++++++----------
 clutter/cogl/cogl/cogl.h          |   10 +++++-----
 doc/reference/clutter/Makefile.am |    1 +
 doc/reference/cogl/Makefile.am    |   12 ++++++------
 6 files changed, 37 insertions(+), 36 deletions(-)

commit 005a99f346fa0f253ee82b17af656a7d3e8fbeb0
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Wed Jun 30 15:00:01 2010 +0100

    backend: Move one-off free in finalize()
    
    Instead of using dispose().

 clutter/clutter-backend.c |   14 ++++++++++----
 1 file changed, 10 insertions(+), 4 deletions(-)

commit 7ca340fade26643a17c5048022abc49ac8fcb782
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Wed Jun 30 14:58:47 2010 +0100

    docs: Avoid warnings from the g-ir-scanner
    
    The scanner has some issues when parsing valid gtk-doc annotations; we
    should make its (and, in return, ours) life easier.
    
    We still get warnings for code declared in <programlisting> sections,
    unfortunately.

 clutter/clutter-actor.c            |   10 +++++-----
 clutter/clutter-align-constraint.c |   12 ++++++------
 clutter/clutter-alpha.c            |    3 +--
 clutter/clutter-units.c            |    2 +-
 4 files changed, 13 insertions(+), 14 deletions(-)

commit e32c6c123571de2e09d5f5bdb93c8666a93d6535
Author: Robert Bragg <robert@linux.intel.com>
Date:   Tue Jun 22 14:02:17 2010 +0100

    material: Replace CoglHandle with CoglMaterial *
    
    As part of the ongoing effort to remove CoglHandle from the API this
    switches the cogl_material API to use a strongly typed CoglMaterial
    pointer instead of CoglHandle.

 clutter/cogl/cogl/cogl-context.h          |   10 +-
 clutter/cogl/cogl/cogl-material-private.h |   46 ++-
 clutter/cogl/cogl/cogl-material.c         |  435 ++++++++++++-----------------
 clutter/cogl/cogl/cogl-material.h         |  270 +++++++++---------
 4 files changed, 349 insertions(+), 412 deletions(-)

commit 3e1323a6362906a956131a1e4639b69776dbc188
Author: Robert Bragg <robert@linux.intel.com>
Date:   Tue Jun 15 16:44:52 2010 +0100

    material: Split the fragment processing backends out
    
    This splits the fragment processing backends (glsl, arbfp and fixed) out
    from cogl-material.c into their own cogl-material-{glsl,arbfp,fixed}.c
    files in an effort to help and keep cogl-material.c maintainable.

 clutter/cogl/cogl/Makefile.am                   |    6 +
 clutter/cogl/cogl/cogl-material-arbfp-private.h |   36 +
 clutter/cogl/cogl/cogl-material-arbfp.c         | 1029 ++++++++++++++++++
 clutter/cogl/cogl/cogl-material-fixed-private.h |   36 +
 clutter/cogl/cogl/cogl-material-fixed.c         |  201 ++++
 clutter/cogl/cogl/cogl-material-glsl-private.h  |   36 +
 clutter/cogl/cogl/cogl-material-glsl.c          |  123 +++
 clutter/cogl/cogl/cogl-material-private.h       |   83 +-
 clutter/cogl/cogl/cogl-material.c               | 1309 +----------------------
 9 files changed, 1587 insertions(+), 1272 deletions(-)

commit 411438f3099dc368bf17b517c970a03e11ffda44
Author: Robert Bragg <robert@linux.intel.com>
Date:   Wed Jun 30 03:31:37 2010 +0100

    material: remove a duplicate gtk-doc "Since: 1.4"
    
    The cogl_material_get_depth_writing_enabled documentation had two
    "Since: 1.4" annotations which was confusing the gobject introspection
    scanner.

 clutter/cogl/cogl/cogl-material.h |    1 -
 1 file changed, 1 deletion(-)

commit f4e825b81da6dda14d5d4f4ea8501a2c25bf40f9
Author: Robert Bragg <robert@linux.intel.com>
Date:   Wed Jun 30 11:23:16 2010 +0100

    backend: fix double free of priv->font_name
    
    If the backend was disposed then priv->font_name would be freed but not
    set to NULL and so if clutter_backend_get_font_name was then called it
    would double free priv->font_name.

 clutter/clutter-backend.c |    1 +
 1 file changed, 1 insertion(+)

commit 268bfccd28b6ccca60c9505cd3ddc009549c7484
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Wed Jun 30 13:26:32 2010 +0100

    build: Redirect xsltproc to a directory
    
    Apparently, xsltproc recognizes a directory if it has a '/' at the end
    of its path, and not by doing the sensible thing and stat()'ing the
    argument for the --output option.

 doc/cookbook/Makefile.am |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit 40c45ef29b73a81046c2b5e2fee4687a63500256
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Wed Jun 30 12:53:20 2010 +0100

    Post-release version bump to 1.3.7

 configure.ac |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit a534ef65b1bfbc8dbedd9158a36a8895cab3649e
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Wed Jun 30 11:18:36 2010 +0100

    Release 1.3.6

 NEWS         |  102 ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 configure.ac |    2 +-
 2 files changed, 103 insertions(+), 1 deletion(-)

commit b9c5405c29b41c9cf5100255a225b4b3c8bccb8f
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Wed Jun 30 12:40:38 2010 +0100

    Revert "build: Enable the cookbook on distcheck"
    
    The cookbook fails the distcheck phase, so we'll need to investigate
    this a little bit more.
    
    This reverts commit f2361a65de090dfe8aa05534cb9bc1c760555084.

 Makefile.am |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit e9b16923bf77a748d561dca0da58e53e4cbfea72
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Wed Jun 30 11:55:52 2010 +0100

    build: Distcheck fixes

 doc/cookbook/Makefile.am |   28 ++++++++++++++--------------
 doc/manual/Makefile.am   |    8 ++++----
 2 files changed, 18 insertions(+), 18 deletions(-)

commit 65b11a305db0c34808f293e3d1795aef361008c4
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Wed Jun 30 11:55:16 2010 +0100

    docs: Disable manual
    
    The manual never really took off, so we just ship it in the tarballs but
    we don't build it.

 doc/Makefile.am |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit 286f307c10db82ccdeb4c98e632073c7ed8a512c
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Wed Jun 30 11:30:45 2010 +0100

    docs: Various fixes

 clutter/clutter-align-constraint.h         |   14 +++++++-------
 clutter/clutter-bind-constraint.h          |    2 +-
 clutter/clutter-settings.c                 |    8 ++++++++
 doc/reference/clutter/clutter-sections.txt |   12 ++++++++++++
 4 files changed, 28 insertions(+), 8 deletions(-)

commit 6341ba98f966ab08827a92c19eefe733fd02933b
Author: Neil Roberts <neil@linux.intel.com>
Date:   Wed Jun 23 17:17:40 2010 +0100

    test-cogl-path: Add tests for changing the fill rule
    
    This creates a path with an outer clockwise and two internal sub
    paths, one clockwise and one counter-clockwise. The path is then
    painted twice, once with each fill rule.

 tests/conform/test-cogl-path.c |   31 +++++++++++++++++++++++++++++++
 1 file changed, 31 insertions(+)

commit 3a1456f34e17161b54ecd8ec55692e8a40c46456
Author: Neil Roberts <neil@linux.intel.com>
Date:   Wed Jun 23 13:40:43 2010 +0100

    cogl-path: Allow changing the fill rule
    
    This adds two new API calls- cogl_path_set_fill_rule and
    cogl_path_get_fill_rule. This allows modifying the fill rule of the
    current path. In addition to the previous default fill rule of
    'even-odd' it now supports the 'non-zero' rule. The fill rule is a
    property of the path (not the Cogl context) so creating a new path or
    preserving a path with cogl_path_get_handle affects the fill rule.

 clutter/cogl/cogl/cogl-path-private.h     |    3 +
 clutter/cogl/cogl/cogl-path.c             |   38 +++++++++++++
 clutter/cogl/cogl/cogl-path.h             |   88 +++++++++++++++++++++++------
 doc/reference/cogl/Makefile.am            |    6 +-
 doc/reference/cogl/cogl-sections.txt      |    3 +
 doc/reference/cogl/fill-rule-even-odd.png |  Bin 0 -> 3121 bytes
 doc/reference/cogl/fill-rule-non-zero.png |  Bin 0 -> 3143 bytes
 doc/reference/cogl/fill-rule.png          |  Bin 3121 -> 0 bytes
 8 files changed, 120 insertions(+), 18 deletions(-)

commit 95317b9623efc5768d74098cc963de7854ca0805
Author: Neil Roberts <neil@linux.intel.com>
Date:   Mon Apr 19 11:24:24 2010 +0100

    cogl-debug: Remove the force-scanline-paths option
    
    The scanline path rasterizer has been removed because the paths can be
    drawn with the tesselator instead. The option therefore no longer does
    anything.

 clutter/cogl/cogl/cogl-debug.c |    2 --
 clutter/cogl/cogl/cogl-debug.h |    1 -
 2 files changed, 3 deletions(-)

commit 0cdbe7e0981da7715451d10c9463491fcad1903e
Author: Neil Roberts <neil@linux.intel.com>
Date:   Thu Apr 15 23:56:46 2010 +0100

    cogl-path: Use the GLU tesselator to draw paths
    
    Instead of drawing paths using the stencil buffer trick, it now
    tesselates the path into triangles using the GLU tesselator and
    renders them directly. A vbo is created with one vertex for each node
    on the path. The tesselator is used to generate a series of indices
    into the vbo as triangles. The tesselator's output of strips and fans
    is converted into GL_TRIANGLES so that it can be rendered with a
    single draw call (but the vertices are still shared via the
    indices). The vbo is stored with the path so that if the application
    uses retained paths then Cogl won't have to tessellate again.
    
    The vertices also have texture coordinates associated with them so
    that it can replicate the old behaviour of drawing a material with a
    texture by fitting the texture to the bounding box of the path and
    then clipping it. However if the texture contains waste or is sliced
    then the vertex buffer code will refuse to draw it. In this case it
    will revert back to drawing the path into the stencil buffer and then
    drawing the material as a clipped quad.
    
    The VBO is used even when setting up the stencil buffer for clipping
    to a path because the tessellated geometry may cover less area.
    
    The old scanline rasterizer has been removed because the tesselator
    should work equally well on drivers with no stencil buffer.

 clutter/cogl/cogl/cogl-path-private.h |    5 +
 clutter/cogl/cogl/cogl-path.c         |  737 ++++++++++++++++++++-------------
 2 files changed, 463 insertions(+), 279 deletions(-)

commit fae4d6010639705b4a33367ce3850335e15e46ee
Author: Neil Roberts <neil@linux.intel.com>
Date:   Fri Apr 16 00:28:15 2010 +0100

    cogl: Pull in the code for GLU tesselator from Mesa/SGI
    
    This copies the files for the GLU tesselator from Mesa. The Mesa code
    is based on the original SGI code and is released under a BSD license.
    
    The memalloc.h header has been replaced with one that forces the code
    to use g_malloc and friends. The rest of the files are not altered
    from the original so it should be possible to later upgrade the files
    by simply overwriting them.
    
    There is a tesselator.h header which is expected to be included by
    rest of Cogl to use the tesselator. This contains a trimmed down
    version of glu.h that only includes parts that pertain to the
    tesselator. There is also a stub glu.h in the GL directory which is
    just provided so that the tesselator code can include <GL/gl.h>
    without depending on the system header. It just redirects to
    tesselator.h

 clutter/cogl/cogl/Makefile.am                 |    7 +-
 clutter/cogl/cogl/tesselator/GL/glu.h         |   26 +
 clutter/cogl/cogl/tesselator/Makefile.am      |   41 +
 clutter/cogl/cogl/tesselator/README           |  446 ++++++++
 clutter/cogl/cogl/tesselator/dict-list.h      |  100 ++
 clutter/cogl/cogl/tesselator/dict.c           |  111 ++
 clutter/cogl/cogl/tesselator/dict.h           |  100 ++
 clutter/cogl/cogl/tesselator/geom.c           |  264 +++++
 clutter/cogl/cogl/tesselator/geom.h           |   84 ++
 clutter/cogl/cogl/tesselator/gluos.h          |    1 +
 clutter/cogl/cogl/tesselator/memalloc.h       |   42 +
 clutter/cogl/cogl/tesselator/mesh.c           |  794 +++++++++++++++
 clutter/cogl/cogl/tesselator/mesh.h           |  266 +++++
 clutter/cogl/cogl/tesselator/normal.c         |  253 +++++
 clutter/cogl/cogl/tesselator/normal.h         |   45 +
 clutter/cogl/cogl/tesselator/priorityq-heap.c |  252 +++++
 clutter/cogl/cogl/tesselator/priorityq-heap.h |  107 ++
 clutter/cogl/cogl/tesselator/priorityq-sort.h |  117 +++
 clutter/cogl/cogl/tesselator/priorityq.c      |  260 +++++
 clutter/cogl/cogl/tesselator/priorityq.h      |  117 +++
 clutter/cogl/cogl/tesselator/render.c         |  498 +++++++++
 clutter/cogl/cogl/tesselator/render.h         |   52 +
 clutter/cogl/cogl/tesselator/sweep.c          | 1357 +++++++++++++++++++++++++
 clutter/cogl/cogl/tesselator/sweep.h          |   77 ++
 clutter/cogl/cogl/tesselator/tess.c           |  628 ++++++++++++
 clutter/cogl/cogl/tesselator/tess.h           |  165 +++
 clutter/cogl/cogl/tesselator/tesselator.h     |  121 +++
 clutter/cogl/cogl/tesselator/tessmono.c       |  201 ++++
 clutter/cogl/cogl/tesselator/tessmono.h       |   71 ++
 configure.ac                                  |    1 +
 30 files changed, 6602 insertions(+), 2 deletions(-)

commit 347f3b614dc542318065cefce7a4b6db56bc55e0
Author: Elliot Smith <elliot.smith@intel.com>
Date:   Tue Jun 29 15:49:40 2010 +0100

    cookbook: Add a recipe for image loading
    
    http://bugzilla.clutter-project.org/show_bug.cgi?id=2165
    
    Signed-off-by: Emmanuele Bassi <ebassi@linux.intel.com>

 doc/cookbook/clutter-cookbook.xml.in |  208 ++++++++++++++++++++++++++++++++++
 1 file changed, 208 insertions(+)

commit f2361a65de090dfe8aa05534cb9bc1c760555084
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Tue Jun 29 18:05:12 2010 +0100

    build: Enable the cookbook on distcheck
    
    We want to start distributing the cookbook along with the documentation.

 Makefile.am |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit e50893f674cfa40ea62e93bfd4fc83fda55131a9
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Tue Jun 29 18:04:52 2010 +0100

    cookbook: Add acknowledgment section
    
    And fix the URLs.

 doc/cookbook/clutter-cookbook.xml.in |   16 +++++++++++++---
 1 file changed, 13 insertions(+), 3 deletions(-)

commit fc49dceae305d1c59b5d1540785dd1bd4df8e026
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Tue Jun 29 17:57:29 2010 +0100

    cookbook: Add introduction to the events section

 doc/cookbook/clutter-cookbook.xml.in |   43 ++++++++++++++++++++++++++++++----
 1 file changed, 39 insertions(+), 4 deletions(-)

commit 566f75d97f7580495181835ef0545278f34fc000
Author: Elliot Smith <elliot.smith@intel.com>
Date:   Tue Jun 29 17:27:54 2010 +0100

    cookbook: Add recipe for key event handling
    
    Attached patch contains a cookbook recipe about key press event
    handling.
    
    It covers both a simple approach (connecting a callback to a
    key-press-event signal which manually analyses the key and
    modifiers), and a more complicated one based on a binding pool.
    
    There's also some discussion of the two approaches.
    
    http://bugzilla.clutter-project.org/show_bug.cgi?id=2162
    
    Signed-off-by: Emmanuele Bassi <ebassi@linux.intel.com>

 doc/cookbook/clutter-cookbook.xml.in |  294 ++++++++++++++++++++++++++++++++++
 1 file changed, 294 insertions(+)

commit 30ca03de1dfb0d92664c8ffd289004c3dc0676b1
Author: Elliot Smith <elliot.smith@intel.com>
Date:   Tue Jun 29 17:26:55 2010 +0100

    cookbook: Add recipe for scaling images with :keep-aspect-ratio
    
    The cookbook contains a commented-out recipe covering scaling images
    inside a texture while retaining their aspect ratio; the attached
    patch fleshes out this recipe.
    
    http://bugzilla.clutter-project.org/show_bug.cgi?id=2163
    
    Signed-off-by: Emmanuele Bassi <ebassi@linux.intel.com>

 doc/cookbook/clutter-cookbook.xml.in |  101 ++++++++++++++++++++++++++++++++--
 1 file changed, 95 insertions(+), 6 deletions(-)

commit f64c66ede8c3edea31931bae4edcb4c10f53d93a
Author: Colin Walters <walters@verbum.org>
Date:   Tue Jun 29 16:25:18 2010 +0100

    autogen.sh: Support NOCONFIGURE, like gnome-common
    
    Signed-off-by: Emmanuele Bassi <ebassi@linux.intel.com>

 autogen.sh |    4 +++-
 1 file changed, 3 insertions(+), 1 deletion(-)

commit 8801c947d556e81b39691d819898e377092d6f59
Author: Chris Lord <chris@linux.intel.com>
Date:   Tue Jun 29 15:30:25 2010 +0100

    event: Typos in event code could cause crashes
    
    A typo in clutter-event.c meant that the wrong struct location could be
    used for the input device of key events. Also, a typo in the X11 event
    code meant that key-presses would come from the pointer device (releases
    would still come from the keyboard device).

 clutter/clutter-event.c         |    2 +-
 clutter/x11/clutter-event-x11.c |    2 +-
 2 files changed, 2 insertions(+), 2 deletions(-)

commit 32ad63efef8ee92b0bc361b9dea3fd46ba72fbd1
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Mon Jun 28 17:18:35 2010 +0100

    bind-constraint: Add width and height binding
    
    Allow using the BindConstraint to bind width and height of a source
    actor.
    
    Also, add a test for the BindConstraint showing all types of usages
    for this constraint class.

 clutter/clutter-bind-constraint.c |  105 ++++++++++++++++++++++++++++-------
 clutter/clutter-bind-constraint.h |    8 ++-
 tests/interactive/.gitignore      |    1 +
 tests/interactive/Makefile.am     |    3 +-
 tests/interactive/test-bind.c     |  110 +++++++++++++++++++++++++++++++++++++
 5 files changed, 204 insertions(+), 23 deletions(-)

commit b3ffe602a207edf14c69f05f6d1e0b892eb706b4
Author: Neil Roberts <neil@linux.intel.com>
Date:   Mon Jun 28 15:25:19 2010 +0100

    cogl: Add const to some pointer arguments
    
    Some of the arguments to the material and path functions were taking a
    pointer to a CoglColor or an array of floats that was not intended to
    be written to but were not marked with const.

 clutter/cogl/cogl/cogl-material.c |    6 +++---
 clutter/cogl/cogl/cogl-material.h |   14 +++++++-------
 clutter/cogl/cogl/cogl-path.c     |    4 ++--
 clutter/cogl/cogl/cogl-path.h     |    8 ++++----
 4 files changed, 16 insertions(+), 16 deletions(-)

commit a20def9df6463ba923859aac31532ff1ccdb488b
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Mon Jun 28 10:43:13 2010 +0100

    text: Use the ::settings-changed signal
    
    Instead of the ::font-changed one.

 clutter/clutter-text.c |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit c81ef75942cac24627a88eda21ad5e4e4e32efcf
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Mon Jun 28 10:32:54 2010 +0100

    x11: Add XSETTINGS watcher
    
    If we want to be able to get live notification of system settings
    changes, we need watch the window that the XSETTINGS client conjures
    up for us.

 clutter/x11/clutter-backend-x11.c |   49 ++++++++++++++++++++++++++++++++++---
 clutter/x11/clutter-backend-x11.h |    1 +
 2 files changed, 47 insertions(+), 3 deletions(-)

commit 31fc8e9664f235d3375bacd9de8d9c614f31b884
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Sat Jun 26 23:05:36 2010 +0100

    text: Document and annotate :font-name for NULL values
    
    Update the documentation of :font-name, to make it clear that by setting
    it to NULL the Text actor will use the default font.
    
    Also, set the annotation for the @font_name argument of the setter to be
    allow-none, and allow passing NULL through bindings.

 clutter/clutter-text.c |    4 +++-
 1 file changed, 3 insertions(+), 1 deletion(-)

commit 809211588d7a34af7aa02c1559badef7a2619b16
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Sat Jun 26 15:49:15 2010 +0100

    text: Update actors using the default font
    
    If a ClutterText actor is using the default font from the backend then
    we should track font name changes and update it accordingly. This only
    applies to ClutterText actors with the :font-name property unset or
    explicitly set to NULL.

 clutter/clutter-text.c |  105 +++++++++++++++++++++++++++++-------------------
 1 file changed, 64 insertions(+), 41 deletions(-)

commit 8e4d221821b633442d374e89053474183f57cccb
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Sat Jun 26 15:42:31 2010 +0100

    clutter.modules: Update with the gdk-pixbuf split
    
    Gdk-Pixbuf has been split back into its own module once again. This
    means that Clutter doesn't have a build requirement on gtk+ any more.

 build/clutter.modules |   12 +++++++++++-
 1 file changed, 11 insertions(+), 1 deletion(-)

commit 26fb0960953069006e781cf59a005bfdfa5d6d5b
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Sat Jun 26 13:51:06 2010 +0100

    settings: Emit Backend::font-changed
    
    When the :font-name property changes, to maintain the invariant.

 clutter/clutter-settings.c |   10 +++++++++-
 1 file changed, 9 insertions(+), 1 deletion(-)

commit 98613382a4b897012e78fff60b0cb7cf7ef97ad2
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Fri Jun 25 11:41:05 2010 +0100

    test-text-field: Use the system font instead of using Sans

 tests/interactive/test-text-field.c |    9 +++------
 1 file changed, 3 insertions(+), 6 deletions(-)

commit 2e4e321dadb8249860c7ae5b853573a5d94f8d7d
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Fri Jun 25 11:40:32 2010 +0100

    Detail the font-name value in the font settings debug note

 clutter/clutter-settings.c |    6 ++++--
 1 file changed, 4 insertions(+), 2 deletions(-)

commit 527ad961ab039c55f7cc0cc3066aedcf183db857
Author: Neil Roberts <neil@linux.intel.com>
Date:   Thu Jun 24 18:14:04 2010 +0100

    clutter-event-win32: Emit multiple events for WM_MOUSEWHEEL Messages
    
    It's possible that a single WM_MOUSEWHEEL event can arrive with a
    scroll amount greater than WHEEL_DELTA. Previously it would accumulate
    these amounts but it would still only emit a single event per
    message. For example, if a message arrived that is worth two
    WHEEL_DELTAs then it would emit one event and leave scroll_pos as
    +WHEEL_DELTA. If the wheel is then scrolled in the opposite direction
    then wheel delta would end up as zero and the scroll event would get
    lost.
    
    This patch fixes it so that it always emits enough events to put
    scroll_pos back to less than WHEEL_DELTA.
    
    http://bugzilla.clutter-project.org/show_bug.cgi?id=2135

 clutter/win32/clutter-event-win32.c |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit 2c8d73f0472798896a6528359f82f8ea6f7589e2
Author: Neil Roberts <neil@linux.intel.com>
Date:   Thu Jun 24 18:07:20 2010 +0100

    clutter-event-win32: Directly enqueue events in message_translate
    
    Previously the window procedure for the stage window would always
    create a ClutterEvent struct for every message and then pass that on
    to message_translate to fill in the details. message_translate could
    return FALSE to abandon the event. Instead of this, message_translate
    now creates and queues the event itself whenever it sees a message
    that could translate to an event. The function now returns void. This
    has a number of advantages:
    
    * It saves redundantly allocating events for messages that Clutter
      doesn't care about.
    
    * A single message can now easily be translated into multiple events.
    
    * There were some messages that were handled and did not fill in the
      event struct but did not cause the function to return FALSE. I think
      this would end up with a CLUTTER_NOTHING event being emitted.
    
    http://bugzilla.clutter-project.org/show_bug.cgi?id=2135

 clutter/win32/clutter-event-win32.c |  297 +++++++++++++++++++----------------
 1 file changed, 162 insertions(+), 135 deletions(-)

commit b4607f7a37597f6d45d356d8a85ce3f8f40def1e
Author: Øyvind Kolås <pippin@linux.intel.com>
Date:   Fri Jun 25 02:02:48 2010 +0100

    state: avoid g_str_equal if a string might be NULL

 clutter/clutter-state.c |    1 +
 1 file changed, 1 insertion(+)

commit fbeab378289a0e9f9470aa9f532003cf66529970
Author: Neil Roberts <neil@linux.intel.com>
Date:   Thu Jun 24 17:33:43 2010 +0100

    test-conformance: Use -export-dynamic instead of -rdynamic
    
    The -rdynamic linker option is specific to ELF so it was breaking
    builds on systems with other object formats such as Windows and
    Solaris. This patch replaces that option with -export-dynamic which is
    a portable libtool option which should do the right thing on each
    platform.
    
    http://bugzilla.clutter-project.org/show_bug.cgi?id=1930

 tests/conform/Makefile.am |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit a950388bc68a0fbdb76bf83cc0673bdca2f1d1d5
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu Jun 24 17:21:26 2010 +0100

    actor: Top-levels should always report a 255 opacity
    
    The paint opacity should always assume a fully opaque top-level at the
    end, otherwise the scene would be rendered fully transparent.
    
    http://bugzilla.clutter-project.org/show_bug.cgi?id=2050

 clutter/clutter-actor.c |    7 +++++++
 1 file changed, 7 insertions(+)

commit 42df1a150b8ecb49f02a5780b9f9c983221c97ea
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu Jun 24 17:19:36 2010 +0100

    actor: Ignore the NOP paint at 0 opacity for top-levels
    
    A top-level actor could still have 0 opacity (e.g. a Stage with the
    :use-alpha property set to TRUE), but we want its children to still
    be painted.
    
    http://bugzilla.clutter-project.org/show_bug.cgi?id=2050

 clutter/clutter-actor.c |    4 +++-
 1 file changed, 3 insertions(+), 1 deletion(-)

commit 1b153971208185bbbc152c315e0ab6ca063af603
Author: Robert Bragg <robert@linux.intel.com>
Date:   Wed Jun 23 17:10:03 2010 +0100

    material: Avoid possibly reading invalid memory
    
    in _cogl_material_prune_empty_layer_difference we sometimes unref the
    given layer before dereferencing it to get a pointer to its parent. This
    defers the unref until after we have fetched the parent pointer.

 clutter/cogl/cogl/cogl-material.c |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit 1ad7eb969cbc5be9a22d18e1a7d76b4bc62f814f
Author: Øyvind Kolås <pippin@linux.intel.com>
Date:   Thu Jun 24 16:52:23 2010 +0100

    state: added more documentation

 clutter/clutter-state.c |   11 ++++++++---
 1 file changed, 8 insertions(+), 3 deletions(-)

commit 2a29cd2aeebf7369a3c93cbaf3321962df304536
Author: Øyvind Kolås <pippin@linux.intel.com>
Date:   Thu Jun 24 02:26:46 2010 +0100

    state: removed special handling of state named "default"
    
    The "default" state used for unspecified source transitions is NULL.
    Small update and some other fixes to documentation.

 clutter/clutter-state.c    |   44 ++++++++++++++++----------------------------
 tests/conform/test-state.c |    5 +++++
 2 files changed, 21 insertions(+), 28 deletions(-)

commit d37dee8258ec2a10f5825694376cc27bc43b8f93
Author: Alejandro Piñeiro <apinheiro@igalia.com>
Date:   Wed Apr 14 18:07:21 2010 +0200

    Improve clutter_text_get_chars doc
    
    Explicitly explain that end_pos is not included with the resulting
    string
    
    http://bugzilla.clutter-project.org/show_bug.cgi?id=2081

 clutter/clutter-text.c |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit 213cd30cebfb58df1298a13adf528755aad6cdfa
Author: Elliot Smith <elliot.smith@intel.com>
Date:   Thu Jun 24 11:23:50 2010 +0100

    docs: Fix example code in BindingPool
    
    The code sample in the gtk-doc annotations for ClutterBindingPool shows
    the arguments in the wrong order.
    
    http://bugzilla.clutter-project.org/show_bug.cgi?id=2133
    
    Signed-off-by: Emmanuele Bassi <ebassi@linux.intel.com>

 clutter/clutter-binding-pool.c |    5 +++--
 1 file changed, 3 insertions(+), 2 deletions(-)

commit 4e5c84ebc5fba38afdf0593f830dc2ea08098a30
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Wed Jun 23 18:46:52 2010 +0100

    doap: Update after the infrastructure changes

 clutter.doap |   64 +++++-----------------------------------------------------
 1 file changed, 5 insertions(+), 59 deletions(-)

commit f60999becfc40af940eba23cd2dbdd8dd2455b1a
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Wed Jun 23 18:46:38 2010 +0100

    Change the Bugzilla link in the configure script

 configure.ac |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit 6ff5d105e52c300b4b06d08f966500b344e0aeca
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Wed Jun 23 18:43:18 2010 +0100

    docs: Change the mailing list link

 README |    7 ++-----
 1 file changed, 2 insertions(+), 5 deletions(-)

commit d17ea2c021a9ba19580c013743224d2d40ac1f76
Author: Neil Roberts <neil@linux.intel.com>
Date:   Wed Jun 23 17:29:08 2010 +0100

    cogl: Remove cogl-defines.h.in from the driver make files
    
    Commit 7fae8ac051292 changed cogl-defines.h.in so there is only a
    single copy in clutter/cogl/ instead of one for each driver. However
    the old files were still mentioned in the EXTRA_DIST of the
    Makefile.am so make distcheck was failing.

 clutter/cogl/cogl/Makefile.am             |    2 ++
 clutter/cogl/cogl/driver/gl/Makefile.am   |    2 +-
 clutter/cogl/cogl/driver/gles/Makefile.am |    1 -
 3 files changed, 3 insertions(+), 2 deletions(-)

commit 97e39228c524c5605e68e93b773ff05fc52d61ef
Author: Chris Lord <chris@linux.intel.com>
Date:   Wed Jun 23 15:53:50 2010 +0100

    cogl-path: Disable texture coord arrays before drawing
    
    It was possible that the texture co-ord arrays were left enabled during
    stroking, which could possibly cause a crash.

 clutter/cogl/cogl/cogl-path.c |    4 ++++
 1 file changed, 4 insertions(+)

commit 8512423f22995dced954b9b5c5e6481af83ba5a0
Author: Neil Roberts <neil@linux.intel.com>
Date:   Fri Jun 18 11:12:51 2010 +0100

    clutter-animation: Fix for using fixed:: from clutter_actor_animatev
    
    When using clutter_actor_animatev it would set a boolean whenever a
    property begins with "fixed::". However it would never clear the
    variable so it would end up marking all subsequent properties as
    fixed.
    
    http://bugzilla.openedhand.com/show_bug.cgi?id=2180
    
    http://bugzilla.clutter-project.org/show_bug.cgi?id=2149

 clutter/clutter-animation.c |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit 66d9d481357e2e9f55a4b546104fbb1c5ff8167c
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Wed Jun 23 13:34:36 2010 +0100

    Revert 7e6b60270d1951f0789868740b8df6acfe677d57
    
    You should not commit patches based on the bugzilla description alone.
    You should not commit patches based on the bugzilla description alone.
    You should not commit patches based on the bugzilla description alone.
    ...

 clutter.pc.in |    4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

commit e28ea848e22b11490f653d655ddad3dc90726b09
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Wed Jun 23 13:23:19 2010 +0100

    Fix the libdir in the pkg-config file

 clutter.pc.in |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit f423d794ccd410368cef25af99fb7a6317655552
Author: Robert Bragg <robert@linux.intel.com>
Date:   Tue Jun 22 15:42:41 2010 +0100

    texture-pixmap-x11: don't assume anything about the GLXFBConfig type
    
    A pedantic change to get_fbconfig_for_depth() so that we don't need to
    make any assumptions about the GLXFBConfig typedef or what values
    we can overload to indicate an invalid config.
    
    get_fbconfig_for_depth() now simply returns FALSE if it fails to find a
    config.

 clutter/cogl/cogl/winsys/cogl-context-winsys.h     |    1 +
 clutter/cogl/cogl/winsys/cogl-texture-pixmap-x11.c |   37 ++++++++++----------
 2 files changed, 19 insertions(+), 19 deletions(-)

commit 62c08b4a0995467f54d8135e7c579e2f81debb20
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Tue Jun 22 16:12:53 2010 +0100

    drag-action: Disable picking during drag
    
    While dragging we don't need to perform picking to determine the actor
    underneath the pointer, for two reasons:
    
      • we use a capture on the stage to determine the motion delta.
      • we know the actor underneath the pointer because that's the
        actor we are dragging around.
    
    This change should make dragging actors in complex scenes a bit faster.

 clutter/clutter-drag-action.c |   10 ++++++++--
 1 file changed, 8 insertions(+), 2 deletions(-)

commit d89270d7c16aae0369ed80a8c69f2a58ebcaf7e4
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Tue Jun 22 14:43:36 2010 +0100

    Silence another compiler warning

 clutter/cogl/cogl/winsys/cogl-texture-pixmap-x11.c |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit db47e9082951a872fe1071241f35fc262a049926
Author: Neil Roberts <neil@linux.intel.com>
Date:   Tue Jun 22 14:10:44 2010 +0100

    cogl-texture-pixmap-x11: Use NULL instead of None for invalid GLXFBConfig
    
    GLXFBConfigs are opaque pointers not XIDs so it doesn't make sense to
    return None from get_fbconfig_for_depth. Instead it now returns NULL.

 clutter/cogl/cogl/winsys/cogl-texture-pixmap-x11.c |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit e9fa68fbdd74c37816693d95efb76974ae33906f
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Tue Jun 22 14:05:39 2010 +0100

    Add test-cogl-texture-pixmap-x11 to the ignore file

 tests/conform/.gitignore |    1 +
 1 file changed, 1 insertion(+)

commit b2c87eaddf9ebe68daf5a458a0c7453e3c16d805
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Tue Jun 22 13:48:53 2010 +0100

    Silence some compiler warnings

 clutter/cogl/cogl/cogl-material.c |    5 +++--
 1 file changed, 3 insertions(+), 2 deletions(-)

commit d52fd33d0f912009c15a13eac2af2e4ad5fb7209
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Tue Jun 22 13:31:41 2010 +0100

    docs: Fix release notes wording

 README |    4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

commit e12e6974a0f938ff32e94c1c0e9c4f9da7a0fc3b
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Tue Jun 22 13:31:31 2010 +0100

    docs: Fix links in the README

 README |   14 +++++++-------
 1 file changed, 7 insertions(+), 7 deletions(-)

commit e3360f497e197ecbf80b96f88d2e952ca8454093
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Tue Jun 22 13:29:03 2010 +0100

    docs: Remove the 'copyright-waiver' section
    
    There is no need to toggle the copyright-waiver flag on Bugzilla
    any more.

 README |    9 ---------
 1 file changed, 9 deletions(-)

commit 3734408962fbd36388811c67160ec0253df08e12
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Tue Jun 22 12:13:31 2010 +0100

    Use -Bsymbolic-functions
    
    The -Bsymbolic-functions linker flag allows to avoid intra-library
    PLT jumps on ELF platforms. It is similar to the aliasing hack in
    GLib and GTK+, but definitely less messy.
    
    The configure script should look for the flags, in order to support
    platforms/linkers that do not have it.

 clutter/Makefile.am |    5 ++---
 configure.ac        |   16 ++++++++++++++++
 2 files changed, 18 insertions(+), 3 deletions(-)

commit c2b8a0272bc7e9d0baf0f0025c082c69f7c0584e
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Tue Jun 22 11:59:07 2010 +0100

    conform: Do not use deprecated API in test-clutter-units
    
    Setting the DPI is done through the ClutterSettings:font-dpi property.

 tests/conform/test-clutter-units.c |    8 +++++---
 1 file changed, 5 insertions(+), 3 deletions(-)

commit 7e6b60270d1951f0789868740b8df6acfe677d57
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Tue Jun 22 08:29:02 2010 +0100

    Do not hardcode paths in pkgconfig file
    
    The pkgconfig file correctly sets $prefix to @prefix@, but the other
    paths should be relative to $prefix.

 clutter.pc.in |   13 ++++++++-----
 1 file changed, 8 insertions(+), 5 deletions(-)

commit 05b6c283eb00df0b0be125418672531df3f46d62
Author: Neil Roberts <neil@linux.intel.com>
Date:   Fri Jun 18 18:51:15 2010 +0100

    Add a test case for CoglTexturePixmapX11

 tests/conform/Makefile.am                    |    1 +
 tests/conform/test-cogl-texture-pixmap-x11.c |  247 ++++++++++++++++++++++++++
 tests/conform/test-conform-main.c            |    1 +
 3 files changed, 249 insertions(+)

commit 5d860a99788f4e80711e40e2d1d5d6f636f4977f
Author: Neil Roberts <neil@linux.intel.com>
Date:   Wed May 26 18:06:39 2010 +0100

    clutter-{glx,x11}-texture-pixmap: Use CoglTexturePixmapX11
    
    The pixmap handling of both of the texture pixmap actors in Clutter is
    now removed and instead it just creates a CoglTexturePixmapX11. Both
    actors are now equivalent so there is no need to choose between the
    two.

 clutter/glx/clutter-glx-texture-pixmap.c |  818 +-----------------------------
 clutter/x11/clutter-x11-texture-pixmap.c |  493 +++---------------
 2 files changed, 94 insertions(+), 1217 deletions(-)

commit a197baa53325a99c3a355486bf43a2ccbc1a6220
Author: Neil Roberts <neil@linux.intel.com>
Date:   Tue May 25 18:56:14 2010 +0100

    Add a CoglTexturePixmapX11 texture backend
    
    This is a publicly exposed texture backend to create a texture which
    contains the contents of an X11 pixmap. The API is currently marked as
    experimental.
    
    The backend internally holds a handle to another texture. All of the
    backend virtuals simply redirect to the internal texture.
    
    The texture can optionally be automatically updated if the
    automatic_updates parameter is TRUE. If set then Cogl will listen for
    damage events on the pixmap and update the texture accordingly.
    Alternatively a damage object can be created externally and passed
    down to Cogl.
    
    The updates can be performed with XGetImage, XShmGetImage or the
    GLX_EXT_texture_pixmap extension. If the TFP extension is used it will
    optionally try to create a rectangle texture if the driver does not
    support NPOTs or it is forced through the
    COGL_PIXMAP_TEXTURE_RECTANGLE or CLUTTER_PIXMAP_TEXTURE_RECTANGLE
    environment variables.
    
    If the GLXFBConfig does not support mipmapping then it will fallback
    to using X{Shm,}GetImage. It keeps a separate texture around for this
    so that it can later start using the TFP texture again if the texture
    is later drawn with mipmaps disabled.

 clutter/cogl/cogl/Makefile.am                      |    7 +-
 clutter/cogl/cogl/cogl-debug.c                     |    4 +-
 clutter/cogl/cogl/cogl-debug.h                     |    3 +-
 clutter/cogl/cogl/winsys/cogl-context-winsys.c     |   26 +-
 clutter/cogl/cogl/winsys/cogl-context-winsys.h     |   40 +-
 .../cogl/winsys/cogl-texture-pixmap-x11-private.h  |   92 ++
 clutter/cogl/cogl/winsys/cogl-texture-pixmap-x11.c | 1397 ++++++++++++++++++++
 clutter/cogl/cogl/winsys/cogl-texture-pixmap-x11.h |  176 +++
 .../cogl/winsys/cogl-winsys-feature-functions.h    |   20 +
 9 files changed, 1758 insertions(+), 7 deletions(-)

commit d42c3069d101d33cf12e2c836d610e906610846f
Author: Neil Roberts <neil@linux.intel.com>
Date:   Mon Jun 14 17:36:24 2010 +0100

    test-pixmap: Use the 'm' key to toggle texture quality
    
    When the 'm' key is pressed it will now recursively look for all
    ClutterTexture subclasses on the stage and toggle the texture quality
    between high and low. This is useful to test the mipmap fallback.

 tests/interactive/test-pixmap.c |   32 ++++++++++++++++++++++++++++++++
 1 file changed, 32 insertions(+)

commit c5b5a88d6d74242939ea9db67c8a8098ed74171d
Author: Neil Roberts <neil@linux.intel.com>
Date:   Fri May 28 18:41:20 2010 +0100

    test-pixmap: Draw something more interesting when the mouse is clicked
    
    When the mouse button is pressed it would previously draw a small
    1-pixel wide fully transparent line to the pixmap. This is a useful
    feature to help test the automatic updates but the line is quite hard
    to see so it's to easy miss. This patch changes it to draw a thick
    black circle. The circle is drawn at a different position every time
    the button is clicked.

 tests/interactive/test-pixmap.c |   27 ++++++++++++++++++++-------
 1 file changed, 20 insertions(+), 7 deletions(-)

commit 02de8b9ad5f450952c7e60f0a9acab87b618d589
Author: Neil Roberts <neil@linux.intel.com>
Date:   Fri May 28 17:53:04 2010 +0100

    test-pixmap: Add a --disable-animation option
    
    Sometimes the animation makes debugging awkward so this patch adds a
    --disable-animation option to simplify the test.

 tests/interactive/test-pixmap.c |   19 +++++++++++++++----
 1 file changed, 15 insertions(+), 4 deletions(-)

commit 75f48ad0ec52c4c9a99c1323916b5ec42dbf0b02
Author: Neil Roberts <neil@linux.intel.com>
Date:   Fri May 28 17:45:07 2010 +0100

    test-pixmap: Enable automatic updates for the hand
    
    The hand actor has a feature that if you click on the stage it will
    draw a line to the actor. However it's not possible to see the results
    of this because automatic updates were disabled so the texture would
    never be updated.

 tests/interactive/test-pixmap.c |    2 ++
 1 file changed, 2 insertions(+)

commit f7dfc8caa4cb69f67fc14cf73725a39d7940479d
Author: Neil Roberts <neil@linux.intel.com>
Date:   Fri May 28 17:32:21 2010 +0100

    test-pixmap: Implement the --disable-x11 option
    
    test-pixmap has long had a --disable-x11 option that didn't do
    anything. This patch adds the neccessary if (disable_x11) to disable
    adding the ClutterX11TexturePixmap actor when the option is given.

 tests/interactive/test-pixmap.c |   37 ++++++++++++++++++++++---------------
 1 file changed, 22 insertions(+), 15 deletions(-)

commit 6ca13e54d880a727d7926fd66d6d0786c48c7622
Author: Neil Roberts <neil@linux.intel.com>
Date:   Mon Jun 21 12:48:02 2010 +0100

    Add -DCOGL_ENABLE_EXPERIMENTAL_API to Makefiles for Cogl and x11/glx
    
    Cogl and Clutter should be able to use the experimental API so this
    adds the required define to the CPPFLAGS in the Makefiles.

 clutter/cogl/cogl/Makefile.am |    1 +
 clutter/glx/Makefile.am       |    1 +
 clutter/x11/Makefile.am       |    1 +
 3 files changed, 3 insertions(+)

commit 7fae8ac05129285fefb470ff0b88d764a759d153
Author: Neil Roberts <neil@linux.intel.com>
Date:   Fri Jun 18 14:30:23 2010 +0100

    cogl-defines.h: Add a COGL_HAS_X11 define
    
    This will be defined in cogl-defines.h whenever Cogl is built using a
    winsys that supports X11. This implies CoglTexturePixmapX11 will be
    available.
    
    To make this work the two separate cogl-defines.h.in files have been
    merged into one. The configure script now makes a @COGL_DEFINES@
    substitution variable which contains the #define lines to put in
    rather than directly having them in the seperate files.

 clutter/cogl/cogl/Makefile.am                   |    3 --
 clutter/cogl/cogl/cogl-defines.h.in             |   36 ++++++++++++++++++++
 clutter/cogl/cogl/driver/gl/cogl-defines.h.in   |   37 --------------------
 clutter/cogl/cogl/driver/gles/cogl-defines.h.in |   41 -----------------------
 configure.ac                                    |   36 ++++++++++++++++++--
 5 files changed, 70 insertions(+), 83 deletions(-)

commit a01b094630d748d4b0505852724b57b837e49d3a
Author: Neil Roberts <neil@linux.intel.com>
Date:   Fri Jun 4 10:38:30 2010 +0100

    cogl: Add _cogl_xlib_{,un}trap_errors
    
    This is similar to clutter_x11_{,un}trap_errors except that it stores
    the previous trap state in a caller-allocated struct so that it can be
    re-entrant.
    
    Make _cogl_xlib_trap_errors re-entrant
    
    (this will be squashed into an earlier commit)

 clutter/cogl/cogl/winsys/cogl-context-winsys.c |    2 ++
 clutter/cogl/cogl/winsys/cogl-context-winsys.h |   23 ++++++++++++++
 clutter/cogl/cogl/winsys/cogl-xlib.c           |   39 ++++++++++++++++++++++++
 clutter/cogl/cogl/winsys/cogl-xlib.h           |   29 ++++++++++++++++++
 4 files changed, 93 insertions(+)

commit 3abe26b913c895072d31fa5e88a8724ba311d174
Author: Neil Roberts <neil@linux.intel.com>
Date:   Tue Jun 1 13:32:57 2010 +0100

    cogl-texture: Avoid premult conversion if the dst format has no alpha
    
    The _cogl_texture_needs_premult_conversion function was already
    checking whether the source format had an alpha channel before
    returning TRUE, but it also doesn't make sense to do the premult
    conversion if the destination format has no alpha. This patch adds
    that check in too.

 clutter/cogl/cogl/cogl-texture.c |    3 ++-
 1 file changed, 2 insertions(+), 1 deletion(-)

commit 279ad7b7e51572138d41bf5a078adab33a57c913
Author: Neil Roberts <neil@linux.intel.com>
Date:   Wed Jun 2 17:55:56 2010 +0100

    cogl: Add the infrastructure for checking for winsys extensions
    
    This adds the framework needed to check for winsys specific extensions
    (such as GLX extensions) using a similar mechanism to the
    cogl-feature-functions header. There is a separate
    cogl-winsys-feature-functions header which will contain macros to list
    the extensions and functions. cogl_create_context_winsys now calls
    _cogl_feature_check for each of these functions. _cogl_feature_check
    has had to be changed to accept the driver prefix as the first
    parameter so that it can prepend "GLX" rather than "GL" in this case.

 clutter/cogl/cogl/Makefile.am                      |    1 +
 clutter/cogl/cogl/cogl-feature-private.c           |    7 ++-
 clutter/cogl/cogl/cogl-feature-private.h           |    3 +-
 clutter/cogl/cogl/driver/gl/cogl.c                 |    2 +-
 clutter/cogl/cogl/driver/gles/cogl.c               |    2 +-
 clutter/cogl/cogl/winsys/cogl-context-winsys.c     |   64 ++++++++++++++++++++
 clutter/cogl/cogl/winsys/cogl-context-winsys.h     |   21 ++++++-
 .../cogl/winsys/cogl-winsys-feature-functions.h    |   25 ++++++++
 8 files changed, 118 insertions(+), 7 deletions(-)

commit 9cdcc155f37d2ed10a23c1b4f7261fb134e763c9
Author: Neil Roberts <neil@linux.intel.com>
Date:   Wed May 19 16:13:07 2010 +0100

    Pass all Xlib events through Cogl
    
    The Clutter X11 backend now passes all events through
    _cogl_xlib_handle_event. This function can now internally be hooked
    with _cogl_xlib_add_filter. These are added to a list of callbacks
    which are all called in turn by _cogl_xlib_handle_event. This is
    intended to be used internally in Cogl by any parts that need to see
    Xlib events.
    
    Cogl now also has an internally exposed function to set a pointer to
    the Xlib display. This is stored in a global variable. The Clutter X11
    backend sets this.
    
    _cogl_xlib_handle_event and _cogl_xlib_set_display can be removed once
    Cogl gains a proper window system abstraction.

 clutter/cogl/cogl/Makefile.am                  |   11 ++--
 clutter/cogl/cogl/cogl-internal.h              |   52 ++++++++++++++++
 clutter/cogl/cogl/winsys/cogl-context-winsys.c |   20 ++++++
 clutter/cogl/cogl/winsys/cogl-context-winsys.h |    7 +++
 clutter/cogl/cogl/winsys/cogl-xlib.c           |   77 ++++++++++++++++++++++++
 clutter/cogl/cogl/winsys/cogl-xlib.h           |   37 ++++++++++++
 clutter/x11/clutter-backend-x11.c              |    5 ++
 clutter/x11/clutter-event-x11.c                |    6 ++
 8 files changed, 211 insertions(+), 4 deletions(-)

commit 811bbba0751d76f742c9db11d07a227ff4d21848
Author: Neil Roberts <neil@linux.intel.com>
Date:   Wed Jun 2 15:16:14 2010 +0100

    cogl: Add a struct for winsys-specific data to CoglContext
    
    This creates a separate struct to store the fields of the context that
    are specific to the winsys. This is all stored in one file but ideally
    this could work more like the CoglContextDriver struct and have a
    different header for each winsys.

 clutter/cogl/cogl/Makefile.am                  |    2 ++
 clutter/cogl/cogl/cogl-context.c               |    8 +++++
 clutter/cogl/cogl/cogl-context.h               |    2 ++
 clutter/cogl/cogl/winsys/cogl-context-winsys.c |   38 ++++++++++++++++++++++++
 clutter/cogl/cogl/winsys/cogl-context-winsys.h |   32 ++++++++++++++++++++
 5 files changed, 82 insertions(+)

commit 3a3d55cd88f347c8fbd307401f13f1453caa9b26
Author: Neil Roberts <neil@linux.intel.com>
Date:   Thu Jun 10 15:33:34 2010 +0100

    cogl: Add an internal CoglTextureRectangle backend
    
    This adds an internal rectangle texture backend which is mostly based
    on the CoglTexture2D backend. It will throw assert failures if any
    operations are attempted that rectangle textures don't support, such
    as mipmapping or hardware repeating.

 clutter/cogl/cogl/Makefile.am                      |    2 +
 clutter/cogl/cogl/cogl-texture-rectangle-private.h |   68 ++
 clutter/cogl/cogl/cogl-texture-rectangle.c         |  662 ++++++++++++++++++++
 .../cogl/cogl/driver/gl/cogl-feature-functions.h   |    7 +
 clutter/cogl/cogl/driver/gl/cogl-texture-driver.c  |   41 +-
 5 files changed, 763 insertions(+), 17 deletions(-)

commit fd3a3e93bf000960afe740bf76d62ccbad385b8c
Author: Neil Roberts <neil@linux.intel.com>
Date:   Wed Jun 9 17:39:59 2010 +0100

    cogl-texture: Replace the ensure_mipmaps virtual with pre_paint
    
    Instead of the ensure_mipmaps virtual that is only called whenever the
    texture is about to be rendered with a min filter that needs the
    mipmap, there is now a pre_paint virtual that is always called when
    the texture is about to be painted in any way. It has a flags
    parameter which is used to specify whether the mipmap will be needed.
    
    This is useful for CoglTexturePixmapX11 because it needs to do stuff
    before painting that is unrelated to mipmapping.

 clutter/cogl/cogl/cogl-atlas-texture.c     |   13 ++++++-----
 clutter/cogl/cogl/cogl-material-private.h  |    7 +++---
 clutter/cogl/cogl/cogl-material.c          |   33 ++++++++++++++--------------
 clutter/cogl/cogl/cogl-primitives.c        |    4 ++--
 clutter/cogl/cogl/cogl-sub-texture.c       |    7 +++---
 clutter/cogl/cogl/cogl-texture-2d-sliced.c |    9 ++++++--
 clutter/cogl/cogl/cogl-texture-2d.c        |   27 ++++++++++++-----------
 clutter/cogl/cogl/cogl-texture-private.h   |   12 ++++++++--
 clutter/cogl/cogl/cogl-texture.c           |    4 ++--
 clutter/cogl/cogl/cogl-vertex-buffer.c     |    2 +-
 10 files changed, 67 insertions(+), 51 deletions(-)

commit 87240cd764ad29d5789c0f72c71614f1b79fe29f
Author: Neil Roberts <neil@linux.intel.com>
Date:   Fri Jun 11 13:50:36 2010 +0100

    cogl-texture: List texture subclass types rather than hardcoding them
    
    Instead of having a hardcoded series of if-statements in
    cogl_is_texture to determine which types should appear as texture
    subclasses, they are now stored in a GSList attached to the Cogl
    context. The list is amended to using a new cogl_texture_register_type
    function. There is a convenience macro called COGL_TEXTURE_DEFINE
    which uses COGL_HANDLE_DEFINE_WITH_CODE to register the texture type
    when the _get_type() function is first called.

 clutter/cogl/cogl/cogl-atlas-texture.c     |    2 +-
 clutter/cogl/cogl/cogl-context.c           |    4 ++++
 clutter/cogl/cogl/cogl-context.h           |    4 ++++
 clutter/cogl/cogl/cogl-sub-texture.c       |    2 +-
 clutter/cogl/cogl/cogl-texture-2d-sliced.c |    2 +-
 clutter/cogl/cogl/cogl-texture-2d.c        |    2 +-
 clutter/cogl/cogl/cogl-texture-private.h   |   11 +++++++++++
 clutter/cogl/cogl/cogl-texture.c           |   21 +++++++++++++++++----
 8 files changed, 40 insertions(+), 8 deletions(-)

commit 5ea8c5bd122a6d630b1aaebf7047e00346db6a39
Author: Neil Roberts <neil@linux.intel.com>
Date:   Fri Jun 11 13:44:27 2010 +0100

    Add COGL_{OBJECT,HANDLE}_DEFINE_WITH_CODE
    
    This macro is similar to COGL_HANDLE_DEFINE_WITH_CODE except that it
    allows a snippet of code to be inserted into the _get_type()
    function. This is similar to how G_DEFINE_TYPE_WITH_CODE
    works. COGL_HANDLE_DEFINE is now just a wrapper around
    COGL_HANDLE_DEFINE_WITH_CODE.

 clutter/cogl/cogl/cogl-object-private.h |   17 +++++++++++++----
 1 file changed, 13 insertions(+), 4 deletions(-)

commit 97225a96a6f7032273c225e525678d3dc9433cc8
Author: Neil Roberts <neil@linux.intel.com>
Date:   Thu Jun 3 15:06:47 2010 +0100

    Add _cogl_texture_2d_externally_modified
    
    _cogl_texture_2d_externally_modified is a function specific to the
    CoglTexture2D texture backend that should be called whenever the
    contents of the texture are modified without the backend knowing about
    it. It simply marks the mipmap tree as invalid.

 clutter/cogl/cogl/cogl-texture-2d-private.h |   11 +++++++++++
 clutter/cogl/cogl/cogl-texture-2d.c         |    9 +++++++++
 2 files changed, 20 insertions(+)

commit 7e149c5ca93e4de3194cc3344eba7fb183dfbeb3
Author: Neil Roberts <neil@linux.intel.com>
Date:   Wed Jun 2 15:01:18 2010 +0100

    cogl: Fix the include path in driver/*/Makefile.am
    
    The include path for the winsys and driver folder was given relative
    to $(srcdir) so it would end up relative to the driver folder which is
    wrong. It is now specified as $(srcdir)/../../winsys to get the right
    location. The driver folder is removed because it is actually just
    $(srcdir) and that is already included.

 clutter/cogl/cogl/driver/gl/Makefile.am   |    3 +--
 clutter/cogl/cogl/driver/gles/Makefile.am |    3 +--
 2 files changed, 2 insertions(+), 4 deletions(-)

commit a871ac669f68c5932cf5af575e12b2660e1a335d
Author: Robert Bragg <robert@linux.intel.com>
Date:   Tue Jun 8 22:54:26 2010 +0100

    test-shader: guard GLES2 specific changes with COGL_HAS_GLES2
    
    Previously we were using an internal only HAVE_COGL_GLES2 define to
    guard GLES 2 specific changes so for instance the precision modifiers
    weren't being emitted in the shader source.
    
    http://bugzilla.o-hand.com/show_bug.cgi?id=2178

 tests/interactive/test-shader.c |   12 ++++++------
 1 file changed, 6 insertions(+), 6 deletions(-)

commit 60cad4bf0b4a52d6727ce7986965e972db0b4f89
Author: Robert Bragg <robert@linux.intel.com>
Date:   Tue Jun 8 18:38:25 2010 +0100

    gles2: don't disable clip planes for GLES2
    
    GLES2 doesn't provide user clip planes (you would have to use a vertex +
    fragment shader to achieve the same kind of result) so we make sure not
    to call glEnable/Disable with any of the GL_CLIP_PLANE0..3 defines.
    
    http://bugzilla.o-hand.com/show_bug.cgi?id=2177

 clutter/cogl/cogl/cogl-clip-stack.c |    3 ++-
 1 file changed, 2 insertions(+), 1 deletion(-)

commit 00bb189e71374ddcd1437fc5913f89ada9f39f23
Author: Robert Bragg <robert@linux.intel.com>
Date:   Tue Jun 22 11:21:09 2010 +0100

    material: fix a typo in _cogl_material_journal_unref
    
    The function had a line like:
    
    CoglMaterial *material =
        material = _cogl_material_pointer_from_handle (material_handle);
    
    where the duplicate "material =" wasn't intended, so this patch removes
    it.

 clutter/cogl/cogl/cogl-material.c |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit db1434ab718f04c098afe9d60419a6b98805778e
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Tue Jun 22 08:00:40 2010 +0100

    json: Bump up the requirement of json-glib
    
    We're actually using a symbol (the JSON_NODE_HOLDS macro) that was
    defined in json-glib 0.10, so we need to bump up the dependency.

 README       |    2 +-
 configure.ac |    4 ++--
 2 files changed, 3 insertions(+), 3 deletions(-)

commit 8a9890e1387ccb1228384657bb8d889fe12accd3
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Tue Jun 22 07:58:49 2010 +0100

    json: Backport JSON_NODE_HOLDS macros
    
    Unbreak the compilation with the internal copy of json-glib.

 clutter/json/json-types.h |    6 ++++++
 1 file changed, 6 insertions(+)

commit 1eb7f5758211aaac44efd159bafc44d6de8dd87d
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Mon Jun 21 18:56:16 2010 +0100

    x11: Use the _clutter symbols for xsettings_* API
    
    Instead of using the bare xsettings_* API; this maintains consistency.

 clutter/x11/clutter-backend-x11.c |    4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

commit f3adc600fc7f11338b5e213b5ad049ca069531e4
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Mon Jun 21 18:01:57 2010 +0100

    backend: Undeprecated clutter_backend_get_resolution()
    
    Since the Settings:font-dpi property is exposed as 1024 * real_dpi in
    order to make the setting as neutral as possible (and allow XSETTINGS
    to use it natively) we need a simple API returning the DPI using a
    floating point value.

 clutter/clutter-backend.c |   14 +++++++++++---
 clutter/clutter-backend.h |    3 ++-
 2 files changed, 13 insertions(+), 4 deletions(-)

commit 19de6d9e5d3acd29667960d35f1d58fdfa301055
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Mon Jun 21 17:58:26 2010 +0100

    Deprecate the Backend settings
    
    The Settings instance is the preferred way of accessing the settings.

 clutter/clutter-backend.h |    9 ++++++---
 1 file changed, 6 insertions(+), 3 deletions(-)

commit e95a0c194f9cc7e3852ddff4b24006cc64231033
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Mon Jun 21 17:57:57 2010 +0100

    Remove default settings from backends
    
    The defaults are set in the Settings instance.

 clutter/egl/clutter-backend-egl.c     |    4 ----
 clutter/win32/clutter-backend-win32.c |    3 ++-
 2 files changed, 2 insertions(+), 5 deletions(-)

commit cd8548fd6fd7807fea1dcbe3752d1b32bd998246
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Mon Jun 21 17:57:11 2010 +0100

    docs: Add Settings to the API reference
    
    And document properties.

 clutter/clutter-settings.c                |  120 +++++++++++++++++++++++++++++
 doc/reference/clutter/clutter-docs.xml.in |    1 +
 doc/reference/clutter/clutter.types       |    1 +
 3 files changed, 122 insertions(+)

commit b470d6930d8995b2e5d1353486394c12fc55187e
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Mon Jun 21 16:10:49 2010 +0100

    settings: freeze notification on XSETTINGS notify

 clutter/x11/clutter-backend-x11.c |    4 ++++
 1 file changed, 4 insertions(+)

commit 98c3c84c004c65ca97f1b9118554bc8e694e0e5f
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Mon Jun 21 15:43:31 2010 +0100

    x11: Add the XSETTINGS machinery
    
    Use the XSETTINGS machinery to get notification from foreign
    environments about settings that might interest Clutter itself - namely:
    the default font name, the font DPI, and the Xft font options that can
    be mapped on cairo_font_options_t.

 clutter/x11/Makefile.am                  |    6 +
 clutter/x11/clutter-backend-x11.c        |   87 ++++-
 clutter/x11/clutter-backend-x11.h        |    4 +
 clutter/x11/clutter-settings-x11.h       |   24 ++
 clutter/x11/xsettings/xsettings-client.c |  609 ++++++++++++++++++++++++++++++
 clutter/x11/xsettings/xsettings-client.h |   79 ++++
 clutter/x11/xsettings/xsettings-common.c |  265 +++++++++++++
 clutter/x11/xsettings/xsettings-common.h |  132 +++++++
 8 files changed, 1199 insertions(+), 7 deletions(-)

commit 437dcad86ae273d9b9a4b159cb8be42706733575
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Mon Jun 21 15:42:20 2010 +0100

    settings: Migrate Backend settings to a new object
    
    Instead of storing settings inside the Backend instance we should use a
    separate public object.

 clutter/Makefile.am        |    2 +
 clutter/clutter-backend.c  |  136 ++++++++-------
 clutter/clutter-backend.h  |    1 +
 clutter/clutter-private.h  |    3 +
 clutter/clutter-settings.c |  401 ++++++++++++++++++++++++++++++++++++++++++++
 clutter/clutter-settings.h |   24 +++
 clutter/clutter.h          |    1 +
 7 files changed, 512 insertions(+), 56 deletions(-)

commit e4e6a6dfe5c011c317ec882fab59b04feddb6eeb
Author: Robert Bragg <robert@linux.intel.com>
Date:   Fri Jun 18 13:59:00 2010 +0100

    configure.ac only explicitly add -lGL if no pkgconfig file
    
    When configuring the glx flavour we were always explicitly adding -lGL
    to the linker flags even when a pkg-config file was found which should
    take care of that option for us.

 configure.ac |    8 +++++---
 1 file changed, 5 insertions(+), 3 deletions(-)

commit c767feecbbe75dd1da20e93612dfbbfbc4ffdf33
Author: Robert Bragg <robert@linux.intel.com>
Date:   Fri Jun 18 13:35:09 2010 +0100

    configure.ac: Use pkg-config for gles1/2 if available
    
    When building for gles1/2 we now always try and look for a libglesv1_cm
    or libglesv2 .pc file with details about where to find the library and
    headers.

 configure.ac |  141 ++++++++++++++++++++++++++++++++--------------------------
 1 file changed, 77 insertions(+), 64 deletions(-)

commit d45ac12628489f3adf2210a7ec9f08f7a2cb4cf9
Author: Robert Bragg <robert@linux.intel.com>
Date:   Fri Jun 18 04:38:43 2010 +0100

    egl: Consolidates eglx and eglnative into one "egl" winsys
    
    This remove quite a lot of redundant code by consolidating the eglx and
    eglnative window system backends.

 clutter/Makefile.am                        |    2 +-
 clutter/cogl/cogl/Makefile.am              |    4 +-
 clutter/cogl/cogl/winsys/cogl-egl.c        |   41 ++
 clutter/cogl/cogl/winsys/cogl-eglnative.c  |   35 --
 clutter/cogl/cogl/winsys/cogl-eglx.c       |   41 --
 clutter/egl/Makefile.am                    |   42 ++
 clutter/egl/clutter-backend-egl.c          |  807 +++++++++++++++++++++++++++
 clutter/egl/clutter-backend-egl.h          |  116 ++++
 clutter/egl/clutter-egl-headers.h          |   38 ++
 clutter/egl/clutter-egl.h                  |   76 +++
 clutter/egl/clutter-event-tslib.c          |  297 ++++++++++
 clutter/egl/clutter-stage-egl.c            |  366 +++++++++++++
 clutter/egl/clutter-stage-egl.h            |   55 ++
 clutter/eglnative/Makefile.am              |   29 -
 clutter/eglnative/clutter-backend-egl.c    |  817 ---------------------------
 clutter/eglnative/clutter-backend-egl.h    |  110 ----
 clutter/eglnative/clutter-egl-headers.h    |   33 --
 clutter/eglnative/clutter-egl.h            |   48 --
 clutter/eglnative/clutter-event-tslib.c    |  297 ----------
 clutter/eglnative/clutter-stage-egl.c      |  366 -------------
 clutter/eglnative/clutter-stage-egl.h      |   41 --
 clutter/eglx/Makefile.am                   |   30 -
 clutter/eglx/clutter-backend-egl.c         |  823 ----------------------------
 clutter/eglx/clutter-backend-egl.h         |  116 ----
 clutter/eglx/clutter-egl-headers.h         |   38 --
 clutter/eglx/clutter-eglx.h                |   54 --
 clutter/eglx/clutter-stage-egl.c           |  366 -------------
 clutter/eglx/clutter-stage-egl.h           |   42 --
 configure.ac                               |    9 +-
 doc/reference/clutter/Makefile.am          |   12 +-
 doc/reference/clutter/clutter-docs.xml.in  |    3 +-
 doc/reference/clutter/clutter-sections.txt |    7 +-
 32 files changed, 1851 insertions(+), 3310 deletions(-)

commit 46bed23302a56eec8cb873670396927d2739ce71
Author: Robert Bragg <robert@linux.intel.com>
Date:   Fri Jun 18 00:29:12 2010 +0100

    tslib: Add USE_TSLIB conditional for clutter-event-tslib.c
    
    This adds an automake USE_TSLIB condition to decide when we should
    compile clutter-event-tslib.c. This is in preparation for consolidating
    the eglx and eglnative backends.

 clutter/eglnative/Makefile.am |    6 +++++-
 configure.ac                  |    2 ++
 2 files changed, 7 insertions(+), 1 deletion(-)

commit 5b6800bf63043fa047357656179d8767c77dce0c
Author: Robert Bragg <robert@linux.intel.com>
Date:   Fri Jun 18 00:25:57 2010 +0100

    egl: rename clutter-event-egl.c -> clutter-event-tslib.c
    
    clutter-event-egl had nothing to do with EGL, it's code for opening
    tslib devices and creating a GSource for touch screen events. It just
    happens that this only ever gets used with the eglnative backend.

 clutter/eglnative/Makefile.am           |    2 +-
 clutter/eglnative/clutter-event-egl.c   |  297 -------------------------------
 clutter/eglnative/clutter-event-tslib.c |  297 +++++++++++++++++++++++++++++++
 3 files changed, 298 insertions(+), 298 deletions(-)

commit ad9006e561c399cf3b5045de7aaac5e6e9684c5c
Author: Robert Bragg <robert@linux.intel.com>
Date:   Fri Jun 18 00:18:02 2010 +0100

    clutter event egl: fixes lots of compiler warnings
    
    The way the #ifdef HAVE_TSLIB guards were spread around it meant there
    were lots of warnings about unused variables when building without
    tslib.

 clutter/eglnative/clutter-event-egl.c |   25 +++++++++++++++----------
 1 file changed, 15 insertions(+), 10 deletions(-)

commit cd82b704e9e7b5b96cbdb470f933ae8e1edae46d
Author: Robert Bragg <robert@linux.intel.com>
Date:   Thu Jun 17 23:12:34 2010 +0100

    egl: support creating OpenGL contexts
    
    Right before we create the EGL context, we check if we were built with
    OpenGL or OpenGLES support and it was OpenGL then we call eglBindAPI
    (EGL_OPENGL_API); This also explicitly requests a EGL_RENDERABLE_TYPE
    supporting the EGL_OPENGL_BIT.
    
    This will let us add a new ./configure flavour that combines OpenGL and
    EGL instead of OpenGL and GLX.

 clutter/eglx/clutter-backend-egl.c |    8 +++++++-
 1 file changed, 7 insertions(+), 1 deletion(-)

commit a84ecf3919cde7142de97c29a0f840c85491d84f
Author: Robert Bragg <robert@linux.intel.com>
Date:   Thu Jun 17 22:26:12 2010 +0100

    egl: Unify the eglx and eglnative backends
    
    Without actually consolidating the two backends this patch brings their
    code within a cats whisker of each other in preparation for
    consolidation.

 clutter/eglnative/clutter-backend-egl.c |  637 ++++++++++++++++++++++++-------
 clutter/eglnative/clutter-backend-egl.h |   41 +-
 clutter/eglnative/clutter-stage-egl.c   |  262 ++++++++++++-
 clutter/eglnative/clutter-stage-egl.h   |    3 +
 clutter/eglx/clutter-backend-egl.c      |  396 ++++++++++++++++---
 clutter/eglx/clutter-backend-egl.h      |   51 ++-
 clutter/eglx/clutter-stage-egl.c        |  156 +++++++-
 7 files changed, 1310 insertions(+), 236 deletions(-)

commit 53bf95466b938951ccb47a67f4d74a1441fd4799
Author: Robert Bragg <robert@linux.intel.com>
Date:   Thu Jun 17 23:23:12 2010 +0100

    build: Adds a new opengl-egl-xlib build flavour
    
    With this patch if you ./configure clutter using
    --with-flavour=opengl-egl-xlib then it will use EGL + OpenGL instead of
    the default GLX and OpenGL.
    
    These days upstream driver work is more focused on improving EGL than it
    is GLX so likewise we want to make sure Clutter has good support for
    EGL.

 configure.ac |   25 ++++++++++++++++++++++++-
 1 file changed, 24 insertions(+), 1 deletion(-)

commit bf9d5f394997c0ff9d7b4a3671ac04499d0c3fb2
Author: Robert Bragg <robert@linux.intel.com>
Date:   Fri Jun 18 01:25:46 2010 +0100

    build: distinguish CLUTTER_WINSYS and CLUTTER_SONAME_INFIX
    
    This adds a separate variable name "CLUTTER_SONAME_INFIX" to define the
    infix for the clutter library that gets linked. Currently the WINSYS
    corresponds to the directory we enter when building to compile the
    window system and input support, but it is desirable to be able to
    define multiple flavours that use the same WINSYS but should result in
    different library names.
    
    For example we are planning to combine the eglx and eglnative window
    systems into one "egl" winsys but we will need to preserve the current
    library names for the eglx and eglnative flavours.

 Makefile.am                       |    4 ++--
 clutter.pc.in                     |    3 ++-
 clutter/Makefile.am               |   16 ++++++++--------
 configure.ac                      |    9 ++++++++-
 doc/reference/clutter/Makefile.am |    2 +-
 tests/conform/Makefile.am         |    2 +-
 tests/interactive/Makefile.am     |    2 +-
 tests/micro-bench/Makefile.am     |    2 +-
 8 files changed, 24 insertions(+), 16 deletions(-)

commit 4bd44738fd80cbd43c8e08b2a9da8dce4fec5bab
Author: Robert Bragg <robert@linux.intel.com>
Date:   Fri Jun 18 01:56:23 2010 +0100

    configure.ac: avoid some duplication
    
    When we check the flavour we now just set boolean variables for the
    following things:
    
    SUPPORT_X11=1
    SUPPORT_XLIB=1
    SUPPORT_GLX=1
    SUPPORT_EGL=1
    SUPPORT_EGL_POWERVR_X11=1
    SUPPORT_EGL_POWERVR_NULL=1
    
    This lets us avoid some duplication and also some error prone tests for
    lists of flavours used, for example, to determine when we need to check
    for x libraries.

 configure.ac |  108 ++++++++++++++++++++++++++++++++++------------------------
 1 file changed, 64 insertions(+), 44 deletions(-)

commit 25ed304567561bf95baab1c77cda8b06d01b97eb
Author: Robert Bragg <robert@linux.intel.com>
Date:   Fri Jun 18 01:13:33 2010 +0100

    configure.ac: distinguish CLUTTER_FLAVOUR and CLUTTER_WINSYS
    
    It's desirable to have a separation between the "flavour" and the
    "winsys". The flavour is a concept internal to the configure script and
    is a convenient name to represent the users choice of window system,
    opengl driver and input backend. The CLUTTER_WINSYS currently defines
    the subdirectory under clutter/ that should be compiled to handle the
    window system and input.
    
    With a separation we could add a flavour with no correspondence to which
    clutter/subdirectory needs to be built.

 configure.ac |   18 ++++++++++++++----
 1 file changed, 14 insertions(+), 4 deletions(-)

commit c3e43a7e473023c327e91094cbe5b9d0a103ec21
Author: Robert Bragg <robert@linux.intel.com>
Date:   Fri Jun 18 01:07:59 2010 +0100

    configure.ac: move the special handling of the fruity flavour
    
    After checking the flavour option the user gives we were checking for
    the fruity flavour to override the glesversion. Now that the glsl
    checking has been moved this can instead just wait until the AS_CASE
    that handles all the flavour configuration.

 configure.ac |    5 ++---
 1 file changed, 2 insertions(+), 3 deletions(-)

commit e3293abcd473d8942acfce9eafb2877e2f44ee49
Author: Robert Bragg <robert@linux.intel.com>
Date:   Fri Jun 18 01:02:38 2010 +0100

    configure.ac: move gles checks after the flavour checks
    
    The flavour AS_CASE should define whether a flavour uses the gl or gles
    COGL_DRIVER and so we shouldn't need to have an expanding list of
    tests to gate when we check for a gles driver because if we move the
    checks for gles after the flavour checks we can just look at
    $COGL_DRIVER.

 configure.ac |  177 +++++++++++++++++++++++++++++-----------------------------
 1 file changed, 89 insertions(+), 88 deletions(-)

commit c151fa2efd8a794c0feab319d05d06796c6f4b3e
Author: Robert Bragg <robert@linux.intel.com>
Date:   Fri Jun 18 01:02:38 2010 +0100

    configure.ac: don't have so many XYX_{LIBS,CFLAGS} vars
    
    This removes EGL_{LIBS,CFLAGS}, GLX_{LIBS,CFLAGS}, OSX_{LIBS,CFLAGS},
    WIN32_{LIBS,CFLAGS}, and GLES_{LIBS,CFLAGS} and instead we just append
    to FLAVOUR_{LIBS,CFLAGS}.
    
    This makes more of the file relocatable because there were previously
    dependencies on the order that some variables were setup in.

 configure.ac |   37 ++++++++++++++++++++-----------------
 1 file changed, 20 insertions(+), 17 deletions(-)

commit e2dcd7e852c2bda2a6bf72c7c3f777c16ff9c89b
Author: Neil Roberts <neil@linux.intel.com>
Date:   Fri Jun 18 15:19:59 2010 +0100

    clutter-stage: Use g_array_free instead of g_array_unref
    
    g_array_unref was only added in GLib 2.22 so we should really update
    the requirements in the configure script if we want to use that
    function. However the array doesn't appear to have any extra reference
    taken on it anywhere so it should be safe to use g_array_free instead.

 clutter/clutter-state.c |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit 5a73e20a15ea0b84a1788a70e23d8814eb4519af
Author: Neil Roberts <neil@linux.intel.com>
Date:   Fri Jun 18 15:25:51 2010 +0100

    cogl-context: Use the function pointer for glActiveUnit
    
    Under WGL, any functions that were defined after GL 1.1 are not
    directly exported in the DLL so we need to reference them via the
    function pointers. A new call to glActiveUnit was missed in
    cogl-context.c

 clutter/cogl/cogl/cogl-context.c |    4 ++++
 1 file changed, 4 insertions(+)

commit 9cc90333473e33d590242891a463165e5e80890f
Author: Neil Roberts <neil@linux.intel.com>
Date:   Fri Jun 18 15:33:03 2010 +0100

    cogl-material: Don't use the symbol 'near'
    
    The window headers contain the line
    
     #define near
    
    so it's not possible to use the symbol 'near' in code that's portable
    to Windows. This replaces it with 'near_val'.
    
    I think the define is meant to improve compatibility with code written
    for Windows 3.1 where near would be a keyword to make it a smaller
    pointer size.

 clutter/cogl/cogl/cogl-material.c |   20 ++++++++++----------
 clutter/cogl/cogl/cogl-material.h |   16 ++++++++--------
 2 files changed, 18 insertions(+), 18 deletions(-)

commit 0411ba7d3235508554035406dc747df19e8deffb
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu Jun 17 17:35:00 2010 +0100

    actor: Parse actions, constraints and effects members
    
    ClutterActor should allow attaching actions, constraints and effects
    just like it allows behaviours, e.g.:
    
      {
        ...
        "constraints" : [
          {
            "type" : "ClutterAlignConstraint",
            "source" : "stage",
            "align-axis" : "x-axis",
            "factor" : 0.5
          },
          {
            "type" : "ClutterAlignConstraint",
            "source" : "stage",
            "align-axis" : "y-axis",
            "factor" : 0.5
          }
        ],
        ...
      }
    
    or:
    
      {
        ...
        "actions" : [
          {
            "type" : "ClutterDragAction",
            "signals" : [
              { "name" : "drag-end", "handler" : "on_drag_end" }
            ]
          }
        ],
        ...
      }
    
    In order to do so, we use the Scriptable interface implementation and
    add three new custom properties accepting an array; then we parse each
    member of the array as a new object.

 clutter/clutter-actor.c                  |   86 ++++++++++++++++++++++++++++--
 tests/data/test-script-named-object.json |   36 ++++++++++---
 2 files changed, 111 insertions(+), 11 deletions(-)

commit a75c02a5d688a85608b628a89bdd4949e3b53faa
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu Jun 17 17:33:10 2010 +0100

    constraints: Allow Align and Bind sources to be NULL
    
    Since constructing AlignConstraint and BindConstraint instances could be
    deferred (think ClutterScript) we need to make their :source properties
    setters accept NULL. This does not break the constraints because they
    need to handle that condition in case they actor to which they are
    applied is destroyed and somebody is holding a reference on them anyway.

 clutter/clutter-align-constraint.c |   27 ++++++++++++++++-----------
 clutter/clutter-bind-constraint.c  |   28 ++++++++++++++++------------
 2 files changed, 32 insertions(+), 23 deletions(-)

commit a4dbcf0c32e8143dba4f7dbd4f1191c3225af413
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu Jun 17 16:41:44 2010 +0100

    script-parser: Expose extracting the id from a node
    
    The get_id_from_node() internal function should be exposed inside
    Clutter (as a private function) because it can be useful to other
    custom parsing code. The code is pretty trivial, but it would be
    pointless to re-implement it.

 clutter/clutter-script-parser.c  |   10 +++++-----
 clutter/clutter-script-private.h |    2 ++
 2 files changed, 7 insertions(+), 5 deletions(-)

commit c85d535a090e1fbe5e6efe32036c4e13a04890cb
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu Jun 17 12:32:24 2010 +0100

    actor: Disable the layout cycle warning with debug disabled
    
    If Clutter has been configured with --enable-debug set to 'no' then we
    hide most of the warnings.

 clutter/clutter-actor.c |    2 ++
 1 file changed, 2 insertions(+)

commit 77c63e0237efd6fe91f33aca6e3bd4903d57aee5
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu Jun 17 12:02:28 2010 +0100

    bind-constraint: Add accessor methods
    
    ClutterBindConstraint should have accessor methods for its properties,
    to allow direct manipulation instead of going through GObject's API.

 clutter/clutter-bind-constraint.c          |  213 ++++++++++++++++++++--------
 clutter/clutter-bind-constraint.h          |   16 ++-
 doc/reference/clutter/clutter-sections.txt |    6 +
 3 files changed, 172 insertions(+), 63 deletions(-)

commit 52d2e7d25de2be9b8acd7dba800fafff690af1ab
Author: Øyvind Kolås <pippin@linux.intel.com>
Date:   Wed Jun 16 17:33:48 2010 +0100

    state: add a duration property
    
    Adding a duration property to ClutterState allows the json parsing
    to parse the default transition duration with the generic code paths.

 clutter/clutter-state.c |   20 ++++++++++++++++++++
 1 file changed, 20 insertions(+)

commit 351b6c0543390a3e1289aec7cf14058ffc4eb6af
Author: Øyvind Kolås <pippin@linux.intel.com>
Date:   Wed Jun 16 17:44:06 2010 +0100

    state: avoid walking off empty list
    
    When removing the last key in a list, the last part of the for statement
    could cause dereferencing (NULL)->next and thus segfaulting.

 clutter/clutter-state.c |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit 35c6179a8e01ca02ee3239ec8e4a0379e41ada09
Author: Øyvind Kolås <pippin@linux.intel.com>
Date:   Wed Jun 16 17:43:44 2010 +0100

    animator: avoid walking off empty list
    
    When removing the last key in a list, the last part of the for statement
    could cause dereferencing (NULL)->next and thus segfaulting.

 clutter/clutter-animator.c |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit 698cce8276eeff945980f16ebe3ac585bd71a9b7
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Wed Jun 16 17:17:27 2010 +0100

    shader-effect: Add a size check
    
    Similar to the one in commit 2a354d9650bb8215dd75a90b947fb82734c35b78
    that went into clutter_value_set_shader_*. We end up in the same
    situation, but it's better to fail from within ClutterShaderEffect.

 clutter/clutter-shader-effect.c |    4 ++++
 1 file changed, 4 insertions(+)

commit 2a354d9650bb8215dd75a90b947fb82734c35b78
Author: Richard Hughes <richard@hughsie.com>
Date:   Wed Jun 16 16:19:48 2010 +0100

    shader-types: Check the size of the values
    
    Emit a critical error if the user tries to send more data than
    the static shader GValues can hold.
    
    This fixes the random memory corruption you get when specifying
    size > 4.
    
    Signed-off-by: Emmanuele Bassi <ebassi@linux.intel.com>

 clutter/clutter-shader-types.c |    3 +++
 1 file changed, 3 insertions(+)

commit 2d99f77e3b0027c83b9b2068d65b39d18dbfdbd3
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Wed Jun 16 13:58:41 2010 +0100

    cairo-texture: Disable :sync-size
    
    The :sync-size property of ClutterTexture should be set to FALSE by
    default by ClutterCairoTexture. The preferred size of the
    ClutterCairoTexture is already the size of the internal Cairo surface,
    and we override the preferred width/height getters to that effect.
    
    The :sync-size property is also responsible of changing the size of
    the Texture actor when changing the texture handle - but since we
    encourage that to happen during the CairoTexture allocation, we get a
    queue_relayout() invocation (and a warning) when we change the size
    of the Cairo image surface.
    
    Since GObject doesn't make it easy to override the default value of the
    :sync-size property in sub-classes, we should simply call the setter
    function during the ClutterCairoTexture instance initialization.
    
    We should also change one of the interactive tests using a CairoTexture
    to rebuild the contents of the actor in response to an allocation.

 clutter/clutter-cairo-texture.c     |    8 +++++
 tests/interactive/test-bin-layout.c |   66 ++++++++++++++++++++++++++++++-----
 2 files changed, 65 insertions(+), 9 deletions(-)

commit 72fa820dbdc9edee264015146715d98d7728a8a5
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Wed Jun 16 12:53:02 2010 +0100

    cairo-texture: Clean up style

 clutter/clutter-cairo-texture.c |   34 ++++++++++++++++++----------------
 1 file changed, 18 insertions(+), 16 deletions(-)

commit 859d1f0792177d8d5cc589e64d6dbad04074e0c4
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Wed Jun 16 12:47:56 2010 +0100

    align-constraint: Publish the properties accessors
    
    The accessor methods for the AlignConstraint properties should be
    public.

 clutter/clutter-align-constraint.c         |  221 +++++++++++++++++++++-------
 clutter/clutter-align-constraint.h         |   16 +-
 doc/reference/clutter/clutter-sections.txt |    6 +
 3 files changed, 183 insertions(+), 60 deletions(-)

commit 72f8bb454a1dbaa4a3295d329bae4d69d9bf5281
Author: Richard Hughes <richard@hughsie.com>
Date:   Tue Jun 15 22:36:19 2010 +0100

    build: Fix a compiler warning when using make dist
    
    Signed-off-by: Emmanuele Bassi <ebassi@linux.intel.com>

 clutter/cogl/cogl/Makefile.am |    1 +
 1 file changed, 1 insertion(+)

commit 56315d92bd9e961450746d9f9c973f937be20aa6
Author: Robert Bragg <robert@linux.intel.com>
Date:   Wed Jun 9 02:42:01 2010 +0100

    stage-glx: Never promote clipped redraws to full redraws.
    
    When clipped redraws were first supported in Clutter a heuristic was
    added to promote tall clipped redraws into full redraws due to a concern
    that using glXCopySubBuffer for tall rectangles would block the GPU for
    too long waiting for the vtrace to be in a suitable position so that
    tearing isn't seen. We've so far been unable to measure any impact from
    this blocking even with full height windows so we are removing the
    arbitrary threshold of 300px that was originally "plucked out of thin
    air".
    
    http://bugzilla.o-hand.com/show_bug.cgi?id=2136

 clutter/glx/clutter-stage-glx.c |   10 ++--------
 1 file changed, 2 insertions(+), 8 deletions(-)

commit 5382e8722b8194320feb7c18065b2831e4ebe752
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Tue Jun 15 16:51:55 2010 +0100

    Split out the ignored test files

 .gitignore                   |  196 +-----------------------------------------
 tests/conform/.gitignore     |  113 ++++++++++++++++++++++++
 tests/interactive/.gitignore |   69 +++++++++++++++
 tests/micro-bench/.gitignore |    4 +
 4 files changed, 188 insertions(+), 194 deletions(-)

commit 6d132e45ff05da2e5604d6cce59ff324617eaea4
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Tue Jun 15 16:46:59 2010 +0100

    Add cogl-depth-test to the Git ignore file

 .gitignore |    1 +
 1 file changed, 1 insertion(+)

commit 7164da7467b0b2570d1e90c40844a322335f30ec
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Tue Jun 15 16:42:30 2010 +0100

    Set the initial value of a variable
    
    Fixes a compiler warning.

 clutter/cogl/cogl/cogl-primitives.c |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit e312f7ee4a6ee5a4ee1c95ada289746e2372fc45
Author: Robert Bragg <robert@linux.intel.com>
Date:   Mon Jun 14 23:14:15 2010 +0100

    material: Adds arbfp compile counter
    
    This adds a uprof counter to track how many ARBfp programs get compiled
    by an application.

 clutter/cogl/cogl/cogl-material.c |    7 +++++++
 1 file changed, 7 insertions(+)

commit 305721d0e8f2c2bad83787740628b2444f895a6f
Author: Robert Bragg <robert@linux.intel.com>
Date:   Thu Jun 10 19:03:57 2010 +0100

    material: Support sparse ARBfp program generation
    
    We don't need to generate a new ARBfp program for every material created
    if we can find an ancestor whos state will result in the same program
    being generated.
    
    The more code we can have adopt the coding pattern of deriving their
    materials from other similar materials using cogl_material_copy() the
    more likely this metric will be good enough on its own to minimize the
    set of arbfp programs necessary to support a given application.

 clutter/cogl/cogl/cogl-material-private.h |   21 +-
 clutter/cogl/cogl/cogl-material.c         |  356 ++++++++++++++++++++++++-----
 2 files changed, 316 insertions(+), 61 deletions(-)

commit 2fe58f5000fc36ed8c37481f85ab1ec975ed0a9a
Author: Robert Bragg <robert@linux.intel.com>
Date:   Mon Jun 14 22:20:27 2010 +0100

    material: free any layer cache in material_set_parent
    
    Previously in _cogl_material_pre_change_notify we manually freed the
    layer caches of a material if we caused a reparent, but it makes more
    sense to have _cogl_material_set_parent do this directly instead.

 clutter/cogl/cogl/cogl-material.c |   23 +++++------------------
 1 file changed, 5 insertions(+), 18 deletions(-)

commit dc0cb7959885c0eaf43008c0065ed99bf10d5df2
Author: Robert Bragg <robert@linux.intel.com>
Date:   Thu May 27 20:04:49 2010 +0100

    Adds an internal weak material mechanism
    
    This adds a _cogl_material_weak_copy() function that can be used to
    create materials that don't count as strong dependants on their parents.
    This means the parent can be modified without worrying about how it will
    affect weak materials. The material age of the parent can potentially be
    queried to determine if a weak material might need to be re-created.

 clutter/cogl/cogl/cogl-material-private.h |    6 ++
 clutter/cogl/cogl/cogl-material.c         |  167 ++++++++++++++++++++---------
 2 files changed, 123 insertions(+), 50 deletions(-)

commit b5bd76cde176ef88efd3b4f3107e44f3aff2591a
Author: Robert Bragg <robert@linux.intel.com>
Date:   Thu May 27 15:19:15 2010 +0100

    material: Adds a simple material age getter
    
    When we add support for weak materials it's expected that Clutter will
    want to attach them as private data to other materials and it needs a
    mechanism to determine when a weak material should be re-created because
    its parent has changed somehow.
    
    This adds the concept of a material age (internal only currently) which
    increments whenever a material is modified. Clutter can then save the
    age of the material which its weak materials are derived from and later
    determine when the weak material may be invalid.

 clutter/cogl/cogl/cogl-material-private.h |   10 ++++++++++
 clutter/cogl/cogl/cogl-material.c         |   19 +++++++++++++++++++
 2 files changed, 29 insertions(+)

commit 634bcb34f98725deadea7777f0ab41071d009ecb
Author: Robert Bragg <robert@linux.intel.com>
Date:   Thu May 27 15:18:15 2010 +0100

    primitives: we were memsetting the wrong wrap mode overrides pointer
    
    In _cogl_texture_quad_multiple_primitives we weren't memsetting the
    CoglMaterialWrapModeOverrides structure we were memsetting
    &state.wrap_mode_overrides where state.wrap_mode_overrides is just a
    pointer that might potentially later point to the
    CoglMaterialWrapModeOverrides structure.

 clutter/cogl/cogl/cogl-primitives.c |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit 2d6925f243e9e9d8faa66aa63917a32db7293e3b
Author: Robert Bragg <robert@linux.intel.com>
Date:   Wed May 26 14:13:37 2010 +0100

    material: generalize how we compare simple material properties
    
    In _cogl_material_equal we were repeating the same code pattern to
    compare several of the state groups so this just adds
    simple_property_equal function that's now used instead.

 clutter/cogl/cogl/cogl-material.c |  134 +++++++++++++++++--------------------
 1 file changed, 62 insertions(+), 72 deletions(-)

commit c434f1fc48390a6e2c963656b039ebc3df0991af
Author: Robert Bragg <robert@linux.intel.com>
Date:   Wed May 26 11:33:32 2010 +0100

    material: Make CoglMaterial responsible for depth state
    
    This redirects the legacy depth testing APIs through CoglMaterial and
    adds a new experimental cogl_material_ API for handling the depth
    testing state.
    
    This adds the following new functions:
    cogl_material_set_depth_test_enabled
    cogl_material_get_depth_test_enabled
    cogl_material_set_depth_writing_enabled
    cogl_material_get_depth_writing_enabled
    cogl_material_set_depth_test_function
    cogl_material_get_depth_test_function
    cogl_material_set_depth_range
    cogl_material_get_depth_range
    
    As with other experimental Cogl API you need to define
    COGL_ENABLE_EXPERIMENTAL_API to access them and their stability isn't
    yet guaranteed.

 clutter/cogl/cogl/cogl-context.c          |    8 +
 clutter/cogl/cogl/cogl-context.h          |    8 +
 clutter/cogl/cogl/cogl-material-private.h |   19 +-
 clutter/cogl/cogl/cogl-material.c         |  323 ++++++++++++++++++++++++--
 clutter/cogl/cogl/cogl-material.h         |  207 +++++++++++++++++
 clutter/cogl/cogl/cogl-types.h            |   25 +-
 clutter/cogl/cogl/cogl.c                  |   28 ++-
 clutter/cogl/cogl/cogl.h                  |    6 +
 tests/conform/Makefile.am                 |    1 +
 tests/conform/test-cogl-depth-test.c      |  354 +++++++++++++++++++++++++++++
 tests/conform/test-conform-main.c         |    1 +
 11 files changed, 952 insertions(+), 28 deletions(-)

commit ff4d3e048b11ed1fc609c53e5e00595602eaf373
Author: Robert Bragg <robert@linux.intel.com>
Date:   Wed May 26 03:07:17 2010 +0100

    cogl docs: Improve documentation for cogl_ortho
    
    cogl_ortho is one of those APIs whos style was, for better or worse,
    copied from OpenGL and for some inexplicable reason the near and far
    arguments are inconsistent with the left, right, top, bottom arguments
    because they don't take z coordinates they take a "distance" which
    should be negative for a plane behind the viewer.
    
    This updates the documentation to explain this.

 clutter/cogl/cogl/cogl.h          |   21 +++++++++++++++++----
 doc/reference/cogl/Makefile.am    |    6 ++++--
 doc/reference/cogl/cogl_ortho.png |  Bin 0 -> 12650 bytes
 3 files changed, 21 insertions(+), 6 deletions(-)

commit e8275538e5a06a267d7e7e062103736dfdc3ac53
Author: Robert Bragg <robert@linux.intel.com>
Date:   Wed May 19 01:02:16 2010 +0100

    primitives: no longer assume _get_layers list remains valid
    
    The internal CoglMaterialLayer pointers associated with a material may
    change whenever layer properties are modified so it's no longer ok to
    assume that a list of layers returned by cogl_material_get_layers
    remains valid if the layers have been changed.

 clutter/cogl/cogl/cogl-primitives.c |    1 +
 1 file changed, 1 insertion(+)

commit 487c0b1ae9f9378eb0419e44c1d96c92df687a2d
Author: Robert Bragg <robert@linux.intel.com>
Date:   Wed May 19 00:36:31 2010 +0100

    material: Adds simple breadcrumb debugging mechanism
    
    Since it can sometimes be awkward to figure out where a particular
    material came from when debugging, this adds a breadcrumb mechanism that
    lets you associate a const string with a material that may give a clue
    about its origin.

 clutter/cogl/cogl/cogl-material-private.h |   14 ++++++++++++++
 clutter/cogl/cogl/cogl-material.c         |   23 ++++++++++++++++++++++-
 2 files changed, 36 insertions(+), 1 deletion(-)

commit ad0aab939dd74592eef0a2882bd7457baed68151
Author: Robert Bragg <robert@linux.intel.com>
Date:   Tue May 18 23:38:33 2010 +0100

    material: remove override options from _cogl_material_equal
    
    As a follow on to using cogl_material_copy instead of flush options this
    patch now removes the ability to pass flush options to
    _cogl_material_equal which is the final reference to the
    CoglMaterialFlushOptions mechanism.

 clutter/cogl/cogl/cogl-journal.c          |    4 +-
 clutter/cogl/cogl/cogl-material-private.h |    2 -
 clutter/cogl/cogl/cogl-material.c         |   60 +++++++----------------------
 3 files changed, 14 insertions(+), 52 deletions(-)

commit 02b7f51e800661de4bf3e0daeb8d8c51e88dc153
Author: Robert Bragg <robert@linux.intel.com>
Date:   Tue May 18 22:42:49 2010 +0100

    cogl: remove _cogl_material_flush_gl_state flush options
    
    Since cogl_material_copy should now be cheap to use we can simplify
    how we handle fallbacks and wrap mode overrides etc by simply copying
    the original material and making our override changes on the new
    material. This avoids the need for a sideband state structure that has
    been growing in size and makes flushing material state more complex.
    
    Note the plan is to eventually use weak materials for these override
    materials and attach these as private data to the original materials so
    we aren't making so many one-shot materials.

 clutter/cogl/cogl/cogl-context.c          |    2 +-
 clutter/cogl/cogl/cogl-journal-private.h  |    1 -
 clutter/cogl/cogl/cogl-journal.c          |   68 ++++++++++++++++++-----------
 clutter/cogl/cogl/cogl-material-private.h |    6 ++-
 clutter/cogl/cogl/cogl-material.c         |   38 ++--------------
 clutter/cogl/cogl/cogl-path.c             |   24 ++++++----
 clutter/cogl/cogl/cogl-primitives.c       |   60 ++++++++++++++++---------
 clutter/cogl/cogl/cogl-vertex-buffer.c    |   45 ++++++++++++++++++-
 clutter/cogl/cogl/cogl.c                  |    4 +-
 9 files changed, 153 insertions(+), 95 deletions(-)

commit 365605cf42fca1beb9b70acd58d23ee4bc4cd208
Author: Robert Bragg <robert@linux.intel.com>
Date:   Thu Apr 8 12:21:04 2010 +0100

    CoglMaterial: Implements sparse materials design
    
    This is a complete overhaul of the data structures used to manage
    CoglMaterial state.
    
    We have these requirements that were aiming to meet:
    (Note: the references to "renderlists" correspond to the effort to
    support scenegraph level shuffling of Clutter actor primitives so we can
    minimize GPU state changes)
    
    Sparse State:
    We wanted a design that allows sparse descriptions of state so it scales
    well as we make CoglMaterial responsible for more and more state. It
    needs to scale well in terms of memory usage and the cost of operations
    we need to apply to materials such as comparing, copying and flushing
    their state. I.e. we would rather have these things scale by the number
    of real changes a material represents not by how much overall state
    CoglMaterial becomes responsible for.
    
    Cheap Copies:
    As we add support for renderlists in Clutter we will need to be able to
    get an immutable handle for a given material's current state so that we
    can retain a record of a primitive with its associated material without
    worrying that changes to the original material will invalidate that
    record.
    
    No more flush override options:
    We want to get rid of the flush overrides mechanism we currently use to
    deal with texture fallbacks, wrap mode changes and to handle the use of
    highlevel CoglTextures that need to be resolved into lowlevel textures
    before flushing the material state.
    
    The flush options structure has been expanding in size and the structure
    is logged with every journal entry so it is not an approach that scales
    well at all. It also makes flushing material state that much more
    complex.
    
    Weak Materials:
    Again for renderlists we need a way to create materials derived from
    other materials but without the strict requirement that modifications to
    the original material wont affect the derived ("weak") material. The
    only requirement is that its possible to later check if the original
    material has been changed.
    
    A summary of the new design:
    
    A CoglMaterial now basically represents a diff against its parent.
    Each material has a single parent and a mask of state that it changes.
    
    Each group of state (such as the blending state) has an "authority"
    which is found by walking up from a given material through its ancestors
    checking the difference mask until a match for that group is found.
    
    There is only one root node to the graph of all materials, which is the
    default material first created when Cogl is being initialized.
    
    All the groups of state are divided into two types, such that
    infrequently changed state belongs in a separate "BigState" structure
    that is only allocated and attached to a material when necessary.
    
    CoglMaterialLayers are another sparse structure. Like CoglMaterials they
    represent a diff against their parent and all the layers are part of
    another graph with the "default_layer_0" layer being the root node that
    Cogl creates during initialization.
    
    Copying a material is now basically just a case of slice allocating a
    CoglMaterial, setting the parent to be the source being copied and
    zeroing the mask of changes.
    
    Flush overrides should now be handled by simply relying on the cheapness
    of copying a material and making changes to it. (This will be done in a
    follow on commit)
    
    Weak material support will be added in a follow on commit.

 clutter/cogl/cogl/cogl-atlas-texture.c    |   10 +
 clutter/cogl/cogl/cogl-context.c          |   23 +-
 clutter/cogl/cogl/cogl-context.h          |   21 +-
 clutter/cogl/cogl/cogl-debug.c            |    4 +-
 clutter/cogl/cogl/cogl-debug.h            |    3 +-
 clutter/cogl/cogl/cogl-internal.h         |    9 +-
 clutter/cogl/cogl/cogl-journal.c          |    7 +-
 clutter/cogl/cogl/cogl-material-private.h |  606 ++-
 clutter/cogl/cogl/cogl-material.c         | 6220 +++++++++++++++++++++--------
 clutter/cogl/cogl/cogl-material.h         |    6 +-
 clutter/cogl/cogl/cogl-path.c             |    7 +-
 clutter/cogl/cogl/cogl-primitives.c       |   29 +-
 clutter/cogl/cogl/cogl-vertex-buffer.c    |   21 +-
 clutter/cogl/cogl/cogl.c                  |    8 -
 14 files changed, 5024 insertions(+), 1950 deletions(-)

commit 5f9c7d36571219a2038fe9237847894e0b718bbc
Author: Robert Bragg <robert@linux.intel.com>
Date:   Tue Jun 15 14:26:37 2010 +0100

    material: fix #ifdef guard around use of _TEXTURE_RECTANGLE
    
    We were incorrectly guarding the use of GL_TEXTURE_RECTANGLE_ARB with
    ifdef ARB_texture_rectangle instead of ifdef GL_ARB_texture_rectangle
    which broke test-cogl-texture-rectangle.

 clutter/cogl/cogl/cogl-material.c |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit a1035389c00bc44b94358d33e9bebb555328b9ac
Author: Robert Bragg <robert@linux.intel.com>
Date:   Thu Jun 10 14:39:20 2010 +0100

    blend-strings: removes the AUTO_COMPOSITE function enum
    
    This was mistakenly added some time ago because at some point when we
    were discussing how to handle premultiplied alpha in Clutter/Cogl we
    were considering having a magic "just do the right thing" option which
    was later abandoned.

 clutter/cogl/cogl/cogl-blend-string.c |    2 --
 clutter/cogl/cogl/cogl-blend-string.h |    1 -
 clutter/cogl/cogl/cogl-material.c     |    3 ---
 3 files changed, 6 deletions(-)

commit 249ad97c8fd55b05d4377dad4f9b5e072d161b2b
Author: Robert Bragg <robert@linux.intel.com>
Date:   Thu Jun 10 14:17:42 2010 +0100

    cogl-color: add cogl_color_init_from_xyz funcs
    
    This is to try and improve API consistency. Simple cogl structures that
    don't derive from CoglObject and which can be allocated on the stack,
    such as CoglColor and CoglMatrix should all have  "_init" or
    "_init_from" functions to initialize all the structure members. (As
    opposed to a cogl_xyz_new() function for CoglObjects). CoglColor
    previously used the naming scheme "_set_from" for these initializers but
    "_set" is typically reserved for setting individual properties of a
    structure/object.
    
    This adds three _init functions:
    cogl_color_init_from_4ub
    cogl_color_init_from_4f
    cogl_color_init_from_4fv
    
    The _set_from functions are now deprecated but only with a gtk-doc
    annotation for now. This is because the cogl_color_set_from API is quite
    widely used already and so were giving a grace period before enabling a
    GCC deprecated warning just because otherwise the MX maintainers will
    complain to me that I've made their build logs look messy.

 clutter/cogl/cogl/cogl-color.c |   68 ++++++++++++++++++++++++++++++----------
 clutter/cogl/cogl/cogl-color.h |   61 ++++++++++++++++++++++++++++++++---
 2 files changed, 108 insertions(+), 21 deletions(-)

commit 500baa415789ea0b6277070c67ece54d0e6418ff
Author: Robert Bragg <robert@linux.intel.com>
Date:   Thu Jun 10 14:07:40 2010 +0100

    cogl-color: add private _cogl_color_get_rgba_4ubv API
    
    The journal logs colors as 4bytes into a vertex array and since we are
    planning to make CoglMaterial track its color using a CoglColor instead
    of a byte array this convenience will be useful for re-implementing
    _cogl_material_get_colorubv.

 clutter/cogl/cogl/cogl-color-private.h |   40 ++++++++++++++++++++++++++++++++
 clutter/cogl/cogl/cogl-color.c         |    7 ++++++
 2 files changed, 47 insertions(+)

commit 272cf6d943688453d19c5b695077903a5002fd17
Author: Johan Bilien <jobi@via.ecp.fr>
Date:   Mon Jun 14 19:34:24 2010 +0000

    build: Do not include built sources in the distribution
    
    allows to run make distcheck without first running make
    
    http://bugzilla.openedhand.com/show_bug.cgi?id=2171
    
    Signed-off-by: Emmanuele Bassi <ebassi@linux.intel.com>

 clutter/Makefile.am |   21 ++++++++++++++++-----
 1 file changed, 16 insertions(+), 5 deletions(-)

commit 2cee8b648e82382b37595fd583cfd2dd16b5bb2f
Author: Øyvind Kolås <pippin@linux.intel.com>
Date:   Mon Jun 14 16:57:44 2010 +0100

    state: consistently use clutter_state_get_state where possible
    
    The previous commit reimplemented logic for creating states, this - and
    other parts of the code should be using clutter_state_get_state.

 clutter/clutter-state.c |   45 +++++++++++++--------------------------------
 1 file changed, 13 insertions(+), 32 deletions(-)

commit d5c93f6d550980f75534fdaa8f24db50f490e874
Author: Øyvind Kolås <pippin@linux.intel.com>
Date:   Mon Jun 14 15:45:07 2010 +0100

    state: make null source state encounterd in json treated as wildcard
    
    To be properly useful the state machine needs to be able to specify the
    default transitions to a target state with no specified source state.

 clutter/clutter-state.c |   21 ++++++++++++++++++++-
 1 file changed, 20 insertions(+), 1 deletion(-)

commit 66de8656e99695c1afc0cf735b5fb6ade9300e37
Author: Øyvind Kolås <pippin@linux.intel.com>
Date:   Tue May 25 11:54:15 2010 +0100

    test-state: move press/release callbacks to stage avoiding grab

 tests/interactive/test-state.c |   10 ++++------
 1 file changed, 4 insertions(+), 6 deletions(-)

commit b8b10ef4db0e6a8e63865d4b358516addc5796e7
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Mon Jun 14 14:05:49 2010 +0100

    docs: Clarify the scope of Text:single-line-mode
    
    Only editable text actors can be in single-line mode.

 clutter/clutter-text.c |    6 +++++-
 1 file changed, 5 insertions(+), 1 deletion(-)

commit 21820d50ca1b8e4e4d8b6078d3d6ecb191e17c0e
Author: Kristian Høgsberg <hoegsberg@gmail.com>
Date:   Mon Jun 14 12:59:42 2010 +0100

    Don't add GL libs for EGL X11 backend
    
    Configure uses the GL .pc file to add GL includes and libs for the eglx
    backend.
    
    http://bugzilla.openedhand.com/show_bug.cgi?id=2104
    
    Signed-off-by: Emmanuele Bassi <ebassi@linux.intel.com>

 configure.ac |    3 ---
 1 file changed, 3 deletions(-)

commit 38da6b4a0eacbe0c7e40bc5d237bf31030fcc57d
Author: Neil Roberts <neil@linux.intel.com>
Date:   Mon Jun 14 11:59:33 2010 +0100

    clutter-text: Round the layout width to nearest integer not down
    
    When converting the floating point allocation width to an integer
    multiple of PANGO_SCALE to give to the PangoLayout it can sometimes
    end up slightly short of the allocated size due to rounding
    errors. This can cause some of the lines to be wrapped differently
    when a non-integer-aligned position is used (such as when animating
    text). It works better to round the number to the nearest integer by
    adding 0.5 instead of letting the default float cast truncate it
    downwards.
    
    http://bugzilla.openedhand.com/show_bug.cgi?id=2170

 clutter/clutter-text.c |    4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

commit f97d16cd2d01c7f4d44f5b6ab719878d1a5989e2
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Sat Jun 12 17:45:54 2010 +0100

    drag-action: Remove the press event button
    
    Both ::drag-begin and ::drag-end have a "button" argument - even though
    we assume internally, and externally, that dragging can only be the
    result of a primary button operation.

 clutter/clutter-drag-action.c      |   19 +++++++------------
 clutter/clutter-drag-action.h      |    2 --
 clutter/clutter-marshal.list       |    2 +-
 tests/interactive/test-drag.c      |    2 --
 tests/interactive/test-scrolling.c |    1 -
 5 files changed, 8 insertions(+), 18 deletions(-)

commit b8b2a51d444f2a90a9428e26ae4e293deb7fed0d
Merge: b2c905f 7343c66
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Fri Jun 11 18:12:54 2010 +0100

    Merge branch 'wip/deform-effect'
    
    * wip/deform-effect:
      docs: Add DeformEffect and PageTurnEffect to the API reference
      effect: Add PageTurnEffect
      effect: Add DeformEffect
      offscreen-effect: Traslate the modelview with the offsets
      docs: Fix Effect subclassing section

commit b2c905ff506b9be53e6c14c2d1bc909b97130e76
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Fri Jun 11 15:49:46 2010 +0100

    Hide the marshallers
    
    The marshallers we use for the signals are declared in a private header,
    and it stands to reason that they should also be hidden in the shared
    object by using the common '_' prefix. We are also using some direct
    g_cclosure_marshal_* symbol from GLib, instead of consistently use the
    clutter_marshal_* symbol.

 clutter/Makefile.am                      |    2 +-
 clutter/clutter-actor.c                  |   46 +++++++++++++++---------------
 clutter/clutter-alpha.c                  |    2 +-
 clutter/clutter-animation.c              |    5 ++--
 clutter/clutter-backend.c                |    4 +--
 clutter/clutter-behaviour-path.c         |    2 +-
 clutter/clutter-behaviour.c              |    5 ++--
 clutter/clutter-binding-pool.c           |    8 +++---
 clutter/clutter-click-action.c           |    2 +-
 clutter/clutter-container.c              |    6 ++--
 clutter/clutter-device-manager.c         |    4 +--
 clutter/clutter-drag-action.c            |    6 ++--
 clutter/clutter-layout-manager.c         |    2 +-
 clutter/clutter-media.c                  |    8 ++++--
 clutter/clutter-model.c                  |   10 +++----
 clutter/clutter-score.c                  |   10 +++----
 clutter/clutter-stage-manager.c          |    4 +--
 clutter/clutter-stage.c                  |   10 +++----
 clutter/clutter-state.c                  |    2 +-
 clutter/clutter-text.c                   |   10 +++----
 clutter/clutter-texture.c                |    6 ++--
 clutter/clutter-timeline.c               |   10 +++----
 clutter/x11/clutter-x11-texture-pixmap.c |    4 +--
 23 files changed, 86 insertions(+), 82 deletions(-)

commit ded9322a7ab13dc0ab2d5470164909d764eaa436
Author: Neil Roberts <neil@linux.intel.com>
Date:   Fri Jun 11 14:47:30 2010 +0100

    cogl/winsys/cogl-eglx: Use the right egl header on 1.1
    
    Commit b0cc98fdceb introduced a #include for the egl header in
    cogl-eglx.c The header name is different under GLES 1.1 so it broke
    compilation.

 clutter/cogl/cogl/winsys/cogl-eglx.c |    4 ++++
 1 file changed, 4 insertions(+)

commit 64e6cf69d74f9501914bf1f0a6738d897d83aaa5
Author: Neil Roberts <neil@linux.intel.com>
Date:   Fri Jun 11 14:37:56 2010 +0100

    cogl-program: Add cogl_program_uniform_1i to GLES
    
    The GLES 1.1 backend was missing a stub for cogl_program_uniform_1i.

 clutter/cogl/cogl/driver/gles/cogl-program.c |    6 ++++++
 1 file changed, 6 insertions(+)

commit 181b46933a16f7649d2c50b928d10e765ad0a522
Author: Neil Roberts <neil@linux.intel.com>
Date:   Fri Jun 11 14:36:38 2010 +0100

    cogl-gles2: Prefix internal GLES 2 wrapper symbols with _
    
    Some internal symbols used for the GLES 2 wrapper were accidentally
    being exported. This prepends an underscore to them so they won't
    appear in the shared library.

 .../cogl/cogl/driver/gles/cogl-context-driver.c    |    2 +-
 .../driver/gles/cogl-fixed-fragment-shader.glsl    |   30 +--
 .../cogl/driver/gles/cogl-fixed-vertex-shader.glsl |   24 +--
 clutter/cogl/cogl/driver/gles/cogl-gles2-wrapper.c |  201 ++++++++++----------
 clutter/cogl/cogl/driver/gles/cogl-gles2-wrapper.h |  192 +++++++++----------
 .../cogl/cogl/driver/gles/cogl-texture-driver.c    |    2 +-
 6 files changed, 226 insertions(+), 225 deletions(-)

commit e00ed20805c136fe63d0f7abc7602f1c9fe2b7bb
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Fri Jun 11 15:23:46 2010 +0100

    click-action: Use clutter_actor_contains()
    
    Instead of an internal copy.

 clutter/clutter-click-action.c |   14 ++------------
 1 file changed, 2 insertions(+), 12 deletions(-)

commit f3f3b5674293f76decc831f2e11b9efba654bb75
Author: Dan Winship <danw@gnome.org>
Date:   Thu Jun 10 08:24:55 2010 -0400

    actor: add clutter_actor_contains()
    
    It is often useful to determine if one actor is an ancestor of
    another. Add a method to do that.
    
    http://bugzilla.openedhand.com/show_bug.cgi?id=2162
    
    Signed-off-by: Emmanuele Bassi <ebassi@linux.intel.com>

 clutter/clutter-actor.c                    |   25 +++++++++++++++++++++++++
 clutter/clutter-actor.h                    |    2 ++
 doc/reference/clutter/clutter-sections.txt |    1 +
 3 files changed, 28 insertions(+)

commit d816acd8348a84bf3f0e9f065fab80688a76350d
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Fri Jun 11 14:47:48 2010 +0100

    shader-effect: Allow creating vertex shaders
    
    By default, ShaderEffect creates a fragment shader; in order to be able
    to deprecate ClutterShader we need a way for ShaderEffect sub-classes to
    create a vertex shader if needed - By using a write-only, constructor
    only property.
    
    ClutterShader has, internally, a ClutterShaderType enumeration that can
    be used exactly for this. We just need to expose it and create a GObject
    property for ClutterShaderEffect.

 clutter/clutter-shader-effect.c            |   70 ++++++++++++++++++++++++++--
 clutter/clutter-shader.c                   |    5 --
 clutter/clutter-types.h                    |   14 ++++++
 doc/reference/clutter/clutter-sections.txt |    1 +
 4 files changed, 82 insertions(+), 8 deletions(-)

commit 0f41948c8202215950ed636ac1d9ee663b4254fd
Author: Neil Roberts <neil@linux.intel.com>
Date:   Thu Apr 22 14:33:47 2010 +0100

    cogl-clip-stack: Always use the scissor when clipping
    
    Whenever a path or a rectangle is added to the clip stack it now also
    stores a screen space bounding box in the entry. Then when the clip
    stack is flushed the bounding box is first used to set up the
    scissor. That way when we eventually come to use the stencil buffer
    the clear will be affected by the scissor so we don't have to clear
    the entire buffer.

 clutter/cogl/cogl/cogl-clip-stack.c |  179 +++++++++++++++++++++++------------
 clutter/cogl/cogl/cogl-path.c       |    4 +
 2 files changed, 124 insertions(+), 59 deletions(-)

commit e74387f36ff7a8fa654ac37fa21fbbfbcc01689a
Author: Neil Roberts <neil@linux.intel.com>
Date:   Thu Apr 22 14:13:52 2010 +0100

    cogl-path: Export _cogl_path_get_bounds
    
    _cogl_path_get_bounds is no longer static and is exported in
    cogl-path-private.h so that it can be used in the clip stack code. The
    old version of the function returned x/y and width/height. However
    this was mostly used to call cogl_rectangle which takes x1/y1
    x2/y2. The function has been changed to just directly return the
    second form because it is more useful. Anywhere that was previously
    using the function now just directly looks at path->path_nodes_min and
    path->path_nodes_max instead.

 clutter/cogl/cogl/cogl-path-private.h |    7 ++++
 clutter/cogl/cogl/cogl-path.c         |   72 ++++++++++++++++++---------------
 2 files changed, 46 insertions(+), 33 deletions(-)

commit 0bc16c90add35e79a9d564379cc4793ab47d9b76
Author: Neil Roberts <neil@linux.intel.com>
Date:   Thu Apr 22 13:48:49 2010 +0100

    cogl-clip-state: Export transform_point internally to Cogl
    
    The transform_point function takes a modelview matrix, projection
    matrix and a viewport and performs all three transformations on a
    point to give a Cogl window coordinate. This is useful in a number of
    places in Cogl so this patch moves it to cogl.c and adds it to
    cogl-internal.h

 clutter/cogl/cogl/cogl-clip-state.c |   45 +++--------------------------------
 clutter/cogl/cogl/cogl-internal.h   |    7 ++++++
 clutter/cogl/cogl/cogl.c            |   39 ++++++++++++++++++++++++++++++
 3 files changed, 49 insertions(+), 42 deletions(-)

commit 67812d6649d27ec6a8f6a1c9277b686fc3b67475
Author: Sunil Sadasivan <sunil@kakai.com>
Date:   Thu May 13 00:59:06 2010 -0700

    cogl_texture_get_data() copies using wrong width size.
    
    For sliced 2D textures, _cogl_texture_2d_sliced_get_data() uses the
    bitmap width, instead of the rowstride, when memcpy()ing into the
    dest buffer.
    
    Signed-off-by: Robert Bragg <robert@linux.intel.com>

 clutter/cogl/cogl/cogl-texture-2d-sliced.c |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit e562ac20dffde1989c1c66d00e92a52e1d1d293f
Author: Damien Lespiau <damien.lespiau@intel.com>
Date:   Sun Jun 6 23:03:26 2010 +0100

    cogl-color: Provide setters for all the channels
    
    We only had getters for the red, green, blue and alpha channels of a
    color. This meant that, if you wanted to change, say, the alpha
    component of a color, one would need to query the red, green and blue
    channels and use set_from_4ub() or set_from_4f().
    
    Instead of this, just provide some setters for CoglColor, using the same
    naming scheme than the existing getters.

 clutter/cogl/cogl/cogl-color.c       |   84 ++++++++++++++++++
 clutter/cogl/cogl/cogl-color.h       |  156 ++++++++++++++++++++++++++++++++++
 doc/reference/cogl/cogl-sections.txt |   18 ++++
 3 files changed, 258 insertions(+)

commit 55be1a23c30c1705dbbb1d8d6f7b24056ce57e48
Author: Damien Lespiau <damien.lespiau@intel.com>
Date:   Sun Jun 6 22:57:02 2010 +0100

    cogl-color: Add cogl_color_unpremultiply()
    
    For some operations on pre-multiplied colors (say, replace the alpha
    value), you need to unpremultiply the color.
    
    This patch provides the counterpart to cogl_color_premultiply().

 clutter/cogl/cogl/cogl-color.c       |   11 +++++++++++
 clutter/cogl/cogl/cogl-color.h       |   13 +++++++++++++
 doc/reference/cogl/cogl-sections.txt |    1 +
 3 files changed, 25 insertions(+)

commit 396914176ff459ce09587ac75db7bc55a5de9910
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Wed May 26 16:32:23 2010 +0100

    cogl: Initialize the framebuffer bits on state flush
    
    The place where we actually change the framebuffer is
    _cogl_framebuffer_flush_state(), so if we changed to a new frame buffer
    we need to initialize the color bits there.
    
    http://bugzilla.openedhand.com/show_bug.cgi?id=2094

 clutter/cogl/cogl/cogl-framebuffer.c |    7 +++++--
 1 file changed, 5 insertions(+), 2 deletions(-)

commit 15881e0f24294db68ba1c3ead63246fc46c1c418
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Wed May 26 17:14:53 2010 +0100

    cogl-framebuffer: Use the FBO extension for color sizes
    
    OpenGL 3.0 deprecated querying of the GL_{RED,GREEN,BLUE}_BITS
    constants, and the FBO extension provides a mechanism to query for the
    color buffer sizes which *should* work even with the default
    framebuffer. Unfortunately, this doesn't seem to hold for Mesa - so we
    just use this for the offscreen CoglFramebuffer type, and we fall back
    to glGetIntegerv() for the onscreen one.
    
    http://bugzilla.openedhand.com/show_bug.cgi?id=2094

 clutter/cogl/cogl/cogl-debug.c                     |    4 +-
 clutter/cogl/cogl/cogl-framebuffer.c               |   78 +++++++++++++++++++-
 .../cogl/cogl/driver/gl/cogl-feature-functions.h   |    5 ++
 .../cogl/cogl/driver/gles/cogl-feature-functions.h |    5 ++
 4 files changed, 87 insertions(+), 5 deletions(-)

commit 3daafd4711416cf6f15376fcc97834b1e97fedc8
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Wed May 26 16:31:18 2010 +0100

    cogl: Hide cogl_framebuffer_get_*_bits()
    
    These accessors should be private, for the time being.
    
    http://bugzilla.openedhand.com/show_bug.cgi?id=2094

 clutter/cogl/cogl/cogl-framebuffer.c |    8 ++++----
 clutter/cogl/cogl/cogl.c             |    8 ++++----
 clutter/cogl/cogl/cogl.h             |   24 ++++++++++++------------
 3 files changed, 20 insertions(+), 20 deletions(-)

commit 7343c66482f2a7a94b442a640a16d5107be65fc2
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu Jun 10 18:51:22 2010 +0100

    docs: Add DeformEffect and PageTurnEffect to the API reference

 doc/reference/clutter/clutter-docs.xml.in  |    2 ++
 doc/reference/clutter/clutter-sections.txt |   40 ++++++++++++++++++++++++++++
 doc/reference/clutter/clutter.types        |    2 ++
 3 files changed, 44 insertions(+)

commit 44f300b3a242eb722cc1c82129e5e86daa3eb65d
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu Jun 10 16:56:16 2010 +0100

    effect: Add PageTurnEffect
    
    A simple deformation effect that simulates a page curl.
    
    Ported from MxDeformPageTurn inside the Mx toolkit, written by
    Chris Lord.

 clutter/Makefile.am                |    2 +
 clutter/clutter-page-turn-effect.c |  417 ++++++++++++++++++++++++++++++++++++
 clutter/clutter-page-turn-effect.h |   71 ++++++
 clutter/clutter.h                  |    1 +
 tests/interactive/test-drag.c      |   25 +++
 5 files changed, 516 insertions(+)

commit c2081a076c3fdd376d2cd97c11f811e4a6549926
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Wed Jun 9 17:52:06 2010 +0100

    effect: Add DeformEffect
    
    DeformEffect is an abstract class that should be used to write effects
    that change the geometry of an actor before submitting it to the GPU.
    
    Just like the ShaderEffect class, DeformEffect renders the actor to
    which it has been applied into an FBO; then it creates a mesh and stores
    it inside a VBO. Sub-classes can control vertex attributes like
    position, texel coordinates and the color.

 clutter/Makefile.am             |    2 +
 clutter/clutter-deform-effect.c |  739 +++++++++++++++++++++++++++++++++++++++
 clutter/clutter-deform-effect.h |  111 ++++++
 clutter/clutter.h               |    1 +
 4 files changed, 853 insertions(+)

commit fa381cc36194fbefd26717b1b3031018d5a1400e
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu Jun 10 17:35:56 2010 +0100

    offscreen-effect: Traslate the modelview with the offsets
    
    Instead of using the stage offsets when painting we can simply traslate
    the current modelview. This allows sub-classes to fully override the
    paint_target() virtual function without chaining up.

 clutter/clutter-offscreen-effect.c |   12 +++++++-----
 1 file changed, 7 insertions(+), 5 deletions(-)

commit 8d22fea31c1df87904a82112ef3e917b70d56120
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu Jun 10 17:34:48 2010 +0100

    docs: Fix Effect subclassing section
    
    It still mentions the long since removed "prepare" function.

 clutter/clutter-effect.c |   22 +++++-----------------
 1 file changed, 5 insertions(+), 17 deletions(-)

commit dc09fca2649d11d7c080b3c859b2996e1911f9f5
Author: Neil Roberts <neil@linux.intel.com>
Date:   Wed Jun 9 13:53:34 2010 +0100

    cogl-material: Fix the function which sets the enable blend flag
    
    This function had two problems. Firstly it would clear the enable
    blend flag before calling pre_change_notify so that if blending was
    previously enabled the journal would end up being flushed while the
    flag was still cleared. Secondly it would call the pre change notify
    whenever blending is needed regardless of whether it was already
    needed previously.
    
    This was causing problems in test-depth.

 clutter/cogl/cogl/cogl-material.c |   11 ++++++++---
 1 file changed, 8 insertions(+), 3 deletions(-)

commit b1f7d2fea8835c7731d9b999ce080f740a6b4b9b
Author: Robert Bragg <robert@linux.intel.com>
Date:   Mon Apr 26 10:01:43 2010 +0100

    material: Avoid redundant glBindTexture calls
    
    This adds a _cogl_bind_gl_texture_transient function that should be used
    instead of glBindTexture so we can have a consistent cache of the
    textures bound to each texture unit so we can avoid some redundant
    binding.

 clutter/cogl/cogl/cogl-atlas-texture.c             |   10 +-
 clutter/cogl/cogl/cogl-material-private.h          |   28 +++++
 clutter/cogl/cogl/cogl-material.c                  |  112 ++++++++++++++++++--
 clutter/cogl/cogl/cogl-sub-texture.c               |    6 +-
 clutter/cogl/cogl/cogl-texture-2d-sliced.c         |   55 +++++++---
 clutter/cogl/cogl/cogl-texture-2d.c                |   32 ++++--
 clutter/cogl/cogl/cogl-texture-driver.h            |    2 +
 clutter/cogl/cogl/cogl-texture-private.h           |   19 ++++
 clutter/cogl/cogl/cogl-texture.c                   |   23 ++++
 clutter/cogl/cogl/driver/gl/cogl-texture-driver.c  |   11 +-
 .../cogl/cogl/driver/gles/cogl-texture-driver.c    |    9 +-
 clutter/glx/clutter-glx-texture-pixmap.c           |    8 +-
 12 files changed, 272 insertions(+), 43 deletions(-)

commit ce6e80315e17f2e671e2709268f580add757f596
Author: Robert Bragg <robert@linux.intel.com>
Date:   Mon Apr 26 10:01:43 2010 +0100

    material: Adds backend abstraction for fragment processing
    
    As part of an effort to improve the architecture of CoglMaterial
    internally this overhauls how we flush layer state to OpenGL by adding a
    formal backend abstraction for fragment processing and further
    formalizing the CoglTextureUnit abstraction.
    
    There are three backends: "glsl", "arbfp" and "fixed". The fixed backend
    uses the OpenGL fixed function APIs to setup the fragment processing,
    the arbfp backend uses code generation to handle fragment processing
    using an ARBfp program, and the GLSL backend is currently only there as
    a formality to handle user programs associated with a material. (i.e.
    the glsl backend doesn't yet support code generation)
    
    The GLSL backend has highest precedence, then arbfp and finally the
    fixed. If a backend can't support some particular CoglMaterial feature
    then it will fallback to the next backend.
    
    This adds three new COGL_DEBUG options:
    * "disable-texturing" as expected should disable all texturing
    * "disable-arbfp" always make the arbfp backend fallback
    * "disable-glsl" always make the glsl backend fallback
    * "show-source" show code generated by the arbfp/glsl backends

 clutter/cogl/cogl/cogl-buffer.c                    |    2 -
 clutter/cogl/cogl/cogl-context.c                   |   38 +-
 clutter/cogl/cogl/cogl-context.h                   |   22 +-
 clutter/cogl/cogl/cogl-debug.c                     |   10 +-
 clutter/cogl/cogl/cogl-debug.h                     |    6 +-
 clutter/cogl/cogl/cogl-internal.h                  |   15 -
 clutter/cogl/cogl/cogl-journal.c                   |   11 +-
 clutter/cogl/cogl/cogl-material-private.h          |  234 +-
 clutter/cogl/cogl/cogl-material.c                  | 2674 ++++++++++++++------
 clutter/cogl/cogl/cogl-path.c                      |   27 +-
 clutter/cogl/cogl/cogl-pixel-buffer.c              |    2 -
 clutter/cogl/cogl/cogl-primitives.c                |   33 +-
 clutter/cogl/cogl/cogl-vertex-buffer.c             |   36 +-
 clutter/cogl/cogl/cogl.c                           |  109 +-
 clutter/cogl/cogl/driver/gl/cogl-context-driver.h  |    2 +
 .../cogl/cogl/driver/gl/cogl-feature-functions.h   |   57 +-
 clutter/cogl/cogl/driver/gl/cogl-program.c         |  106 +-
 clutter/cogl/cogl/driver/gl/cogl-program.h         |    2 +-
 clutter/cogl/cogl/driver/gl/cogl-shader.c          |   26 +-
 clutter/cogl/cogl/driver/gles/cogl-program.c       |   15 +-
 20 files changed, 2398 insertions(+), 1029 deletions(-)

commit 8cee3c867095aacdec152842f01dc2fca1fc43aa
Author: Neil Roberts <neil@linux.intel.com>
Date:   Wed Jun 9 14:42:18 2010 +0100

    cogl-atlas-texture: Flush the journal before starting blit not after
    
    _cogl_atlas_texture_blit_begin binds a texture to use as the
    destination and it expects it to stay bound until
    _cogl_atlas_texture_end_blit is called. However there was a call to
    _cogl_journal_flush directly after setting up the blit state which
    could cause the wrong texture to be bound. This just moves the flush
    to before the call to _cogl_atlas_texture_blit_begin.
    
    This was breaking test-cogl-sub-texture.

 clutter/cogl/cogl/cogl-atlas-texture.c |    4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

commit 413e631f488da0ec5ab44ac8d2314a89ff4a48a2
Author: Robert Bragg <robert@linux.intel.com>
Date:   Fri Jun 4 16:42:30 2010 +0100

    atlas: fix some journal flushing issues
    
    1) Always flush when migrating textures out of an atlas because although
    it's true that the original texture data will remain valid in the
    original texture we can't assume that journal entries have resolved the
    GL texture that will be used. This is only true if a layer0_override has
    been used.
    
    2) Don't flush at the point of creating a new atlas simply flush
    immediately before reorganizing an atlas. This means we are now assuming
    that we will never see recursion due to atlas textures being modified
    during a journal flush. This means it's the responsibility of the
    primitives code to _ensure_mipmaps for example not the responsibility of
    _cogl_material_flush_gl_state.

 clutter/cogl/cogl/cogl-atlas-texture.c |   39 ++++++++++++++------------------
 1 file changed, 17 insertions(+), 22 deletions(-)

commit d407bb520fe886742ace030d12a9d647b640069b
Author: Robert Bragg <robert@linux.intel.com>
Date:   Fri Jun 4 17:06:32 2010 +0100

    primitives: make sure to update texture storage before drawing
    
    We want to make sure that the material state flushing code will never
    result in changes to the texture storage for that material. So for
    example mipmaps need to be ensured by the primitives code.
    
    Changes to the texture storage will invalidate the texture coordinates
    in the journal and we want to avoid a recursion of journal flushing.

 clutter/cogl/cogl/cogl-material.c      |    2 --
 clutter/cogl/cogl/cogl-primitives.c    |   58 +++++++++++++++++++++++++++++---
 clutter/cogl/cogl/cogl-vertex-buffer.c |    7 ++++
 3 files changed, 60 insertions(+), 7 deletions(-)

commit 4f0a4b85213d1cbb0d3f6a4707449f788af94c47
Author: Robert Bragg <robert@linux.intel.com>
Date:   Mon Apr 26 16:30:25 2010 +0100

    test-cogl-tex-foreign: save and restore GL state correctly
    
    This test breaks out into raw OpenGL to create a foreign texture so it
    needs to be careful not to trample on any state that may be cached by
    Cogl internally.

 tests/interactive/test-cogl-tex-foreign.c |   16 +++++++++++++++-
 1 file changed, 15 insertions(+), 1 deletion(-)

commit 3907825d059407362023f7409a7c0e8992244ac3
Author: Robert Bragg <robert@linux.intel.com>
Date:   Mon Apr 26 16:27:59 2010 +0100

    test-cogl-texture-rectangle: save restore GL state correctly
    
    This test breaks out into raw OpenGL to create a RECTANGLE texture so it
    needs to be careful not to trample on any state that may be cached by
    Cogl internally.

 tests/conform/test-cogl-texture-rectangle.c |   23 +++++++++++++++++++++++
 1 file changed, 23 insertions(+)

commit 2f8d4fc180d2162d610fd8fffb8f66b18b0e8faf
Author: Robert Bragg <robert@linux.intel.com>
Date:   Mon Apr 26 09:55:50 2010 +0100

    matrix: add cogl_matrix_equal API
    
    This adds a way to compare two CoglMatrix structures to see if they
    represent the same transformations. memcmp can't be used because a
    CoglMatrix contains private flags and padding.

 clutter/cogl/cogl/cogl-matrix.c |   45 +++++++++++++++++++++++++++++++++++++++
 clutter/cogl/cogl/cogl-matrix.h |   15 +++++++++++++
 2 files changed, 60 insertions(+)

commit 9815d75ebd38fdcb56bb618c46ef8822397b420d
Author: Damien Lespiau <damien.lespiau@intel.com>
Date:   Wed Nov 18 00:26:09 2009 +0000

    cogl-material: Use fragment programs instead of texture env combiners
    
                          THIS IS A WORK IN PROGRESS
    
    Mesa is building a big shader when using ARB_texture_env_combine. The
    idea is to bypass that computation, do it ourselves and cache the
    compiled program in a CoglMaterial.
    
    For now that feature can be enabled by setting the COGL_PIPELINE
    environment variable to "arbfp". COGL_SHOW_FP_SOURCE can be set to a non
    empty string to dump the fragment program source too.
    
    TODO:
      * fog (really easy, using OPTION)
      * support tex env combiner operands, DOT3, ADD_SIGNED, INTERPOLATE
        combine modes (need refactoring the generation of temporary
        variables) (not too hard)
      * alpha testing for GLES 2.0?

 clutter/cogl/cogl/cogl-material-private.h |   11 +
 clutter/cogl/cogl/cogl-material.c         |  354 ++++++++++++++++++++++++++++-
 2 files changed, 363 insertions(+), 2 deletions(-)

commit df44c2e9e499eff0e29148d4e46328621d5fde6a
Author: Damien Lespiau <damien.lespiau@intel.com>
Date:   Sat Nov 14 14:59:59 2009 +0000

    cogl: Introduce private feature flags and check for ARB_fp
    
    The Cogl context has now a feature_flags_private enum that will allow us
    to query and use OpenGL features without exposing them in the public
    API.
    
    The ARB_fragment_program extension is the first user of those flags.
    Looking for this extension only happens in the gl driver as the gles
    drivers will not expose them.
    
    One can use _cogl_features_available_private() to check for the
    availability of such private features.
    
    While at it, reindent cogl-internal.h as described in CODING_STYLE.

 clutter/cogl/cogl/cogl-context.c                   |    1 +
 clutter/cogl/cogl/cogl-context.h                   |    5 ++-
 clutter/cogl/cogl/cogl-feature-private.h           |    3 ++
 clutter/cogl/cogl/cogl-internal.h                  |    8 ++++
 clutter/cogl/cogl/cogl.c                           |   11 +++++
 clutter/cogl/cogl/driver/gl/cogl-context-driver.c  |    2 +-
 clutter/cogl/cogl/driver/gl/cogl-context-driver.h  |    2 +-
 .../cogl/cogl/driver/gl/cogl-feature-functions.h   |   42 +++++++++++++++++---
 clutter/cogl/cogl/driver/gl/cogl.c                 |   25 +++++++-----
 .../cogl/cogl/driver/gles/cogl-context-driver.c    |    2 +-
 .../cogl/cogl/driver/gles/cogl-context-driver.h    |    2 +-
 .../cogl/cogl/driver/gles/cogl-feature-functions.h |    6 ++-
 clutter/cogl/cogl/driver/gles/cogl.c               |    8 ++--
 13 files changed, 91 insertions(+), 26 deletions(-)

commit 037f7a29d160a60224799dccaf082b523f3f2634
Author: Neil Roberts <neil@linux.intel.com>
Date:   Wed Jun 9 12:18:53 2010 +0100

    test-cogl-texture-rectangle: Fix the size allocated for reading data
    
    The test was only allocating enough space for 256 rows of pixels but
    it was then reading 384 so it would randomly fail.

 tests/conform/test-cogl-texture-rectangle.c |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit 91a359c44e66eaeea8747748e949b6416a694d0d
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Wed Jun 9 11:53:58 2010 +0100

    Always have a valid font map
    
    Every time we request a CoglPangoFontMap, either internally or
    externally, we should have one available.
    
    Reviewed-by: Neil Roberts <neil@linux.intel.com>

 clutter/clutter-main.c |   77 ++++++++++++++++++++++++++++--------------------
 1 file changed, 45 insertions(+), 32 deletions(-)

commit 5929468599ce7a05b8e5cda6b500ce338465344e
Author: Johan Bilien <jobi@via.ecp.fr>
Date:   Tue Jun 8 15:22:29 2010 -0400

    Create the pango context in clutter_set_font_flags
    
    if it wasn't already. Allows honoring CLUTTER_FONT_MIPMAPPING.
    
    http://bugzilla.openedhand.com/show_bug.cgi?id=2161
    
    Signed-off-by: Emmanuele Bassi <ebassi@linux.intel.com>

 clutter/clutter-main.c |   10 ++++++----
 1 file changed, 6 insertions(+), 4 deletions(-)

commit 30296a3307b68ce64a2111a07abc9944547b8cdb
Author: Robert Bragg <robert@linux.intel.com>
Date:   Thu Jun 3 20:03:20 2010 +0100

    backend-glx: Avoid vblank waits/glFinish calls when throttling blits
    
    If we have the GLX_SGI_video_sync extension then it's possible to always
    keep track for the video sync counter each time we call glXSwapBuffers
    or do a sub stage blit. This then allows us to avoid waiting before
    issuing a blit if we can see that the counter has already progressed.
    
    Also since we expect that glXCopySubBuffer is synchronized to the vblank
    we don't need to use glFinish () in conjunction with the vblank wait
    since the vblank wait's only purpose is to add a delay.

 clutter/glx/clutter-backend-glx.c |    2 +
 clutter/glx/clutter-backend-glx.h |    2 +
 clutter/glx/clutter-stage-glx.c   |   97 +++++++++++++++++++++++++++----------
 3 files changed, 75 insertions(+), 26 deletions(-)

commit 1b31ac465dc63b2a2639c63267d2a351dd6ea8ea
Author: Robert Bragg <robert@linux.intel.com>
Date:   Thu Jun 3 23:12:08 2010 +0100

    backend-glx: only check for GLX_SGI_video_sync for direct contexts
    
    The GLX_SGI_video_sync spec explicitly says that it's only supported for
    direct contexts so we don't setup up the function pointers if
    glXIsDirect () returns GL_FALSE.

 clutter/glx/clutter-backend-glx.c |    6 +++++-
 1 file changed, 5 insertions(+), 1 deletion(-)

commit f37de23dec316e1d4ed616c890339bfd3b4cbfa4
Author: Robert Bragg <robert@linux.intel.com>
Date:   Thu Jun 3 20:03:20 2010 +0100

    backend-glx: Make sure to throttle sub region blits
    
    Neither glXCopySubBuffer or glBlitFramebuffer are integrated with the
    swap interval of a framebuffer so that means when we do partial stage
    updates (as Mutter does in response to window damage) then the blits
    aren't throttled which means applications that throw lots of damage
    events at the compositor can effectively cause Clutter to run flat out
    taking up all the system resources issuing more blits than can even be
    seen.
    
    This patch now makes sure we use the GLX_SGI_video_sync or a
    DRM_VBLANK_RELATIVE ioctl to throttle blits to the vblank frequency as
    we do when using glXSwapBuffers.

 clutter/glx/clutter-backend-glx.c |   20 +++++++----
 clutter/glx/clutter-stage-glx.c   |   69 +++++++++++++++++--------------------
 2 files changed, 46 insertions(+), 43 deletions(-)

commit 630a2c5edcd572ea77d0a52026115fc01e5ec14a
Author: Adel Gadllah <adel.gadllah@gmail.com>
Date:   Sat Jun 5 12:51:32 2010 +0200

    backend-glx: Provide copy_sub_buffer fallback
    
    Currently glXCopySubBufferMESA is used for sub stage redraws, but in case
    a driver does not support GLX_MESA_copy_sub_buffer we fall back to redrawing
    the complete stage which isn't really optimal.
    
    So instead to directly fallback to complete redraws try using GL_EXT_framebuffer_blit
    to do the BACK to FRONT buffer copies.
    
    http://bugzilla.openedhand.com/show_bug.cgi?id=2128

 clutter/glx/clutter-backend-glx.c |   35 +++++++++++++++++++++++++++++++++++
 clutter/glx/clutter-backend-glx.h |   17 +++++++++++++++++
 clutter/glx/clutter-stage-glx.c   |   30 ++++++++++++++----------------
 3 files changed, 66 insertions(+), 16 deletions(-)

commit ac3e0150edd8da7dceb2933309fc5e4f15f1e38a
Author: Neil Roberts <neil@linux.intel.com>
Date:   Tue Jun 8 17:26:26 2010 +0100

    cogl-gles2-wrapper: Fix some cases using the wrong texture unit
    
    At two places in cogl_wrap_prepare_for_draw it was trying to loop over
    the texture units to flush some state. However it was retrieving the
    texture unit pointer using w->active_texture_unit instead of the loop
    index so it would end up with the wrong state.
    
    Also in glEnableClientState it was using the active unit instead of
    the client active unit.

 clutter/cogl/cogl/driver/gles/cogl-gles2-wrapper.c |    7 +++----
 1 file changed, 3 insertions(+), 4 deletions(-)

commit 00675f42aab932b2a2cb7d128d282625f681e449
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Tue Jun 8 11:19:28 2010 +0100

    texture-async: Fix path fallback code
    
    And error out in case of load failure.

 tests/interactive/test-texture-async.c |   14 +++++++++++---
 1 file changed, 11 insertions(+), 3 deletions(-)

commit 759ea5ce45c84d7d3e9f1dca2a7a854adcb0384a
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Mon Jun 7 23:26:03 2010 +0100

    Post-release bump to 1.3.5

 configure.ac |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit bd3b8c2349a47e537a48cc3e6d7bc4c54584af5f
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Mon Jun 7 23:19:02 2010 +0100

    Release 1.3.4

 NEWS         |   38 ++++++++++++++++++++++++++++++++++++++
 configure.ac |    4 ++--
 2 files changed, 40 insertions(+), 2 deletions(-)

commit 4c22f122e19226ee6338c49fca0da1de50894582
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Mon Jun 7 22:45:34 2010 +0100

    script: Support layout manager properties
    
    Layout properties work similarly to child properties, with the added
    headache that they require the 3-tuple:
    
      ( layout manager, container, actor )
    
    to be valid in order to be inspected, parsed and applied. This means
    using the newly added back-pointer from the container to the layout
    manager and then rejigging a bit how the ScriptParser handles the
    unresolved properties.
    
    Similarly to the child properties, which use the "child::" prefix, the
    layout manager properties use the "layout::" prefix and are defined with
    the child of a container holding a layout manager.

 .gitignore                                  |    1 +
 clutter/clutter-script-parser.c             |  160 ++++++++++++++++++++++++++-
 clutter/clutter-script-private.h            |    1 +
 tests/conform/test-conform-main.c           |    1 +
 tests/conform/test-script-parser.c          |   51 +++++++++
 tests/data/Makefile.am                      |    1 +
 tests/data/test-script-layout-property.json |   16 +++
 7 files changed, 225 insertions(+), 6 deletions(-)

commit ab76584965ce342017052183e3d70553065ff094
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Mon Jun 7 21:34:36 2010 +0100

    layout-manager: Implement set_container()
    
    Store a back pointer of the layout manager inside the container using
    the GObject instance data. This introduces a change in the implementation
    of ClutterLayoutManager, though it's still binary compatible.

 README                           |    6 ++++++
 clutter/clutter-bin-layout.c     |    4 ++++
 clutter/clutter-box-layout.c     |    4 ++++
 clutter/clutter-fixed-layout.c   |    5 +++++
 clutter/clutter-flow-layout.c    |    4 ++++
 clutter/clutter-layout-manager.c |   15 +++++++++++++++
 clutter/clutter-private.h        |    3 +++
 7 files changed, 41 insertions(+)

commit 8583986e16f46c707f8416ac740eaede7f200549
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Mon Jun 7 15:45:24 2010 +0100

    blur-effect: Fix loop unrolling
    
    The box blur shader was not sampling all the points for producing the
    desired effect.

 clutter/clutter-blur-effect.c   |    7 ++++---
 tests/interactive/test-rotate.c |   13 ++++++++++---
 2 files changed, 14 insertions(+), 6 deletions(-)

commit eb3017df7e80d4a202355274f4d5077281cdc373
Author: Damien Lespiau <damien.lespiau@intel.com>
Date:   Sat Jun 5 21:05:23 2010 +0100

    doc: Some fixes for the Cogl documentation
    
     • 3 general fixes (typos, copy/paste),
     • ignore cogl-object-private.h,
     • cogl_fixed_atani() was in reality cogl_fixed_atan(), fixed in commit
       43564f05.
     • Fix the cogl-vector section: sections must have a </SECTION> tag at
       the end. Also the cogl-vector section was added in the middle of the
       cogl-buffer one. Let's shiffle it out and add that </SECTION> tag.

 clutter/cogl/cogl/cogl-types.h       |    6 +++---
 doc/reference/cogl/Makefile.am       |    1 +
 doc/reference/cogl/cogl-sections.txt |   13 +++++++------
 3 files changed, 11 insertions(+), 9 deletions(-)

commit 9a6a2a96dd17d3376ab72fc518300be9caf27e6b
Author: Damien Lespiau <damien.lespiau@intel.com>
Date:   Mon May 31 21:04:53 2010 +0100

    animator,state: Mark variadic functions that ends with NULL
    
    GCC can catch errors when it knows that a variadic function must be
    ended with NULL. Let's use the glib macro encapsulating the GCC
    attribute to clutter_animator_set() and clutter_state_set().

 clutter/clutter-animator.h |    2 +-
 clutter/clutter-state.h    |    2 +-
 2 files changed, 2 insertions(+), 2 deletions(-)

commit f0ded315e43758f1fc1a16a132c63c873d5b5710
Author: Colin Walters <walters@verbum.org>
Date:   Thu Jun 3 23:34:09 2010 -0400

    g_source_set_name on custom sources (if available)
    
    Call g_source_set_name, if the versio of GLib is new enough.
    This aids debugging, using e.g. SystemTap.  See
    https://bugzilla.gnome.org/show_bug.cgi?id=620511
    for more information
    
    http://bugzilla.openedhand.com/show_bug.cgi?id=2151
    
    Signed-off-by: Emmanuele Bassi <ebassi@linux.intel.com>

 clutter/clutter-frame-source.c  |    4 ++++
 clutter/clutter-master-clock.c  |    3 +++
 clutter/clutter-timeout-pool.c  |    4 ++++
 clutter/x11/clutter-event-x11.c |    4 ++++
 4 files changed, 15 insertions(+)

commit e9c4dfff9064406e1d8d7e8685850a6068ebf7fe
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Mon Jun 7 10:52:32 2010 +0100

    Add test-cogl-object to the ignore file

 .gitignore |    1 +
 1 file changed, 1 insertion(+)

commit cef4c8de769fd76dbcfb9f219b6ee1f2154b13e5
Author: Damien Lespiau <damien.lespiau@intel.com>
Date:   Fri Jun 4 17:17:45 2010 +0100

    build: Don't distribute clutter-version.h and cogl-defines.h
    
    As with a351ff2af earlier, distributing headers generated at configure
    time conflicts with out of tree builds as the distributed headers will
    be included first instead of including the generated ones.

 clutter/Makefile.am           |    5 +++--
 clutter/cogl/cogl/Makefile.am |    2 +-
 2 files changed, 4 insertions(+), 3 deletions(-)

commit f6078eca83e37a8a7c14c5a96b5d716344301a2f
Author: Robert Bragg <robert@linux.intel.com>
Date:   Tue Jun 1 19:27:07 2010 +0100

    cogl-object-private.h: white space cleanup
    
    simply replaces tabs with spaces

 clutter/cogl/cogl/cogl-object-private.h |  101 ++++++++++++++++---------------
 1 file changed, 51 insertions(+), 50 deletions(-)

commit 457faaffb7092d56dcee37383a778fae431b6dac
Author: Robert Bragg <robert@linux.intel.com>
Date:   Tue Jun 1 17:27:59 2010 +0100

    conform: Adds a test-cogl-object conformance test
    
    This tests the new cogl_object_get/set_user_data API

 tests/conform/Makefile.am         |    1 +
 tests/conform/test-cogl-object.c  |   86 +++++++++++++++++++++++++++++++++++++
 tests/conform/test-conform-main.c |    1 +
 3 files changed, 88 insertions(+)

commit 2ce0cf3861edf89240ec9a393dee8998f7b6b100
Author: Robert Bragg <robert@linux.intel.com>
Date:   Tue Jun 1 18:06:47 2010 +0100

    CoglObject: Adds a COGL_OBJECT macro for casting
    
    This adds a convenience COGL_OBJECT macro for casting CoglObject
    subclasses to (CoglObject *) pointers.

 clutter/cogl/cogl/cogl-object.h |    2 ++
 1 file changed, 2 insertions(+)

commit e7c800dacc23c5b264a2c1e22d6ac44298670b07
Author: Robert Bragg <robert@linux.intel.com>
Date:   Thu May 27 22:24:56 2010 +0100

    CoglObject: Adds cogl_object_{get,set}_user_data
    
    This provides a mechanism for associating private data with any
    CoglObject. We expect Clutter will use this to associate weak materials
    with normal materials.

 clutter/cogl/cogl/Makefile.am           |    3 +
 clutter/cogl/cogl/cogl-handle.h         |    2 +-
 clutter/cogl/cogl/cogl-object-private.h |  205 ++++++++++++++++++++++++++
 clutter/cogl/cogl/cogl-object.c         |  246 +++++++++++++++++++++++++++++++
 clutter/cogl/cogl/cogl-object.h         |  245 ++++++++++++------------------
 clutter/cogl/cogl/cogl-util.c           |   61 --------
 clutter/cogl/cogl/cogl.h                |    1 +
 doc/reference/cogl/cogl-sections.txt    |    6 +
 8 files changed, 554 insertions(+), 215 deletions(-)

commit d131602a6dbd43ccf527346a7703a3639ad36b79
Author: Robert Bragg <robert@linux.intel.com>
Date:   Tue Jun 1 17:53:42 2010 +0100

    cogl-path: Adds missing cogl_is_path prototype
    
    This adds a missing cogl_is_path prototype to the public cogl-path.h
    header.

 clutter/cogl/cogl/cogl-path.h        |   12 ++++++++++++
 doc/reference/cogl/cogl-sections.txt |    1 +
 2 files changed, 13 insertions(+)

commit eca26340504161b660e8a7848a8c852552cd8eac
Author: Robert Bragg <robert@linux.intel.com>
Date:   Tue Jun 1 17:34:59 2010 +0100

    cogl-path: Renames cogl_path_get/set cogl_get/set_path
    
    These aren't path methods so aren't consistent with the
    cogl_object_method naming style we are aiming for.

 clutter/cogl/cogl/cogl-clip-state.c  |    2 +-
 clutter/cogl/cogl/cogl-path.c        |   47 +++++++++++++++++-----------------
 clutter/cogl/cogl/cogl-path.h        |    8 +++---
 doc/reference/cogl/cogl-sections.txt |    4 +--
 tests/conform/test-cogl-path.c       |   16 ++++++------
 5 files changed, 39 insertions(+), 38 deletions(-)

commit 781a413362013bb8a49d668e44ff9a8c4dc31d30
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu Jun 3 15:20:17 2010 +0100

    test-drag: Add desaturation effect
    
    Use a desaturation effect on the drag handle.

 tests/interactive/test-drag.c |   11 ++++++++---
 1 file changed, 8 insertions(+), 3 deletions(-)

commit 582f2ced5fe3eca78f6c9e04543bc622b5858196
Author: Damien Lespiau <damien.lespiau@intel.com>
Date:   Thu Jun 3 13:48:53 2010 +0100

    build: Fix out of tree gtk-doc generation
    
    Various headers are build in builddirs (clutter-marshal.h, mkenums
    headers and cogl-define.h) so we need to add the corresponding include
    paths for gtk-doc to build its scanner.

 doc/reference/clutter/Makefile.am |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit a351ff2afc1ac44f71fabc1219e928d2214f7bf8
Author: Damien Lespiau <damien.lespiau@intel.com>
Date:   Thu Jun 3 11:59:48 2010 +0100

    build: Do not distribute clutter-json.h
    
    clutter-jon.h is generated at configure time, we should not distribute it.
    
    This caused a build issue when compiling from a tarballs and out of tree
    builds as we ended up with two clutter-json.h one in $(top_srcdir)/json
    and the other in $(top_builddir)/json and picked up the wrong one
    ($(top_srcdir)/json is included first in the include search path).

 clutter/Makefile.am |    4 +++-
 1 file changed, 3 insertions(+), 1 deletion(-)

commit 23084b9768ee10502ef01f0c34ae7f2c64888c2b
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu Jun 3 14:34:41 2010 +0100

    docs: Effects fixes for the API reference

 clutter/clutter-blur-effect.c              |    2 +-
 clutter/clutter-colorize-effect.c          |    4 ++--
 clutter/clutter-desaturate-effect.c        |    2 +-
 clutter/clutter-effect.c                   |    2 +-
 clutter/clutter-effect.h                   |    1 -
 clutter/clutter-shader-effect.c            |    4 ++--
 clutter/clutter-shader-effect.h            |    2 +-
 doc/reference/clutter/clutter-docs.xml.in  |   21 +++++++++------------
 doc/reference/clutter/clutter-sections.txt |   12 ++++++++----
 9 files changed, 25 insertions(+), 25 deletions(-)

commit aef2f805a67cde24746a5d4e90299f877c748e86
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu Jun 3 14:08:59 2010 +0100

    effects: Fix stacking of offscreen-based effects
    
    Stacking multiple effects sub-classing ClutterOffscreenEffect requires
    a small fix in the code that computes the screen coordinates of the
    actor to position the FBO correctly with regards to the stage.

 clutter/clutter-offscreen-effect.c |   12 ++++++++++++
 tests/interactive/test-rotate.c    |    1 +
 2 files changed, 13 insertions(+)

commit 8ef4d9fe21b8f1ef4d9bad3d8317239ab59e2714
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Tue Jun 1 14:45:55 2010 +0100

    actor: Add "effects" to the animatable metas
    
    Since ClutterEffect is an ActorMeta it should be possible to animate the
    properties of named effects using the @effects syntax, just like it
    happens for actions and constraints.

 clutter/clutter-actor.c         |    6 +++++-
 tests/interactive/test-rotate.c |   13 ++++++++-----
 2 files changed, 13 insertions(+), 6 deletions(-)

commit 0e9a1dee6dde18e7fe6d92960987baa933826937
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Mon May 17 12:55:46 2010 +0100

    shader-effect: Simplify setting the shader source
    
    Sub-classes of ShaderEffect currently have to get the handle for the
    Cogl shader and call cogl_shader_source(); this makes it awkward to
    implement a ShaderEffect, and it exposes handles and Cogl API that we
    might want to change in the future.
    
    We should provide a ClutterShaderEffect method that allows to (safely)
    set the shader source at the right time for sub-classes to use.

 clutter/clutter-blur-effect.c       |   13 +---
 clutter/clutter-colorize-effect.c   |   15 ++---
 clutter/clutter-desaturate-effect.c |   15 +----
 clutter/clutter-shader-effect.c     |  116 +++++++++++++++++++----------------
 clutter/clutter-shader-effect.h     |   25 ++++----
 5 files changed, 82 insertions(+), 102 deletions(-)

commit f2caafa127a42f5b10454407d52eb6b8bd64876d
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Wed Apr 21 11:30:06 2010 +0100

    docs: Add Effects API to the reference

 doc/reference/clutter/clutter-docs.xml.in  |   12 ++++
 doc/reference/clutter/clutter-sections.txt |  105 ++++++++++++++++++++++++++++
 doc/reference/clutter/clutter.types        |    6 ++
 3 files changed, 123 insertions(+)

commit a3e8e0025a9aed83091d28a8f4fe63cfb81bfd07
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Fri Apr 16 12:33:20 2010 +0100

    effect: Rework the OffscreenEffect painting
    
    The OffscreenEffect should set up the off screen draw buffer so that it
    has the same projection and modelview as if it where on screen; we
    achieve that by setting up the viewport to be the same size of the stage
    but with an initial offset given by the left-most vertex of the actor.
    
    When we paint the texture attached to the FBO we then set up the
    modelview matrix of the on screen draw buffer so that it's the same as
    the stage one: this way, the texture will be painted in screen
    coordinates and it will occupy the same area as the actor would have
    had.

 clutter/clutter-offscreen-effect.c |  304 ++++++++++++++++++++++++++----------
 clutter/clutter-offscreen-effect.h |   14 +-
 2 files changed, 230 insertions(+), 88 deletions(-)

commit b4f8ba0f737212b9a7b734ab7fcd015f7def9161
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Wed Apr 14 00:40:24 2010 +0100

    effect: Add ColorizeEffect
    
    A copy of DesaturateEffect that converts to grayscale and applies a
    user-defined tint to the render target.

 clutter/Makefile.am               |    2 +
 clutter/clutter-colorize-effect.c |  290 +++++++++++++++++++++++++++++++++++++
 clutter/clutter-colorize-effect.h |   62 ++++++++
 clutter/clutter.h                 |    1 +
 4 files changed, 355 insertions(+)

commit 73a773d37ab3c2ba6772acf6347a82d75a601901
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Fri Apr 9 16:14:21 2010 +0100

    effect: Add DesaturateEffect
    
    A simple shader-based effect that desaturates an actor and its contents
    based on a controllable factor.

 clutter/Makefile.am                 |    2 +
 clutter/clutter-desaturate-effect.c |  309 +++++++++++++++++++++++++++++++++++
 clutter/clutter-desaturate-effect.h |   60 +++++++
 clutter/clutter.h                   |    1 +
 tests/interactive/test-rotate.c     |    2 +-
 5 files changed, 373 insertions(+), 1 deletion(-)

commit 5a5b21446c33d131885832c0b65a2227ad5c6955
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu Apr 8 18:46:54 2010 +0100

    effect: Add BlurEffect
    
    A simple, GLSL shader-based blur effect.
    
    The blur shader is taken straight from the test-shader.c interactive
    test case. It's a fairly clunky, inefficient and visually incorrect
    implementation of a box blur, but it's all we have right now until I
    figure out a way to do multi-pass shading with the current API.

 clutter/Makefile.am           |    2 +
 clutter/clutter-blur-effect.c |  244 +++++++++++++++++++++++++++++++++++++++++
 clutter/clutter-blur-effect.h |   56 ++++++++++
 clutter/clutter.h             |    1 +
 4 files changed, 303 insertions(+)

commit c260da79e318d64927ee6fad0cf6bd2e6971d097
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Tue Apr 13 16:40:31 2010 +0100

    effect: Add ShaderEffect
    
    The ShaderEffect class is an abstract base type for shader-based
    effects. GLSL-based effects should be implemented by sub-classing
    ShaderEffect and overriding ActorMeta::set_actor() to set the source
    code of the shader, and Effect::pre_paint() to update the uniform
    values, if any.
    
    The ShaderEffect has a generic API for sub-classes to set the values
    of the uniforms defined by their shaders, and it uses the shader
    types we defined for ClutterShader, to avoid re-inventing the wheel
    every time.

 clutter/Makefile.am             |    2 +
 clutter/clutter-shader-effect.c |  759 +++++++++++++++++++++++++++++++++++++++
 clutter/clutter-shader-effect.h |  101 ++++++
 clutter/clutter.h               |    1 +
 4 files changed, 863 insertions(+)

commit c3ab32ae6887a222472f4fc9025437ab91d0bbce
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Mon May 17 11:39:27 2010 +0100

    effect: Add OffscreenEffect
    
    The OffscreenEffect class is meant to be used to implement Effect
    sub-classes that create an offscreen framebuffer and redirect the
    actor's paint sequence there. The OffscreenEffect is useful for
    effects using fragment shaders.
    
    Any shader-based effect being applied to an actor through an offscreen
    buffer should be used before painting the resulting target material and
    not for every actor. This means that doing:
    
           pre_paint: cogl_program_use(program)
                      set up offscreen buffer
               paint: [ actors ] → offscreen buffer → target material
          post_paint: paint target material
                      cogl_program_use(null)
    
    Is not correct. Unfortunately, we cannot really do:
    
          post_paint: cogl_program_use(program)
                      paint target material
                      cogl_program_use(null)
    
    Because the OffscreenEffect::post_paint() implementation also pops the
    offscreen buffer and re-instates the previous framebuffer:
    
          post_paint: cogl_program_use(program)
                      change frame buffer ← ouch!
                      paint target material
                      cogl_program_use(null)
    
    One way to fix it is to allow using the shader right before painting
    the target material - which means adding a new virtual inside the
    OffscreenEffect class vtable in additions to the ones defined by the
    parent Effect class.
    
    The newly-added paint_target() virtual allows the correct sequence of
    actions by adding an entry point for sub-classes to wrap the "paint
    target material" operation with custom code, in order to implement the
    case above correctly as:
    
          post_paint: change frame buffer
                      cogl_program_use(program)
                      paint target material
                      cogl_program_use(null)
    
    The added upside is that sub-classes of OffscreenEffect involving
    shaders really just need to override the prepare() and paint_target()
    virtuals, since the pre_paint() and post_paint() do all that's needed.

 clutter/Makefile.am                |    2 +
 clutter/clutter-offscreen-effect.c |  336 ++++++++++++++++++++++++++++++++++++
 clutter/clutter-offscreen-effect.h |   96 +++++++++++
 clutter/clutter.h                  |    1 +
 4 files changed, 435 insertions(+)

commit a86f1b45bbdd1d00b1257ef80c5c60154871bfda
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu Apr 8 10:55:15 2010 +0100

    Add the ClutterEffect abstract class
    
    ClutterEffect is an abstract class that should be used to apply effects
    on generic actors.
    
    The ClutterEffect class just defines what an effect should implement; it
    could be defined as an interface, but we might want to add some default
    behavior dependent on the internal state at a later point.
    
    The effect API applies to any actor, so we need to provide a way to
    assign an effect to an actor, and let ClutterActor call the Effect
    methods during the paint sequence.
    
    Once an effect is attached to an actor we will perform the paint in this
    order:
    
      • Effect::pre_paint()
      • Actor::paint signal emission
      • Effect::post_paint()
    
    Since an effect might collide with the Shader class, we either allow a
    shader or an effect for the time being.

 clutter/Makefile.am             |    6 +-
 clutter/clutter-actor.c         |  322 ++++++++++++++++++++++++++++++++++++---
 clutter/clutter-actor.h         |    5 +-
 clutter/clutter-effect.c        |  232 ++++++++++++++++++++++++++++
 clutter/clutter-effect.h        |  110 +++++++++++++
 clutter/clutter-private.h       |    4 +
 clutter/clutter.h               |    1 +
 tests/interactive/test-rotate.c |    4 +-
 8 files changed, 654 insertions(+), 30 deletions(-)

commit 5ffbcbe9ee7d0b74bc5048fafd2ea15ee0486a58
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Mon Apr 19 12:32:15 2010 +0100

    actor: Reset the modelview matrix
    
    When getting the relative modelview matrix we need to reset it to the
    stage's initial state or, at least, initialize it to the identity
    matrix, instead of assuming we have an empty stack.

 clutter/clutter-actor.c |   47 +++++++++++++++++++++++++++++++++++++++++++++--
 1 file changed, 45 insertions(+), 2 deletions(-)

commit 6eba218807b0401c0e12e045ea08cdcfe057350d
Author: Damien Lespiau <damien.lespiau@intel.com>
Date:   Thu Jun 3 11:33:54 2010 +0100

    build: Distribute cogl-object.h
    
    cogl-object.h is a new public header. Include it in the right list of
    source files to have it distributed.

 clutter/cogl/cogl/Makefile.am |    1 +
 1 file changed, 1 insertion(+)

commit 91220c4b46fe75b21b4ebd99a63fd796f6fc56b0
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Tue Jun 1 14:14:41 2010 +0100

    docs: Miscellaneous fixes to silence gtk-doc

 clutter/clutter-texture.c                  |    3 ++-
 clutter/cogl/cogl/cogl.h                   |   29 ++++++++++++++--------------
 doc/reference/clutter/clutter-sections.txt |    6 ++++++
 3 files changed, 22 insertions(+), 16 deletions(-)

commit 311db34d08a52408f1efec74c9de43f9d153219f
Author: Robert Bragg <robert@linux.intel.com>
Date:   Fri May 28 01:01:28 2010 +0100

    clip_stack: Remove use of CoglHandle in the CoglClipStack API
    
    This replaces the use of CoglHandle with strongly type CoglClipStack *
    pointers instead. The only function not converted for now is
    cogl_is_clip_stack which will be done in a later commit.

 clutter/cogl/cogl/cogl-clip-stack.c |   64 +++++++++++++++--------------------
 clutter/cogl/cogl/cogl-clip-stack.h |   26 +++++++-------
 2 files changed, 41 insertions(+), 49 deletions(-)

commit 29da1d0d3e0d1f3c9a9a965b2b9290faa6d0c3db
Author: Robert Bragg <robert@linux.intel.com>
Date:   Fri May 28 00:51:40 2010 +0100

    bitmap: Remove use of CoglHandle in the CoglBitmap API
    
    This replaces the use of CoglHandle with strongly type CoglBitmap *
    pointers instead. The only function not converted for now is
    cogl_is_bitmap which will be done in a later commit.

 clutter/cogl/cogl/cogl-bitmap-private.h |    4 ++--
 clutter/cogl/cogl/cogl-bitmap.c         |    6 +++---
 clutter/cogl/cogl/cogl-bitmap.h         |    8 +++++---
 3 files changed, 10 insertions(+), 8 deletions(-)

commit f3f268b0cdc9e8113b0dee9eb28eca309823f544
Author: Robert Bragg <robert@linux.intel.com>
Date:   Fri May 28 00:35:47 2010 +0100

    path: Remove use of CoglHandle in the CoglPath API
    
    This replaces the use of CoglHandle with strongly type CoglPath *
    pointers instead. The only function not converted for now is
    cogl_is_path which will be done in a later commit.

 clutter/cogl/cogl/cogl-path-private.h |    5 ++--
 clutter/cogl/cogl/cogl-path.c         |   52 +++++++++++++++------------------
 clutter/cogl/cogl/cogl-path.h         |   41 ++++++++++++++------------
 clutter/cogl/cogl/cogl.c              |   10 +++----
 4 files changed, 53 insertions(+), 55 deletions(-)

commit 250d82cd3fdf4cfa2b8cc5ad93cc4577a1daa2e3
Author: Robert Bragg <robert@linux.intel.com>
Date:   Tue Jun 1 11:50:02 2010 +0100

    cogl: avoid ‘_cogl_xyz_handle_new’ defined but not used warnings
    
    This patch makes it so that only the backwards compatibility
    COGL_HANDLE_DEFINE macro defines a _cogl_xyz_handle_new function. The
    new COGL_OBJECT_DEFINE macro only defines a _cogl_xyz_object_new
    function.

 clutter/cogl/cogl/cogl-object.h |   18 ++++++++++--------
 1 file changed, 10 insertions(+), 8 deletions(-)

commit 43564f05a6cc76995ff540b6cb24badd4f1d1710
Author: Damien Lespiau <damien.lespiau@intel.com>
Date:   Thu May 27 13:30:07 2010 +0100

    analysis: Fix some CoglFixed API
    
    2 functions where not correctly defined/documented, use the actual
    symbol name instead.

 clutter/cogl/cogl/cogl-fixed.h |    6 +++---
 1 file changed, 3 insertions(+), 3 deletions(-)

commit 653a8a78744a6be0ccc69ec7413d6d55cc3940e8
Author: Damien Lespiau <damien.lespiau@intel.com>
Date:   Thu May 27 13:28:43 2010 +0100

    analysis: Use static functions when possible
    
    It's best to ensure the functions only used in one compilation unit are
    marked as static so GCC can inline them if it feels like it.

 clutter/clutter-bezier.c            |    2 +-
 clutter/cogl/cogl/cogl-clip-stack.c |    2 +-
 clutter/cogl/cogl/cogl-clip-state.c |    2 +-
 3 files changed, 3 insertions(+), 3 deletions(-)

commit 3161e92818366aedc106329675a7dd9ac2bffd10
Author: Damien Lespiau <damien.lespiau@intel.com>
Date:   Thu May 27 12:18:29 2010 +0100

    analysis: Make all function declarations be protoypes
    
    It's valid C to declare a function omitting it prototype, but it seems
    to be a good practise to always declare a function with its
    corresponding prototype.

 clutter/clutter-bezier.c                 |    2 +-
 clutter/cogl/cogl/cogl-context.c         |    4 ++--
 tests/interactive/test-cogl-primitives.c |   14 +++++++-------
 tests/interactive/test-project.c         |    4 ++--
 tests/micro-bench/test-text-perf.c       |    2 +-
 5 files changed, 13 insertions(+), 13 deletions(-)

commit 83b7801e496f13ad7ecd615ce8fcd09c1fef44d4
Author: Damien Lespiau <damien.lespiau@intel.com>
Date:   Thu May 27 09:23:26 2010 +0100

    analysis: Fix the "key-press-event" callback signature
    
    We were returning FALSE in a function declared as returning a gpointer.
    Turns out that the function should return a gboolea instead.

 tests/interactive/test-clip.c |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit ec59af290cfd6813ff4df37994067de5cea2f1c4
Author: Damien Lespiau <damien.lespiau@intel.com>
Date:   Thu May 27 09:07:11 2010 +0100

    analysis: None used in pointer context
    
    While this is totally fine (None is 0L and, in the pointer context, will
    be converted in the right internal NULL representation, which could be a
    value with some bits to 1), I believe it's clearer to use NULL instead
    of None when we talk about pointers.

 clutter/glx/clutter-backend-glx.c |   16 ++++++++--------
 clutter/x11/clutter-backend-x11.c |    2 +-
 tests/interactive/test-pixmap.c   |    2 +-
 3 files changed, 10 insertions(+), 10 deletions(-)

commit 52a78a7220650f4d8b1da75ff942cfede1248d20
Author: Damien Lespiau <damien.lespiau@intel.com>
Date:   Thu May 27 08:28:29 2010 +0100

    analysis: FALSE/0 used in pointer context
    
    While this is totally fine (0 in the pointer context will be converted
    in the right internal NULL representation, which could be a value with
    some bits to 1), I believe it's clearer to use NULL in the pointer
    context.
    
    It seems that, in most case, it's more an overlook than a deliberate
    choice to use FALSE/0 as NULL, eg. copying a _COGL_GET_CONTEXT (ctx, 0)
    or a g_return_val_if_fail (cond, 0) from a function returning a
    gboolean.

 clutter/clutter-actor.c                    |    2 +-
 clutter/clutter-backend.c                  |    4 ++--
 clutter/clutter-path.c                     |    2 +-
 clutter/clutter-script-parser.c            |    2 +-
 clutter/clutter-script.c                   |    4 ++--
 clutter/clutter-shader-types.c             |    6 +++---
 clutter/cogl/cogl/cogl-buffer.c            |    2 +-
 clutter/cogl/cogl/cogl-journal.c           |    2 +-
 clutter/cogl/cogl/cogl-path.c              |    4 ++--
 clutter/cogl/cogl/cogl-texture-2d-sliced.c |    2 +-
 clutter/cogl/cogl/cogl-vertex-buffer.c     |   14 +++++++-------
 clutter/cogl/cogl/driver/gl/cogl-program.c |    2 +-
 clutter/x11/clutter-x11-texture-pixmap.c   |    8 ++++----
 13 files changed, 27 insertions(+), 27 deletions(-)

commit 9d428278f7b073f4221113026a18aaf4a6e25420
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Sun May 30 15:24:18 2010 +0100

    Update git ignore file

 .gitignore |    1 +
 1 file changed, 1 insertion(+)

commit e2fc489f0849d0295297d5702b815d853ff35135
Author: Robert Bragg <robert@linux.intel.com>
Date:   Thu May 27 23:40:40 2010 +0100

    buffer: Remove use of CoglHandle in the CoglBuffer API
    
    This replaces the use of CoglHandle with strongly type CoglBuffer *
    pointers instead. The only function not converted for now is
    cogl_is_buffer which will be done in a later commit.

 clutter/cogl/cogl/cogl-buffer-private.h |    1 -
 clutter/cogl/cogl/cogl-buffer.c         |   62 +++++++++++++------------------
 clutter/cogl/cogl/cogl-buffer.h         |   58 +++++++++++++++--------------
 3 files changed, 55 insertions(+), 66 deletions(-)

commit a8c8cbee5139427f4daf222e2f3b98276d1507b5
Author: Robert Bragg <robert@linux.intel.com>
Date:   Thu May 27 23:31:40 2010 +0100

    Start eradicating the CoglHandle typedef
    
    CoglHandle is a common source of complaints and confusion because people
    expect a "handle" to be some form of integer type with some indirection
    to lookup the corresponding objects as opposed to a direct pointer.
    
    This patch starts by renaming CoglHandle to CoglObject * and creating
    corresponding cogl_object_ APIs to replace the cogl_handle ones.
    
    The next step though is to remove all use of CoglHandle in the Cogl APIs
    and replace with strongly typed pointer types such as CoglMaterial * or
    CoglTexture * etc also all occurrences of COGL_INVALID_HANDLE can just
    use NULL instead.
    
    After this we will consider switching to GTypeInstance internally so we
    can have inheritance for our types and hopefully improve how we handle
    bindings.
    
    Note all these changes will be done in a way that maintains the API and
    ABI.

 clutter/cogl/cogl/cogl-handle.h |  140 ++----------------------------
 clutter/cogl/cogl/cogl-object.h |  183 +++++++++++++++++++++++++++++++++++++++
 clutter/cogl/cogl/cogl-types.h  |   21 +++++
 clutter/cogl/cogl/cogl-util.c   |   43 ++++++---
 4 files changed, 244 insertions(+), 143 deletions(-)

commit a4fc5074faa3cda9d1c920ac94fe46e310a4ee2d
Author: Neil Roberts <neil@linux.intel.com>
Date:   Fri May 28 18:12:53 2010 +0100

    cogl-texture-2d: Regenerate the mipmaps when the texture is modified
    
    When the texture is modified by cogl_texture_set_region, it wasn't
    setting mipmaps_dirty so it would never update the mipmaps.

 clutter/cogl/cogl/cogl-texture-2d.c |    2 ++
 1 file changed, 2 insertions(+)

commit d0c743787d9f430e50fdda9df1c3ad4462e79cad
Author: Robert Bragg <robert@linux.intel.com>
Date:   Fri May 28 17:11:31 2010 +0100

    texture: don't use a static bool to gate warning
    
    in create_pick_material we were using a static boolean to gate when we
    show a warning, but that would mean if the problem recurs between
    different textures then the warning will only be shown once. We now have
    a private bitfield flag instead, just so we don't spew millions of
    warnings if the problem is recurring.

 clutter/clutter-texture.c |    9 ++++++---
 1 file changed, 6 insertions(+), 3 deletions(-)

commit 589c8d957934dfa7413395df9cdd153a379402d0
Author: Robert Bragg <robert@linux.intel.com>
Date:   Fri Sep 25 19:14:40 2009 +0100

    [texture] Support picking textures according to their alpha channel
    
    This adds a boolean "pick-with-alpha" property to ClutterTexture and when
    true, it will use the textures alpha channel to define the actors shape when
    picking.
    
    Users should be aware that it's a bit more expensive to pick textures like
    this (so probably best not to blindly enable it on *all* your textures)
    since it implies rasterizing the texture during picking whereas we would
    otherwise just send a solid filled quad to the GPU.  It will also interrupt
    the internal batching of geometry for pick renders which can otherwise often
    be done in a single draw call.

 clutter/clutter-texture.c            |  243 ++++++++++++++++++++++++++++++----
 clutter/clutter-texture.h            |    4 +
 tests/conform/Makefile.am            |    1 +
 tests/conform/test-clutter-texture.c |   89 +++++++++++++
 tests/conform/test-conform-main.c    |    1 +
 5 files changed, 312 insertions(+), 26 deletions(-)

commit 8ded6663fb7e0155acb72dedbea6d490856ee156
Author: Robert Bragg <robert@linux.intel.com>
Date:   Fri Sep 25 19:04:13 2009 +0100

    [material] fix _set_alpha_test_function: missing a glEnable(GL_ALPHA_TEST)
    
    Since the default alpha test function of GL_ALWAYS is equivalent to
    GL_ALPHA_TEST being disabled we don't need to worry about Enabling/Disabling
    it when flushing material state, instead it's enough to leave it always
    enabled.  We will assume that any driver worth its salt wont incur any
    additional cost for glEnable (GL_ALPHA_TEST) + GL_ALWAYS vs
    glDisable (GL_ALPHA_TEST).
    
    This patch simply calls glEnable (GL_ALPHA_TEST) in cogl_create_context

 clutter/cogl/cogl/cogl-context.c |    6 ++++++
 1 file changed, 6 insertions(+)

commit 3f64f57830b835d31c2cbce61eb854d9d055ccdd
Author: Robert Bragg <robert@linux.intel.com>
Date:   Wed Sep 23 19:04:03 2009 +0100

    [texture] remove redundant if (paint_opacity == 0) bailout
    
    clutter_texture_paint shouldn't need to optimize the case where
    paint_opacity == 0 and bailout, since we've been doing this optimization for
    all actors in clutter_actor_paint for a while now.

 clutter/clutter-texture.c |    8 --------
 1 file changed, 8 deletions(-)

commit dfe6eb1e5116603f7702e06058550def56df12ad
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu May 27 16:32:32 2010 +0100

    test-scrolling: Use a better looking bounce easing

 tests/interactive/test-scrolling.c |    4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

commit aa53dccfce2a425d309d7be99cd2cd6e771c92be
Author: Neil Roberts <neil@linux.intel.com>
Date:   Thu May 27 14:54:14 2010 +0100

    cogl-vertex-buffer: Don't disable any texture coord arrays
    
    The enabled state of the texture coord arrays is cached in the cogl
    context so there is no need to disable them when we've finished
    rendering a vbo.

 clutter/cogl/cogl/cogl-vertex-buffer.c |    8 +++++---
 1 file changed, 5 insertions(+), 3 deletions(-)

commit 401892af1188073dc3107832b8e2e908c5c0e79e
Author: Neil Roberts <neil@linux.intel.com>
Date:   Thu May 27 14:51:44 2010 +0100

    cogl: Record new enabled arrays in _cogl_disable_other_texcoord_arrays
    
    When _cogl_disable_other_texcoord_arrays is called it disables the
    neccessary texcoord arrays and then removes the bits for the disabled
    arrays in ctx->texcoord_arrays_enabled. However none of the places
    that call the function then set any bits in ctx->texcoord_arrays_enabled
    so the arrays would never get marked and they would never get disabled
    again.
    
    This patch just changes it so that _cogl_disable_other_texcoord_arrays
    also sets the corresponding bits in ctx->texcoord_arrays_enabled.

 clutter/cogl/cogl/cogl-internal.h |    3 ++-
 clutter/cogl/cogl/cogl.c          |    1 +
 2 files changed, 3 insertions(+), 1 deletion(-)

commit aab411bde4757340d5d38231d85e44136fc121ad
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu May 27 12:32:45 2010 +0100

    test-scrolling: Animate intermediate positions
    
    Animating intermediate positions in the viewport panning is a neat
    effect.

 tests/interactive/test-scrolling.c |   32 ++++++++++++++++++++++++++++----
 1 file changed, 28 insertions(+), 4 deletions(-)

commit b77c0c91d76f56f9c9c032ccec5c04c0ab37aeae
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu May 27 12:30:22 2010 +0100

    drag-action: Re-use press_button in emit_drag_end()
    
    Since emit_drag_end() can be called from a MOTION event capture we
    cannot call clutter_event_get_button(). We should, instead, use the
    press_button value because if we're emitting ::drag-end it means we
    also emitted ::drag-begin and the value is valid.

 clutter/clutter-drag-action.c |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit 346ebce57385eeee593ee51796274e7fbb9298e6
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Wed May 26 16:09:47 2010 +0100

    actor: Add accessors pair for :clip-to-allocation
    
    We should have an accessors pair for the :clip-to-allocation property,
    to avoid going through the generic GObject accessors.

 clutter/clutter-actor.c                    |   56 +++++++++++++++++++++++++---
 clutter/clutter-actor.h                    |    3 ++
 doc/reference/clutter/clutter-sections.txt |    2 +
 tests/interactive/test-scrolling.c         |    4 +-
 4 files changed, 58 insertions(+), 7 deletions(-)

commit 6ea56f11605005175cdbbd532fd7ebbea80c372c
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Wed May 26 15:58:15 2010 +0100

    Add a scrolling interactive example
    
    We can use a container with :clip-to-allocation set to TRUE and a
    DragAction to create a panning viewport.

 .gitignore                         |    1 +
 tests/interactive/Makefile.am      |    3 +-
 tests/interactive/test-scrolling.c |  107 ++++++++++++++++++++++++++++++++++++
 3 files changed, 110 insertions(+), 1 deletion(-)

commit 823251c159366a566fbdae7ffff129b61a9acca4
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Wed May 26 14:18:19 2010 +0100

    Use ClickAction in test-animation
    
    Instead of using ::button-press-event.

 tests/interactive/test-animation.c |   18 +++++++++---------
 1 file changed, 9 insertions(+), 9 deletions(-)

commit 5677cf671cbca78361c3a4606790d8dcc6ddbc40
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Wed May 26 14:16:48 2010 +0100

    actor: Fix a type check thinko in add_action_with_name()

 clutter/clutter-actor.c |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit 09659ea18d0b534ba9645cbf05ca510aa702ebcf
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Wed May 26 14:09:24 2010 +0100

    docs: Description fixes for Action and Constraint

 clutter/clutter-action.c     |   14 ++++++++------
 clutter/clutter-actor-meta.c |    1 +
 clutter/clutter-constraint.c |    6 +++++-
 3 files changed, 14 insertions(+), 7 deletions(-)

commit 9510cbbad290cc8edd3b602991e57f98989a86ce
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Wed May 26 13:43:42 2010 +0100

    state: Minor fixes and documentation additions
    
    Clean up the code a bit, and move common code paths into separate
    function. Also, document clutter_state_set() with examples.

 clutter/clutter-state.c |  298 ++++++++++++++++++++++++++++++-----------------
 1 file changed, 189 insertions(+), 109 deletions(-)

commit 7a299e9b470f3feb9e8cb674815ebfd288d638f5
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Wed May 26 13:40:18 2010 +0100

    introspection: Add --pkg atk
    
    We need to tell the introspection scanner all the dependencies we
    require, including the pkg-config name to use when compiling the
    GIR file into a typelib object.

 clutter/Makefile.am |    1 +
 1 file changed, 1 insertion(+)

commit e2bbf7f3620899b3283b4d76879d01a599733144
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Tue May 25 13:27:29 2010 +0100

    click-action: Handle the event
    
    In case we did handle the event, we should return TRUE from the ::event
    signal handler.

 clutter/clutter-click-action.c |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit cfb05bfb097fc5a9b61fed0f855792b6c8064822
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Tue May 25 13:10:38 2010 +0100

    docs: Fix DragAction documentation
    
    The ::drag-motion signal does not have a ModifierType argument; also,
    there's no need to connect to the ::drag-motion signal any more.

 clutter/clutter-drag-action.c |   34 +++++++++++-----------------------
 clutter/clutter-drag-action.h |    3 +--
 2 files changed, 12 insertions(+), 25 deletions(-)

commit 5a531bd1c9324704bac315bb53e907f9867f5a4e
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Tue May 25 13:03:24 2010 +0100

    Fix typo in get_accessible()

 clutter/clutter-actor.c |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit 7bf93e3e84716a486073194e1fc7a87cb483ab8a
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Tue May 25 12:54:59 2010 +0100

    actor: Put get_accessible() at the end of the class structure
    
    New virtual functions cannot go wherever they want, if we need to
    preserve the ABI.
    
    Also, the coding style should match the rest of ClutterActor and
    Clutter's own coding style.

 clutter/clutter-actor.c |   29 ++++++++++-------------------
 clutter/clutter-actor.h |    8 ++++----
 2 files changed, 14 insertions(+), 23 deletions(-)

commit b0c0f24bd22aeb8cbb333b99c44a5631966956f0
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Tue May 25 11:53:59 2010 +0100

    docs: Add ClickAction to the API reference
    
    And clean up the reference index.

 doc/reference/clutter/clutter-docs.xml.in  |    7 +--
 doc/reference/clutter/clutter-sections.txt |   20 ++++++++
 doc/reference/clutter/clutter.types        |   74 ++++++++++++++--------------
 3 files changed, 61 insertions(+), 40 deletions(-)

commit 7c627e1e0381082aafc2b8acc1fdc7d149c4b3f5
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Mon May 24 11:30:17 2010 +0100

    actor-meta: Disconnect on actor destroy
    
    When destroying an Actor the various ActorMeta instance should already
    be disposed - unless something is holding a reference to them, in which
    case we should use the ::destroy signal to unset the ActorMeta:actor
    back pointer.

 clutter/clutter-actor-meta.c |   22 ++++++++++++++++++++++
 1 file changed, 22 insertions(+)

commit f6fce05ee94320db0ffbf4eab12e5fd86777ac92
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Mon May 24 10:41:19 2010 +0100

    action: Add ClickAction
    
    ClickAction adds "clickable" semantics to an actor. It provides all
    the business logic to emit a high-level "clicked" signal from the
    various low-level signals inside ClutterActor.

 clutter/Makefile.am            |    2 +
 clutter/clutter-click-action.c |  309 ++++++++++++++++++++++++++++++++++++++++
 clutter/clutter-click-action.h |   97 +++++++++++++
 clutter/clutter.h              |    1 +
 4 files changed, 409 insertions(+)

commit 728e2d807102131fa1dedd646016cccb9d4e6128
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Tue May 25 11:01:46 2010 +0100

    drag: Add a default drag-motion behaviour
    
    The DragAction should, by default, drag the actor to which it has been
    applied, instead of delegating what to do to the developer. If custom
    code need to override it, g_signal_stop_emission_by_name() can be called
    to stop the default handler to ever running.

 clutter/clutter-drag-action.c |   25 +++++++++++++++++++++++++
 tests/interactive/test-drag.c |   16 ----------------
 2 files changed, 25 insertions(+), 16 deletions(-)

commit d2e91c99351c820787382efc97c3465b5ab1be7f
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Mon May 24 16:57:35 2010 +0100

    Post-release version bump to 1.3.3

 configure.ac |    4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

commit cc907a99c9aa03709dd1ee66c461fc6cb6c30e57
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Mon May 24 16:50:36 2010 +0100

    Release 1.3.2 (snapshot)

 configure.ac |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit 4dd5088fe29253c7479fbc54d22055994a8dd0e5
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Mon May 24 16:46:38 2010 +0100

    docs: Add Actor.get_accessible() to the API reference

 doc/reference/clutter/clutter-sections.txt |    1 +
 1 file changed, 1 insertion(+)

commit 171282bd0f4d39111185bd12854471de4804072c
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Mon May 24 16:12:47 2010 +0100

    docs: Update NEWS

 NEWS |   70 ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 1 file changed, 70 insertions(+)

commit 8f0b70a9eebf760e42d635dfe4b7347d3701debf
Author: Øyvind Kolås <pippin@linux.intel.com>
Date:   Mon May 24 15:39:01 2010 +0100

    state: replaced test with a more complex one

 tests/interactive/test-state.c |  167 ++++++++++++++++++++++++++++++----------
 1 file changed, 126 insertions(+), 41 deletions(-)

commit 49a4c623197e8d6a639a98b4aa56922c7b9b3255
Author: Øyvind Kolås <pippin@linux.intel.com>
Date:   Mon May 24 16:10:00 2010 +0100

    state: fix clutter_state_change (state, "state-name", FALSE)
    
    Properties were not being updated correctly.

 clutter/clutter-state.c |   77 ++++++++++++++++++++++++++---------------------
 1 file changed, 42 insertions(+), 35 deletions(-)

commit 380e7b8b5d0f3a12e8132a24c637151cc0f07261
Author: Neil Roberts <neil@linux.intel.com>
Date:   Mon May 24 12:40:11 2010 +0100

    cogl: Use a CoglBitmask to store the list of used texcoord arrays
    
    Instead of directly using a guint32 to store a bitmask for each used
    texcoord array, it now stores them in a CoglBitmask. This removes the
    limitation of 32 layers (although there are still other places in Cogl
    that imply this restriction). To disable texcoord arrays code should
    call _cogl_disable_other_texcoord_arrays which takes a bitmask of
    texcoord arrays that should not be disabled. There are two extra
    bitmasks stored in the CoglContext which are used temporarily for this
    function to avoid allocating a new bitmask each time.
    
    http://bugzilla.openedhand.com/show_bug.cgi?id=2132

 clutter/cogl/cogl/cogl-context.c       |    8 ++++++-
 clutter/cogl/cogl/cogl-context.h       |    8 ++++++-
 clutter/cogl/cogl/cogl-internal.h      |    5 +++-
 clutter/cogl/cogl/cogl-journal.c       |    7 +++---
 clutter/cogl/cogl/cogl-path.c          |    3 ++-
 clutter/cogl/cogl/cogl-primitives.c    |    7 +++---
 clutter/cogl/cogl/cogl-vertex-buffer.c |   10 ++++----
 clutter/cogl/cogl/cogl.c               |   41 ++++++++++++++++++--------------
 8 files changed, 55 insertions(+), 34 deletions(-)

commit 218efd0b6222abf14b48f467bfd3134e5b952fa2
Author: Neil Roberts <neil@linux.intel.com>
Date:   Thu May 20 17:31:42 2010 +0100

    cogl: Add an internal CoglBitmask type
    
    This implements a growable array of bits called CoglBitmask. The
    CoglBitmask is intended to be cheap if less than 32 bits are used. If
    more bits are required it will allocate a GArray. The type is meant to
    be allocated on the stack but because it can require additional
    resources it also has a destroy function.
    
    http://bugzilla.openedhand.com/show_bug.cgi?id=2132

 clutter/cogl/cogl/Makefile.am    |    2 +
 clutter/cogl/cogl/cogl-bitmask.c |  257 ++++++++++++++++++++++++++++++++++++++
 clutter/cogl/cogl/cogl-bitmask.h |  223 +++++++++++++++++++++++++++++++++
 3 files changed, 482 insertions(+)

commit 889dcee3844ac0fdfbf19b583e043e1cbb9af4a4
Author: Neil Roberts <neil@linux.intel.com>
Date:   Thu May 20 00:40:24 2010 +0100

    cogl-material: Fix the count of the number of layers
    
    Previously the counter for the number of layers was only updated
    whenever the texture handle for a layer changes. However there are
    many other ways for a new layer to be created for example by setting a
    layer combine constant. Also by default the texture on a layer is
    COGL_INVALID_HANDLE so if the application tries to create an explicit
    layer with no texture by calling cogl_material_set_layer with
    COGL_INVALID_HANDLE then it also wouldn't update the count.
    
    This patch fixes that by incrementing the count in
    cogl_material_get_layer instead. This function is called by all
    functions that may end up creating a layer so it seems like the most
    appropriate place.
    
    http://bugzilla.openedhand.com/show_bug.cgi?id=2132

 clutter/cogl/cogl/cogl-material.c |    3 ++-
 1 file changed, 2 insertions(+), 1 deletion(-)

commit ae0354e9ba6e59a681e27e46c5a2cf98d33687f0
Author: Neil Roberts <neil@linux.intel.com>
Date:   Thu May 20 00:16:49 2010 +0100

    cogl-vertex-buffer: Don't disable layers with no texture coords
    
    It should be quite acceptable to use a texture without defining any
    texture coords. For example a shader may be in use that is doing
    texture lookups without referencing the texture coordinates. Also it
    should be possible to replace the vertex colors using a texture layer
    without a texture but with a constant layer color.
    
    enable_state_for_drawing_buffer no longer sets any disabled layers in
    the overrides. Instead of counting the number of units with texture
    coordinates it now keeps them in a mask. This means there can now be
    gaps in the list of enabled texture coordinate arrays. To cope with
    this, the Cogl context now also stores a mask to track the enabled
    arrays. Instead of code manually iterating each enabled array to
    disable them, there is now an internal function called
    _cogl_disable_texcoord_arrays which disables a given mask.
    
    I think this could also fix potential bugs when a vertex buffer has
    gaps in the texture coordinate attributes that it provides. For
    example if the vertex buffer only had texture coordinates for layer 2
    then the disabling code would not disable the coordinates for layers 0
    and 1 even though they are not used. This could cause a crash if the
    previous data for those arrays is no longer valid.
    
    http://bugzilla.openedhand.com/show_bug.cgi?id=2132

 clutter/cogl/cogl/cogl-context.c       |    2 +-
 clutter/cogl/cogl/cogl-context.h       |    3 ++-
 clutter/cogl/cogl/cogl-internal.h      |    3 +++
 clutter/cogl/cogl/cogl-journal.c       |   14 +++++---------
 clutter/cogl/cogl/cogl-path.c          |    9 ++-------
 clutter/cogl/cogl/cogl-primitives.c    |   13 ++++---------
 clutter/cogl/cogl/cogl-vertex-buffer.c |   21 ++++++--------------
 clutter/cogl/cogl/cogl.c               |   33 +++++++++++++++++++++++++-------
 8 files changed, 49 insertions(+), 49 deletions(-)

commit 70abe3dd8abab74d86b8a3b90753f822a0507d04
Author: Neil Roberts <neil@linux.intel.com>
Date:   Wed May 19 23:42:40 2010 +0100

    test-cogl-materials: Test invalid layers with a constant color
    
    This adds a test using a layer with no texture but that replaces the
    fragment color with the layer constant. This currently causes the test
    to fail.
    
    http://bugzilla.openedhand.com/show_bug.cgi?id=2132

 tests/conform/test-cogl-materials.c |   31 ++++++++++++++++++++++++++++++-
 1 file changed, 30 insertions(+), 1 deletion(-)

commit ff7ce2c5b290edcd9c44a60eb0bcc9b77f56827d
Author: Neil Roberts <neil@linux.intel.com>
Date:   Wed May 19 23:36:18 2010 +0100

    test-cogl-materials: Run the 'all layers' test with different prims
    
    The drawing code from test_invalid_texture_layers which draws a
    rectangle, a polygon and a vertex buffer has been split out to
    separate function. test_using_all_layers now also uses this so that it
    will also test the other two primitives. This causes the test to fail
    when all of the layers are drawn using a vertex buffer.
    
    http://bugzilla.openedhand.com/show_bug.cgi?id=2132

 tests/conform/test-cogl-materials.c |   47 +++++++++++++++++++----------------
 1 file changed, 25 insertions(+), 22 deletions(-)

commit a59bd4cfbb08501a9ba6ccf8061ee461b2271a17
Author: Alejandro Piñeiro <apinheiro@igalia.com>
Date:   Tue Apr 13 13:23:15 2010 +0200

    Implement AtkImplementor on ClutterActor
    
    Implements AtkImplementor interface on ClutterActor, and his method
    atk_implementor_ref_accessible.
    
    More information:
    http://library.gnome.org/devel/atk/stable/AtkObject.html#AtkImplementor

 clutter/Makefile.am     |    1 +
 clutter/clutter-actor.c |   22 +++++++++++++++++++++-
 2 files changed, 22 insertions(+), 1 deletion(-)

commit 6a313ec2e2c227448ee83e6610ef78d1d0fe14a0
Author: Alejandro Piñeiro <apinheiro@igalia.com>
Date:   Mon Apr 12 20:10:24 2010 +0200

    Implemented clutter_actor_get_accessible
    
    Added the implementation for clutter_actor_get_accessible, virtual
    ClutterActor function, used to obtain the accessible object of
    any ClutterActor.
    
    As it is defined virtual, it would be possible to redefine it, so
    any custom clutter actor could implement their accessibility object,
    withouth relying totally on a accessibility implementation module.
    
    See gtkiconview as example.
    
    http://bugzilla.openedhand.com/show_bug.cgi?id=2070

 clutter/clutter-actor.c |   45 +++++++++++++++++++++++++++++++++++++++++++++
 clutter/clutter-actor.h |   10 +++++++++-
 2 files changed, 54 insertions(+), 1 deletion(-)

commit fd584e18418166542c0e75b75a263060c8ce4634
Author: Alejandro Piñeiro <apinheiro@igalia.com>
Date:   Mon Apr 12 19:34:06 2010 +0200

    Added Atk dependency
    
    Added Atk dependency, in order to implement a built-in
    accessibility support on Clutter.

 README       |    1 +
 configure.ac |    2 +-
 2 files changed, 2 insertions(+), 1 deletion(-)

commit 5f6a3d2543ff583c5f4d07c2b1e668f3cfe10841
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Mon May 24 15:34:43 2010 +0100

    build: Remove shave files from EXTRA_DIST
    
    We don't use Shave any more, and require automake 1.11 instead.

 build/autotools/Makefile.am |    3 ---
 1 file changed, 3 deletions(-)

commit 173e497ff4cf32ee6debbd065e25462b2bc4dbb7
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Mon May 24 15:14:09 2010 +0100

    state: Use Interval.compute() instead of compute_value()
    
    Use the newly-added compute() variant to avoid creating a GValue only
    for getting it copied by g_object_set_property().

 clutter/clutter-state.c |   41 ++++++++++++++++++++---------------------
 1 file changed, 20 insertions(+), 21 deletions(-)

commit af84d97fca671ba5db0bd912eec665f9318aabc3
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Mon May 24 15:06:14 2010 +0100

    interval: Add a pointer variant to compute_value()
    
    ClutterInterval.compute_value() computes the new value given a progress
    and copies it to a given GValue. Since most of the time we want to pass
    that very same value to another function that copies it again, we should
    have a compute_value() variant that stores that computed value inside
    ClutterInterval and returns a pointer to it. This way we initialize the
    result GValue just once and we never copy it, as long as the Interval
    instance is valid.

 clutter/clutter-interval.c                 |   73 +++++++++++++++++++++++++---
 clutter/clutter-interval.h                 |    3 ++
 doc/reference/clutter/clutter-sections.txt |    3 +-
 3 files changed, 70 insertions(+), 9 deletions(-)

commit 489c16c6a6842084c8bd10597b7b0bbcc69ff5af
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Mon May 24 14:20:23 2010 +0100

    docs: Align parameter names between header and source code

 clutter/clutter-state.c                    |  131 ++++++++++++++--------------
 clutter/clutter-state.h                    |   34 ++++----
 doc/reference/clutter/clutter-sections.txt |    1 +
 3 files changed, 85 insertions(+), 81 deletions(-)

commit 07ffa015ab388e5f5fdcb41fc0a2fa92fd98e0bc
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Mon May 24 12:00:43 2010 +0100

    docs: Add ClutterState to the API reference

 doc/reference/clutter/clutter-docs.xml.in  |    1 +
 doc/reference/clutter/clutter-sections.txt |   43 ++++++++++++++++++++++++++++
 doc/reference/clutter/clutter.types        |    1 +
 3 files changed, 45 insertions(+)

commit 382bd394b92cd0abcc7cfbfae31dccf162aea7e8
Merge: 254e8d0 9fcbb27
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Mon May 24 10:42:03 2010 +0100

    Merge branch 'wip/state-machine'
    
    * wip/state-machine:
      Do not use wildcards in test-state
      script: Implement State deserialization
      state: added a "target-state" property
      state: documented data structures
      Add State interactive tests to the ignore file
      state: Documentation and introspection annotation fixes
      state: Minor coding style fixes
      state: Clean up the header's documentation
      state: Constify StateKey accessors
      Do not include clutter.h from a Clutter header file
      state-machine: made clutter_state_change take a boolean animate argument
      state-machine: use clutter_timeline_get_progress
      state-machine: add completed signal
      state machine: added state machine
    
    Conflicts:
    	.gitignore

commit 254e8d0fe585bb7de0798dd8063470d2aa1c60a5
Merge: 5e3dc55 9ebd5fd
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Fri May 21 14:38:37 2010 +0100

    Merge branch 'wip/framebuffer-bits'
    
    * wip/framebuffer-bits:
      Implement accessors for the color bits in a framebuffer

commit 9fcbb274e01e4fb5df2d08fddfdfd3b91fe63e4e
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Fri May 21 14:22:56 2010 +0100

    Do not use wildcards in test-state
    
    Use named states, like in a real case.

 tests/conform/test-state.c   |    6 +++---
 tests/data/test-state-1.json |    4 ++--
 2 files changed, 5 insertions(+), 5 deletions(-)

commit 6ca425679ea27c7fe2bc8e455b8d55785200841e
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Fri May 21 14:13:14 2010 +0100

    script: Implement State deserialization
    
    It should be possible to describe ClutterState transitions using
    ClutterScript in a similar way as ClutterAnimator.

 .gitignore                        |    1 +
 clutter/clutter-state.c           |  296 ++++++++++++++++++++++++++++++++++---
 tests/conform/Makefile.am         |    1 +
 tests/conform/test-conform-main.c |    1 +
 tests/conform/test-state.c        |   59 ++++++++
 tests/data/Makefile.am            |    1 +
 tests/data/test-state-1.json      |   33 +++++
 7 files changed, 375 insertions(+), 17 deletions(-)

commit 5e3dc55666c345a6a17dc3ae082c0ee1de3ae82a
Merge: bb2d088 6567800
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Fri May 21 10:55:09 2010 +0100

    Merge branch 'wip/constraints'
    
    * wip/constraints: (24 commits)
      Add the Cogl API reference to the fixxref extra directories
      Document the internal MetaGroup class
      Remove the construct-only flag from ActorMeta:name
      doc: Remove gtk-doc annotations from the json-glib copy
      doc: Fix parameter documentation
      Add named modifiers for Action and Constraint
      Remove a redundant animation
      Set the stage resizable in test-constraints
      Use a 9 grid for the constraints test
      Miscellaneous documentation fixes
      docs: Document animating action and constraint properties
      docs: Document BindConstraint and AlignConstraint
      constraint: Rename BindConstraint:bind-axis
      constraints: Add AlignConstraint
      tests: Add a constraints interactive test
      constraint: Add BindConstraint
      actor: Implement Animatable
      animation: Use the new Animatable API for custom properties
      animatable: Add custom properties to Animatable
      constraint: Add ClutterConstraint base class
      ...
    
    Conflicts:
    	configure.ac

commit d156550633a4fc7580d6e06b726845fb414f7196
Author: Øyvind Kolås <pippin@linux.intel.com>
Date:   Fri May 21 10:37:42 2010 +0100

    state: added a "target-state" property
    
    When set the ClutterState transitions to the new state.

 clutter/clutter-state.c |   87 +++++++++++++++++++++++++++++++++++++++++------
 1 file changed, 76 insertions(+), 11 deletions(-)

commit 9c4467707f13e3f6f780d6f88ee1da5929e39f56
Author: Øyvind Kolås <pippin@linux.intel.com>
Date:   Thu May 20 23:05:16 2010 +0100

    state: documented data structures

 clutter/clutter-state.c |   90 +++++++++++++++++++++++++----------------------
 1 file changed, 48 insertions(+), 42 deletions(-)

commit 84f165b460bcadf83f4174368e047d5c53f95b24
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu May 20 18:58:30 2010 +0100

    Add State interactive tests to the ignore file

 .gitignore |    2 ++
 1 file changed, 2 insertions(+)

commit ae3dc9bd5ebf0ea3350d458c5560e9cd6aff9fe1
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu May 20 18:57:27 2010 +0100

    state: Documentation and introspection annotation fixes

 clutter/clutter-state.c |  179 +++++++++++++++++++++++++++++------------------
 1 file changed, 110 insertions(+), 69 deletions(-)

commit c2abb827a36db1d8db0518ea2b144bc971d23ee0
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu May 20 18:34:34 2010 +0100

    state: Minor coding style fixes

 clutter/clutter-state.c |  322 ++++++++++++++++++++++++++++-------------------
 1 file changed, 194 insertions(+), 128 deletions(-)

commit 9fafc93c5d241313d70b0451b2529f4fd30acd14
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu May 20 17:46:52 2010 +0100

    state: Clean up the header's documentation

 clutter/clutter-state.h |   28 ++++++++++++++++++++++------
 1 file changed, 22 insertions(+), 6 deletions(-)

commit 3f36b4a8419e1dfbaaf1008e636d18c93fe2cb66
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu May 20 17:34:36 2010 +0100

    state: Constify StateKey accessors
    
    Since the accessors do not modify the StateKey we should constify the
    argument.

 clutter/clutter-state.c |  179 ++++++++++++++++++++++++++++++-----------------
 clutter/clutter-state.h |   20 +++---
 2 files changed, 126 insertions(+), 73 deletions(-)

commit 5c74f990d6e388aaa7041469dbed7b4cd80242c3
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu May 20 17:34:02 2010 +0100

    Do not include clutter.h from a Clutter header file
    
    Clutter header files should just include the needed headers.

 clutter/clutter-state.c |   10 ++++++++--
 clutter/clutter-state.h |   30 ++++++++----------------------
 2 files changed, 16 insertions(+), 24 deletions(-)

commit bb2d088cb1c9c1341dc70c4b779bc6ccb57f10e2
Author: Robert Bragg <robert@linux.intel.com>
Date:   Thu May 20 14:54:44 2010 +0100

    math: Adds an experimental cogl_vector3_* API
    
    This adds a math utility API for handling 3 component, single precision
    float vectors with the following; mostly self explanatory functions:
    
    cogl_vector3_init
    cogl_vector3_init_zero
    cogl_vector3_equal
    cogl_vector3_equal_with_epsilon
    cogl_vector3_copy
    cogl_vector3_free
    cogl_vector3_invert
    cogl_vector3_add
    cogl_vector3_subtract
    cogl_vector3_multiply_scalar
    cogl_vector3_divide_scalar
    cogl_vector3_normalize
    cogl_vector3_magnitude
    cogl_vector3_cross_product
    cogl_vector3_dot_product
    cogl_vector3_distance
    
    Since the API is experimental you will need to define
    COGL_ENABLE_EXPERIMENTAL_API before including cogl.h if you want to use
    the API.

 clutter/cogl/cogl/Makefile.am        |    2 +
 clutter/cogl/cogl/cogl-vector.c      |  284 ++++++++++++++++++++++++++
 clutter/cogl/cogl/cogl-vector.h      |  367 ++++++++++++++++++++++++++++++++++
 clutter/cogl/cogl/cogl.h             |    2 +
 doc/reference/cogl/cogl-docs.xml.in  |    1 +
 doc/reference/cogl/cogl-sections.txt |   20 ++
 6 files changed, 676 insertions(+)

commit 1dc8c0ff05f683ae6522e27965571742fc1a4dbf
Author: Øyvind Kolås <pippin@linux.intel.com>
Date:   Thu May 20 16:13:46 2010 +0100

    state-machine: made clutter_state_change take a boolean animate argument
    
    Most of the time this will be TRUE, pass FALSE to change to the target
    state immediately.

 clutter/clutter-state.c                 |  102 +++----------------------------
 clutter/clutter-state.h                 |    8 +--
 tests/interactive/test-state-animator.c |    6 +-
 tests/interactive/test-state.c          |   10 +--
 4 files changed, 19 insertions(+), 107 deletions(-)

commit 54bd5412706733e9af576ed3998d87cb138846e7
Author: Øyvind Kolås <pippin@linux.intel.com>
Date:   Thu May 20 15:41:29 2010 +0100

    state-machine: use clutter_timeline_get_progress

 clutter/clutter-state.c |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit 8761b279a715167fc87194c14efe00f10bba2bf9
Author: Øyvind Kolås <pippin@linux.intel.com>
Date:   Wed May 12 17:03:25 2010 +0100

    state-machine: add completed signal
    
    Added a completed signal to the animator

 clutter/clutter-state.c        |   54 ++++++++++++++++++++++++++++++++++++----
 clutter/clutter-state.h        |    6 ++++-
 tests/interactive/test-state.c |    7 ++++++
 3 files changed, 61 insertions(+), 6 deletions(-)

commit fcdc3a8989dee335bec5788c5fbe785e41acd70b
Author: Øyvind Kolås <pippin@linux.intel.com>
Date:   Tue May 11 15:04:34 2010 +0100

    state machine: added state machine

 clutter/Makefile.am                     |    2 +
 clutter/clutter-state.c                 | 1310 +++++++++++++++++++++++++++++++
 clutter/clutter-state.h                 |  156 ++++
 clutter/clutter.h                       |    1 +
 tests/interactive/Makefile.am           |    2 +
 tests/interactive/test-state-animator.c |  134 ++++
 tests/interactive/test-state.c          |   97 +++
 7 files changed, 1702 insertions(+)

commit 78325a34db372ddcd0c60197645d208108265119
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu May 20 16:19:25 2010 +0100

    cookbook: Add a recipe for CairoTexture
    
    The Clutter cookbook has a chapter for textures. It would be useful to
    provide a recipe on simple uses of ClutterCairoTexture as part of that.
    
    Some suggested content is attached.

 doc/cookbook/clutter-cookbook.xml.in |  151 +++++++++++++++++++++++++++++++++-
 1 file changed, 147 insertions(+), 4 deletions(-)

commit 5b2311aed736ac90865f16466d273bf8f9d01a70
Author: Neil Roberts <neil@linux.intel.com>
Date:   Thu May 20 12:37:56 2010 +0100

    cogl-texture-2d: Optimise _cogl_texture_2d_is_pot
    
    This takes the simple algorithm from here:
    
    http://graphics.stanford.edu/~seander/bithacks.html#DetermineIfPowerOf2
    
    This avoids a loop and is much faster.

 clutter/cogl/cogl/cogl-texture-2d.c |   15 +--------------
 1 file changed, 1 insertion(+), 14 deletions(-)

commit 65678006a8763361d2b9b00b12a0deee90c1d580
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu May 20 12:03:47 2010 +0100

    Add the Cogl API reference to the fixxref extra directories

 doc/reference/clutter/Makefile.am |    3 ++-
 1 file changed, 2 insertions(+), 1 deletion(-)

commit cc4729d42f9e67d826c4af41b8ac8c50197dcb97
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu May 20 12:03:10 2010 +0100

    Document the internal MetaGroup class
    
    Just because it's an internal class, ClutterMetaGroup should not be left
    undocumented.

 clutter/clutter-actor-meta.c |   45 ++++++++++++++++++++++++++++++++++++++++++
 1 file changed, 45 insertions(+)

commit 1b0be8e3b98ea9c76155eabe27096f2a559eed5c
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu May 20 12:02:13 2010 +0100

    Remove the construct-only flag from ActorMeta:name
    
    The ClutterActorMeta:name property should be read-write, and be
    writeable at any time.

 clutter/clutter-actor-meta.c |   12 +-----------
 1 file changed, 1 insertion(+), 11 deletions(-)

commit c75a6b1a1d63f5b68a878f1a8724586ad56fd3dd
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu May 20 11:45:54 2010 +0100

    doc: Remove gtk-doc annotations from the json-glib copy
    
    There's no need to use gtk-doc annotations: the API is internal to
    Clutter.

 clutter/json/json-array.c     |   52 +++++++++++++++++++-------------------
 clutter/json/json-generator.c |   18 ++++++-------
 clutter/json/json-node.c      |   56 ++++++++++++++++++++---------------------
 clutter/json/json-object.c    |   56 ++++++++++++++++++++---------------------
 clutter/json/json-parser.c    |   32 +++++++++++------------
 5 files changed, 107 insertions(+), 107 deletions(-)

commit 80a8568e0e72db27776f9bdd22cf331ffcd2ba74
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu May 20 11:45:25 2010 +0100

    doc: Fix parameter documentation

 clutter/clutter-actor.c |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit 7ce26939447327f8d87be5015ddec48b70c5c442
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu May 20 11:19:51 2010 +0100

    Add named modifiers for Action and Constraint
    
    The ClutterActor API should have modifier methods for adding, removing
    and retrieving Actions and Constraints using the ClutterActorMeta:name
    property - mostly, for convenience.

 clutter/clutter-action.h                   |   19 ++-
 clutter/clutter-actor.c                    |  182 ++++++++++++++++++++++++++++
 clutter/clutter-constraint.h               |   19 ++-
 doc/reference/clutter/clutter-sections.txt |    6 +
 tests/interactive/test-constraints.c       |   12 +-
 5 files changed, 218 insertions(+), 20 deletions(-)

commit 4dc91339c308395997aee5330a2630c57fa8037c
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Wed May 19 18:23:29 2010 +0100

    Remove a redundant animation

 tests/interactive/test-constraints.c |    4 ----
 1 file changed, 4 deletions(-)

commit 86a773536f9b31db1ac4cd6c74a4e4f790041d8f
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Wed May 19 18:20:27 2010 +0100

    Set the stage resizable in test-constraints
    
    To demonstrate that constraints can be used to reposition actors in a
    resizable stage, set the :user-resizable property to TRUE, and spend the
    next 15 minutes playing with the stage size.

 tests/interactive/test-constraints.c |    1 +
 1 file changed, 1 insertion(+)

commit 5d1b18669b94afc68389bd75771f21cedd4e0d88
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Wed May 19 18:17:49 2010 +0100

    Use a 9 grid for the constraints test
    
    Let's complicate the interactive constraints test a little bit by adding
    more actors and animating two constraints at a time.

 tests/interactive/test-constraints.c |  156 ++++++++++++++++++++++------------
 1 file changed, 102 insertions(+), 54 deletions(-)

commit 6457f66976c68abf1b131841356cebbfa7dad655
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Wed May 19 16:10:05 2010 +0100

    Miscellaneous documentation fixes

 clutter/clutter-action.c                   |    2 +-
 clutter/clutter-actor-meta.c               |    2 +-
 clutter/clutter-align-constraint.c         |    2 +-
 clutter/clutter-animatable.c               |   35 +++++++
 clutter/clutter-animatable.h               |   13 ++-
 clutter/clutter-animation.c                |    6 +-
 clutter/clutter-animator.c                 |    2 +-
 clutter/clutter-bind-constraint.c          |    2 +-
 clutter/clutter-box-layout.c               |    2 +-
 clutter/clutter-constraint.c               |   12 +++
 clutter/clutter-constraint.h               |   13 +--
 clutter/clutter-drag-action.c              |    2 +-
 clutter/clutter-event.h                    |    2 +-
 clutter/clutter-media.h                    |    1 +
 clutter/clutter-stage-manager.h            |    4 -
 configure.ac                               |    6 +-
 doc/reference/clutter/Makefile.am          |    1 +
 doc/reference/clutter/clutter-docs.xml.in  |   11 +++
 doc/reference/clutter/clutter-sections.txt |  139 +++++++++++++++++++++++++++-
 doc/reference/clutter/clutter.types        |    6 ++
 20 files changed, 232 insertions(+), 31 deletions(-)

commit ee7ebe096e3b7c0b0ce5dbadedc7674bb480266e
Author: Robert Bragg <robert@linux.intel.com>
Date:   Tue Oct 13 15:27:06 2009 +0100

    Stubs out _cogl_xlib_handle_event
    
    This stubs out an xlib event handling mechanism for Cogl. The intention
    is for Clutter to use this to forward all x11 events to Cogl. As we move
    winsys functionality down into Cogl, Cogl will become responsible for
    handling a number of X events: ConfigureNotify events for onscreen
    framebuffers, swap events and Damage events for cogl_x11_texture_pixmap.

 clutter/cogl/cogl/Makefile.am        |    6 ++--
 clutter/cogl/cogl/cogl-internal.h    |   39 ++++++++++++++++++++++++
 clutter/cogl/cogl/winsys/cogl-xlib.c |   54 ++++++++++++++++++++++++++++++++++
 3 files changed, 97 insertions(+), 2 deletions(-)

commit 52acc71161532126d6c67923befadb18c1836932
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Wed May 19 15:09:47 2010 +0100

    docs: Document animating action and constraint properties
    
    Add a refsect for the syntax to be used when animating action and
    constraint properties with ClutterAnimation.

 clutter/clutter-actor.c |   59 +++++++++++++++++++++++++++++++++++++++++++++++
 1 file changed, 59 insertions(+)

commit f2f2e9b7e63fc4087a80a6dfec4a9df7d2f79215
Author: Robert Bragg <robert@linux.intel.com>
Date:   Thu Oct 8 12:08:21 2009 +0100

    build: expose automake conditionals for cogl winsys
    
    Expose the ./configured window system/backend options to the Cogl
    automake files via some new SUPPORT_XYZ conditionals.

 clutter/Makefile.am           |    4 ++--
 clutter/cogl/cogl/Makefile.am |   38 +++++++++++++++++++++++++-------------
 configure.ac                  |   16 +++++++++++++++-
 3 files changed, 42 insertions(+), 16 deletions(-)

commit a29d1b799aa09ea7a9b85ceabe76fc511df50618
Author: Robert Bragg <robert@linux.intel.com>
Date:   Tue Oct 13 15:27:06 2009 +0100

    configure.ac: Adds some COGL_HAS_XYZ_SUPPORT defines
    
    This exposes the ./configured window system/backend options to Cogl via
    a set of new COGL_HAS_XYZ_SUPPORT defines:
    
    COGL_HAS_{X11,XLIB,GLX,EGL,EGL_PLATFORM_XYZ,OSX,WIN32,WGL}_SUPPORT

 configure.ac |   17 +++++++++++++++++
 1 file changed, 17 insertions(+)

commit 9f7e4b2b6412c1733200f50eedaf67b53c19ec54
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Wed May 19 14:46:02 2010 +0100

    docs: Document BindConstraint and AlignConstraint
    
    Add the missing gtk-doc annotations for BindConstraint and
    AlignConstraint, plus the licensing blurb.

 clutter/clutter-align-constraint.c |   78 +++++++++++++++++++++++++++++++++++-
 clutter/clutter-align-constraint.h |   42 +++++++++++++++++++
 clutter/clutter-bind-constraint.h  |   18 +++++++++
 3 files changed, 137 insertions(+), 1 deletion(-)

commit e9b93d5676237e94975fb22824827a8f7153da4d
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Wed May 19 14:34:18 2010 +0100

    constraint: Rename BindConstraint:bind-axis
    
    We're not binding an axis: we're really binding a coordinate of an actor
    to the coordinate of another one.

 clutter/clutter-bind-constraint.c    |  126 ++++++++++++++++++++++++++--------
 clutter/clutter-bind-constraint.h    |   38 ++++++++--
 tests/interactive/test-constraints.c |   16 +++--
 3 files changed, 140 insertions(+), 40 deletions(-)

commit f857457b9d01cbbc5b59609e28b2e6a3fd0c3636
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Wed May 19 13:02:43 2010 +0100

    constraints: Add AlignConstraint
    
    AlignConstraint is a simple constraint that keeps an actor's position
    aligned to the width or height of another actor, multiplied by an
    alignment factor.

 clutter/Makefile.am                  |    2 +
 clutter/clutter-align-constraint.c   |  259 ++++++++++++++++++++++++++++++++++
 clutter/clutter-align-constraint.h   |   31 ++++
 clutter/clutter.h                    |    1 +
 tests/interactive/test-constraints.c |   12 --
 5 files changed, 293 insertions(+), 12 deletions(-)

commit 56e8e7d62f782266d510ff52269507a9d7796b93
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Wed May 19 12:27:09 2010 +0100

    tests: Add a constraints interactive test
    
    Show how to use constraints and how to animate them.

 .gitignore                           |    1 +
 tests/interactive/Makefile.am        |    3 +-
 tests/interactive/test-constraints.c |  138 ++++++++++++++++++++++++++++++++++
 3 files changed, 141 insertions(+), 1 deletion(-)

commit 769e964424f4de41b7e875b8a08a2bd17fdd2f70
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Wed May 19 12:25:28 2010 +0100

    constraint: Add BindConstraint
    
    The BindConstraint object is a constraint that binds the current
    position of an actor on a given axis to the actor that has the
    constraint applied.

 clutter/Makefile.am               |    2 +
 clutter/clutter-bind-constraint.c |  267 +++++++++++++++++++++++++++++++++++++
 clutter/clutter-bind-constraint.h |   32 +++++
 clutter/clutter.h                 |    1 +
 4 files changed, 302 insertions(+)

commit 29257af30c08eeb06089aebb460baacbfd78a052
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Wed May 19 12:23:57 2010 +0100

    actor: Implement Animatable
    
    By implementing the newly added support for custom animatable
    properties, we can allow addressing action and constraint properties
    from ClutterAnimation and clutter_actor_animate().

 clutter/clutter-actor.c |  162 ++++++++++++++++++++++++++++++++++++++++++++++-
 1 file changed, 159 insertions(+), 3 deletions(-)

commit d9a05ac94b453ec2a4e6313aa587d2194e46cfb1
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Wed May 19 12:22:48 2010 +0100

    animation: Use the new Animatable API for custom properties
    
    The Animation class should use the Animatable API for custom properties
    to override finding a property definition, getting the initial state and
    setting the final state of an object.

 clutter/clutter-animation.c |  154 ++++++++++++++++++++++++++++++++++---------
 1 file changed, 122 insertions(+), 32 deletions(-)

commit 3a1162cbcffd4147f3022b3241101e3269a54169
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Wed May 19 12:21:54 2010 +0100

    animatable: Add custom properties to Animatable
    
    Like ClutterScriptable, it would be good to have the Animatable
    interface allow defining custom properties that can be animated.

 clutter/clutter-animatable.c |   63 ++++++++++++++++++++++++++++++++++++++++++
 clutter/clutter-animatable.h |   51 ++++++++++++++++++++++++----------
 2 files changed, 100 insertions(+), 14 deletions(-)

commit b842f0ad8edacae353facf33b9ad3d43b02a60af
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Fri May 14 12:13:49 2010 +0100

    constraint: Add ClutterConstraint base class
    
    The Constraint base, abstract class should be used to implement Actor
    modifiers that affect the way an actor is sized or positioned inside a
    fixed layout manager.

 clutter/Makefile.am          |    2 +
 clutter/clutter-actor.c      |  138 +++++++++++++++++++++++++++++++++++++++++-
 clutter/clutter-constraint.c |   21 +++++++
 clutter/clutter-constraint.h |  100 ++++++++++++++++++++++++++++++
 clutter/clutter-types.h      |    5 +-
 clutter/clutter.h            |    1 +
 6 files changed, 264 insertions(+), 3 deletions(-)

commit b0cc98fdceb7f2ba8bc377c085216cabc6232980
Author: Brian Tarricone <brian@kakai.com>
Date:   Thu Mar 25 20:55:31 2010 -0700

    eglx: implement cogl_get_proc_address()
    
    http://bugzilla.openedhand.com/show_bug.cgi?id=2124

 clutter/cogl/cogl/winsys/cogl-eglx.c |    4 +++-
 1 file changed, 3 insertions(+), 1 deletion(-)

commit 36903dfdcc0c549972a95056b6d7e417d207ca24
Author: Neil Roberts <neil@linux.intel.com>
Date:   Tue May 18 17:25:25 2010 +0100

    eglx: Rename EGLNative{Window,Display}Type back to Native{Window,Display}Type
    
    Commit e2a990d renamed these types to new names from EGL 1.3. However
    it still works to use the old names under EGL 1.3 so let's just use
    those to keep compatibility.

 clutter/eglx/clutter-backend-egl.c |    4 ++--
 clutter/eglx/clutter-stage-egl.c   |    2 +-
 2 files changed, 3 insertions(+), 3 deletions(-)

commit 4b239e1fe89d6f9c20c930f1cad4bdfcca88aa32
Author: Neil Roberts <neil@linux.intel.com>
Date:   Tue May 18 17:08:12 2010 +0100

    clutter-backend-egl: Chain up in dispose before destroying the context
    
    clutter_backend_egl_dispose now chains up before disposing its own
    resources so that ClutterBackendX11 will destroy all of the stages
    before we destroy the egl context. Otherwise the actors may try to
    make GL calls during destruction which causes a crash.

 clutter/eglx/clutter-backend-egl.c |    8 ++++++--
 1 file changed, 6 insertions(+), 2 deletions(-)

commit 6c3d1cfab9d21cd638854e0900d8bc17c4ebce9e
Author: Neil Roberts <neil@linux.intel.com>
Date:   Tue May 18 16:51:46 2010 +0100

    clutter-stage-egl.c: Don't call eglWait*()
    
    According to the docs, eglSwapBuffers performs an implicit glFlush
    before swapping so there should be no need to wait.

 clutter/eglx/clutter-stage-egl.c |    2 --
 1 file changed, 2 deletions(-)

commit 871683abd3699716e04f54b8f4e0693599b19907
Author: Neil Roberts <neil@linux.intel.com>
Date:   Tue May 18 15:52:05 2010 +0100

    test-cogl-materials: Fix compilation under GLES 2
    
    GLES 2 doesn't have GL_MAX_TEXTURE_UNITS. Instead the cogl backend
    uses GL_MAX_TEXTURE_IMAGE_UNITS with a maximum limit of 16. The same
    restriction is now used in the test.

 tests/conform/test-cogl-materials.c |   10 ++++++++++
 1 file changed, 10 insertions(+)

commit c4ae1a55fa88cb01839b939220f7d1bd8a251ace
Author: Brian Tarricone <brian@kakai.com>
Date:   Thu Mar 25 19:44:37 2010 -0700

    fix case when EGL driver doesn't support EGL_NATIVE_VISUAL_ID
    
    Some EGL drivers, such as the PowerVR simulator (and some proprietary drivers)
    return zero when the EGLConfig is queried for the EGL_NATIVE_VISUAL_ID
    attribute via eglGetConfigAttrib().
    
    This patch detects and attempts to work around that situation by picking a
    visual with the same color depth.
    
    http://bugzilla.openedhand.com/show_bug.cgi?id=2123

 clutter/eglx/clutter-backend-egl.c |   37 +++++++++++++++++++++++++++++-------
 1 file changed, 30 insertions(+), 7 deletions(-)

commit 26b061c3a80a81ec1fb19f61770ad4f6c3df40c1
Author: Neil Roberts <neil@linux.intel.com>
Date:   Wed May 5 17:30:00 2010 +0100

    clutter-backend-egl: Create a dummy X window and EGL surface
    
    After the EGL context is created it now also creates an invisible 1x1
    window and a corresponding surface so that the context can be
    immediately made current. This is similar to changes for the GLX
    backend introduced in d2c091e62.
    
    http://bugzilla.openedhand.com/show_bug.cgi?id=2056

 clutter/eglx/clutter-backend-egl.c |   80 ++++++++++++++++++++++++++++++++++--
 clutter/eglx/clutter-backend-egl.h |    2 +
 2 files changed, 78 insertions(+), 4 deletions(-)

commit e2a990dfd54761d147aec8b751ca6f5c29233652
Author: Brian Tarricone <brian@kakai.com>
Date:   Thu Mar 25 19:37:26 2010 -0700

    update backend to use lazy context/stage creation
    
    http://bugzilla.openedhand.com/show_bug.cgi?id=2056

 clutter/eglx/clutter-backend-egl.c |  171 ++++++++++++++++------
 clutter/eglx/clutter-backend-egl.h |    3 +-
 clutter/eglx/clutter-stage-egl.c   |  278 ++++++++++++------------------------
 clutter/eglx/clutter-stage-egl.h   |    3 +
 4 files changed, 229 insertions(+), 226 deletions(-)

commit 07880d8b7426c84ace18cb1dceda6998cfc84f99
Author: Neil Roberts <neil@linux.intel.com>
Date:   Tue May 18 13:55:18 2010 +0100

    configure: Check the result of AM_PATH_GLIB_2_0
    
    The AM_PATH_GLIB_2_0 doesn't automatically cause the configure script
    to fail if the test fails. This wouldn't usually cause any problems
    because we later check for the right glib version using
    PKG_CHECK_MODULES directly. However AM_PATH_GLIB_2_0 is more thorough
    when checking because it also tries to run a program against the
    library to read the version. If the macro fails but the pkg-config
    check passes then nothing will define GLIB_GENMARSHAL and the build
    step will fail in a confusing way.
    
    This adds a check for the result and gives an AC_MSG_ERROR if it
    fails. The glib dependencies have been moved out of CLUTTER_DEPS to
    AM_PATH_GLIB_2_0.
    
    http://bugzilla.openedhand.com/show_bug.cgi?id=2127

 configure.ac |   10 ++++++----
 1 file changed, 6 insertions(+), 4 deletions(-)

commit 354d003860ff28322f01f736555d16079420235b
Author: Øyvind Kolås <pippin@linux.intel.com>
Date:   Mon May 17 18:05:19 2010 +0100

    animator: fix issue of dropped frames towards end of animations

 clutter/clutter-animator.c |    9 ++++++---
 1 file changed, 6 insertions(+), 3 deletions(-)

commit c007b7489b240af4fc7b3c24cdf62252757c6aa7
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Mon May 17 14:34:31 2010 +0100

    action: Warn if set_name() is called multiple times

 clutter/clutter-actor-meta.c |    9 +++++++++
 1 file changed, 9 insertions(+)

commit 4fd74e71e640b0762f883a7f7c2f996c54379fee
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Wed May 12 12:00:33 2010 +0100

    action: Add DragAction, an action implementing drag capabilities
    
    DragAction is an Action sub-class that provides dragging capabilities to
    any actor. DragAction has:
    
      • drag-begin, drag-motion and drag-end signals, relaying the event
        information like coordinates, button and modifiers to user code;
    
      • drag-threshold property, for delaying the drag start by a given
        amount of pixels;
    
      • drag-handle property, to allow using other actors as the drag
        handle.
    
      • drag-axis property, to allow constraining the dragging to a specific
        axis.
    
    An interactive test demonstrating the various features is also provided.

 .gitignore                    |    1 +
 clutter/Makefile.am           |    2 +
 clutter/clutter-drag-action.c |  813 +++++++++++++++++++++++++++++++++++++++++
 clutter/clutter-drag-action.h |  148 ++++++++
 clutter/clutter-marshal.list  |    2 +
 clutter/clutter.h             |    1 +
 tests/interactive/Makefile.am |    3 +-
 tests/interactive/test-drag.c |  189 ++++++++++
 8 files changed, 1158 insertions(+), 1 deletion(-)

commit 0e0db0d6242f84c8fb44ba57ec46d6dff5f265b3
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Tue May 11 17:09:13 2010 +0100

    action: Add ClutterAction
    
    ClutterAction is an abstract class that should be used as the ancestor
    for objects that change how an actor behaves when dealing with events
    coming from user input.

 clutter/Makefile.am      |    2 +
 clutter/clutter-action.c |   61 ++++++++++++++++++
 clutter/clutter-action.h |   94 +++++++++++++++++++++++++++
 clutter/clutter-actor.c  |  160 ++++++++++++++++++++++++++++++++++++++++++++--
 clutter/clutter-types.h  |    1 +
 clutter/clutter.h        |    1 +
 6 files changed, 312 insertions(+), 7 deletions(-)

commit c075d26fb2abcd53821c816fe1feb20e0578cce1
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Fri May 14 16:42:50 2010 +0100

    actor: Add ActorMeta, a base class for actor modifiers
    
    ClutterActorMeta is a base, abstract class that can be used to derive
    classes that are attached to a ClutterActor instance in order to modify
    the way an actor is painted, sized/positioned or responds to events.
    
    A typed container for ActorMeta instances is also provided to the
    sub-classes can be attached to an Actor.

 clutter/Makefile.am                  |    3 +
 clutter/clutter-actor-meta-private.h |   42 ++++
 clutter/clutter-actor-meta.c         |  413 ++++++++++++++++++++++++++++++++++
 clutter/clutter-actor-meta.h         |   84 +++++++
 clutter/clutter-types.h              |    4 +
 clutter/clutter.h                    |    1 +
 6 files changed, 547 insertions(+)

commit 7caa10160dce6b7d8001421331133c4a00dfde52
Author: Neil Roberts <neil@linux.intel.com>
Date:   Wed May 12 18:57:52 2010 +0100

    cogl-material: Set the blend equation even if blend funcs are the same
    
    Previously it would only try to set the blend equation if the RGB and
    alpha blending functions were different. However it's completely valid
    to use a non-standard blending function when the functions are the
    same. This patch moves the blending equation to outside the if
    statement.

 clutter/cogl/cogl/cogl-material.c |   28 +++++++++++++---------------
 1 file changed, 13 insertions(+), 15 deletions(-)

commit dd9e7853ece631be48ac85e3a984bfb93a127b43
Author: Neil Roberts <neil@linux.intel.com>
Date:   Wed May 12 15:19:09 2010 +0100

    cogl-material: Set blend constant even if alpha and rgb factors are the same
    
    Previously it would only set the blend constant if glBlendFuncSeparate
    was used but it is perfectly acceptable to use the blend constant when
    the same factor is used for each. It now sets the blend constant
    whenever one of the factors would use the constant.

 clutter/cogl/cogl/cogl-material.c |   26 ++++++++++++++++++++++----
 1 file changed, 22 insertions(+), 4 deletions(-)

commit 502446ed8dc56ab9dccacbdd68f54306fe4d3558
Author: Neil Roberts <neil@linux.intel.com>
Date:   Wed May 12 17:56:25 2010 +0100

    cogl-blend-string: Don't split combined blend statements into two
    
    When a single statement is used to specify the factors for both the
    RGB and alpha parts it previously split up the statement into
    two. This works but it ends up unnecessarily using glBlendFuncSeparate
    when glBlendFunc would suffice.
    
    For example, the blend statement
    
     RGBA = ADD(SRC_COLOR*(SRC_COLOR), DST_COLOR*(1-SRC_COLOR))
    
    would get split into the two statements
    
     RGBA = ADD(SRC_COLOR*(SRC_COLOR[RGB]), DST_COLOR*(1-SRC_COLOR[RGB]))
     A    = ADD(SRC_COLOR*(SRC_COLOR[A]), DST_COLOR*(1-SRC_COLOR[A]))
    
    That translates to:
    
     glBlendFuncSeparate (GL_SRC_COLOR, GL_ONE_MINUS_SRC_COLOR,
                          GL_SRC_ALPHA, GL_ONE_MINUS_SRC_ALPHA);
    
    This patch makes it so that arg_to_gl_blend_factor can handle the
    combined RGBA mask instead. That way the single statement gets
    translated to the equivalent call:
    
     glBlendFunc (GL_SRC_COLOR, GL_ONE_MINUS_SRC_COLOR);

 clutter/cogl/cogl/cogl-material.c |   16 +++++-----------
 1 file changed, 5 insertions(+), 11 deletions(-)

commit 47d54930164f3c3478ccba66a01aadd0e72802d0
Author: Chris Lord <chris@linux.intel.com>
Date:   Thu May 13 15:51:42 2010 +0100

    text: Fix typos that were causing false-positive cache hits
    
    If a cached layout didn't actually match the layout we're looking for,
    it would be returned anyway. Remove this return so that it can correctly
    continue looking and get a cache miss if appropriate.
    
    http://bugzilla.openedhand.com/show_bug.cgi?id=2109

 clutter/clutter-text.c |    4 +---
 1 file changed, 1 insertion(+), 3 deletions(-)

commit acea83d7ae088ef3d0422de7cd1d01836c5ef8f4
Author: Neil Roberts <neil@linux.intel.com>
Date:   Thu Apr 22 11:58:52 2010 +0100

    cogl-path: Use true copy-on-write semantics
    
    Previously a path copy was implemented such that only the array of
    path nodes was shared with the source and the rest of the data is
    copied. This was so that the copy could avoid a deep copy if the
    source path is appended to because the copy keeps track of its own
    length. This optimisation is probably not worthwhile because it makes
    the copies less cheap. Instead the CoglPath struct now just contains a
    single pointer to a new CoglPathData struct which is separately
    ref-counted. When the path is modified it will be copied if the ref
    count on the data is not 1.

 clutter/cogl/cogl/cogl-path-private.h |   20 ++-
 clutter/cogl/cogl/cogl-path.c         |  249 ++++++++++++++++-----------------
 2 files changed, 125 insertions(+), 144 deletions(-)

commit a12a2e591b0ce00b918578abfce832490a8c1d6d
Author: Neil Roberts <neil@linux.intel.com>
Date:   Mon May 10 17:43:17 2010 +0100

    Add a conformance test for ClutterCairoTexture
    
    This adds a simple test for ClutterCairoTexture that draws two
    rectangles to the cairo surface in an idle callback and then verifies
    that they appeared at the right colours in the paint callback. If that
    succeeds then the second time the idle callback is invoked it will
    replace one of the rectangles with a sub region update and the
    following paint callback will again verify the rectangles.

 .gitignore                                 |    1 +
 tests/conform/Makefile.am                  |    1 +
 tests/conform/test-clutter-cairo-texture.c |  196 ++++++++++++++++++++++++++++
 tests/conform/test-conform-main.c          |    1 +
 4 files changed, 199 insertions(+)

commit 4ef041371ce4ebedfe73e014aecb1f33d22aa8df
Author: Owen W. Taylor <otaylor@fishsoup.net>
Date:   Sat May 8 13:38:37 2010 -0400

    text: correct caching logic
    
    This patch combines a number of fixes and improvements to the
    layout caching logic in ClutterText.
    
     * Fix: The width must always be set on the PangoLayout when painting.
       This is necessary because the layout aligns in the width, and
       even when we think we are left-aligned, the auto-dir feature
       of PangoLayout may result in right-alignment.
    
     * Fix: We should only ever try to reuse a cached layout based
       on its logical width if layout.width was -1 when computing
       that logical width. If the layout was already ellipsized,
       then comparing the logical width to the new width we are
       trying to wrap to doesn't make sense. (If "abc" ellipsizes
       to a 15-pixel wide "..." for a width of 1 pixel, that doesn't
       mean that we should use "..." for a width of 15 pixels. Maybe
       "abc" itself is 15 pixels wide.)
    
     * Improvement: rather than looking up cached layouts based on the
       input allocation_width/allocation_height, look them up based
       on the actual width/height/ellipsize that we pass to create
       a layout. This is simpler and improves the chance we'll get
       a cache hit when appropriate even if there are small floating
       point differences.
    
    Note because of the first fix this is less aggressive than dd40732
    in caching layouts; get_preferred_width() and painting can't share
    a layout since get_preferred_width() needs to pass a width of -1
    to Pango and painting needs to pass the real width.
    
    The patch has been updated from the clutter-1.2 branch to current
    master; using the profiling instrumentation it is possible to verify
    with test-text-field that the hit/miss counters go from:
    
       Name                                   Total Per Frame
       ----                                   ----- ---------
       Text layout cache hit counter          13    6
       Text layout cache miss counter         11    5
    
    before applying the patch, to:
    
       Name                                   Total Per Frame
       ----                                   ----- ---------
       Text layout cache miss counter         4     2
       Text layout cache hit counter          3     1
    
    after applying the patch.
    
    https://bugzilla.gnome.org/show_bug.cgi?id=618104
    
    http://bugzilla.openedhand.com/show_bug.cgi?id=2109
    
    Signed-off-by: Emmanuele Bassi <ebassi@linux.intel.com>

 clutter/clutter-text.c |  289 +++++++++++++++++++++++-------------------------
 1 file changed, 139 insertions(+), 150 deletions(-)

commit 16680c74f36d64b3fb9e1e3f3985c7e757dafdf3
Author: Neil Roberts <neil@linux.intel.com>
Date:   Mon May 10 15:33:05 2010 +0100

    Revert "clutter-cairo-texture: Use the new cogl_pixel_buffer API"
    
    This reverts commit 716ec82db8bec57e35d51e8dee5468435fc9e59e.
    
    The Cogl pixel buffer API currently has problems if an atlas texture
    is created or the format needs to be converted. The atlas problem
    doesn't currently show because the atlas rejects BGR textures anyway
    but we may want to change this soon. The problem with format
    conversion would happen under GLES because that does not support BGR
    textures at all so Cogl has to do the conversion. However it doesn't
    currently show either because GLES has no support for buffer objects
    anyway.
    
    It's also questionable whether the patch would give any performance
    benefit because Cairo needs read/write access which implies the buffer
    can't be put in write-optimised memory.
    
    Conflicts:
    
    	clutter/clutter-cairo-texture.c
    
    http://bugzilla.openedhand.com/show_bug.cgi?id=1982

 clutter/clutter-cairo-texture.c |  204 +++++++++++++++++++++++++--------------
 1 file changed, 131 insertions(+), 73 deletions(-)

commit af37a1029ff86d082b55cebef6f59d227ab22da8
Author: Owen W. Taylor <otaylor@fishsoup.net>
Date:   Sat May 8 16:58:14 2010 -0400

    cogl-framebuffer: Flush journal when creating fbo
    
    Since framebuffer state is not flushed prior to replaying the journal,
    the trick of marking the framebuffer dirty prior to calling
    glBindFramebuffer() doesn't work... the outstanding journal entries
    will get replayed to the newly created framebuffer.
    
    Fix this by flushing the journal as well.
    
    http://bugzilla.openedhand.com/show_bug.cgi?id=2110
    
    Signed-off-by: Robert Bragg <robert@linux.intel.com>

 clutter/cogl/cogl/cogl-framebuffer.c |    7 +++++--
 1 file changed, 5 insertions(+), 2 deletions(-)

commit b3de036c97c8b527e1993dd8788bdfa6581888ee
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Mon May 10 14:28:21 2010 +0100

    Add tests/conform/wrappers to the ignore file

 .gitignore |    1 +
 1 file changed, 1 insertion(+)

commit 4c850d39c59bc1d88f527f99485882fa2399afbf
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Sun May 9 00:13:16 2010 +0100

    Fix annotation typos

 clutter/clutter-animation.c |    6 +++---
 1 file changed, 3 insertions(+), 3 deletions(-)

commit 493041c505adb01876599d4dded62f3f8f8b2d02
Author: Neil Roberts <neil@linux.intel.com>
Date:   Fri May 7 18:03:39 2010 +0100

    clutter-cairo-texture: Fix destroying the old texture
    
    In clutter_cairo_texture_create_region it tries to destroy the old
    texture before mapping the PBO by setting the texture on the first
    layer of the material to COGL_INVALID_HANDLE. However it was using the
    material API incorrectly so it ended up showing a warning and doing
    nothing.

 clutter/clutter-cairo-texture.c |    6 +-----
 1 file changed, 1 insertion(+), 5 deletions(-)

commit 6228082e14b11301d63443837ffe744e8b340ab3
Author: Robert Bragg <robert@linux.intel.com>
Date:   Thu May 6 14:53:50 2010 +0100

    conform: Make gtester run a list of wrappers
    
    Instead of asking gtester to run ./test-conformance directly we now tell
    it to run a list of wrapper scripts. This results in each test being
    spawned in a separate process avoiding leakage of state between tests
    which has been a big problem with the conformance tests for quite a
    while now.

 tests/conform/Makefile.am      |   38 ++++++++++++++++++++++++--------------
 tests/conform/run-tests.sh     |   14 ++++++++++++++
 tests/conform/test-launcher.sh |    5 +++--
 3 files changed, 41 insertions(+), 16 deletions(-)

commit 0120abe5b071ec38a897d55f00d48cfec71b2877
Author: Neil Roberts <neil@linux.intel.com>
Date:   Fri May 7 15:58:26 2010 +0100

    test-cogl-multitexture: Set linear filters on the two textures
    
    Otherwise it seems that rounding errors will cause the fragments at
    the edge of the quad to blend with neighbouring quarters of the
    texture which cause the test to fail.

 tests/conform/test-cogl-multitexture.c |    9 +++++++++
 1 file changed, 9 insertions(+)

commit 21117bb7a9cc4e0341da990f88b798ad2c8e59a0
Author: Neil Roberts <neil@linux.intel.com>
Date:   Thu May 6 14:21:53 2010 +0100

    test-conform-common: Disconnect all paint handlers on the stage
    
    A few of the tests connected to the paint signal but never
    disconnected it. Most of these handlers had a call to g_main_quit in
    them which meant that it could sometimes cause subsequent tests to
    exit after the first frame is painted. Most of the tests don't
    validate any of the results until after a couple of frames have been
    rendered so this ended up skipping out the test entirely.
    
    To workaround this the test setup function now disconnects all
    handlers for the paint signal on the default stage before the test is
    run.

 tests/conform/test-conform-common.c |   21 +++++++++++++++++++++
 1 file changed, 21 insertions(+)

commit 61ae7c6df72a802a06da934623aa97d71e562b43
Author: Neil Roberts <neil@linux.intel.com>
Date:   Thu May 6 14:18:32 2010 +0100

    test-cogl-readpixels: Reset the viewport and matrices
    
    The on_paint function for test-cogl-readpixels tries to temporarily
    set the projection, modelview and viewport to its own values. However
    it was never restoring the saved values so it could affect the results
    of subsequent tests.

 tests/conform/test-cogl-readpixels.c |    7 +++++++
 1 file changed, 7 insertions(+)

commit b9c7051484f062f958b8e3ddc333e3b0c3509acf
Author: Neil Roberts <neil@linux.intel.com>
Date:   Thu May 6 14:16:33 2010 +0100

    test-cogl-path: Initialise state.frame
    
    state.frame was left unitialized so it would be left to happenstance
    which of the first three frames would be used for validating the test.

 tests/conform/test-cogl-path.c |    1 +
 1 file changed, 1 insertion(+)

commit 0021b4aee0205057c9522a734dc1205e920d38d8
Author: Neil Roberts <neil@linux.intel.com>
Date:   Thu May 6 14:15:04 2010 +0100

    cogl-clip-stack: Set *stencil_used_p when the stack is empty
    
    If the clip stack is empty then _cogl_clip_stack_flush exits
    immediately. This was missing out the assignment of *stencil_used_p at
    the bottom of the function. If a path is then used after the clip is
    cleared then it would think it needs to merge with the clip so the
    stencil would not be cleared correctly.

 clutter/cogl/cogl/cogl-clip-stack.c |    5 ++++-
 1 file changed, 4 insertions(+), 1 deletion(-)

commit f4ee7dc0e185e7b5348539513a7fb7705a168849
Author: Neil Roberts <neil@linux.intel.com>
Date:   Thu Apr 8 00:20:18 2010 +0100

    clutter-color: Don't directly read the contents of GValue structs
    
    The code for implementing ClutterColor as GParamSpec and the
    color↔string transformation functions were assuming that ClutterColor
    owns the data in the GValue struct and directly reading
    data[0].v_pointer to get a pointer to the color. However ClutterColor
    is actually a boxed type and the format of the data array is meant to
    be internal to GObject so it is not safe to poke around in it
    directly. This patch changes it to use g_value_get_boxed to get the
    pointer.
    
    Also, boxed types allow a NULL value to be stored and not all of the
    code was coping with this. This patch also attempts to fix that.
    
    http://bugzilla.openedhand.com/show_bug.cgi?id=2068

 clutter/clutter-color.c |   50 +++++++++++++++++++++++++++++++++--------------
 1 file changed, 35 insertions(+), 15 deletions(-)

commit fa1638c0ab5e825830f987ac9ed8d1adcdff3859
Author: Neil Roberts <neil@linux.intel.com>
Date:   Thu Apr 8 00:17:48 2010 +0100

    clutter-color: Remove the value table
    
    ClutterColor has long had a GTypeValueTable struct around and the
    functions defined to be implemented as a fundamental type. However the
    struct was never actually used anywhere and ClutterColor is actually
    defined as a boxed type. This patch removes the table because it is
    very confusing to have code lying around that is not used.
    
    http://bugzilla.openedhand.com/show_bug.cgi?id=2068

 clutter/clutter-color.c |   88 -----------------------------------------------
 1 file changed, 88 deletions(-)

commit 452cb1abbfed4adb7e3d802765df9e27775adc4f
Author: Øyvind Kolås <pippin@linux.intel.com>
Date:   Wed May 5 18:15:12 2010 +0100

    animator: fix looping when doing cubic interpolation
    
    When using interpolation and the last key is not at 1.0 a bouncing
    artifact could be observed after the keys.

 clutter/clutter-animator.c |    4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

commit e4089efb4c36abe2c743eefef0c960cb9453ae85
Author: Øyvind Kolås <pippin@linux.intel.com>
Date:   Wed May 5 16:55:16 2010 +0100

    animator: only keys that are removed due to actors disappearing are inert

 clutter/clutter-animator.c |   58 +++++++++++++++++++++++++++++---------------
 1 file changed, 38 insertions(+), 20 deletions(-)

commit 0f8ca38e594ac829b246b2107e20f68e29dbe75c
Author: Øyvind Kolås <pippin@linux.intel.com>
Date:   Wed May 5 13:48:34 2010 +0100

    animator: refactoring
    
    renamed KeyAnimator to PropertyIter

 clutter/clutter-animator.c |  167 ++++++++++++++++++++++----------------------
 1 file changed, 84 insertions(+), 83 deletions(-)

commit 8afb091f56c8f4c15c587f79bb683cfcdb998f5a
Author: Øyvind Kolås <pippin@linux.intel.com>
Date:   Wed May 5 13:58:15 2010 +0100

    animator: retain ease-in/interpolation when changing first key
    
    Duplicate the existing ease-in/interpolation mode for the property when
    removing, replacing the first key for a property or adding a new first
    key for a property.

 clutter/clutter-animator.c |   38 +++++++++++++++++++++++++++++++++++++-
 1 file changed, 37 insertions(+), 1 deletion(-)

commit d45395d78bf033cb9895092f77bdd81b9802fb2f
Author: Øyvind Kolås <pippin@linux.intel.com>
Date:   Wed May 5 13:34:06 2010 +0100

    animator: fix crash when setting keys on running animator
    
    When inserting or modifying keys of a running animator the internal
    iterators per property could go out of sync. Reinitializing the
    iterators if the timeline is running avoids this.

 clutter/clutter-animator.c |    4 ++++
 1 file changed, 4 insertions(+)

commit 9ebd5fd935e6695acfbebfe479e56c20b0a92a15
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Mon Apr 26 18:08:45 2010 +0100

    Implement accessors for the color bits in a framebuffer
    
    Instead of using cogl_get_bitmasks() to query the GL machinery for the
    size of the color bits, we should store the values inside the
    CoglFramebuffer object and query them the first time we set the framebuffer
    as the current one.
    
    Currently, cogl_get_bitmasks() is re-implemented in terms of
    cogl_framebuffer_get_*_bits(). As soon as we are able to expose the
    CoglOnscreen framebuffer object in the public API we'll be able to
    deprecate cogl_get_bitmasks() altogether.
    
    http://bugzilla.openedhand.com/show_bug.cgi?id=2094

 clutter/cogl/cogl/cogl-context.c             |    1 +
 clutter/cogl/cogl/cogl-framebuffer-private.h |   18 ++++++++
 clutter/cogl/cogl/cogl-framebuffer.c         |   57 ++++++++++++++++++++++++++
 clutter/cogl/cogl/cogl.c                     |   24 ++++-------
 clutter/cogl/cogl/cogl.h                     |   52 +++++++++++++++++++++++
 5 files changed, 135 insertions(+), 17 deletions(-)

commit 0ff02d18d2741adbb79d479a34325f0d63a05c26
Author: Neil Roberts <neil@linux.intel.com>
Date:   Wed May 5 12:05:15 2010 +0100

    gles: Fix the functions names for the GL_OES_framebuffer_object ext
    
    In 91cde78a7 I accidentally changed the function names that get looked
    up for the framebuffer extension under GLES so that they didn't have
    any suffix. The spec for extension specifies that they should have the
    OES suffix.

 clutter/cogl/cogl/driver/gles/cogl-feature-functions.h |    5 +----
 1 file changed, 1 insertion(+), 4 deletions(-)

commit d8e1bd989c0ccd95a6c0cea20d567da9a3bc6d79
Author: Owen W. Taylor <otaylor@fishsoup.net>
Date:   Fri Apr 30 14:56:07 2010 -0400

    Ignore unexpected GLX_BufferSwapComplete
    
    A server that supports GLX_BufferSwapComplete will always send
    these events, so we should just silently ignore them if we've
    chosen not to take advantage of the INTEL_swap_event GLX
    extension.
    
    http://bugzilla.openedhand.com/show_bug.cgi?id=2102
    
    Signed-off-by: Emmanuele Bassi <ebassi@linux.intel.com>

 clutter/glx/clutter-event-glx.c |   15 ++++++++-------
 1 file changed, 8 insertions(+), 7 deletions(-)

commit 21914eaead44447e5ee4e0ffef205be9d4ba7524
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Wed May 5 11:53:51 2010 +0100

    docs: Update the dependencies in the README

 README |    4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

commit 755625c75897a17da971d2252224a10bb39b1cf2
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Wed May 5 11:52:20 2010 +0100

    build: Clean up build dependencies
    
    • Depend on autoconf 2.63
    • Depend on automake 1.11
    • Depend on gobject-introspection 0.6.7
    • Depend on gtk-doc 1.13
    • Remove Shave from the build

 build/autotools/Makefile.am.silent |    6 ---
 build/autotools/shave-libtool.in   |   69 --------------------------------
 build/autotools/shave.in           |   76 ------------------------------------
 build/autotools/shave.m4           |   73 ----------------------------------
 configure.ac                       |   38 +++++-------------
 5 files changed, 10 insertions(+), 252 deletions(-)

commit 33642757f5a82418b71600c758babc2b86577b1d
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Wed May 5 11:32:39 2010 +0100

    animation: Use 'guint' for set_duration() parameter
    
    The :duration property and the get_duration() method use unsigned int,
    but the setter using a signed integer for no apparent reason.
    
    http://bugzilla.openedhand.com/show_bug.cgi?id=2089

 clutter/clutter-animation.c |    2 +-
 clutter/clutter-animation.h |    2 +-
 2 files changed, 2 insertions(+), 2 deletions(-)

commit 0835e27380e2de484c0bd330ab0163d5df63b902
Author: Jussi Kukkonen <jku@linux.intel.com>
Date:   Sun Apr 18 10:47:14 2010 +0300

    container: use CLUTTER_IS_ACTOR on correct parameter
    
    clutter_container_create_child_meta() uses CLUTTER_IS_ACTOR on the
    container parameter instead of the actor parameter.
    
    http://bugzilla.openedhand.com/show_bug.cgi?id=2087
    
    Signed-off-by: Emmanuele Bassi <ebassi@linux.intel.com>

 clutter/clutter-container.c |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit 71f942d03a42e9f0c2a88823aaa20d375f392163
Author: Damien Lespiau <damien.lespiau@intel.com>
Date:   Mon May 3 20:41:17 2010 +0200

    debug: Use G_UNLIKELY in the tests
    
    Debugging code is not meant to be run in the nominal code path. Use
    G_UNLIKELY to be reduce the number of bubbles in the instruction
    pipeline.
    
    Took the opportunity to re-indent the macros.

 clutter/clutter-debug.h        |   56 ++++++++++++++++++++--------------------
 clutter/cogl/cogl/cogl-debug.h |   20 +++++++-------
 2 files changed, 38 insertions(+), 38 deletions(-)

commit f9072b8663728994610d3a26ae41718c94cdcbc7
Author: Owen W. Taylor <otaylor@fishsoup.net>
Date:   Fri Apr 30 14:50:11 2010 -0400

    Call backend handle_event from clutter_x11_handle_event()
    
    Whether events come from the main loop source or from
    clutter_x11_handle_event(), we need to feed them to the backend
    virtual handle_event function. This fixes problems with clients
    using clutter_x11_handle_event() hanging because
    GLXBufferSwapComplete events aren't received.
    
    http://bugzilla.openedhand.com/show_bug.cgi?id=2101

 clutter/x11/clutter-event-x11.c |   10 +++++++++-
 1 file changed, 9 insertions(+), 1 deletion(-)

commit d6dbd62021b9a8e711a1c34865920959051329fb
Author: Robert Bragg <robert@linux.intel.com>
Date:   Fri Apr 30 12:10:16 2010 +0100

    debug: wrap glClear calls with the GE macro
    
    This adds a GE macro wrapper around our calls to glClear so we can
    print a warning for any errors reported by the driver.

 clutter/cogl/cogl/cogl.c |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit e477768bd859550930c57a72318c952076b67158
Author: Neil Roberts <neil@linux.intel.com>
Date:   Mon Apr 26 12:41:26 2010 +0100

    cogl-texture-2d-sliced: Use the converted bitmap when uploading
    
    When uploading texture data the cogl-texture-2d-sliced backend was
    using _cogl_texture_prepare_for_upload to create a bitmap suitable for
    upload but then it was using the original bitmap instead of the new
    bitmap for the data. This was causing any format conversions performed
    by cogl_texture_prepare_for_upload to be ignored.
    
    http://bugzilla.openedhand.com/show_bug.cgi?id=2059

 clutter/cogl/cogl/cogl-texture-2d-sliced.c |    6 +++---
 1 file changed, 3 insertions(+), 3 deletions(-)

commit 405d529f449bb3cfa7f156510a98e70e38c9e1b5
Author: Neil Roberts <neil@linux.intel.com>
Date:   Mon Apr 26 12:30:37 2010 +0100

    cogl-texture: Don't attempt to use GL to convert formats under GLES
    
    In commit abe91784c4b I changed cogl-texture so that it would use the
    OpenGL mechanism to specify a different internal texture format from
    the image format so that it can do the conversion instead of
    Cogl. However under GLES the internal format and the image format must
    always be the same and it only supports a limited set of formats. This
    patch changes _cogl_texture_prepare_for_upload so that it does the
    conversion using the cogl bitmap code when compiling for GLES.
    
    http://bugzilla.openedhand.com/show_bug.cgi?id=2059

 clutter/cogl/cogl/cogl-texture.c |   32 ++++++++++++++++++++++++++++++++
 1 file changed, 32 insertions(+)

commit 8530b7946a862abdbcd4890ba8a444799b75986d
Author: Neil Roberts <neil@linux.intel.com>
Date:   Tue Apr 27 16:38:07 2010 +0100

    cogl-material: Fix the check to prevent using too many layers
    
    There was a check at the bottom of the loop which sets up the state
    for each of the layers so that it would break from the loop when the
    maximum number of layers is reached. However after doing this it would
    not increment 'i'. 'i' is later used to disable the remaining layers
    so it would end up disabling the last layer it just set up.
    
    This patch moves the check to be part of the loop condition so that
    the check is performed after incrementing 'i'.
    
    http://bugzilla.openedhand.com/show_bug.cgi?id=2064

 clutter/cogl/cogl/cogl-material.c |    9 ++++-----
 1 file changed, 4 insertions(+), 5 deletions(-)

commit 3c2bb33cbd129a474bd59cf9efa8275617eb06fa
Author: Neil Roberts <neil@linux.intel.com>
Date:   Tue Apr 27 16:35:35 2010 +0100

    cogl-material: Fix the warning for when too many layers are used
    
    The warning displayed when too many layers are used had an off-by-one
    error so that it would display even if exactly the maximum number is
    used. There was also a missing space at the end of the line in the
    message which looked wrong when displayed on the terminal.
    
    http://bugzilla.openedhand.com/show_bug.cgi?id=2064

 clutter/cogl/cogl/cogl-material.c |    4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

commit a3bc4a6009086a92f1abc448a52865654d553993
Author: Neil Roberts <neil@linux.intel.com>
Date:   Tue Apr 27 16:34:59 2010 +0100

    test-cogl-materials: Add a test using the maximum number of layers
    
    This adds a test which creates a material using the maximum number of
    layers. All of the layers are assigned a white texture except the last
    which is set to red. The default combine mode is used for all of the
    layers so the final fragment should end up red.
    
    Currently Cogl doesn't provide a way to query the maximum number of
    layers so it just uses glGetIntegerv instead. This might cause
    problems on GLES 2 because that adds additional restrictions on the
    number of layers.
    
    http://bugzilla.openedhand.com/show_bug.cgi?id=2064

 tests/conform/test-cogl-materials.c |   62 +++++++++++++++++++++++++++++++++++
 1 file changed, 62 insertions(+)

commit ce261025f6dfd34153382cb69bcb7fb11b8e2561
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Wed Apr 28 16:19:37 2010 +0100

    Fix clutter_event_get_coords() for crossing events
    
    The ClutterCrossingEvent data structure contains the coordinates
    of the crossing; they are regularly filed out by Clutter and by
    the backend event processing code. And yet clutter_event_get_coords()
    returns (0, 0) because it thinks that CLUTTER_ENTER and CLUTTER_LEAVE
    events do not have coordinates.

 clutter/clutter-event.c |    4 ++++
 1 file changed, 4 insertions(+)

commit b7098563c26bb6e0f1992bb7c4cb711fbe0424ac
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Tue Apr 27 10:12:25 2010 +0100

    actor: Make consistent use of the name in error reporting
    
    Whenever we are warning inside ClutterActor we prefer the actor's name
    to its type, if the name is set. The current code is made less readable
    by the use of the ternary operator:
    
      priv->name != NULL ? priv->name : G_OBJECT_TYPE_NAME (self)
    
    This looks like a job for a simple convenience function.

 clutter/clutter-actor.c |  104 +++++++++++++++++++++--------------------------
 1 file changed, 46 insertions(+), 58 deletions(-)

commit 9024cd9f7c32b30f1ca5a4d5c53569af7c72da48
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Mon Apr 26 12:58:17 2010 +0100

    Clean up the Texture private data structure

 clutter/clutter-texture.c |   29 ++++++++++++++---------------
 1 file changed, 14 insertions(+), 15 deletions(-)

commit 48b8510a0688baef86db5b808e458c5295aee819
Author: Neil Roberts <neil@linux.intel.com>
Date:   Sun Apr 25 16:20:39 2010 +0100

    mingw-cross-compile.sh: Write the build environment to a script
    
    The script now writes out a separate script that can be used to set up
    the build environment to $ROOT_DIR/share/env.sh. This can be sourced
    in a shell to set up the build environment or it can be given a
    command to directly execute in the environment. This makes it easier
    to build Clutter from your own source rather than checking it out from
    git directly.

 build/mingw/mingw-cross-compile.sh |   88 ++++++++++++++++++++++++------------
 1 file changed, 60 insertions(+), 28 deletions(-)

commit eb22ab9bf2b6837b33911bd3962d09b757139366
Author: Neil Roberts <neil@linux.intel.com>
Date:   Sun Apr 25 16:09:16 2010 +0100

    mingw-cross-compile.sh: Update the package versions
    
    This updates to the latest binaries from Tor Lillqvist. zlib and iconv
    are now taken from the Tor deps instead of the gnuwin32 project. SDL
    is no longer downloaded because the SDL backend has been removed from
    Clutter. The GL headers are downloaded from the Mesa cgit rather than
    downloading the whole Mesa package. glext.h is taken directly from
    khronos.org.

 build/mingw/mingw-cross-compile.sh |  101 +++++++++++-------------------------
 1 file changed, 29 insertions(+), 72 deletions(-)

commit a881c8b07e73325749bb2ab6c0d4d5710507b016
Author: Neil Roberts <neil@linux.intel.com>
Date:   Thu Apr 22 18:14:40 2010 +0100

    cogl-path: Make cogl_path_arc_rel static
    
    cogl_path_arc_rel was never in any public headers so it isn't part of
    the public API. It also has a slightly inconsistent name because the
    rest of the relative path functions are called cogl_path_rel_*. This
    patch makes it static for now to make it more obvious that it isn't
    public. The name has changed to _cogl_path_rel_arc.

 clutter/cogl/cogl/cogl-path.c |   56 ++++++++++++++++++++---------------------
 1 file changed, 28 insertions(+), 28 deletions(-)

commit e16f05326e72484a38c5154ecdf973de2c35445a
Author: Neil Roberts <neil@linux.intel.com>
Date:   Thu Apr 22 18:03:57 2010 +0100

    cogl-path: Add documentation for the angles of cogl_path_arc
    
    This adds documentation for how Cogl interprets the angles given to
    cogl_path_arc.

 clutter/cogl/cogl/cogl-path.h |   10 ++++++++--
 1 file changed, 8 insertions(+), 2 deletions(-)

commit 73e4d49053b8cf79d0d5694e2b077e0e7ab05dfe
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu Apr 22 17:54:05 2010 +0100

    profile: Add profiling points for Text
    
    Add a static timer for the text layout code, and two counters for the
    layout cache hit and miss conditions.

 clutter/clutter-text.c |   44 +++++++++++++++++++++++++++++++++++++-------
 1 file changed, 37 insertions(+), 7 deletions(-)

commit 5608a54708c3ab1665840c24bdfcb9c2b38fa78b
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu Apr 22 17:52:13 2010 +0100

    profile: Fix the report generation
    
    Timers and counters might not exist, so make every section of the
    profile report depend on the object that it is querying.
    
    This fixes the profile report generation that was broken by commit
    8146d8d08deafd6cf86238a4a8c2fa6149e5c691.

 clutter/clutter-profile.c |   31 +++++++++++++++++--------------
 1 file changed, 17 insertions(+), 14 deletions(-)

commit b13eb77e05670367b99caa4d4cb6a9f24e9b15aa
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu Apr 22 17:51:56 2010 +0100

    Add uprof to the jhbuild moduleset

 build/clutter.modules |    6 ++++++
 1 file changed, 6 insertions(+)

commit 05cf570570879fe5d699a07ad19a27168b57c23b
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu Apr 22 16:49:57 2010 +0100

    actor: Add an internal variant of get_stage()
    
    For internal use we should have a get_stage_internal() variant that
    avoids type checks and calls to public functions. The implementation
    is trivial enough, and it will avoid (scene graph depth + 1) type
    checks and (scene graph depth) function calls.

 clutter/clutter-actor.c |   47 ++++++++++++++++++++++++++---------------------
 1 file changed, 26 insertions(+), 21 deletions(-)

commit 1355c19f66a029247dab775b8c9d52aa44889a6e
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Wed Apr 21 11:30:54 2010 +0100

    docs: Fix gtk-doc warnings

 clutter/clutter-behaviour-opacity.h |    2 +-
 clutter/clutter-behaviour.c         |    4 ++--
 2 files changed, 3 insertions(+), 3 deletions(-)

commit 3196658b8ca648655815a61a04e09c479084b1f2
Author: Neil Roberts <neil@linux.intel.com>
Date:   Wed Apr 21 22:36:43 2010 +0100

    cogl-path: Fix the truncation when adding to a copied path
    
    If a path is copied and then appended to, the copy needs to have the
    last sub path truncated so that it fits in the total path size in case
    the original path was modified. However the path size check was broken
    so if the copied path had more than one sub path it would fail.

 clutter/cogl/cogl/cogl-path.c |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit fddd3169865f1ad623453d8fc9490277325ed105
Author: Neil Roberts <neil@linux.intel.com>
Date:   Wed Apr 21 18:58:18 2010 +0100

    test-cogl-path: Test sub paths and intersections
    
    This changes the original tests so that it splits the original path
    into two sub paths. When adding a new block to the copied path it also
    adds another sub path. This further stresses the path copying
    mechanism and exposes a bug.
    
    It also tests intersections by drawing a self-intersecting path and a
    path with two sub-paths that overlap. Where the path overlaps it
    should be inverted.

 tests/conform/test-cogl-path.c |   33 ++++++++++++++++++++++++++++-----
 1 file changed, 28 insertions(+), 5 deletions(-)

commit abc64a2c671a4eeafa374ceb91482e058705f6fb
Author: Neil Roberts <neil@linux.intel.com>
Date:   Tue Apr 20 14:58:57 2010 +0100

    cogl-clip-stack: Use orientation of the polygon to set clip planes
    
    Previously the clip stack code was trying to detect when the
    orientation of the on-screen rectangle had changed by checking if the
    order of the y-coordinates on the left edge was different from the
    order the x-coordinates on the top edge. This doesn't work for some
    rotations which was causing the clip planes to clip the wrong side of
    the line. This patch makes it detect the orientation by calculating
    the signed area which is a standard computer graphics algorithm.
    
    http://bugzilla.openedhand.com/show_bug.cgi?id=2079

 clutter/cogl/cogl/cogl-clip-stack.c |   43 +++++++++++++++++++----------------
 1 file changed, 24 insertions(+), 19 deletions(-)

commit 7f2b2e13641c146f4b62631ed89638aba610ae07
Author: Neil Roberts <neil@linux.intel.com>
Date:   Wed Apr 21 11:49:57 2010 +0100

    cogl-path: Document how a shape is filled
    
    This adds some documentation to cogl_path_fill() describing the fill
    rule Cogl uses.

 clutter/cogl/cogl/cogl-path.h    |   28 +++++++++++++++++++++++-----
 doc/reference/cogl/Makefile.am   |    6 +++++-
 doc/reference/cogl/fill-rule.png |  Bin 0 -> 3121 bytes
 3 files changed, 28 insertions(+), 6 deletions(-)

commit 44c86fceadf4e770fa93df1605cf93f16103b195
Author: Neil Roberts <neil@linux.intel.com>
Date:   Mon Apr 19 18:54:40 2010 +0100

    cogl-path: Don't try to union sub paths
    
    When drawing a path with only a single sub path, Cogl uses the
    'even-odd' fill rule which means that if a part of the path intersects
    with another part then the intersection would be inverted. However
    when combining sub paths it treats them as separate paths and then
    unions them together. This doesn't match the semantics of the even-odd
    rule in SVG and Cairo. This patch makes it so that a new sub path is
    just drawn as another triangle fan so that it will continue to invert
    the stencil buffer. This is also much simpler and more efficient as
    well as being more correct.
    
    http://bugzilla.openedhand.com/show_bug.cgi?id=2088

 clutter/cogl/cogl/cogl-path.c |   24 ------------------------
 1 file changed, 24 deletions(-)

commit 78dc59b34859686c89e9b96dc0fc78f453031262
Author: Neil Roberts <neil@linux.intel.com>
Date:   Fri Mar 26 23:09:11 2010 +0000

    picking: Read the colour value using COGL_PIXEL_FORMAT_RGBA_8888_PRE
    
    In commit c0a553163b I changed the format used to read the picking
    pixel to COGL_PIXEL_FORMAT_RGB_888 because it was convenient to avoid
    the premult conversion. However this broke picking on GLES on some
    platforms because for that glReadPixels is only guaranteed to support
    GL_RGBA with GL_UNSIGNED_BYTE. Since the last commit cogl_read_pixels
    will always use that format but it will end up with a conversion back
    to RGB_888. This patch avoids that conversion and avoids the premult
    conversion by reading in RGBA_8888_PRE.
    
    http://bugzilla.openedhand.com/show_bug.cgi?id=2057

 clutter/clutter-main.c |   12 +++++++++---
 1 file changed, 9 insertions(+), 3 deletions(-)

commit 0cb09cd40d6b031a5514038af73a13d4e7bf2f82
Author: Neil Roberts <neil@linux.intel.com>
Date:   Fri Mar 26 22:40:53 2010 +0000

    cogl_read_pixels: Always use GL_RGBA/GL_UNSIGNED_BYTE under GLES
    
    Under GLES glReadPixels is documented to only support GL_RGBA with
    GL_UNSIGNED_BYTE and an implementation specfic format which can be
    fetched with glGet, GL_IMPLEMENTATION_COLOR_READ_FORMAT_OES and
    GL_IMPLEMENTATION_COLOR_READ_TYPE_OES. This patch makes it always read
    using GL_RGBA and GL_UNSIGNED_BYTE and then convert the results if
    neccessary.
    
    This has some room for improvement because it doesn't attempt to use
    the implementation specific format. Also the conversion is somewhat
    wasteful because there are currently no cogl_bitmap_* functions to
    convert without allocating a new buffer so it ends up doing an
    intermediate copy.
    
    http://bugzilla.openedhand.com/show_bug.cgi?id=2057

 clutter/cogl/cogl/cogl.c |   67 +++++++++++++++++++++++++++++++++++++++-------
 1 file changed, 58 insertions(+), 9 deletions(-)

commit 9750b90f37127c85f7092c16ca64fb0b63501882
Author: Neil Roberts <neil@linux.intel.com>
Date:   Fri Mar 26 22:34:56 2010 +0000

    cogl-bitmap: Fix converting formats with and without alpha channels
    
    _cogl_bitmap_convert_format_and_premult was failing when converting
    from RGBA to RGB and vice versa. _cogl_bitmap_fallback_convert
    converts without altering the premult status so when choosing a new
    format it would copy over the premult bit. However, it did this
    regardless of whether the new format had an alpha channel so when
    converting from RGBA_8888_PRE to RGB_888 it would end up inventing a
    new meaningless format which would be RGB_888_PRE. This patch makes it
    avoid copying the premult flag if the destination has no alpha. It
    doesn't matter if it copies when the source format has no alpha
    because it will always be unset.
    
    _cogl_bitmap_convert_format_and_premult was also breaking when
    converting from RGBA_8888_PRE to RGB_888 because it would think
    RGB_888 is unpremultiplied and try to convert but then
    _cogl_bitmap_fallback_premult wouldn't know how to do the conversion.
    
    http://bugzilla.openedhand.com/show_bug.cgi?id=2057

 clutter/cogl/cogl/cogl-bitmap-fallback.c |    8 ++++++--
 clutter/cogl/cogl/cogl-bitmap.c          |   10 +++++++++-
 2 files changed, 15 insertions(+), 3 deletions(-)

commit 05afe139a508a26a93af787a7eb19d76b45acd9c
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Mon Apr 19 17:55:37 2010 +0100

    Require GLib >= 2.18
    
    We use g_signal_override_class_handler(), which was added in GLib 2.18,
    so we should bump up our requirements.

 README       |    2 +-
 configure.ac |    2 +-
 2 files changed, 2 insertions(+), 2 deletions(-)

commit a28440eafbfc126020fc83544eb89d06069df3e2
Author: Neil Roberts <neil@linux.intel.com>
Date:   Thu Apr 15 13:57:45 2010 +0100

    clutter-texture: Remove confusing comments about realization
    
    In 125bded81 some comments were introduced to ClutterTexture
    complaining that it can have a Cogl texture before being
    realized. Clutter always assumes that the single GL context is current
    so there is no need to wait until the actor is realized before setting
    a texture. This patch replaces the comments with clarification that
    this should not be a problem.
    
    The patch also changes the documentation about the realized state in
    various places to clarify that it is acceptable to create any Cogl
    resources before the actor is realized.
    
    http://bugzilla.openedhand.com/show_bug.cgi?id=2075

 clutter/clutter-actor.c          |   49 ++++++++++++++++++++++----------------
 clutter/clutter-texture.c        |   30 ++++++++++-------------
 doc/clutter-actor-invariants.txt |    5 +++-
 3 files changed, 44 insertions(+), 40 deletions(-)

commit 62ac3b312e861d813dc5a4f9c8d3556b86381626
Author: Robert Bragg <robert@linux.intel.com>
Date:   Fri Apr 16 14:38:52 2010 +0100

    glx: handle spurious GLX_BufferSwapComplete events gracefully
    
    Instead of simply aborting we now print out a warning, when a spurious
    GLX_BufferSwapComplete event is handled since it seems that people are
    coming across the problem (perhaps due to a buggy driver) and making
    apps crash in this situation is a bit extreme.

 clutter/glx/clutter-event-glx.c |   10 ++++++++--
 1 file changed, 8 insertions(+), 2 deletions(-)

commit 716ec82db8bec57e35d51e8dee5468435fc9e59e
Author: Neil Roberts <neil@linux.intel.com>
Date:   Wed Feb 3 20:58:32 2010 +0000

    clutter-cairo-texture: Use the new cogl_pixel_buffer API
    
    ClutterCairoTexture now stores the surface image data in a Cogl pixel
    buffer object. When clutter_cairo_texture_create is called the buffer
    is mapped and a new Cairo surface is created to render directly to the
    PBO. When the surface is destroyed the buffer is unmapped and a Cogl
    texture is recreated from the buffer. This should enable slightly
    faster uploads when using Cairo because it avoids having to copy the
    surface data to the texture.
    
    http://bugzilla.openedhand.com/show_bug.cgi?id=1982
    
    Signed-off-by: Emmanuele Bassi <ebassi@linux.intel.com>

 clutter/clutter-cairo-texture.c |  208 +++++++++++++++------------------------
 1 file changed, 77 insertions(+), 131 deletions(-)

commit 1a1e7d35730b510f2a32e25bb34ae7ab0e2be349
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Fri Apr 16 11:11:50 2010 +0100

    text: Increase the size of the Layout cache
    
    Currently, each ClutterText caches 3 Pango layouts:
    
      » one for the preferred, unbounded width
      » one for the preferred height for a given width
      » one for the allocated size
    
    Some layout managers do a double pass that could flush the whole cache
    before it has a chance of actually storing relevant data, resulting in
    a continuous series of misses.
    
    We can try to counteract this by doubling the size of the cache, from
    three slots to six. More than six would be pointless, as well as too
    memory consuming; but we might get down to a number between 3 and 6 at
    any later point.

 clutter/clutter-text.c |    5 ++++-
 1 file changed, 4 insertions(+), 1 deletion(-)

commit dd407326feaa53a68fa30db710f8ca4b5ea7b1ba
Author: Rob Bradford <rob@linux.intel.com>
Date:   Wed Apr 14 00:12:02 2010 +0100

    text: Check generated size of layouts in cache
    
    By comparing the requested size against the computed sized for existing
    Pango layouts we can avoid creating layouts where the requested size
    matches that of a previously computed one.
    
    In particular this optimisation means that when working with a fixed
    positioning based layout (with no constraints on the size of the
    ClutterText) the same PangoLayout can be used to calculate the preferred
    width, height and also the layout used for the actual painting.
    
    http://bugzilla.openedhand.com/show_bug.cgi?id=2078
    
    Signed-off-by: Emmanuele Bassi <ebassi@linux.intel.com>

 clutter/clutter-text.c |   55 +++++++++++++++++++++++++++++++++++++++++++++---
 1 file changed, 52 insertions(+), 3 deletions(-)

commit 708bbc72e1121022e577c25a799489e193ca535a
Author: Neil Roberts <neil@linux.intel.com>
Date:   Thu Apr 15 10:58:28 2010 +0100

    cogl: Implement retained clip stacks
    
    This adds three new internal API functions which can be used to retain
    the clip stack state and restore it later:
    
     _cogl_get_clip_stack
     _cogl_set_clip_stack
     _cogl_clip_stack_copy
    
    The functions are currently internal and not yet used but we may want
    to make them public in future to replace the cogl_clip_stack_save()
    and cogl_clip_stack_restore() APIs.
    
    The get function just returns the handle to the clip stack at the top
    of the stack of stacks and the set function just replaces it.
    
    The copy function makes a cheap copy of an existing stack by taking a
    reference to the top stack entry. This ends up working like a deep
    copy because there is no way to modify entries of a stack but it
    doesn't actually copy the data.

 clutter/cogl/cogl/cogl-clip-stack.c |   26 ++++++++++++++++++++++++++
 clutter/cogl/cogl/cogl-clip-stack.h |   19 +++++++++++++++++++
 clutter/cogl/cogl/cogl-clip-state.c |   34 ++++++++++++++++++++++++++++++++++
 clutter/cogl/cogl/cogl-clip-state.h |   28 ++++++++++++++++++++++++++++
 4 files changed, 107 insertions(+)

commit 3a58bc440b2e5dd0af15c65849e2baed170835f8
Author: Neil Roberts <neil@linux.intel.com>
Date:   Thu Apr 15 10:27:43 2010 +0100

    cogl-clip-stack: Convert to be a CoglHandle
    
    CoglClipStacks can now be reference counted via a CoglHandle. The
    ClipClipState now stores handles in the list rather than CoglClipStack
    pointers.

 clutter/cogl/cogl/cogl-clip-stack.c |   28 +++++++++++++++++++++-------
 clutter/cogl/cogl/cogl-clip-stack.h |   17 ++++++-----------
 clutter/cogl/cogl/cogl-clip-state.c |   16 ++++++++--------
 3 files changed, 35 insertions(+), 26 deletions(-)

commit aba7fb63cb2b190e3878e2be2e8818fcecfdeb2b
Author: Neil Roberts <neil@linux.intel.com>
Date:   Wed Apr 14 19:41:08 2010 +0100

    Separate out CoglClipStackState from cogl-clip-stack.c
    
    CoglClipStackState has now been renamed to CoglClipState and is moved
    to a separate file. CoglClipStack now just maintains a stack and
    doesn't worry about the rest of the state. CoglClipStack sill contains
    the code to flush the stack to GL.

 clutter/cogl/cogl/Makefile.am                |    2 +
 clutter/cogl/cogl/cogl-clip-stack.c          |  349 ++--------------------
 clutter/cogl/cogl/cogl-clip-stack.h          |   37 ++-
 clutter/cogl/cogl/cogl-clip-state.c          |  405 ++++++++++++++++++++++++++
 clutter/cogl/cogl/cogl-clip-state.h          |   50 ++++
 clutter/cogl/cogl/cogl-framebuffer-private.h |    6 +-
 clutter/cogl/cogl/cogl-framebuffer.c         |   10 +-
 clutter/cogl/cogl/cogl-path.c                |    4 +-
 clutter/cogl/cogl/cogl.c                     |    2 +-
 9 files changed, 519 insertions(+), 346 deletions(-)

commit 732223074be151e543a30ffff858104dee1ac60d
Author: Neil Roberts <neil@linux.intel.com>
Date:   Wed Apr 14 18:47:25 2010 +0100

    cogl-slip-stack: Store clip window rect entries in Cogl coordinates
    
    When glScissor is called it needs to pass coordinates in GL's
    coordinate space where the origin is the bottom left. Previously this
    conversion was done before storing the window rect in the clip
    stack. However this might make it more difficult if we want to be able
    to grab a handle to a clip stack and use it in different circumstances
    later. This patch moves the coordinate conversion to inside the clip
    state flushing code.

 clutter/cogl/cogl/cogl-clip-stack.c |   57 ++++++++++++++++++++---------------
 1 file changed, 32 insertions(+), 25 deletions(-)

commit e9aa5d807cb29e1cdc9b8a7b627de914352e4fc1
Author: Neil Roberts <neil@linux.intel.com>
Date:   Wed Apr 14 15:42:57 2010 +0100

    cogl-clip-stack: Store window rect entries as ints not floats
    
    The window rectangles are passed in as integers so there is no point
    in converting them to floats when storing a stack entry for them.

 clutter/cogl/cogl/cogl-clip-stack.c |    8 ++++----
 1 file changed, 4 insertions(+), 4 deletions(-)

commit a0e19c94696a0ba0627fd125e4a5285d355c1d80
Author: Neil Roberts <neil@linux.intel.com>
Date:   Wed Apr 14 13:17:26 2010 +0100

    cogl-clip-stack: Use reference counted stack entries
    
    The stack is now stored as a list of reference counted entries.
    Instead of using a GList, each entry now contains a link with a
    reference to its parent. The idea is that this would allow copying
    stacks with a shared ancestry.
    
    Previously the code flushed the state by finding the bottom of the
    stack and then applying each entry by walking back up to the top. This
    is slightly harder to do now because the list is no longer
    doubly-linked. However I don't think it matters which order the
    entries are applied so I've just changed it to apply them in reverse
    order.
    
    There was also a restriction that if ever the stencil buffer is used
    then we could no longer use clip planes for any subsequent entries. I
    don't think this makes sense because it should always work as long as
    it doesn't attempt to use the clip planes more than once. I've
    therefore removed the restriction.

 clutter/cogl/cogl/cogl-clip-stack.c |  207 +++++++++++++++++++++++++----------
 1 file changed, 149 insertions(+), 58 deletions(-)

commit 15ef549207b188e7e201a21a77386c3268a1cb53
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Wed Apr 14 23:34:38 2010 +0100

    docs: Clean up ClutterActor's long description
    
    The Actor's long description is a bit cluttered; it contains a section
    on the actor's box semantics, on the transformation order and on the
    event handling.
    
    We should use <refsect2> tags to divide the Actor's description into
    logically separated sections.
    
    We should also add a section about the custom Scriptable properties that
    ClutterActor defines, and the special handling of unit-based properties.

 clutter/clutter-actor.c |  210 +++++++++++++++++++++++++++--------------------
 1 file changed, 119 insertions(+), 91 deletions(-)

commit 2d4ddc1b11acbc2b82be713cb48bbd81864844f9
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Wed Apr 14 00:52:23 2010 +0100

    Add test-cogl-wrap-mode to the ignore list

 .gitignore |    1 +
 1 file changed, 1 insertion(+)

commit 1445e9d32d8f4b5c82c81deb32a57a90c0009825
Author: Neil Roberts <neil@linux.intel.com>
Date:   Tue Apr 13 17:26:03 2010 +0100

    cogl-atlas-texture: Fix a memory leak
    
    The CoglAtlasTexture struct was not being freed in
    _cogl_atlas_texture_free so there would be a small leak whenever a
    texture was destroyed.
    
    Thanks to Robert Bragg for spotting this.

 clutter/cogl/cogl/cogl-atlas-texture.c |    2 ++
 1 file changed, 2 insertions(+)

commit 30f43c6cda98a1dcf3a6cca10cf23212bfb2b503
Author: Neil Roberts <neil@linux.intel.com>
Date:   Thu Apr 1 18:35:32 2010 +0100

    cogl-material: Use CLAMP_TO_EDGE for WRAP_AUTOMATIC unless overriden
    
    CoglMaterial now sets GL_CLAMP_TO_EDGE if WRAP_MODE_AUTOMATIC is used
    unless it is overridden when the material is flushed. The primitives
    are still expected to expose repeat semantics so no user visible
    changes are made. The idea is that drawing non-repeated textures is
    the most common case so if we make clamp_to_ege the default then we
    will reduce the number of times we have to override the
    material. Avoiding overrides will become important if the overriding
    mechanism is replaced with one where the primitive is expected to copy
    the material and change that instead.

 clutter/cogl/cogl/cogl-material.c      |    6 +-
 clutter/cogl/cogl/cogl-primitives.c    |  104 ++++++++++++++++++++++++--------
 clutter/cogl/cogl/cogl-vertex-buffer.c |   35 ++++++++++-
 3 files changed, 115 insertions(+), 30 deletions(-)

commit 08a4995383d3169746e8454ba2272b4f2f29c44a
Author: Neil Roberts <neil@linux.intel.com>
Date:   Wed Mar 31 18:54:34 2010 +0100

    tests: Add a conformance test for the wrap modes of a cogl material
    
    This renders a texture using different combinations of wrap modes for
    the s and t coordinates and then verifies that the expected wrapping
    is acheived. The texture is drawn using rectangles, polygons and
    vbos. There is also code to test a rectangle using an atlased texture
    (which should test the manual repeating) however the validation for
    this is currently disabled because it doesn't work.
    
    http://bugzilla.openedhand.com/show_bug.cgi?id=2063

 tests/conform/Makefile.am            |    1 +
 tests/conform/test-cogl-wrap-modes.c |  332 ++++++++++++++++++++++++++++++++++
 tests/conform/test-conform-main.c    |    1 +
 3 files changed, 334 insertions(+)

commit 75f1dc90b05badc9aa9798985c23ac1489ddf535
Author: Neil Roberts <neil@linux.intel.com>
Date:   Thu Apr 1 11:31:33 2010 +0100

    cogl-material: Add support for setting the wrap mode for a layer
    
    Previously, Cogl's texture coordinate system was effectively always
    GL_REPEAT so that if an application specifies coordinates outside the
    range 0→1 it would get repeated copies of the texture. It would
    however change the mode to GL_CLAMP_TO_EDGE if all of the coordinates
    are in the range 0→1 so that in the common case that the whole texture
    is being drawn with linear filtering it will not blend in edge pixels
    from the opposite sides.
    
    This patch adds the option for applications to change the wrap mode
    per layer. There are now three wrap modes: 'repeat', 'clamp-to-edge'
    and 'automatic'. The automatic map mode is the default and it
    implements the previous behaviour. The wrap mode can be changed for
    the s and t coordinates independently. I've tried to make the
    internals support setting the r coordinate but as we don't support 3D
    textures yet I haven't exposed any public API for it.
    
    The texture backends still have a set_wrap_mode virtual but this value
    is intended to be transitory and it will be changed whenever the
    material is flushed (although the backends are expected to cache it so
    that it won't use too many GL calls). In my understanding this value
    was always meant to be transitory and all primitives were meant to set
    the value before drawing. However there were comments suggesting that
    this is not the expected behaviour. In particular the vertex buffer
    drawing code never set a wrap mode so it would end up with whatever
    the texture was previously used for. These issues are now fixed
    because the material will always set the wrap modes.
    
    There is code to manually implement clamp-to-edge for textures that
    can't be hardware repeated. However this doesn't fully work because it
    relies on being able to draw the stretched parts using quads with the
    same values for tx1 and tx2. The texture iteration code doesn't
    support this so it breaks. This is a separate bug and it isn't
    trivially solved.
    
    When flushing a material there are now extra options to set wrap mode
    overrides. The overrides are an array of values for each layer that
    specifies an override for the s, t or r coordinates. The primitives
    use this to implement the automatic wrap mode. cogl_polygon also uses
    it to set GL_CLAMP_TO_BORDER mode for its trick to render sliced
    textures. Although this code has been added it looks like the sliced
    trick has been broken for a while and I haven't attempted to fix it
    here.
    
    I've added a constant to represent the maximum number of layers that a
    material supports so that I can size the overrides array. I've set it
    to 32 because as far as I can tell we have that limit imposed anyway
    because the other flush options use a guint32 to store a flag about
    each layer. The overrides array ends up adding 32 bytes to each flush
    options struct which may be a concern.
    
    http://bugzilla.openedhand.com/show_bug.cgi?id=2063

 clutter/cogl/cogl/cogl-journal-private.h   |    2 +
 clutter/cogl/cogl/cogl-journal.c           |    7 +
 clutter/cogl/cogl/cogl-material-private.h  |   56 +++++--
 clutter/cogl/cogl/cogl-material.c          |  221 +++++++++++++++++++++++++++-
 clutter/cogl/cogl/cogl-material.h          |  104 +++++++++++++
 clutter/cogl/cogl/cogl-primitives.c        |  174 ++++++++++++++++++----
 clutter/cogl/cogl/cogl-texture-2d-sliced.c |    4 -
 clutter/cogl/cogl/cogl-texture-2d.c        |    4 -
 doc/reference/cogl/cogl-sections.txt       |    5 +
 9 files changed, 524 insertions(+), 53 deletions(-)

commit 463ebc8220122c9d424b2d091a33df376f9837f1
Author: Neil Roberts <neil@linux.intel.com>
Date:   Thu Mar 25 17:29:22 2010 +0000

    Split the wrap mode of _cogl_texture_set_wrap_mode into three
    
    GL supports setting different wrap modes for the s, t and r
    coordinates so we should design the backend interface to support that
    also. The r coordinate is not currently used by any of the backends
    but we might as well have it to make life easier if we ever add
    support for 3D textures.
    
    http://bugzilla.openedhand.com/show_bug.cgi?id=2063

 clutter/cogl/cogl/cogl-atlas-texture.c             |   13 +++++---
 clutter/cogl/cogl/cogl-primitives.c                |   16 +++++++---
 clutter/cogl/cogl/cogl-sub-texture.c               |   13 +++++---
 clutter/cogl/cogl/cogl-texture-2d-private.h        |    3 +-
 clutter/cogl/cogl/cogl-texture-2d-sliced-private.h |    3 +-
 clutter/cogl/cogl/cogl-texture-2d-sliced.c         |   31 +++++++++++++-------
 clutter/cogl/cogl/cogl-texture-2d.c                |   26 +++++++++-------
 clutter/cogl/cogl/cogl-texture-private.h           |   13 +++++---
 clutter/cogl/cogl/cogl-texture.c                   |   11 +++++--
 9 files changed, 87 insertions(+), 42 deletions(-)

commit 774f5e0bdf0ad61a3bcecb53fd109e79f95b0419
Author: Neil Roberts <neil@linux.intel.com>
Date:   Thu Apr 1 20:06:30 2010 +0100

    cogl: Make private members really hard to accidentally use
    
    CoglColor and CoglMatrix have public declarations with private members
    so that we are free to change the implementation but the structures
    could still be allocated on the stack in applications. However it's
    quite easy not to realise the members are private and then access them
    directly. This patch wraps the members in a macro which redefines the
    symbol name when including the header outside of the clutter source.
    
    http://bugzilla.openedhand.com/show_bug.cgi?id=2065

 clutter/cogl/cogl/cogl-matrix.h |    9 +++++----
 clutter/cogl/cogl/cogl-types.h  |   24 +++++++++++++++++-------
 2 files changed, 22 insertions(+), 11 deletions(-)

commit 3fea5051db58ed376275621b56fbaaba75bb7ea1
Author: Neil Roberts <neil@linux.intel.com>
Date:   Mon Apr 12 15:16:58 2010 +0100

    CoglMatrix: Don't make the matrix fields private
    
    The xx, yx, zx etc fields are meant to be read-only but they were
    marked as private with the gtk-doc annotation. This patch moves the
    private marker so that the 16 float member fields are public but the
    type, inverted matrix, flags and padding are not.

 clutter/cogl/cogl/cogl-matrix.h |    4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

commit 94465cfe3996d9d039cd3e55de10bc1ceab93a1a
Author: Neil Roberts <neil@linux.intel.com>
Date:   Mon Apr 12 12:06:03 2010 +0100

    Fix indentation in CoglMatrix
    
    The members of CoglMatrix were indented by 4 characters instead of 2.

 clutter/cogl/cogl/cogl-matrix.h |   54 +++++++++++++++++++--------------------
 1 file changed, 27 insertions(+), 27 deletions(-)

commit e0f41fa166665e099d894cc367346b6cafcd4634
Author: Damien Lespiau <damien.lespiau@intel.com>
Date:   Sat Apr 10 17:02:42 2010 +0100

    actor: Flag the color argument of the ::pick signal as being constant
    
    When emitting signals, one can mark arguments as being "static", ie an
    indication this argument will not change during the signal emission.
    This allows the signal marshalling code to create static GValues, in
    this case not to copy the Color.
    
    http://bugzilla.openedhand.com/show_bug.cgi?id=2073

 clutter/clutter-actor.c |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit 93a5b78e5ae3ab07c11f92fc6d7525dc3569dcb4
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Fri Apr 9 18:24:09 2010 +0100

    actor: Do not use G_UNLIKELY in paint()
    
    We decide whether the paint() should be a real paint or a paint in pick
    mode depending on the global pick_mode value. Using G_UNLIKELY() on an
    operation that most likely is going to be executed once every frame is
    going to blow a lot of cache lines and frak with the CPU branch
    prediction. Not good.

 clutter/clutter-actor.c |   24 ++++++++++++------------
 1 file changed, 12 insertions(+), 12 deletions(-)

commit 6583f8bb4906a450593d77b213e67ad8886edbbb
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Fri Apr 9 18:22:50 2010 +0100

    tests: Fix test-script.json
    
    A trailing comma is breaking the validity of test-script.json

 tests/data/test-script.json |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit c99a24d34163b1a8d867facdee0256f5af5b33b8
Author: Fridrich Strba <fridrich.strba@bluewin.ch>
Date:   Fri Apr 9 15:43:42 2010 +0100

    win32: Use GCLP_* instead of GCL_* when calling GetClassLongPtr
    
    (commit message by Neil)
    
    GetClassLongPtr expects a different constant when retrieving handles
    or pointers. This fixes problems using Win64.

 clutter/win32/clutter-stage-win32.c |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit f2776ea32b2656e14de393773c4c5457d4176a5e
Author: Neil Roberts <neil@linux.intel.com>
Date:   Fri Apr 9 14:10:11 2010 +0100

    Add tests/conform/test-cogl-path to .gitignore

 .gitignore |    1 +
 1 file changed, 1 insertion(+)

commit 10b16b4b7e06d7592a3d83ef209a39ba26eedbad
Author: Neil Roberts <neil@linux.intel.com>
Date:   Thu Apr 8 17:18:40 2010 +0100

    Add a test case for cogl_path
    
    This tests various paths drawing rectangles and verifies that the
    expected pixels are filled in. Some of the paths are drawn by copying
    an existing path and modifying it which should test the copy-on-write
    code.

 tests/conform/Makefile.am         |    1 +
 tests/conform/test-cogl-path.c    |  179 +++++++++++++++++++++++++++++++++++++
 tests/conform/test-conform-main.c |    1 +
 3 files changed, 181 insertions(+)

commit 9ee6dd240b58cbbbfcfcfc269152fb3065f9a935
Author: Neil Roberts <neil@linux.intel.com>
Date:   Thu Apr 8 17:43:27 2010 +0100

    cogl: Support retained paths
    
    This adds three new API calls:
    
      CoglHandle cogl_path_get()
      void cogl_path_set(CoglHandle path)
      CoglHandle cogl_path_copy(CoglHandle path)
    
    All of the fields relating to the path have been moved from the Cogl
    context to a new CoglPath handle type. The cogl context now just
    contains a CoglPath handle. All of the existing path commands
    manipulate the data in the current path handle. cogl_path_new now just
    creates a new path handle and unrefs the old one.
    
    The path handle can be stored for later with cogl_path_get. The path
    can then be copied with cogl_path_copy. Internally it implements
    copy-on-write semantics with an extra optimisation that it will only
    copy the data if the new path is modified, but not if the original
    path is modified. It can do this because the only way to modify a path
    is by appending to it so the copied path is able to store its own path
    length and only render the nodes up to that length. For this to work
    the copied path also needs to keep its own copies of the path extents
    because the parent path may change these by adding nodes.
    
    The clip stack now uses the cogl_path_copy mechanism to store paths in
    the stack instead of directly copying the data. This should save some
    memory and processing time.

 clutter/cogl/cogl/Makefile.am         |    1 +
 clutter/cogl/cogl/cogl-clip-stack.c   |   37 ++--
 clutter/cogl/cogl/cogl-context.c      |    8 +-
 clutter/cogl/cogl/cogl-context.h      |    7 +-
 clutter/cogl/cogl/cogl-internal.h     |   28 ---
 clutter/cogl/cogl/cogl-path-private.h |   96 ++++++++++
 clutter/cogl/cogl/cogl-path.c         |  333 +++++++++++++++++++++++++--------
 clutter/cogl/cogl/cogl-path.h         |   46 +++++
 doc/reference/cogl/cogl-sections.txt  |    3 +
 9 files changed, 413 insertions(+), 146 deletions(-)

commit 45885850d27aede5383e4aad84690e5fb9002fa5
Author: Robert Bragg <robert@linux.intel.com>
Date:   Thu Apr 8 14:37:01 2010 +0100

    cogl: renames cogl_multiply_matrix to cogl_transform
    
    Although cogl_multiply_matrix was consistent with OpenGL, after further
    consideration it was agreed that cogl_transform is a better name. Given
    that it's in the global cogl_ namespace cogl_transform seems more self
    documenting.

 clutter/cogl/cogl/cogl.c             |    2 +-
 clutter/cogl/cogl/cogl.h             |    4 ++--
 doc/reference/cogl/cogl-sections.txt |    1 +
 3 files changed, 4 insertions(+), 3 deletions(-)

commit 412a468d5ef4a2cc6cc748717ae245874d3ccd76
Author: Robert Bragg <robert@linux.intel.com>
Date:   Thu Apr 1 13:15:12 2010 +0100

    docs: This improves the documentation for cogl_push_framebuffer
    
    This adds an example of how to setup a Clutter style 2D coordinate space
    and clarifies what state is owned by a framebuffer. (projection,
    modelview, viewport and clip stack)
    
    When we expose more cogl_framebuffer API this example will hopefully be
    migrated into a more extensive introduction to using framebuffers.

 clutter/cogl/cogl/cogl.h |   85 ++++++++++++++++++++++++++++++++++++++++------
 1 file changed, 75 insertions(+), 10 deletions(-)

commit d2d890a33ebbde2e4a4e5fb7b90b75ed33a5af05
Author: Robert Bragg <robert@linux.intel.com>
Date:   Wed Mar 3 16:37:59 2010 +0000

    test-cogl-offscreen: Setup a clutter style modelview/projection
    
    This updates test-cogl-offscreen to give an example of setting up a
    CoglFramebuffer with a Clutter style 2D coordinate system with (0,0) top
    left and (framebuffer_width, framebuffer_height) bottom right.

 tests/interactive/test-cogl-offscreen.c |  109 ++++++++++++++++++++++++++++++-
 1 file changed, 108 insertions(+), 1 deletion(-)

commit 6f6ab8692911e0d0cdfd76bc7a90bd95af5063b1
Author: Robert Bragg <robert@linux.intel.com>
Date:   Fri Mar 19 09:55:30 2010 +0000

    cogl: move cogl_set_source* funcs into cogl.c
    
    Previously cogl_set_source and cogl_set_source_texture were in
    cogl-material.c and the cogl_set_source_color* funcs were in
    cogl-color.c. Originally this was because cogl.c was duplicated between
    the GL and GLES backends and we didn't want to add to the amount of
    duplicated code, but these files have since been consolidated into one
    cogl.c.

 clutter/cogl/cogl/cogl-color.c    |   24 ---------------
 clutter/cogl/cogl/cogl-material.c |   36 ----------------------
 clutter/cogl/cogl/cogl.c          |   60 ++++++++++++++++++++++++++++++++++++-
 3 files changed, 59 insertions(+), 61 deletions(-)

commit a678e9f62737994d42ea0d2066ff97464b00ba16
Author: Robert Bragg <robert@linux.intel.com>
Date:   Fri Mar 19 09:30:59 2010 +0000

    cogl: adds convenience cogl_multiply_matrix function
    
    Quite often it's desirable to be able to multiply the current modelview
    matrix by an arbitrary matrix. Currently though you have to first
    explicitly call cogl_get_modelview_matrix to get the current modelview
    into a temporary variable, then you need to multiply it with your matrix
    using cogl_matrix_multiply and finally use cogl_set_modelview_matrix to
    make the result be the new modelview. This new convenience function lets
    more efficiently skip the first get and last set steps.

 clutter/cogl/cogl/cogl.c |    8 ++++++++
 clutter/cogl/cogl/cogl.h |   11 +++++++++++
 2 files changed, 19 insertions(+)

commit 1dd70aff731ae8eba747d0dc914021067b1adadc
Author: Robert Bragg <robert@linux.intel.com>
Date:   Fri Mar 19 09:16:08 2010 +0000

    cogl: rename cogl_enable to _cogl_enable
    
    Every now and then someone sees the cogl_enable API and gets confused,
    thinking its public API so this renames the symbol to be clear that it's
    is an internal only API.

 clutter/cogl/cogl/cogl-context.c       |    2 +-
 clutter/cogl/cogl/cogl-internal.h      |    4 +--
 clutter/cogl/cogl/cogl-journal.c       |    6 ++--
 clutter/cogl/cogl/cogl-material.c      |    2 +-
 clutter/cogl/cogl/cogl-path.c          |   10 +++---
 clutter/cogl/cogl/cogl-primitives.c    |    2 +-
 clutter/cogl/cogl/cogl-vertex-buffer.c |    2 +-
 clutter/cogl/cogl/cogl.c               |   52 ++++++++++++++++----------------
 8 files changed, 40 insertions(+), 40 deletions(-)

commit fdf608af4c01511699e5108da8e3ad639e0ee405
Author: Neil Roberts <neil@linux.intel.com>
Date:   Wed Mar 31 19:03:02 2010 +0100

    test-cogl-tex-polygon: Actually use the material it creates
    
    test-cogl-tex-polygon creates a separate material so that it can set
    the texture filters. However in the paint functions that use
    cogl_polygon it was calling cogl_set_source_texture which replaces the
    material and ends up always using GL_LINEAR. This patch makes the
    paint functions assume the correct source is set up instead of trying
    to select a new source.

 tests/interactive/test-cogl-tex-polygon.c |   35 ++++++++++++-----------------
 1 file changed, 14 insertions(+), 21 deletions(-)

commit 53cf25ef11fc8bab5dc3c541c77ced4b714d4ce3
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Wed Mar 31 15:14:09 2010 +0100

    Add jhbuild moduleset
    
    Clutter should provide a moduleset for JHBuild, to allow building the
    whole Clutter stack within a separate prefix.

 build/clutter.modules |  301 +++++++++++++++++++++++++++++++++++++++++++++++++
 1 file changed, 301 insertions(+)

commit 6fcc8c5bce08296151de418e472d2777c8b2abca
Author: Owen W. Taylor <otaylor@fishsoup.net>
Date:   Fri Mar 26 00:41:46 2010 +0000

    x11: Use has_allocation() in TfP actor
    
    ClutterX11TexturePixmap calls get_allocation_box() when queueing a
    clipped redraw. If the allocation is not valid, and if we queue a
    lot of redraws in response to a series of damage events, the net
    result is that we spend all our time in a re-layout. We can
    short-circuit this by checking if the actor has a valid allocation, and
    if not, just queue a redraw - the actor will be allocated by the time it
    is going to be painted.
    
    Signed-off-by: Emmanuele Bassi <ebassi@linux.intel.com>

 clutter/x11/clutter-x11-texture-pixmap.c |   18 +++++++++++-------
 1 file changed, 11 insertions(+), 7 deletions(-)

commit 8df4a0b8fdbbff580aab4377dec9878c693d2440
Author: Owen W. Taylor <otaylor@fishsoup.net>
Date:   Fri Mar 26 00:35:36 2010 +0000

    actor: Add has_allocation() method
    
    Add clutter_actor_has_allocation(), a method meant to be used when
    deciding whether to call clutter_actor_get_allocation_box() or any
    of its wrappers.
    
    The get_allocation_box() method will, in case the allocation is invalid,
    perform a costly re-allocation cycle to ensure that the returned box
    is valid. The has_allocation() method is meant to be used if we have an
    actor calling get_allocation_box() from outside the place where the
    allocation is always guaranteed to be valid.
    
    Signed-off-by: Emmanuele Bassi <ebassi@linux.intel.com>

 clutter/clutter-actor.c                    |   32 ++++++++++++++++++++++++++++
 clutter/clutter-actor.h                    |    2 ++
 doc/reference/clutter/clutter-sections.txt |    1 +
 3 files changed, 35 insertions(+)

commit 7483f82566cad0359d305a4096f4263d91d4991a
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu Mar 25 09:45:59 2010 +0000

    docs: Add 1.4 index to the API references
    
    Now that master has branched for the 1.3 development cycle.

 doc/reference/clutter/clutter-docs.xml.in |    5 +++++
 doc/reference/cogl/cogl-docs.xml.in       |    5 +++++
 2 files changed, 10 insertions(+)

commit 7b63da69cf294b4d076e405e0af5c8afe47c2253
Author: José Dapena Paz <jdapena@igalia.com>
Date:   Wed Mar 17 16:16:09 2010 +0100

    Add "homogeneous" mode to ClutterBoxLayout.
    
    Added new "homogeneous" mode to ClutterBoxLayout, that makes layout children
    get all the same size.
    
    This is heavily inspired in the "homogeneous" attribute available in GtkBox,
    but simplified as we don't have padding nor borders in box layout, only
    spacing.
    
    Also added to test-box-layout a key to set/unset homogeneous mode.
    
    * Coding style fixes.
    * Added proper test for homogeneous mode in box layout.
    * Fix in homogeneous mode.
    
    http://bugzilla.openedhand.com/show_bug.cgi?id=2034
    
    Signed-off-by: Emmanuele Bassi <ebassi@linux.intel.com>

 clutter/clutter-box-layout.c        |  122 +++++++++++++++++++++++++++++++++--
 clutter/clutter-box-layout.h        |    3 +
 tests/interactive/test-box-layout.c |    6 ++
 3 files changed, 126 insertions(+), 5 deletions(-)

commit 5395a7a998a84ea9614d7745a4337094eb2e1383
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu Mar 25 09:33:26 2010 +0000

    Use begin/end macros in cogl-primitives.h
    
    Protect the people using a C++ compiler from the dark abyss of C code.
    
    http://bugzilla.openedhand.com/show_bug.cgi?id=2049

 clutter/cogl/cogl/cogl-primitives.h |    6 ++++++
 1 file changed, 6 insertions(+)

commit 6a8e1087576c295807835d877c87fcb79971b2eb
Author: Neil Roberts <neil@linux.intel.com>
Date:   Wed Mar 24 15:32:28 2010 +0000

    clutter-actor: Rename y1 to y_1 to avoid a compiler warning
    
    Somebody somewhere decided it would be ok to define 'y1' as a global
    function in math.h thus condemning us to repeatedly making commits to
    fix these obnoxious compiler warnings about aliasing.

 clutter/clutter-actor.c |   20 ++++++++++----------
 1 file changed, 10 insertions(+), 10 deletions(-)

commit 5de85051c324449b813adc43186f249f75289858
Author: Adel Gadllah <adel.gadllah@gmail.com>
Date:   Sun Mar 21 13:12:58 2010 +0100

    Make sure GLX_SGI_swap_control is set up correctly
    
    glXSwapIntervalSGI only affects buffer swaps to the
    current GLX drawable.
    
    That means that calling it once in clutter_backend_glx_get_features
    isn't sufficent, so set it up in clutter_backend_glx_ensure_context to
    make sure it affects buffer swaps for the current drawable.
    
    http://bugzilla.openedhand.com/show_bug.cgi?id=2044
    
    Signed-off-by: Emmanuele Bassi <ebassi@linux.intel.com>

 clutter/glx/clutter-backend-glx.c |    6 ++++++
 1 file changed, 6 insertions(+)

commit 2fc8ecdb92e80e16510048c56bb07e5b87427f26
Author: Owen W. Taylor <otaylor@fishsoup.net>
Date:   Fri Mar 19 18:18:17 2010 +0000

    glx: Clean up the clip area conditions
    
    Move the size check after the NULL check, add the clip height into the
    check logic and fix up the comment.
    
    http://bugzilla.openedhand.com/show_bug.cgi?id=2040
    
    Signed-off-by: Emmanuele Bassi <ebassi@linux.intel.com>

 clutter/glx/clutter-stage-glx.c |   11 ++++++-----
 1 file changed, 6 insertions(+), 5 deletions(-)

commit f935270aa01ac83ecb43212cb86bac63e76d5687
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Fri Mar 19 16:24:34 2010 +0000

    script: Do not allocate memory when not needed
    
    When printing out the property value during a ClutterScript debug run we
    generate the value's content using g_strdup_value_contents() - though we
    do it unconditionally. The contents might not be printed (they most
    likely won't, actually) and will be freed afterwards. This is
    unnecessary: we can allocate the contents string after checking if we're
    going to print out the debug note, thus avoiding the whole
    allocation/free cycle unless strictly needed.

 clutter/clutter-actor.c |   19 ++++++++++---------
 1 file changed, 10 insertions(+), 9 deletions(-)

commit a39cef41b85ca6f38f3e9c95fbd18de990f73b7f
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Fri Mar 19 11:39:23 2010 +0000

    glx: Do not access stage_clip without checking it
    
    The stage_clip parameter for add_redraw_clip() can be NULL, so we need
    to check before accessing its members.

 clutter/glx/clutter-stage-glx.c |    7 ++++---
 1 file changed, 4 insertions(+), 3 deletions(-)

commit 913c187f4e611aac71360863ca67640e4cfd1d41
Author: Owen W. Taylor <otaylor@fishsoup.net>
Date:   Tue Mar 16 20:38:53 2010 -0400

    Switch texture units before calling _cogl_texture_set_filters()
    
    When setting up the state for a layer, we need to switch texture
    units before we do anything that might bind the texture, or
    we'll bind the wrong texture to the previous unit.
    
    http://bugzilla.openedhand.com/show_bug.cgi?id=2033
    
    Signed-off-by: Emmanuele Bassi <ebassi@linux.intel.com>

 clutter/cogl/cogl/cogl-material.c |    9 ++++++---
 1 file changed, 6 insertions(+), 3 deletions(-)

commit 66e0f187533f5ee322967cff8996c9f1e22d8361
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Fri Mar 19 11:13:04 2010 +0000

    json: Update JsonParser
    
    Add another fix from upstream, to clean up the code.

 clutter/json/json-parser.c |   28 +++++++++++++---------------
 1 file changed, 13 insertions(+), 15 deletions(-)

commit 295bc517f8a8789b335c7d8d7643cee8519b0ce3
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Fri Mar 19 10:40:12 2010 +0000

    json: Update the internal copy of JsonGenerator
    
    The JsonGenerator we have inside Clutter as a fallback for a missing
    system copy of JSON-GLib is way out of date.

 clutter/json/json-generator.c |  177 +++++++++++++++++++++++++++++++++--------
 1 file changed, 143 insertions(+), 34 deletions(-)

commit d21b7522f825d913317a8e62b86314a7737c7e43
Author: Owen W. Taylor <otaylor@fishsoup.net>
Date:   Thu Mar 18 13:55:01 2010 -0400

    Fix errors in keeping track of the stage bounding rectangle
    
    * Add new clutter_geometry_union(), because writing union intersection
      is harder than it looks. Fixes two problems with the inline code in
      clutter_stage_glx_add_redraw_clip().
    
      1) The ->x and ->y of were reassigned to before using them to
         compute the new width and height.
      2) since ClutterGeometry has unsigned width, x + width is unsigned,
         and comparison goes wrong if either rectangle has a negative
         x + width. (We fixed width for GdkRectangle to be signed for GTK+-2.0,
         this is a potent source of bugs.)
    
    * Use in clutter_stage_glx_add_redraw_clip()
    
    * Account for the case where the incoming rectangle is empty, and don't
      end up with the stage being entirely redrawn.
    
    * Account for the case where the stage already has a degenerate
      width and don't end up with redrawing only the new rectangle and not
      the rest of the stage.
    
    The better fix here for the second two problems is to stop using a 0
    width to mean the entire stage, but this should work for now.
    
    http://bugzilla.openedhand.com/show_bug.cgi?id=2040
    
    Signed-off-by: Emmanuele Bassi <ebassi@linux.intel.com>

 clutter/clutter-actor.c         |   29 +++++++++++++++++++++++++++++
 clutter/clutter-types.h         |    4 ++++
 clutter/glx/clutter-stage-glx.c |   26 +++++++-------------------
 3 files changed, 40 insertions(+), 19 deletions(-)

commit bfd2b19290dc021862ee542c80ddd4e21a20cfef
Author: Owen W. Taylor <otaylor@fishsoup.net>
Date:   Wed Mar 17 15:39:55 2010 -0400

    Set pixel store parameters before calling glGetTexImage
    
    We need to set up the rowstride and alignment properly in
    CoglTexture2D before reading texture data.
    
    http://bugzilla.openedhand.com/show_bug.cgi?id=2036
    
    Signed-off-by: Emmanuele Bassi <ebassi@linux.intel.com>

 clutter/cogl/cogl/cogl-texture-2d.c |    3 +++
 1 file changed, 3 insertions(+)

commit 9e0385304f7cff494c41ced5805393845f1e423a
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu Mar 18 20:36:02 2010 +0000

    build: Mark --with-json=internal as experimental
    
    The system JSON-GLib installation should be the preferred way of parsing
    JSON in Clutter. The internal copy is limited by re-synchronization from
    upstream, and by the fact that upstream contains a fork of GScanner that
    allows parsing escaped UTF-8. We should warn users compiling Clutter
    with the internal copy, just like we warn about the internal image
    backend.

 configure.ac |    8 ++++++--
 1 file changed, 6 insertions(+), 2 deletions(-)

commit e1ad78ee183c973a210244ef845605ba9f11a373
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu Mar 18 20:29:59 2010 +0000

    docs: Update the README
    
    Add a "requirements" section and detail all the build requirements for
    Clutter, depending on the platform.

 README |   38 +++++++++++++++++++++++++++++---------
 1 file changed, 29 insertions(+), 9 deletions(-)

commit 7e700be7b8589e71255b9df601fcdc5bb35337a7
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu Mar 18 20:27:18 2010 +0000

    build: Require xcomposite
    
    The X11TexturePixmap actor uses XComposite API directly, without guards.
    It has been doing so for a while, against the fact that we do check for
    the XComposite extension - but we don't depend on it. As soon as you try
    building Clutter on X11 without the XComposite extension available all
    hell breaks loose.
    
    The obvious fix is to make Clutter depend on XComposite - basically
    ratifying what's the current state of things.

 configure.ac |    6 ++----
 1 file changed, 2 insertions(+), 4 deletions(-)

commit a8595aec13a48e449db15bcc65cc65fe8f3ecfaf
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu Mar 18 20:20:09 2010 +0000

    script: Add more comments and annotations
    
    Detail why we are adding a fake id, and under which circumstances that
    happens. Also be more verbose with the debug annotations.

 clutter/clutter-script-parser.c |   31 +++++++++++++++++++++++++++----
 1 file changed, 27 insertions(+), 4 deletions(-)

commit 203847d03c551ea13f87a78e636e0a74dc13c5fb
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu Mar 18 17:44:14 2010 +0000

    script: Skip empty nodes
    
    If we get an empty node then we should skip it; this is really a
    workaround for something that is broken in JSON-GLib or in our use
    of JSON-GLib.

 clutter/clutter-script-parser.c |   14 ++++++++++----
 1 file changed, 10 insertions(+), 4 deletions(-)

commit d2bb57c3b2bc4ef7700735dcc4c6386b67fb4cc0
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Thu Mar 18 14:15:33 2010 +0000

    Emit a critical warning if features are not initialized
    
    If you forgot to call clutter_init() then you currently end up with a
    warning saying that the stage cannot be initialized because the backend
    does not support multiple stages. Clearly not useful.
    
    We can catch some of the missing initialization in the features API,
    since we will likely end up asking for a feature at some point.

 clutter/clutter-feature.c |   11 ++++++++++-
 1 file changed, 10 insertions(+), 1 deletion(-)

commit 54504b7ac46c92d996a08fa3957b702aea70af68
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Wed Mar 17 17:41:52 2010 +0000

    glx: Remove unnecessary call to create_stage()
    
    If we are in the stage realization sequence we already have a GLX
    context set in the backend; there is no need to call create_backend().

 clutter/glx/clutter-stage-glx.c |   19 ++++---------------
 1 file changed, 4 insertions(+), 15 deletions(-)

commit bf7e6ae587adaf3321ed56ec407ed2d432805f57
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Wed Mar 17 17:28:20 2010 +0000

    Add error reporting for create_context() failures
    
    We kind of assume that stuff will break well before during the
    ClutterBackend::create_context() implementation if we fail to create a
    GL context. We do, however, have error reporting in place inside the
    Backend API to catch those cases. Unfortunately, since we switched to
    lazy initialization of the Stage, there can be a case of GL context
    creation failure that still leads to a successful initialization - and a
    segmentation fault later on. This is clearly Not Good™.
    
    Let's try to catch a failure in all the places calling create_context()
    and report back to the user the error in a meaningful way, before
    crashing and burning.

 clutter/clutter-backend.c |   20 +++++++++++++++++++-
 clutter/clutter-feature.c |   11 +++++++----
 clutter/clutter-main.c    |    3 ++-
 clutter/clutter-private.h |    2 +-
 4 files changed, 29 insertions(+), 7 deletions(-)

commit d735ac4807b556e3444ed9611691e44b00ddd915
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Wed Mar 17 17:14:08 2010 +0000

    model: Let get_n_columns() return a sane value
    
    If you call get_n_columns() during the instance initialization phase but
    before set_name()/set_types() have been called, you'll get a (guint) -1.
    This is less than ideal.
    
    If columns haven't been initialized we should just return 0, which was
    the intent of the API since the beginning.
    
    Based on a patch by: Bastian Winkler <buz@netbuz.org>
    
    Signed-off-by: Emmanuele Bassi <ebassi@linux.intel.com>

 clutter/clutter-model.c |    7 ++++++-
 1 file changed, 6 insertions(+), 1 deletion(-)

commit 0a6497a3b6c4219e6a6a9310849159b00c864671
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Tue Mar 16 18:57:28 2010 +0000

    model: Add a comment on the n_columns field type
    
    To avoid another bug report like:
    
      http://bugzilla.openedhand.com/show_bug.cgi?id=2017
    
    with a patch that gets applied without a proper review, resulting in a
    bug like:
    
      http://bugzilla.openedhand.com/show_bug.cgi?id=2032
    
    I should probably add a comment on why on earth we're using an integer
    as the n_columns member of the ClutterModelPrivate structure, and why it
    is important that it is initialized as -1.

 clutter/clutter-model.c |    9 +++++++++
 1 file changed, 9 insertions(+)

commit de4abfac955641de9218d272e6aea1a8c618a577
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Tue Mar 16 18:53:24 2010 +0000

    Revert "model: Use guint for the n_columns field"
    
    The int storage, and the initial value of -1, is used as a guard when
    subclassing ClutterListModel to allow the sub-class to call
    clutter_model_set_names() and clutter_model_set_types().
    
    This reverts commit c274118a8f7ed18e5bc703e614a9ea0a7cdb553c.

 clutter/clutter-model.c |    4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

commit 035d571e95b65437a6aeebe7c095d76807b95765
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Tue Mar 16 10:44:40 2010 +0000

    Branch master for 1.3

 configure.ac |    6 +++---
 1 file changed, 3 insertions(+), 3 deletions(-)

commit 4e946f538ca2871346a0fa3e918de439ac74ecc0
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Mon Mar 15 16:40:50 2010 +0000

    Post-release version bump to 1.2.3

 configure.ac |    4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

commit 7b5692f8b362d8c39a165d7457fe4e88a67db9df
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Mon Mar 15 16:25:46 2010 +0000

    Release 1.2.2

 configure.ac |    4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

commit 7a3fe4c056a64bcf04905b12cc35dd03f8c120fc
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Mon Mar 15 16:04:34 2010 +0000

    Update NEWS file

 NEWS |   29 +++++++++++++++++++++++++++++
 1 file changed, 29 insertions(+)

commit 60d8369a1afaba4efdd64688e4157bc4b48b7525
Author: Colin Walters <walters@verbum.org>
Date:   Fri Mar 12 17:39:27 2010 -0500

    Return and warn if a handle's refcount is <= 0
    
    This makes it more likely consumers notice invalid unreferences.
    GObject has the same assertion.
    
    http://bugzilla.openedhand.com/show_bug.cgi?id=2029
    
    Signed-off-by: Emmanuele Bassi <ebassi@linux.intel.com>

 clutter/cogl/cogl/cogl-util.c |    1 +
 1 file changed, 1 insertion(+)

commit c274118a8f7ed18e5bc703e614a9ea0a7cdb553c
Author: Bastian Winkler <buz@netbuz.org>
Date:   Tue Mar 2 09:26:57 2010 +0100

    model: Use guint for the n_columns field
    
    clutter_model_get_n_columns is supposed to return a guint, so the
    n_columns field needs to be a guint with the initial value set to 0.
    
    http://bugzilla.openedhand.com/show_bug.cgi?id=2017
    
    Signed-off-by: Emmanuele Bassi <ebassi@linux.intel.com>

 clutter/clutter-model.c |    4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

commit c2faaa4f39d3ad69523e806bffe4651545c0bdea
Author: Neil Roberts <neil@linux.intel.com>
Date:   Tue Mar 9 16:37:52 2010 -0800

    cogl-texture-2d: Determine format before checking texture support
    
    When entering cogl_texture_2d_new_from_bitmap the internal format can
    be COGL_PIXEL_FORMAT_ANY. This was causing _cogl_texture_2d_can_create
    to use an invalid GL format type. Mesa apparently ignores this but it
    was causing errors when Cogl is compiled with debugging under NVidia.
    
    http://bugzilla.openedhand.com/show_bug.cgi?id=2026

 clutter/cogl/cogl/cogl-texture-2d.c |    3 +++
 1 file changed, 3 insertions(+)

commit a25885edf294be0bc4a6710cc3fd7dec4b3ef013
Author: Owen W. Taylor <otaylor@fishsoup.net>
Date:   Mon Mar 1 16:49:04 2010 -0500

    Fix checks for out-of-bounds coordinates and repeats
    
    Add a return result from CoglTexture.transform_quad_coords_to_gl(),
    so that we can properly determine the nature of repeats in
    the face of GL_TEXTURE_RECTANGLE_ARB, where the returned
    coordinates are not normalized.
    
    The comment "We also work out whether any of the texture
    coordinates are outside the range [0.0,1.0]. We need to do
    this after calling transform_coords_to_gl in case the texture
    backend is munging the coordinates (such as in the sub texture
    backend)." is disregarded and removed, since it's actually
    the virtual coordinates that determine whether we repeat,
    not the GL coordinates.
    
    Warnings about disregarded layers are used in all cases where
    applicable, including for subtextures.
    
    http://bugzilla.openedhand.com/show_bug.cgi?id=2016
    
    Signed-off-by: Neil Roberts <neil@linux.intel.com>

 clutter/cogl/cogl/cogl-atlas-texture.c     |    2 +-
 clutter/cogl/cogl/cogl-primitives.c        |   40 ++++++++++------------------
 clutter/cogl/cogl/cogl-sub-texture.c       |    9 +++----
 clutter/cogl/cogl/cogl-texture-2d-sliced.c |   22 ++++++++++++---
 clutter/cogl/cogl/cogl-texture-2d.c        |   15 ++++++++---
 clutter/cogl/cogl/cogl-texture-private.h   |   18 ++++++++++---
 clutter/cogl/cogl/cogl-texture.c           |    2 +-
 7 files changed, 66 insertions(+), 42 deletions(-)

commit 382b38c0f7fa79ed1679875db4c7b10e26fff039
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Wed Mar 10 00:25:26 2010 +0000

    test-paint-wrapper: Request ARGB visuals on GLX
    
    If we are on GLX we have to request ARGB visuals, otherwise Clutter will
    not do it by itself.

 tests/interactive/test-paint-wrapper.c |   12 ++++++++++++
 1 file changed, 12 insertions(+)

commit 6bd1846d6c39d27863a6fc89356324c0cb3a57ce
Author: José Dapena Paz <jdapena@igalia.com>
Date:   Mon Mar 8 15:37:36 2010 +0100

    Fix argb initialisation.
    
    Fix clutter initialisation if argb visuals are enabled, setting a border
    color on creating the dummy window. This should avoid BadMatch happening
    when the depth of the root window visual is not the same of the depth
    of the argb visual.
    
    http://bugzilla.openedhand.com/show_bug.cgi?id=2011
    
    Signed-off-by: Emmanuele Bassi <ebassi@linux.intel.com>

 clutter/glx/clutter-backend-glx.c |    3 ++-
 1 file changed, 2 insertions(+), 1 deletion(-)

commit 3d2d932835bd74d497fcbec6695208be155924d0
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Sun Mar 7 23:46:59 2010 +0000

    actor: Remove some double indirection
    
    Use an intermediate variable to avoid a double indirection when accessing
    the instance private data structure.

 clutter/clutter-actor.c |   44 ++++++++++++++++++++++++++++----------------
 1 file changed, 28 insertions(+), 16 deletions(-)

commit 9ad1197cb21552cd0db03158eae0ce2742c52ede
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Sun Mar 7 20:54:33 2010 +0000

    json: Improve strictness of the JSON parser
    
    Backport of the upstream JSON-GLib commit that improved the strictness
    of JsonParser.
    
    The original upstream commit is:
    
      29881f03468db08bfb404cfcd5b61b4cdc419a87

 clutter/json/json-parser.c |   98 +++++++++++++++++++++++++++++++++++---------
 1 file changed, 79 insertions(+), 19 deletions(-)

commit 7c6567704d0adc3a5456d5ac3bedb85fb6b55709
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Fri Mar 5 11:39:32 2010 +0000

    Add test-cogl-texture-rectangle to the ignore file

 .gitignore |    1 +
 1 file changed, 1 insertion(+)

commit ac074bc0f06658a59f05d1e1d0b149ccf5117448
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Fri Mar 5 08:48:52 2010 +0000

    eglnative: Connect StageWindow.show and .hide
    
    The show() and hide() methods of the StageWindow interface are
    implemented but not assigned when initializing the interface
    vtable.

 clutter/eglnative/clutter-stage-egl.c |    2 ++
 1 file changed, 2 insertions(+)

commit dbe2acc2b1dcba44964f7fafcb242dd346de5f40
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Wed Mar 3 18:17:15 2010 +0000

    docs: Update the HACKING.backends file
    
    The create_context() and ensure_context() sections should be more clear
    on the role of the functions, and their eventual caveats, like being
    called multiple times.

 doc/HACKING.backends |    9 ++++++++-
 1 file changed, 8 insertions(+), 1 deletion(-)

commit c3a942abdec57583d0fc917b7578d574e5c1573d
Author: Neil Roberts <neil@linux.intel.com>
Date:   Tue Mar 2 15:18:00 2010 +0000

    Add a conformance test for rectangle textures
    
    The test creates a GL_TEXTURE_RECTANGLE_ARB texture using
    cogl_texture_new_from_foreign and confirms that rendering it works
    correctly. If the rectangle texture extension isn't available then
    this test always succeeds.
    
    http://bugzilla.openedhand.com/show_bug.cgi?id=2015

 tests/conform/Makefile.am                   |    1 +
 tests/conform/test-cogl-texture-rectangle.c |  268 +++++++++++++++++++++++++++
 tests/conform/test-conform-main.c           |    1 +
 3 files changed, 270 insertions(+)

commit f13a42793a979cb514ea86121b3450e2e0a2e05e
Author: Owen W. Taylor <otaylor@fishsoup.net>
Date:   Mon Mar 1 14:04:20 2010 -0500

    CoglTexture2DSliced: Handle TEXTURE_RECTANGLE_ARB
    
    In _cogl_texture_2d_sliced_foreach_sub_texture_in_region(), don't
    assert that the target is GL_TEXTURE_2D; instead conditionalize
    normalization on the target.
    
    http://bugzilla.openedhand.com/show_bug.cgi?id=2015

 clutter/cogl/cogl/cogl-texture-2d-sliced.c |   22 +++++++++++++---------
 1 file changed, 13 insertions(+), 9 deletions(-)

commit 40b43fd64a7d5563d6b8b736c0ede625311934c2
Author: Neil Roberts <neil@linux.intel.com>
Date:   Wed Mar 3 18:08:33 2010 +0000

    eglnative: Don't create a context if there already is one
    
    If the EGL context is already created then we shouldn't try to create
    another one. This was causing problems where one context would be
    created from calling _clutter_feature_init and the other was created
    from _clutter_backend_get_features. Cogl would set up its state using
    the first context and then assume the state was still valid when the
    second context became used so blending was not working correctly.
    
    http://bugzilla.openedhand.com/show_bug.cgi?id=2020

 clutter/eglnative/clutter-backend-egl.c |    3 +++
 1 file changed, 3 insertions(+)

commit 169ce1508b29e7133f5033fa3f473b3d9ffdf577
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Wed Mar 3 17:46:53 2010 +0000

    x11-texture-pixmap: Move signal handler override
    
    The signal handling override for the ::queue-damage-redraw should be
    done in the class initialization function, not in the instance one.

 clutter/x11/clutter-x11-texture-pixmap.c |   31 +++++++++++++++---------------
 1 file changed, 15 insertions(+), 16 deletions(-)

commit 1b57800208fe1f34640c5001127eb570a24491f9
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Wed Mar 3 17:02:51 2010 +0000

    Update stb_image.c
    
    Upstream "released" 1.18.

 clutter/cogl/cogl/stb_image.c | 1605 ++++++++++++++++++++++-------------------
 1 file changed, 862 insertions(+), 743 deletions(-)

commit b19332a0bec7bb121ec62285b942ce880e547a95
Author: Øyvind Kolås <pippin@linux.intel.com>
Date:   Wed Mar 3 15:45:43 2010 +0000

    animator: compare floating point values with an epsilon
    
    Direct comparisons with doubles are error prone.

 clutter/clutter-animator.c |    9 ++++++---
 1 file changed, 6 insertions(+), 3 deletions(-)

commit 4168b216a3c062cc9d038e6ab71db4452ec116e4
Author: Øyvind Kolås <pippin@linux.intel.com>
Date:   Wed Mar 3 15:46:19 2010 +0000

    animator: fix a crash in clutter_animator_compute_value
    
    Fix a crasher when there is only one key in the animator.

 clutter/clutter-animator.c |    3 +++
 1 file changed, 3 insertions(+)

commit 824cd9a7ff20a764a031982317f38beb6fe135c2
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Wed Mar 3 15:31:01 2010 +0000

    eglnative: Compilation fixes
    
    We should include <errno.h>, if we plan to use errno.
    
    Why, yes: I am that stupid.

 clutter/eglnative/clutter-backend-egl.c |    4 +++-
 clutter/eglnative/clutter-backend-egl.h |    2 +-
 clutter/eglnative/clutter-event-egl.c   |   11 +++--------
 3 files changed, 7 insertions(+), 10 deletions(-)

commit 52f8cd30cea1ac3b62c82d026a1d2d581c38e1c1
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Wed Mar 3 10:49:34 2010 +0000

    docs: Fix gtk-doc annotation for ClutterStageManageClass
    
    Remove the semi-colon and use a colon for declaring the type.

 clutter/clutter-stage-manager.h |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

commit a2f444ccbe4255e4386a9df40415a04637a296e2
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Wed Mar 3 10:47:42 2010 +0000

    box: Fix allow-none annotation
    
    The syntax for allowing NULL is "allow-none", not "allow none".

 clutter/clutter-box.c |    4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

commit fa6070ec1a2bdbf5b5bd182b663ad5bdbdefb98d
Author: Emmanuele Bassi <ebassi@linux.intel.com>
Date:   Tue Mar 2 19:41:44 2010 +0000

    Post-release version bump to 1.2.1

 configure.ac |    4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)
