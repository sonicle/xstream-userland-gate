.\" Automatically generated by Pod::Man 2.28 (Pod::Simple 3.28)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{
.    if \nF \{
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "KVMADM 1"
.TH KVMADM 1 "2017-09-27" "0.12.0" "kvmadm"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
kvmadm \- Manage KVMs under SMF control
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
\&\fBkvmadm\fR \fIcommand\fR [\fIoptions...\fR]
.PP
where 'command' is one of the following:
.PP
.Vb 1
\&    create <kvm_name>
\&
\&    import <filename>
\&
\&    delete [\-\-purge=vnic,zvol,zone] <kvm_name>
\&
\&    edit <kvm_name>
\&
\&    list [kvm_name]
\&
\&    state [kvm_name]
\&
\&    start <kvm_name>
\&
\&    stop <kvm_name>
\&
\&    restart <kvm_name>
\&
\&    show\-cmd <kvm_name>
\&
\&    info [type,...] <kvm_name>
\&
\&    monitor <kvm_name> [command]
\&
\&    vnc <[bind_addr:]port> <kvm_name> 
\&
\&    help
\&
\&    man
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
Use kvmadm to create/edit your KVMs under \s-1SMF\s0 control
.SS "\fBcreate\fP"
.IX Subsection "create"
creates a \s-1KVM\s0 instance with the name \fBkvm_name\fR. Create will open an editor
where the properties can be set. zvols and/or vnics which do not
exist will be created.
.PP
for the \s-1KVM\s0 instance the following properties can be set:
.PP
.Vb 10
\& optional
\&     vnc
\&     vnc_pw_file
\&     vcpus
\&     ram
\&     time_base
\&     boot_order
\&     hpet
\&     usb_tablet
\&     kb_layout
\&     uuid
\&     shutdown
\&     cleanup
\&     qemu_extra_opts
\&     pre_start_cmd
.Ve
.PP
for each disk the following properties can be set:
.PP
.Vb 4
\& mandatory
\&     model
\&     disk_path
\&     index 
\&
\& optional
\&     boot
\&     media
\&     disk_size
\&     block_size
\&     cache
.Ve
.PP
for each vnic the following properties can be set:
.PP
.Vb 4
\& mandatory
\&    model
\&    nic_name
\&    index
\&
\& optional
\&    over
\&    vlan_id
\&    mtu
\&    txtimer
\&    txburst
.Ve
.PP
for each serial the following properties can be set:
.PP
.Vb 3
\& mandatory
\&    serial_name
\&    index
.Ve
.PP
kvmadm supports zones. zone properties are according to \fIzonecfg\fR.
global properties can be set as \*(L"property\*(R" : \*(L"value\*(R" pair, single
resources as \*(L"resource\*(R" : { } hash structure and multiple resources
as \*(L"resource\*(R" : [ { }, ... ] array of hash structures. \fBvnics\fR and
\&\fBzvols\fR must not be added to the zone configuration as kvmadm will
add them automatically when setting up the zone.
.SS "\fBimport\fP"
.IX Subsection "import"
imports a \s-1KVM\s0 configuration from a file.
.SS "\fBdelete\fP"
.IX Subsection "delete"
deletes the \s-1KVM\s0 instance with the name \fBkvm_name\fR. Note: zvols, vnics
and zones will \fBnot\fR be deleted by default. use the \fB\-\-purge\fR option.
.SS "\fBedit\fP"
.IX Subsection "edit"
modify the configuration of a \s-1KVM\s0 instance. See the descriptions in the \fBcreate\fR
function for details.
.SS "\fBlist\fP"
.IX Subsection "list"
lists the available \s-1KVM\s0 instances with their properties. Lists details for \fBkvm_name\fR
is given.
.SS "\fBstate\fP"
.IX Subsection "state"
prints the state of the \s-1KVM\s0 instance(s)
.SS "\fBstart\fP"
.IX Subsection "start"
starts the \s-1KVM\s0 instance \fBkvm_name\fR
.SS "\fBstop\fP"
.IX Subsection "stop"
stops the \s-1KVM\s0 instance \fBkvm_name\fR
.SS "\fBrestart\fP"
.IX Subsection "restart"
restarts the \s-1KVM\s0 instance \fBkvm_name\fR
.SS "\fBshow-cmd\fP"
.IX Subsection "show-cmd"
prints the \s-1KVM\s0 invocation command for debug purpose
.SS "\fBinfo\fP"
.IX Subsection "info"
queries information about the running \s-1KVM\s0 instance from qemu monitor.
.PP
type can be one of the following:
.PP
.Vb 10
\&     all
\&     block
\&     blockstats
\&     chardev
\&     cpus
\&     kvm
\&     network
\&     pci
\&     registers
\&     qtree
\&     usb
\&     version
\&     vnc
.Ve
.SS "\fBmonitor\fP"
.IX Subsection "monitor"
connects to the qemu monitor of the running \s-1KVM\s0 instance. Sends \fBcommand\fR
to the qemu monitor if provided.
.SS "\fBvnc\fP"
.IX Subsection "vnc"
forwards the vnc socket to \s-1IP\s0
.SH "EXAMPLES"
.IX Header "EXAMPLES"
create a \s-1KVM\s0 instance with the name 'test\-kvm'
.PP
.Vb 1
\&    kvmadm create test\-kvm
.Ve
.PP
check the \s-1KVM\s0 instance properties
.PP
.Vb 1
\&    kvmadm list test\-kvm
.Ve
.PP
list the available \s-1KVM\s0 instances
.PP
.Vb 1
\&    svcs system/kvm
.Ve
.PP
copy a \s-1KVM\s0 instance
.PP
.Vb 1
\&    kvmadm list test\-kvm > test\-kvm.json
\&
\&    kvmadm import test\-kvm.json
.Ve
.PP
wait 5 minutes before starting the qemu process
.PP
.Vb 1
\&    "pre_start_cmd" : "/usr/bin/sleep 300"
.Ve
.PP
basic zone setup
.PP
.Vb 5
\&    "zone" : {
\&        "zonepath" : "/zones/test\-kvm",
\&        "brand"    : "lipkg",
\&        "ip\-type"  : "exclusive"
\&    }
.Ve
.PP
adding readonly zone access to a vnc password file
.PP
.Vb 11
\&    "zone" : {
\&        ...
\&        "fs" : [
\&            {
\&                "dir"     : "/etc/opt/kvmadm/myvncpw",
\&                "special" : "/etc/opt/kvmadm/myvncpw,
\&                "type"    : "lofs",
\&                "options" : "[ro,nodevices]"
\&            }
\&        ]
\&    }
.Ve
.PP
query the attached block devices of a \s-1KVM\s0 instance with the name 'test\-kvm'
.PP
.Vb 1
\&    kvmadm info block test\-kvm
.Ve
.PP
connect to the qemu monitor of the \s-1KVM\s0 instance with the name 'test\-kvm'
.PP
.Vb 1
\&    kvmadm monitor test\-kvm
.Ve
.PP
set boot drive to d
.PP
.Vb 1
\&    kvmadm monitor test\-kvm boot_set d
.Ve
.PP
forward the vnc socket of the \s-1KVM\s0 instance with the name 'test\-kvm' to the \s-1TCP\s0 port 5900
.PP
.Vb 1
\&    kvmadm vnc 5900 test\-kvm
.Ve
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Copyright (c) 2017 by \s-1OETIKER+PARTNER AG.\s0 All rights reserved.
.SH "LICENSE"
.IX Header "LICENSE"
This program is free software: you can redistribute it and/or modify it
under the terms of the \s-1GNU\s0 General Public License as published by the Free
Software Foundation, either version 3 of the License, or (at your option)
any later version.
.PP
This program is distributed in the hope that it will be useful, but \s-1WITHOUT
ANY WARRANTY\s0; without even the implied warranty of \s-1MERCHANTABILITY\s0 or
\&\s-1FITNESS FOR A PARTICULAR PURPOSE.\s0 See the \s-1GNU\s0 General Public License for
more details.
.PP
You should have received a copy of the \s-1GNU\s0 General Public License along with
this program. If not, see <http://www.gnu.org/licenses/>.
.SH "AUTHOR"
.IX Header "AUTHOR"
Tobias\ Oetiker\ <tobi@oetiker.ch>
Dominik\ Hassler\ <hadfl@cpan.org>
.SH "ACKNOWLEDGMENT"
.IX Header "ACKNOWLEDGMENT"
While the clever configuration options and other cool ideas have been shamelessly
stolen from Joyent's vmadm, the bugs and misfeatures are all exclusive to kvmadm.
.SH "HISTORY"
.IX Header "HISTORY"
2015\-04\-28 had Zone support
2014\-10\-03 had Initial Version
